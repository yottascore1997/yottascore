"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-datepicker";
exports.ids = ["vendor-chunks/react-datepicker"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-datepicker/dist/index.es.js":
/*!********************************************************!*\
  !*** ./node_modules/react-datepicker/dist/index.es.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CalendarContainer: () => (/* binding */ CalendarContainer),\n/* harmony export */   \"default\": () => (/* binding */ DatePicker),\n/* harmony export */   getDefaultLocale: () => (/* binding */ getDefaultLocale),\n/* harmony export */   registerLocale: () => (/* binding */ registerLocale),\n/* harmony export */   setDefaultLocale: () => (/* binding */ setDefaultLocale)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/parseISO.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/toDate.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/parse.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isValid.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isBefore.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/format.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setHours.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setMinutes.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setSeconds.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getISOWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/startOfQuarter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameQuarter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isSameDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isEqual.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isWithinInterval.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setQuarter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/endOfYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getQuarter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getHours.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getMinutes.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getSeconds.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/subMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/subQuarters.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarQuarters.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addQuarters.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/subYears.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInCalendarYears.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addYears.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/min.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/max.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isDate.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addHours.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addMinutes.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addSeconds.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/isAfter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getDate.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/addWeeks.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/getTime.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/setYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/differenceInDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/subWeeks.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addHours,addMinutes,addMonths,addQuarters,addSeconds,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,differenceInCalendarQuarters,differenceInCalendarYears,differenceInDays,endOfDay,endOfMonth,endOfWeek,endOfYear,format,getDate,getDay,getHours,getISOWeek,getMinutes,getMonth,getQuarter,getSeconds,getTime,getYear,isAfter,isBefore,isDate,isEqual,isSameDay,isSameMonth,isSameQuarter,isSameYear,isValid,isWithinInterval,max,min,parse,parseISO,setHours,setMinutes,setMonth,setQuarter,setSeconds,setYear,startOfDay,startOfMonth,startOfQuarter,startOfWeek,startOfYear,subDays,subMonths,subQuarters,subWeeks,subYears,toDate!=!date-fns */ \"(ssr)/./node_modules/date-fns/subDays.js\");\n/* harmony import */ var _floating_ui_react__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @floating-ui/react */ \"(ssr)/./node_modules/@floating-ui/react/dist/floating-ui.react.mjs\");\n/* harmony import */ var _floating_ui_react__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @floating-ui/react */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _floating_ui_react__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @floating-ui/react */ \"(ssr)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n/*!\n  react-datepicker v8.4.0\n  https://github.com/Hacker0x01/react-datepicker\n  Released under the MIT License.\n*/ \n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar _assign = function __assign() {\n    _assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return _assign.apply(this, arguments);\n};\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar CalendarContainer = function(_a) {\n    var _b = _a.showTimeSelectOnly, showTimeSelectOnly = _b === void 0 ? false : _b, _c = _a.showTime, showTime = _c === void 0 ? false : _c, className = _a.className, children = _a.children;\n    var ariaLabel = showTimeSelectOnly ? \"Choose Time\" : \"Choose Date\".concat(showTime ? \" and Time\" : \"\");\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: className,\n        role: \"dialog\",\n        \"aria-label\": ariaLabel,\n        \"aria-modal\": \"true\"\n    }, children);\n};\nvar useDetectClickOutside = function(onClickOutside, ignoreClass) {\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var onClickOutsideRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(onClickOutside);\n    onClickOutsideRef.current = onClickOutside;\n    var handleClickOutside = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(event) {\n        var _a;\n        var target = event.composed && event.composedPath && event.composedPath().find(function(eventTarget) {\n            return eventTarget instanceof Node;\n        }) || event.target;\n        if (ref.current && !ref.current.contains(target)) {\n            if (!(ignoreClass && target instanceof HTMLElement && target.classList.contains(ignoreClass))) {\n                (_a = onClickOutsideRef.current) === null || _a === void 0 ? void 0 : _a.call(onClickOutsideRef, event);\n            }\n        }\n    }, [\n        ignoreClass\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [\n        handleClickOutside\n    ]);\n    return ref;\n};\nvar ClickOutsideWrapper = function(_a) {\n    var children = _a.children, onClickOutside = _a.onClickOutside, className = _a.className, containerRef = _a.containerRef, style = _a.style, ignoreClass = _a.ignoreClass;\n    var detectRef = useDetectClickOutside(onClickOutside, ignoreClass);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        className: className,\n        style: style,\n        ref: function(node) {\n            detectRef.current = node;\n            if (containerRef) {\n                containerRef.current = node;\n            }\n        }\n    }, children);\n};\nvar KeyType;\n(function(KeyType) {\n    KeyType[\"ArrowUp\"] = \"ArrowUp\";\n    KeyType[\"ArrowDown\"] = \"ArrowDown\";\n    KeyType[\"ArrowLeft\"] = \"ArrowLeft\";\n    KeyType[\"ArrowRight\"] = \"ArrowRight\";\n    KeyType[\"PageUp\"] = \"PageUp\";\n    KeyType[\"PageDown\"] = \"PageDown\";\n    KeyType[\"Home\"] = \"Home\";\n    KeyType[\"End\"] = \"End\";\n    KeyType[\"Enter\"] = \"Enter\";\n    KeyType[\"Space\"] = \" \";\n    KeyType[\"Tab\"] = \"Tab\";\n    KeyType[\"Escape\"] = \"Escape\";\n    KeyType[\"Backspace\"] = \"Backspace\";\n    KeyType[\"X\"] = \"x\";\n})(KeyType || (KeyType = {}));\nfunction getLocaleScope() {\n    // Use this cast to avoid messing with users globalThis (like window) and the rest of keys in the globalThis object we don't care about\n    var scope =  false ? 0 : globalThis;\n    return scope;\n}\nvar DEFAULT_YEAR_ITEM_NUMBER = 12;\n// ** Date Constructors **\nfunction newDate(value) {\n    if (value == null) {\n        return new Date();\n    }\n    var d = typeof value === \"string\" ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_3__.parseISO)(value) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_4__.toDate)(value);\n    return isValid(d) ? d : new Date();\n}\n/**\n * Parses a date.\n *\n * @param value - The string representing the Date in a parsable form, e.g., ISO 1861\n * @param dateFormat - The date format.\n * @param locale - The locale.\n * @param strictParsing - The strict parsing flag.\n * @param refDate - The base date to be passed to date-fns parse() function.\n * @returns - The parsed date or null.\n */ function parseDate(value, dateFormat, locale, strictParsing, refDate) {\n    if (refDate === void 0) {\n        refDate = newDate();\n    }\n    var localeObject = getLocaleObject(locale) || getLocaleObject(getDefaultLocale());\n    var formats = Array.isArray(dateFormat) ? dateFormat : [\n        dateFormat\n    ];\n    for(var _i = 0, formats_1 = formats; _i < formats_1.length; _i++){\n        var format_1 = formats_1[_i];\n        var parsedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_5__.parse)(value, format_1, refDate, {\n            locale: localeObject,\n            useAdditionalWeekYearTokens: true,\n            useAdditionalDayOfYearTokens: true\n        });\n        if (isValid(parsedDate) && (!strictParsing || value === formatDate(parsedDate, format_1, locale))) {\n            return parsedDate;\n        }\n    }\n    return null;\n}\n/**\n * Checks if a given date is valid and not before the minimum date.\n * @param date - The date to be checked.\n * @param minDate - The minimum date allowed. If not provided, defaults to \"1/1/1800\".\n * @returns A boolean value indicating whether the date is valid and not before the minimum date.\n */ function isValid(date, minDate) {\n    /* the fallback date is essential to not break test case\n     * `should auto update calendar when the updated date text is after props.minDate`\n     * and backward compatibility respectfully\n     */ return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_6__.isValid)(date) && !(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(date, new Date(\"1/1/1800\"));\n}\n// ** Date Formatting **\n/**\n * Formats a date.\n *\n * @param date - The date.\n * @param formatStr - The format string.\n * @param locale - The locale.\n * @returns - The formatted date.\n */ function formatDate(date, formatStr, locale) {\n    if (locale === \"en\") {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_8__.format)(date, formatStr, {\n            useAdditionalWeekYearTokens: true,\n            useAdditionalDayOfYearTokens: true\n        });\n    }\n    var localeObj = locale ? getLocaleObject(locale) : undefined;\n    if (locale && !localeObj) {\n        console.warn('A locale object was not found for the provided string [\"'.concat(locale, '\"].'));\n    }\n    localeObj = localeObj || getLocaleObject(getDefaultLocale());\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_8__.format)(date, formatStr, {\n        locale: localeObj,\n        useAdditionalWeekYearTokens: true,\n        useAdditionalDayOfYearTokens: true\n    });\n}\n/**\n * Safely formats a date.\n *\n * @param date - The date.\n * @param options - An object containing the dateFormat and locale.\n * @returns - The formatted date or an empty string.\n */ function safeDateFormat(date, _a) {\n    var dateFormat = _a.dateFormat, locale = _a.locale;\n    var formatStr = Array.isArray(dateFormat) && dateFormat.length > 0 ? dateFormat[0] : dateFormat; // Cast to string because it's impossible to get `string | string[] | undefined` here and typescript doesn't know that\n    return date && formatDate(date, formatStr, locale) || \"\";\n}\n/**\n * Used as a delimiter to separate two dates when formatting a date range\n */ var DATE_RANGE_SEPARATOR = \" - \";\n/**\n * Safely formats a date range.\n *\n * @param startDate - The start date.\n * @param endDate - The end date.\n * @param props - The props.\n * @returns - The formatted date range or an empty string.\n */ function safeDateRangeFormat(startDate, endDate, props) {\n    if (!startDate) {\n        return \"\";\n    }\n    var formattedStartDate = safeDateFormat(startDate, props);\n    var formattedEndDate = endDate ? safeDateFormat(endDate, props) : \"\";\n    return \"\".concat(formattedStartDate).concat(DATE_RANGE_SEPARATOR).concat(formattedEndDate);\n}\n/**\n * Safely formats multiple dates.\n *\n * @param dates - The dates.\n * @param props - The props.\n * @returns - The formatted dates or an empty string.\n */ function safeMultipleDatesFormat(dates, props) {\n    if (!(dates === null || dates === void 0 ? void 0 : dates.length)) {\n        return \"\";\n    }\n    var formattedFirstDate = dates[0] ? safeDateFormat(dates[0], props) : \"\";\n    if (dates.length === 1) {\n        return formattedFirstDate;\n    }\n    if (dates.length === 2 && dates[1]) {\n        var formattedSecondDate = safeDateFormat(dates[1], props);\n        return \"\".concat(formattedFirstDate, \", \").concat(formattedSecondDate);\n    }\n    var extraDatesCount = dates.length - 1;\n    return \"\".concat(formattedFirstDate, \" (+\").concat(extraDatesCount, \")\");\n}\n// ** Date Setters **\n/**\n * Sets the time for a given date.\n *\n * @param date - The date.\n * @param time - An object containing the hour, minute, and second.\n * @returns - The date with the time set.\n */ function setTime(date, _a) {\n    var _b = _a.hour, hour = _b === void 0 ? 0 : _b, _c = _a.minute, minute = _c === void 0 ? 0 : _c, _d = _a.second, second = _d === void 0 ? 0 : _d;\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_9__.setHours)((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_10__.setMinutes)((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_11__.setSeconds)(date, second), minute), hour);\n}\n/**\n * Gets the week of the year for a given date.\n *\n * @param date - The date.\n * @returns - The week of the year.\n */ function getWeek(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_12__.getISOWeek)(date);\n}\n/**\n * Gets the day of the week code for a given day.\n *\n * @param day - The day.\n * @param locale - The locale.\n * @returns - The day of the week code.\n */ function getDayOfWeekCode(day, locale) {\n    return formatDate(day, \"ddd\", locale);\n}\n// *** Start of ***\n/**\n * Gets the start of the day for a given date.\n *\n * @param date - The date.\n * @returns - The start of the day.\n */ function getStartOfDay(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_13__.startOfDay)(date);\n}\n/**\n * Gets the start of the week for a given date.\n *\n * @param date - The date.\n * @param locale - The locale.\n * @param calendarStartDay - The day the calendar starts on.\n * @returns - The start of the week.\n */ function getStartOfWeek(date, locale, calendarStartDay) {\n    var localeObj = locale ? getLocaleObject(locale) : getLocaleObject(getDefaultLocale());\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_14__.startOfWeek)(date, {\n        locale: localeObj,\n        weekStartsOn: calendarStartDay\n    });\n}\n/**\n * Gets the start of the month for a given date.\n *\n * @param date - The date.\n * @returns - The start of the month.\n */ function getStartOfMonth(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_15__.startOfMonth)(date);\n}\n/**\n * Gets the start of the year for a given date.\n *\n * @param date - The date.\n * @returns - The start of the year.\n */ function getStartOfYear(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_16__.startOfYear)(date);\n}\n/**\n * Gets the start of the quarter for a given date.\n *\n * @param date - The date.\n * @returns - The start of the quarter.\n */ function getStartOfQuarter(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_17__.startOfQuarter)(date);\n}\n/**\n * Gets the start of today.\n *\n * @returns - The start of today.\n */ function getStartOfToday() {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_13__.startOfDay)(newDate());\n}\n// *** End of ***\n/**\n * Gets the end of the day for a given date.\n *\n * @param date - The date.\n * @returns - The end of the day.\n */ function getEndOfDay(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_18__.endOfDay)(date);\n}\n/**\n * Gets the end of the week for a given date.\n *\n * @param date - The date.\n * @returns - The end of the week.\n */ function getEndOfWeek(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_19__.endOfWeek)(date);\n}\n/**\n * Gets the end of the month for a given date.\n *\n * @param date - The date.\n * @returns - The end of the month.\n */ function getEndOfMonth(date) {\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_20__.endOfMonth)(date);\n}\n/**\n * Checks if two dates are in the same year.\n *\n * @param date1 - The first date.\n * @param date2 - The second date.\n * @returns - True if the dates are in the same year, false otherwise.\n */ function isSameYear(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_21__.isSameYear)(date1, date2);\n    } else {\n        return !date1 && !date2;\n    }\n}\n/**\n * Checks if two dates are in the same month.\n *\n * @param date1 - The first date.\n * @param date2 - The second date.\n * @returns - True if the dates are in the same month, false otherwise.\n */ function isSameMonth(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_22__.isSameMonth)(date1, date2);\n    } else {\n        return !date1 && !date2;\n    }\n}\n/**\n * Checks if two dates are in the same quarter.\n *\n * @param date1 - The first date.\n * @param date2 - The second date.\n * @returns - True if the dates are in the same quarter, false otherwise.\n */ function isSameQuarter(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_23__.isSameQuarter)(date1, date2);\n    } else {\n        return !date1 && !date2;\n    }\n}\n/**\n * Checks if two dates are on the same day.\n *\n * @param date1 - The first date.\n * @param date2 - The second date.\n * @returns - True if the dates are on the same day, false otherwise.\n */ function isSameDay(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_24__.isSameDay)(date1, date2);\n    } else {\n        return !date1 && !date2;\n    }\n}\n/**\n * Checks if two dates are equal.\n *\n * @param date1 - The first date.\n * @param date2 - The second date.\n * @returns - True if the dates are equal, false otherwise.\n */ function isEqual(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_25__.isEqual)(date1, date2);\n    } else {\n        return !date1 && !date2;\n    }\n}\n/**\n * Checks if a day is within a date range.\n *\n * @param day - The day to check.\n * @param startDate - The start date of the range.\n * @param endDate - The end date of the range.\n * @returns - True if the day is within the range, false otherwise.\n */ function isDayInRange(day, startDate, endDate) {\n    var valid;\n    var start = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_13__.startOfDay)(startDate);\n    var end = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_18__.endOfDay)(endDate);\n    try {\n        valid = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__.isWithinInterval)(day, {\n            start: start,\n            end: end\n        });\n    } catch (err) {\n        valid = false;\n    }\n    return valid;\n}\n// ** Date Localization **\n/**\n * Registers a locale.\n *\n * @param localeName - The name of the locale.\n * @param localeData - The data of the locale.\n */ function registerLocale(localeName, localeData) {\n    var scope = getLocaleScope();\n    if (!scope.__localeData__) {\n        scope.__localeData__ = {};\n    }\n    scope.__localeData__[localeName] = localeData;\n}\n/**\n * Sets the default locale.\n *\n * @param localeName - The name of the locale.\n */ function setDefaultLocale(localeName) {\n    var scope = getLocaleScope();\n    scope.__localeId__ = localeName;\n}\n/**\n * Gets the default locale.\n *\n * @returns - The default locale.\n */ function getDefaultLocale() {\n    var scope = getLocaleScope();\n    return scope.__localeId__;\n}\n/**\n * Gets the locale object.\n *\n * @param localeSpec - The locale specification.\n * @returns - The locale object.\n */ function getLocaleObject(localeSpec) {\n    if (typeof localeSpec === \"string\") {\n        // Treat it as a locale name registered by registerLocale\n        var scope = getLocaleScope();\n        // Null was replaced with undefined to avoid type coercion\n        return scope.__localeData__ ? scope.__localeData__[localeSpec] : undefined;\n    } else {\n        // Treat it as a raw date-fns locale object\n        return localeSpec;\n    }\n}\n/**\n * Formats the weekday in a given locale.\n *\n * @param date - The date to format.\n * @param formatFunc - The formatting function.\n * @param locale - The locale to use for formatting.\n * @returns - The formatted weekday.\n */ function getFormattedWeekdayInLocale(date, formatFunc, locale) {\n    return formatFunc(formatDate(date, \"EEEE\", locale));\n}\n/**\n * Gets the minimum weekday in a given locale.\n *\n * @param date - The date to format.\n * @param locale - The locale to use for formatting.\n * @returns - The minimum weekday.\n */ function getWeekdayMinInLocale(date, locale) {\n    return formatDate(date, \"EEEEEE\", locale);\n}\n/**\n * Gets the short weekday in a given locale.\n *\n * @param date - The date to format.\n * @param locale - The locale to use for formatting.\n * @returns - The short weekday.\n */ function getWeekdayShortInLocale(date, locale) {\n    return formatDate(date, \"EEE\", locale);\n}\n/**\n * Gets the month in a given locale.\n *\n * @param month - The month to format.\n * @param locale - The locale to use for formatting.\n * @returns - The month.\n */ function getMonthInLocale(month, locale) {\n    return formatDate((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(newDate(), month), \"LLLL\", locale);\n}\n/**\n * Gets the short month in a given locale.\n *\n * @param month - The month to format.\n * @param locale - The locale to use for formatting.\n * @returns - The short month.\n */ function getMonthShortInLocale(month, locale) {\n    return formatDate((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(newDate(), month), \"LLL\", locale);\n}\n/**\n * Gets the short quarter in a given locale.\n *\n * @param quarter - The quarter to format.\n * @param locale - The locale to use for formatting.\n * @returns - The short quarter.\n */ function getQuarterShortInLocale(quarter, locale) {\n    return formatDate((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(newDate(), quarter), \"QQQ\", locale);\n}\n/**\n * Checks if a day is disabled.\n *\n * @param day - The day to check.\n * @param options - The options to consider when checking.\n * @returns - Returns true if the day is disabled, false otherwise.\n */ function isDayDisabled(day, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, excludeDateIntervals = _b.excludeDateIntervals, includeDates = _b.includeDates, includeDateIntervals = _b.includeDateIntervals, filterDate = _b.filterDate;\n    return isOutOfBounds(day, {\n        minDate: minDate,\n        maxDate: maxDate\n    }) || excludeDates && excludeDates.some(function(excludeDate) {\n        if (excludeDate instanceof Date) {\n            return isSameDay(day, excludeDate);\n        } else {\n            return isSameDay(day, excludeDate.date);\n        }\n    }) || excludeDateIntervals && excludeDateIntervals.some(function(_a) {\n        var start = _a.start, end = _a.end;\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__.isWithinInterval)(day, {\n            start: start,\n            end: end\n        });\n    }) || includeDates && !includeDates.some(function(includeDate) {\n        return isSameDay(day, includeDate);\n    }) || includeDateIntervals && !includeDateIntervals.some(function(_a) {\n        var start = _a.start, end = _a.end;\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__.isWithinInterval)(day, {\n            start: start,\n            end: end\n        });\n    }) || filterDate && !filterDate(newDate(day)) || false;\n}\n/**\n * Checks if a day is excluded.\n *\n * @param day - The day to check.\n * @param options - The options to consider when checking.\n * @returns - Returns true if the day is excluded, false otherwise.\n */ function isDayExcluded(day, _a) {\n    var _b = _a === void 0 ? {} : _a, excludeDates = _b.excludeDates, excludeDateIntervals = _b.excludeDateIntervals;\n    if (excludeDateIntervals && excludeDateIntervals.length > 0) {\n        return excludeDateIntervals.some(function(_a) {\n            var start = _a.start, end = _a.end;\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__.isWithinInterval)(day, {\n                start: start,\n                end: end\n            });\n        });\n    }\n    return excludeDates && excludeDates.some(function(excludeDate) {\n        var _a;\n        if (excludeDate instanceof Date) {\n            return isSameDay(day, excludeDate);\n        } else {\n            return isSameDay(day, (_a = excludeDate.date) !== null && _a !== void 0 ? _a : new Date());\n        }\n    }) || false;\n}\nfunction isMonthDisabled(month, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, includeDates = _b.includeDates, filterDate = _b.filterDate;\n    return isOutOfBounds(month, {\n        minDate: minDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_15__.startOfMonth)(minDate) : undefined,\n        maxDate: maxDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_20__.endOfMonth)(maxDate) : undefined\n    }) || (excludeDates === null || excludeDates === void 0 ? void 0 : excludeDates.some(function(excludeDate) {\n        return isSameMonth(month, excludeDate instanceof Date ? excludeDate : excludeDate.date);\n    })) || includeDates && !includeDates.some(function(includeDate) {\n        return isSameMonth(month, includeDate);\n    }) || filterDate && !filterDate(newDate(month)) || false;\n}\nfunction isMonthInRange(startDate, endDate, m, day) {\n    var startDateYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(startDate);\n    var startDateMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(startDate);\n    var endDateYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(endDate);\n    var endDateMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(endDate);\n    var dayYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day);\n    if (startDateYear === endDateYear && startDateYear === dayYear) {\n        return startDateMonth <= m && m <= endDateMonth;\n    } else if (startDateYear < endDateYear) {\n        return dayYear === startDateYear && startDateMonth <= m || dayYear === endDateYear && endDateMonth >= m || dayYear < endDateYear && dayYear > startDateYear;\n    }\n    return false;\n}\n/**\n * To check if a date's month and year are disabled/excluded\n * @param date Date to check\n * @returns {boolean} true if month and year are disabled/excluded, false otherwise\n */ function isMonthYearDisabled(date, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, includeDates = _b.includeDates;\n    return isOutOfBounds(date, {\n        minDate: minDate,\n        maxDate: maxDate\n    }) || excludeDates && excludeDates.some(function(excludedDate) {\n        return isSameMonth(excludedDate instanceof Date ? excludedDate : excludedDate.date, date);\n    }) || includeDates && !includeDates.some(function(includedDate) {\n        return isSameMonth(includedDate, date);\n    }) || false;\n}\nfunction isQuarterDisabled(quarter, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, includeDates = _b.includeDates, filterDate = _b.filterDate;\n    return isOutOfBounds(quarter, {\n        minDate: minDate,\n        maxDate: maxDate\n    }) || (excludeDates === null || excludeDates === void 0 ? void 0 : excludeDates.some(function(excludeDate) {\n        return isSameQuarter(quarter, excludeDate instanceof Date ? excludeDate : excludeDate.date);\n    })) || includeDates && !includeDates.some(function(includeDate) {\n        return isSameQuarter(quarter, includeDate);\n    }) || filterDate && !filterDate(newDate(quarter)) || false;\n}\nfunction isYearInRange(year, start, end) {\n    if (!start || !end) return false;\n    if (!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_6__.isValid)(start) || !(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_6__.isValid)(end)) return false;\n    var startYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(start);\n    var endYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(end);\n    return startYear <= year && endYear >= year;\n}\nfunction isYearDisabled(year, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, includeDates = _b.includeDates, filterDate = _b.filterDate;\n    var date = new Date(year, 0, 1);\n    return isOutOfBounds(date, {\n        minDate: minDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_16__.startOfYear)(minDate) : undefined,\n        maxDate: maxDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_31__.endOfYear)(maxDate) : undefined\n    }) || (excludeDates === null || excludeDates === void 0 ? void 0 : excludeDates.some(function(excludeDate) {\n        return isSameYear(date, excludeDate instanceof Date ? excludeDate : excludeDate.date);\n    })) || includeDates && !includeDates.some(function(includeDate) {\n        return isSameYear(date, includeDate);\n    }) || filterDate && !filterDate(newDate(date)) || false;\n}\nfunction isQuarterInRange(startDate, endDate, q, day) {\n    var startDateYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(startDate);\n    var startDateQuarter = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__.getQuarter)(startDate);\n    var endDateYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(endDate);\n    var endDateQuarter = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__.getQuarter)(endDate);\n    var dayYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day);\n    if (startDateYear === endDateYear && startDateYear === dayYear) {\n        return startDateQuarter <= q && q <= endDateQuarter;\n    } else if (startDateYear < endDateYear) {\n        return dayYear === startDateYear && startDateQuarter <= q || dayYear === endDateYear && endDateQuarter >= q || dayYear < endDateYear && dayYear > startDateYear;\n    }\n    return false;\n}\nfunction isOutOfBounds(day, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, minDate = _c.minDate, maxDate = _c.maxDate;\n    return (_b = minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_33__.differenceInCalendarDays)(day, minDate) < 0 || maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_33__.differenceInCalendarDays)(day, maxDate) > 0) !== null && _b !== void 0 ? _b : false;\n}\nfunction isTimeInList(time, times) {\n    return times.some(function(listTime) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(listTime) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(time) && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(listTime) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(time) && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(listTime) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(time);\n    });\n}\nfunction isTimeDisabled(time, _a) {\n    var _b = _a === void 0 ? {} : _a, excludeTimes = _b.excludeTimes, includeTimes = _b.includeTimes, filterTime = _b.filterTime;\n    return excludeTimes && isTimeInList(time, excludeTimes) || includeTimes && !isTimeInList(time, includeTimes) || filterTime && !filterTime(time) || false;\n}\nfunction isTimeInDisabledRange(time, _a) {\n    var minTime = _a.minTime, maxTime = _a.maxTime;\n    if (!minTime || !maxTime) {\n        throw new Error(\"Both minTime and maxTime props required\");\n    }\n    var baseTime = newDate();\n    baseTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_9__.setHours)(baseTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(time));\n    baseTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_10__.setMinutes)(baseTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(time));\n    baseTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_11__.setSeconds)(baseTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(time));\n    var min = newDate();\n    min = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_9__.setHours)(min, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(minTime));\n    min = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_10__.setMinutes)(min, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(minTime));\n    min = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_11__.setSeconds)(min, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(minTime));\n    var max = newDate();\n    max = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_9__.setHours)(max, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(maxTime));\n    max = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_10__.setMinutes)(max, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(maxTime));\n    max = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_11__.setSeconds)(max, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(maxTime));\n    var valid;\n    try {\n        valid = !(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_26__.isWithinInterval)(baseTime, {\n            start: min,\n            end: max\n        });\n    } catch (err) {\n        valid = false;\n    }\n    return valid;\n}\nfunction monthDisabledBefore(day, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, includeDates = _b.includeDates;\n    var previousMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(day, 1);\n    return minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_38__.differenceInCalendarMonths)(minDate, previousMonth) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_38__.differenceInCalendarMonths)(includeDate, previousMonth) > 0;\n    }) || false;\n}\nfunction monthDisabledAfter(day, _a) {\n    var _b = _a === void 0 ? {} : _a, maxDate = _b.maxDate, includeDates = _b.includeDates;\n    var nextMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(day, 1);\n    return maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_38__.differenceInCalendarMonths)(nextMonth, maxDate) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_38__.differenceInCalendarMonths)(nextMonth, includeDate) > 0;\n    }) || false;\n}\nfunction quarterDisabledBefore(date, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, includeDates = _b.includeDates;\n    var firstDateOfYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_16__.startOfYear)(date);\n    var previousQuarter = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_40__.subQuarters)(firstDateOfYear, 1);\n    return minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_41__.differenceInCalendarQuarters)(minDate, previousQuarter) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_41__.differenceInCalendarQuarters)(includeDate, previousQuarter) > 0;\n    }) || false;\n}\nfunction quarterDisabledAfter(date, _a) {\n    var _b = _a === void 0 ? {} : _a, maxDate = _b.maxDate, includeDates = _b.includeDates;\n    var lastDateOfYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_31__.endOfYear)(date);\n    var nextQuarter = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_42__.addQuarters)(lastDateOfYear, 1);\n    return maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_41__.differenceInCalendarQuarters)(nextQuarter, maxDate) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_41__.differenceInCalendarQuarters)(nextQuarter, includeDate) > 0;\n    }) || false;\n}\nfunction yearDisabledBefore(day, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, includeDates = _b.includeDates;\n    var previousYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(day, 1);\n    return minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_44__.differenceInCalendarYears)(minDate, previousYear) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_44__.differenceInCalendarYears)(includeDate, previousYear) > 0;\n    }) || false;\n}\nfunction yearsDisabledBefore(day, _a) {\n    var _b = _a === void 0 ? {} : _a, minDate = _b.minDate, _c = _b.yearItemNumber, yearItemNumber = _c === void 0 ? DEFAULT_YEAR_ITEM_NUMBER : _c;\n    var previousYear = getStartOfYear((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(day, yearItemNumber));\n    var endPeriod = getYearsPeriod(previousYear, yearItemNumber).endPeriod;\n    var minDateYear = minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(minDate);\n    return minDateYear && minDateYear > endPeriod || false;\n}\nfunction yearDisabledAfter(day, _a) {\n    var _b = _a === void 0 ? {} : _a, maxDate = _b.maxDate, includeDates = _b.includeDates;\n    var nextYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(day, 1);\n    return maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_44__.differenceInCalendarYears)(nextYear, maxDate) > 0 || includeDates && includeDates.every(function(includeDate) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_44__.differenceInCalendarYears)(nextYear, includeDate) > 0;\n    }) || false;\n}\nfunction yearsDisabledAfter(day, _a) {\n    var _b = _a === void 0 ? {} : _a, maxDate = _b.maxDate, _c = _b.yearItemNumber, yearItemNumber = _c === void 0 ? DEFAULT_YEAR_ITEM_NUMBER : _c;\n    var nextYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(day, yearItemNumber);\n    var startPeriod = getYearsPeriod(nextYear, yearItemNumber).startPeriod;\n    var maxDateYear = maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(maxDate);\n    return maxDateYear && maxDateYear < startPeriod || false;\n}\nfunction getEffectiveMinDate(_a) {\n    var minDate = _a.minDate, includeDates = _a.includeDates;\n    if (includeDates && minDate) {\n        var minDates = includeDates.filter(function(includeDate) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_33__.differenceInCalendarDays)(includeDate, minDate) >= 0;\n        });\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_46__.min)(minDates);\n    } else if (includeDates) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_46__.min)(includeDates);\n    } else {\n        return minDate;\n    }\n}\nfunction getEffectiveMaxDate(_a) {\n    var maxDate = _a.maxDate, includeDates = _a.includeDates;\n    if (includeDates && maxDate) {\n        var maxDates = includeDates.filter(function(includeDate) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_33__.differenceInCalendarDays)(includeDate, maxDate) <= 0;\n        });\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_47__.max)(maxDates);\n    } else if (includeDates) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_47__.max)(includeDates);\n    } else {\n        return maxDate;\n    }\n}\n/**\n * Get a map of highlighted dates with their corresponding classes.\n * @param highlightDates The dates to highlight.\n * @param defaultClassName The default class to use for highlighting.\n * @returns A map with dates as keys and arrays of class names as values.\n */ function getHighLightDaysMap(highlightDates, defaultClassName) {\n    var _a;\n    if (highlightDates === void 0) {\n        highlightDates = [];\n    }\n    if (defaultClassName === void 0) {\n        defaultClassName = \"react-datepicker__day--highlighted\";\n    }\n    var dateClasses = new Map();\n    for(var i = 0, len = highlightDates.length; i < len; i++){\n        var obj = highlightDates[i];\n        if ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(obj)) {\n            var key = formatDate(obj, \"MM.dd.yyyy\");\n            var classNamesArr = dateClasses.get(key) || [];\n            if (!classNamesArr.includes(defaultClassName)) {\n                classNamesArr.push(defaultClassName);\n                dateClasses.set(key, classNamesArr);\n            }\n        } else if (typeof obj === \"object\") {\n            var keys = Object.keys(obj);\n            var className = (_a = keys[0]) !== null && _a !== void 0 ? _a : \"\";\n            var arrOfDates = obj[className];\n            if (typeof className === \"string\" && Array.isArray(arrOfDates)) {\n                for(var k = 0, len_1 = arrOfDates.length; k < len_1; k++){\n                    var dateK = arrOfDates[k];\n                    if (dateK) {\n                        var key = formatDate(dateK, \"MM.dd.yyyy\");\n                        var classNamesArr = dateClasses.get(key) || [];\n                        if (!classNamesArr.includes(className)) {\n                            classNamesArr.push(className);\n                            dateClasses.set(key, classNamesArr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dateClasses;\n}\n/**\n * Compare the two arrays\n * @param array1 The first array to compare.\n * @param array2 The second array to compare.\n * @returns true, if the passed arrays are equal, false otherwise.\n */ function arraysAreEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    return array1.every(function(value, index) {\n        return value === array2[index];\n    });\n}\n/**\n * Assign the custom class to each date\n * @param holidayDates array of object containing date and name of the holiday\n * @param defaultClassName className to be added.\n * @returns Map containing date as key and array of className and holiday name as value\n */ function getHolidaysMap(holidayDates, defaultClassName) {\n    if (holidayDates === void 0) {\n        holidayDates = [];\n    }\n    if (defaultClassName === void 0) {\n        defaultClassName = \"react-datepicker__day--holidays\";\n    }\n    var dateClasses = new Map();\n    holidayDates.forEach(function(holiday) {\n        var dateObj = holiday.date, holidayName = holiday.holidayName;\n        if (!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(dateObj)) {\n            return;\n        }\n        var key = formatDate(dateObj, \"MM.dd.yyyy\");\n        var classNamesObj = dateClasses.get(key) || {\n            className: \"\",\n            holidayNames: []\n        };\n        if (\"className\" in classNamesObj && classNamesObj[\"className\"] === defaultClassName && arraysAreEqual(classNamesObj[\"holidayNames\"], [\n            holidayName\n        ])) {\n            return;\n        }\n        classNamesObj[\"className\"] = defaultClassName;\n        var holidayNameArr = classNamesObj[\"holidayNames\"];\n        classNamesObj[\"holidayNames\"] = holidayNameArr ? __spreadArray(__spreadArray([], holidayNameArr, true), [\n            holidayName\n        ], false) : [\n            holidayName\n        ];\n        dateClasses.set(key, classNamesObj);\n    });\n    return dateClasses;\n}\n/**\n * Determines the times to inject after a given start of day, current time, and multiplier.\n * @param startOfDay The start of the day.\n * @param currentTime The current time.\n * @param currentMultiplier The current multiplier.\n * @param intervals The intervals.\n * @param injectedTimes The times to potentially inject.\n * @returns An array of times to inject.\n */ function timesToInjectAfter(startOfDay, currentTime, currentMultiplier, intervals, injectedTimes) {\n    var l = injectedTimes.length;\n    var times = [];\n    for(var i = 0; i < l; i++){\n        var injectedTime = startOfDay;\n        var injectedTimeValue = injectedTimes[i];\n        if (injectedTimeValue) {\n            injectedTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_49__.addHours)(injectedTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(injectedTimeValue));\n            injectedTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_50__.addMinutes)(injectedTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(injectedTimeValue));\n            injectedTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_51__.addSeconds)(injectedTime, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(injectedTimeValue));\n        }\n        var nextTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_50__.addMinutes)(startOfDay, (currentMultiplier + 1) * intervals);\n        if ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(injectedTime, currentTime) && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(injectedTime, nextTime) && injectedTimeValue != undefined) {\n            times.push(injectedTimeValue);\n        }\n    }\n    return times;\n}\n/**\n * Adds a leading zero to a number if it's less than 10.\n * @param i The number to add a leading zero to.\n * @returns The number as a string, with a leading zero if it was less than 10.\n */ function addZero(i) {\n    return i < 10 ? \"0\".concat(i) : \"\".concat(i);\n}\n/**\n * Gets the start and end years for a period.\n * @param date The date to get the period for.\n * @param yearItemNumber The number of years in the period. Defaults to DEFAULT_YEAR_ITEM_NUMBER.\n * @returns An object with the start and end years for the period.\n */ function getYearsPeriod(date, yearItemNumber) {\n    if (yearItemNumber === void 0) {\n        yearItemNumber = DEFAULT_YEAR_ITEM_NUMBER;\n    }\n    var endPeriod = Math.ceil((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(date) / yearItemNumber) * yearItemNumber;\n    var startPeriod = endPeriod - (yearItemNumber - 1);\n    return {\n        startPeriod: startPeriod,\n        endPeriod: endPeriod\n    };\n}\n/**\n * Gets the number of hours in a day.\n * @param d The date to get the number of hours for.\n * @returns The number of hours in the day.\n */ function getHoursInDay(d) {\n    var startOfDay = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n    var startOfTheNextDay = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 24);\n    return Math.round((+startOfTheNextDay - +startOfDay) / 3600000);\n}\n/**\n * Returns the start of the minute for the given date\n *\n * NOTE: this function is a DST and timezone-safe analog of `date-fns/startOfMinute`\n * do not make changes unless you know what you're doing\n *\n * See comments on https://github.com/Hacker0x01/react-datepicker/pull/4244\n * for more details\n *\n * @param d date\n * @returns start of the minute\n */ function startOfMinute(d) {\n    var seconds = d.getSeconds();\n    var milliseconds = d.getMilliseconds();\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_4__.toDate)(d.getTime() - seconds * 1000 - milliseconds);\n}\n/**\n * Returns whether the given dates are in the same minute\n *\n * This function is a DST and timezone-safe analog of `date-fns/isSameMinute`\n *\n * @param d1\n * @param d2\n * @returns\n */ function isSameMinute(d1, d2) {\n    return startOfMinute(d1).getTime() === startOfMinute(d2).getTime();\n}\n/**\n * Returns a new datetime object representing the input date with midnight time\n * @param date The date to get the midnight time for\n * @returns A new datetime object representing the input date with midnight time\n */ function getMidnightDate(date) {\n    if (!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(date)) {\n        throw new Error(\"Invalid date\");\n    }\n    var dateWithoutTime = new Date(date);\n    dateWithoutTime.setHours(0, 0, 0, 0);\n    return dateWithoutTime;\n}\n/**\n * Is the first date before the second one?\n * @param date The date that should be before the other one to return true\n * @param dateToCompare The date to compare with\n * @returns The first date is before the second date\n *\n * Note:\n *  This function considers the mid-night of the given dates for comparison.\n *  It evaluates whether date is before dateToCompare based on their mid-night timestamps.\n */ function isDateBefore(date, dateToCompare) {\n    if (!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(date) || !(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(dateToCompare)) {\n        throw new Error(\"Invalid date received\");\n    }\n    var midnightDate = getMidnightDate(date);\n    var midnightDateToCompare = getMidnightDate(dateToCompare);\n    return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(midnightDate, midnightDateToCompare);\n}\n/**\n * Checks if the space key was pressed down.\n *\n * @param event - The keyboard event.\n * @returns - Returns true if the space key was pressed down, false otherwise.\n */ function isSpaceKeyDown(event) {\n    return event.key === KeyType.Space;\n}\n/**\n * `InputTime` is a React component that manages time input.\n *\n * @component\n * @example\n * <InputTime timeString=\"12:00\" />\n *\n * @param props - The properties that define the `InputTime` component.\n * @param props.onChange - Function that is called when the date changes.\n * @param props.date - The initial date value.\n * @param props.timeString - The initial time string value.\n * @param props.timeInputLabel - The label for the time input.\n * @param props.customTimeInput - An optional custom time input element.\n *\n * @returns The `InputTime` component.\n */ var InputTime = /** @class */ function(_super) {\n    __extends(InputTime, _super);\n    function InputTime(props) {\n        var _this = _super.call(this, props) || this;\n        _this.inputRef = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createRef();\n        _this.onTimeChange = function(time) {\n            var _a, _b;\n            _this.setState({\n                time: time\n            });\n            var propDate = _this.props.date;\n            var isPropDateValid = propDate instanceof Date && !isNaN(+propDate);\n            var date = isPropDateValid ? propDate : new Date();\n            if (time === null || time === void 0 ? void 0 : time.includes(\":\")) {\n                var _c = time.split(\":\"), hours = _c[0], minutes = _c[1];\n                date.setHours(Number(hours));\n                date.setMinutes(Number(minutes));\n            }\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, date);\n        };\n        _this.renderTimeInput = function() {\n            var time = _this.state.time;\n            var _a = _this.props, date = _a.date, timeString = _a.timeString, customTimeInput = _a.customTimeInput;\n            if (customTimeInput) {\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(customTimeInput, {\n                    date: date,\n                    value: time,\n                    onChange: _this.onTimeChange\n                });\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"input\", {\n                type: \"time\",\n                className: \"react-datepicker-time__input\",\n                placeholder: \"Time\",\n                name: \"time-input\",\n                ref: _this.inputRef,\n                onClick: function() {\n                    var _a;\n                    (_a = _this.inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n                },\n                required: true,\n                value: time,\n                onChange: function(event) {\n                    _this.onTimeChange(event.target.value || timeString);\n                }\n            });\n        };\n        _this.state = {\n            time: _this.props.timeString\n        };\n        return _this;\n    }\n    InputTime.getDerivedStateFromProps = function(props, state) {\n        if (props.timeString !== state.time) {\n            return {\n                time: props.timeString\n            };\n        }\n        // Return null to indicate no change to state.\n        return null;\n    };\n    InputTime.prototype.render = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__input-time-container\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker-time__caption\"\n        }, this.props.timeInputLabel), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker-time__input-container\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker-time__input\"\n        }, this.renderTimeInput())));\n    };\n    return InputTime;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n/**\n * `Day` is a React component that represents a single day in a date picker.\n * It handles the rendering and interaction of a day.\n *\n * @prop ariaLabelPrefixWhenEnabled - Aria label prefix when the day is enabled.\n * @prop ariaLabelPrefixWhenDisabled - Aria label prefix when the day is disabled.\n * @prop disabledKeyboardNavigation - Whether keyboard navigation is disabled.\n * @prop day - The day to be displayed.\n * @prop dayClassName - Function to customize the CSS class of the day.\n * @prop endDate - The end date in a range.\n * @prop highlightDates - Map of dates to be highlighted.\n * @prop holidays - Map of holiday dates.\n * @prop inline - Whether the date picker is inline.\n * @prop shouldFocusDayInline - Whether the day should be focused when date picker is inline.\n * @prop month - The month the day belongs to.\n * @prop onClick - Click event handler.\n * @prop onMouseEnter - Mouse enter event handler.\n * @prop handleOnKeyDown - Key down event handler.\n * @prop usePointerEvent - Whether to use pointer events.\n * @prop preSelection - The date that is currently selected.\n * @prop selected - The selected date.\n * @prop selectingDate - The date currently being selected.\n * @prop selectsEnd - Whether the day can be the end date in a range.\n * @prop selectsStart - Whether the day can be the start date in a range.\n * @prop selectsRange - Whether the day can be in a range.\n * @prop showWeekPicker - Whether to show week picker.\n * @prop showWeekNumber - Whether to show week numbers.\n * @prop selectsDisabledDaysInRange - Whether to select disabled days in a range.\n * @prop selectsMultiple - Whether to allow multiple date selection.\n * @prop selectedDates - Array of selected dates.\n * @prop startDate - The start date in a range.\n * @prop renderDayContents - Function to customize the rendering of the day's contents.\n * @prop containerRef - Ref for the container.\n * @prop excludeDates - Array of dates to be excluded.\n * @prop calendarStartDay - The start day of the week.\n * @prop locale - The locale object.\n * @prop monthShowsDuplicateDaysEnd - Whether to show duplicate days at the end of the month.\n * @prop monthShowsDuplicateDaysStart - Whether to show duplicate days at the start of the month.\n * @prop includeDates - Array of dates to be included.\n * @prop includeDateIntervals - Array of date intervals to be included.\n * @prop minDate - The minimum date that can be selected.\n * @prop maxDate - The maximum date that can be selected.\n *\n * @example\n * ```tsx\n * import React from 'react';\n * import Day from './day';\n *\n * function MyComponent() {\n *   const handleDayClick = (event) => {\n *     console.log('Day clicked', event);\n *   };\n *\n *   const handleDayMouseEnter = (event) => {\n *     console.log('Mouse entered day', event);\n *   };\n *\n *   const renderDayContents = (date) => {\n *     return <div>{date.getDate()}</div>;\n *   };\n *\n *   return (\n *     <Day\n *       day={new Date()}\n *       onClick={handleDayClick}\n *       onMouseEnter={handleDayMouseEnter}\n *       renderDayContents={renderDayContents}\n *     />\n *   );\n * }\n *\n * export default MyComponent;\n * ```\n */ var Day = /** @class */ function(_super) {\n    __extends(Day, _super);\n    function Day() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dayEl = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        _this.handleClick = function(event) {\n            if (!_this.isDisabled() && _this.props.onClick) {\n                _this.props.onClick(event);\n            }\n        };\n        _this.handleMouseEnter = function(event) {\n            if (!_this.isDisabled() && _this.props.onMouseEnter) {\n                _this.props.onMouseEnter(event);\n            }\n        };\n        _this.handleOnKeyDown = function(event) {\n            var _a, _b;\n            var eventKey = event.key;\n            if (eventKey === KeyType.Space) {\n                event.preventDefault();\n                event.key = KeyType.Enter;\n            }\n            (_b = (_a = _this.props).handleOnKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        };\n        _this.isSameDay = function(other) {\n            return isSameDay(_this.props.day, other);\n        };\n        _this.isKeyboardSelected = function() {\n            var _a;\n            if (_this.props.disabledKeyboardNavigation) {\n                return false;\n            }\n            var isSelectedDate = _this.props.selectsMultiple ? (_a = _this.props.selectedDates) === null || _a === void 0 ? void 0 : _a.some(function(date) {\n                return _this.isSameDayOrWeek(date);\n            }) : _this.isSameDayOrWeek(_this.props.selected);\n            var isDisabled = _this.props.preSelection && _this.isDisabled(_this.props.preSelection);\n            return !isSelectedDate && _this.isSameDayOrWeek(_this.props.preSelection) && !isDisabled;\n        };\n        _this.isDisabled = function(day) {\n            if (day === void 0) {\n                day = _this.props.day;\n            }\n            // Almost all props previously were passed as this.props w/o proper typing with prop-types\n            // after the migration to TS i made it explicit\n            return isDayDisabled(day, {\n                minDate: _this.props.minDate,\n                maxDate: _this.props.maxDate,\n                excludeDates: _this.props.excludeDates,\n                excludeDateIntervals: _this.props.excludeDateIntervals,\n                includeDateIntervals: _this.props.includeDateIntervals,\n                includeDates: _this.props.includeDates,\n                filterDate: _this.props.filterDate\n            });\n        };\n        _this.isExcluded = function() {\n            // Almost all props previously were passed as this.props w/o proper typing with prop-types\n            // after the migration to TS i made it explicit\n            return isDayExcluded(_this.props.day, {\n                excludeDates: _this.props.excludeDates,\n                excludeDateIntervals: _this.props.excludeDateIntervals\n            });\n        };\n        _this.isStartOfWeek = function() {\n            return isSameDay(_this.props.day, getStartOfWeek(_this.props.day, _this.props.locale, _this.props.calendarStartDay));\n        };\n        _this.isSameWeek = function(other) {\n            return _this.props.showWeekPicker && isSameDay(other, getStartOfWeek(_this.props.day, _this.props.locale, _this.props.calendarStartDay));\n        };\n        _this.isSameDayOrWeek = function(other) {\n            return _this.isSameDay(other) || _this.isSameWeek(other);\n        };\n        _this.getHighLightedClass = function() {\n            var _a = _this.props, day = _a.day, highlightDates = _a.highlightDates;\n            if (!highlightDates) {\n                return false;\n            }\n            // Looking for className in the Map of {'day string, 'className'}\n            var dayStr = formatDate(day, \"MM.dd.yyyy\");\n            return highlightDates.get(dayStr);\n        };\n        // Function to return the array containing className associated to the date\n        _this.getHolidaysClass = function() {\n            var _a;\n            var _b = _this.props, day = _b.day, holidays = _b.holidays;\n            if (!holidays) {\n                // For type consistency no other reasons\n                return [\n                    undefined\n                ];\n            }\n            var dayStr = formatDate(day, \"MM.dd.yyyy\");\n            // Looking for className in the Map of {day string: {className, holidayName}}\n            if (holidays.has(dayStr)) {\n                return [\n                    (_a = holidays.get(dayStr)) === null || _a === void 0 ? void 0 : _a.className\n                ];\n            }\n            // For type consistency no other reasons\n            return [\n                undefined\n            ];\n        };\n        _this.isInRange = function() {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isDayInRange(day, startDate, endDate);\n        };\n        _this.isInSelectingRange = function() {\n            var _a;\n            var _b = _this.props, day = _b.day, selectsStart = _b.selectsStart, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange, selectsDisabledDaysInRange = _b.selectsDisabledDaysInRange, startDate = _b.startDate, endDate = _b.endDate;\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (!(selectsStart || selectsEnd || selectsRange) || !selectingDate || !selectsDisabledDaysInRange && _this.isDisabled()) {\n                return false;\n            }\n            if (selectsStart && endDate && ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(selectingDate, endDate) || isEqual(selectingDate, endDate))) {\n                return isDayInRange(day, selectingDate, endDate);\n            }\n            if (selectsEnd && startDate && ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(selectingDate, startDate) || isEqual(selectingDate, startDate))) {\n                return isDayInRange(day, startDate, selectingDate);\n            }\n            if (selectsRange && startDate && !endDate && ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(selectingDate, startDate) || isEqual(selectingDate, startDate))) {\n                return isDayInRange(day, startDate, selectingDate);\n            }\n            return false;\n        };\n        _this.isSelectingRangeStart = function() {\n            var _a;\n            if (!_this.isInSelectingRange()) {\n                return false;\n            }\n            var _b = _this.props, day = _b.day, startDate = _b.startDate, selectsStart = _b.selectsStart;\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (selectsStart) {\n                return isSameDay(day, selectingDate);\n            } else {\n                return isSameDay(day, startDate);\n            }\n        };\n        _this.isSelectingRangeEnd = function() {\n            var _a;\n            if (!_this.isInSelectingRange()) {\n                return false;\n            }\n            var _b = _this.props, day = _b.day, endDate = _b.endDate, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange;\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (selectsEnd || selectsRange) {\n                return isSameDay(day, selectingDate);\n            } else {\n                return isSameDay(day, endDate);\n            }\n        };\n        _this.isRangeStart = function() {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameDay(startDate, day);\n        };\n        _this.isRangeEnd = function() {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameDay(endDate, day);\n        };\n        _this.isWeekend = function() {\n            var weekday = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_53__.getDay)(_this.props.day);\n            return weekday === 0 || weekday === 6;\n        };\n        _this.isAfterMonth = function() {\n            return _this.props.month !== undefined && (_this.props.month + 1) % 12 === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.props.day);\n        };\n        _this.isBeforeMonth = function() {\n            return _this.props.month !== undefined && ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.props.day) + 1) % 12 === _this.props.month;\n        };\n        _this.isCurrentDay = function() {\n            return _this.isSameDay(newDate());\n        };\n        _this.isSelected = function() {\n            var _a;\n            if (_this.props.selectsMultiple) {\n                return (_a = _this.props.selectedDates) === null || _a === void 0 ? void 0 : _a.some(function(date) {\n                    return _this.isSameDayOrWeek(date);\n                });\n            }\n            return _this.isSameDayOrWeek(_this.props.selected);\n        };\n        _this.getClassNames = function(date) {\n            var dayClassName = _this.props.dayClassName ? _this.props.dayClassName(date) : undefined;\n            return (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__day\", dayClassName, \"react-datepicker__day--\" + getDayOfWeekCode(_this.props.day), {\n                \"react-datepicker__day--disabled\": _this.isDisabled(),\n                \"react-datepicker__day--excluded\": _this.isExcluded(),\n                \"react-datepicker__day--selected\": _this.isSelected(),\n                \"react-datepicker__day--keyboard-selected\": _this.isKeyboardSelected(),\n                \"react-datepicker__day--range-start\": _this.isRangeStart(),\n                \"react-datepicker__day--range-end\": _this.isRangeEnd(),\n                \"react-datepicker__day--in-range\": _this.isInRange(),\n                \"react-datepicker__day--in-selecting-range\": _this.isInSelectingRange(),\n                \"react-datepicker__day--selecting-range-start\": _this.isSelectingRangeStart(),\n                \"react-datepicker__day--selecting-range-end\": _this.isSelectingRangeEnd(),\n                \"react-datepicker__day--today\": _this.isCurrentDay(),\n                \"react-datepicker__day--weekend\": _this.isWeekend(),\n                \"react-datepicker__day--outside-month\": _this.isAfterMonth() || _this.isBeforeMonth()\n            }, _this.getHighLightedClass(), _this.getHolidaysClass());\n        };\n        _this.getAriaLabel = function() {\n            var _a = _this.props, day = _a.day, _b = _a.ariaLabelPrefixWhenEnabled, ariaLabelPrefixWhenEnabled = _b === void 0 ? \"Choose\" : _b, _c = _a.ariaLabelPrefixWhenDisabled, ariaLabelPrefixWhenDisabled = _c === void 0 ? \"Not available\" : _c;\n            var prefix = _this.isDisabled() || _this.isExcluded() ? ariaLabelPrefixWhenDisabled : ariaLabelPrefixWhenEnabled;\n            return \"\".concat(prefix, \" \").concat(formatDate(day, \"PPPP\", _this.props.locale));\n        };\n        // A function to return the holiday's name as title's content\n        _this.getTitle = function() {\n            var _a = _this.props, day = _a.day, _b = _a.holidays, holidays = _b === void 0 ? new Map() : _b, excludeDates = _a.excludeDates;\n            var compareDt = formatDate(day, \"MM.dd.yyyy\");\n            var titles = [];\n            if (holidays.has(compareDt)) {\n                titles.push.apply(titles, holidays.get(compareDt).holidayNames);\n            }\n            if (_this.isExcluded()) {\n                titles.push(excludeDates === null || excludeDates === void 0 ? void 0 : excludeDates.filter(function(excludeDate) {\n                    if (excludeDate instanceof Date) {\n                        return isSameDay(excludeDate, day);\n                    }\n                    return isSameDay(excludeDate === null || excludeDate === void 0 ? void 0 : excludeDate.date, day);\n                }).map(function(excludeDate) {\n                    if (excludeDate instanceof Date) {\n                        return undefined;\n                    }\n                    return excludeDate === null || excludeDate === void 0 ? void 0 : excludeDate.message;\n                }));\n            }\n            // I'm not sure that this is a right output, but all tests are green\n            return titles.join(\", \");\n        };\n        _this.getTabIndex = function() {\n            var selectedDay = _this.props.selected;\n            var preSelectionDay = _this.props.preSelection;\n            var tabIndex = !(_this.props.showWeekPicker && (_this.props.showWeekNumber || !_this.isStartOfWeek())) && (_this.isKeyboardSelected() || _this.isSameDay(selectedDay) && isSameDay(preSelectionDay, selectedDay)) ? 0 : -1;\n            return tabIndex;\n        };\n        // various cases when we need to apply focus to the preselected day\n        // focus the day on mount/update so that keyboard navigation works while cycling through months with up or down keys (not for prev and next month buttons)\n        // prevent focus for these activeElement cases so we don't pull focus from the input as the calendar opens\n        _this.handleFocusDay = function() {\n            var _a;\n            // only do this while the input isn't focused\n            // otherwise, typing/backspacing the date manually may steal focus away from the input\n            _this.shouldFocusDay() && ((_a = _this.dayEl.current) === null || _a === void 0 ? void 0 : _a.focus({\n                preventScroll: true\n            }));\n        };\n        _this.renderDayContents = function() {\n            if (_this.props.monthShowsDuplicateDaysEnd && _this.isAfterMonth()) return null;\n            if (_this.props.monthShowsDuplicateDaysStart && _this.isBeforeMonth()) return null;\n            return _this.props.renderDayContents ? _this.props.renderDayContents((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_54__.getDate)(_this.props.day), _this.props.day) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_54__.getDate)(_this.props.day);\n        };\n        _this.render = function() {\n            return(// TODO: Use <option> instead of the \"option\" role to ensure accessibility across all devices.\n            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                ref: _this.dayEl,\n                className: _this.getClassNames(_this.props.day),\n                onKeyDown: _this.handleOnKeyDown,\n                onClick: _this.handleClick,\n                onMouseEnter: !_this.props.usePointerEvent ? _this.handleMouseEnter : undefined,\n                onPointerEnter: _this.props.usePointerEvent ? _this.handleMouseEnter : undefined,\n                tabIndex: _this.getTabIndex(),\n                \"aria-label\": _this.getAriaLabel(),\n                role: \"option\",\n                title: _this.getTitle(),\n                \"aria-disabled\": _this.isDisabled(),\n                \"aria-current\": _this.isCurrentDay() ? \"date\" : undefined,\n                \"aria-selected\": _this.isSelected() || _this.isInRange()\n            }, _this.renderDayContents(), _this.getTitle() !== \"\" && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"overlay\"\n            }, _this.getTitle())));\n        };\n        return _this;\n    }\n    Day.prototype.componentDidMount = function() {\n        this.handleFocusDay();\n    };\n    Day.prototype.componentDidUpdate = function() {\n        this.handleFocusDay();\n    };\n    Day.prototype.shouldFocusDay = function() {\n        var shouldFocusDay = false;\n        if (this.getTabIndex() === 0 && this.isSameDay(this.props.preSelection)) {\n            // there is currently no activeElement and not inline\n            if (!document.activeElement || document.activeElement === document.body) {\n                shouldFocusDay = true;\n            }\n            // inline version:\n            // do not focus on initial render to prevent autoFocus issue\n            // focus after month has changed via keyboard\n            if (this.props.inline && !this.props.shouldFocusDayInline) {\n                shouldFocusDay = false;\n            }\n            if (this.isDayActiveElement()) {\n                shouldFocusDay = true;\n            }\n            if (this.isDuplicateDay()) {\n                shouldFocusDay = false;\n            }\n        }\n        return shouldFocusDay;\n    };\n    // the activeElement is in the container, and it is another instance of Day\n    Day.prototype.isDayActiveElement = function() {\n        var _a, _b, _c;\n        return ((_b = (_a = this.props.containerRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.contains(document.activeElement)) && ((_c = document.activeElement) === null || _c === void 0 ? void 0 : _c.classList.contains(\"react-datepicker__day\"));\n    };\n    Day.prototype.isDuplicateDay = function() {\n        return(//day is one of the non rendered duplicate days\n        this.props.monthShowsDuplicateDaysEnd && this.isAfterMonth() || this.props.monthShowsDuplicateDaysStart && this.isBeforeMonth());\n    };\n    return Day;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar WeekNumber = /** @class */ function(_super) {\n    __extends(WeekNumber, _super);\n    function WeekNumber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.weekNumberEl = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        _this.handleClick = function(event) {\n            if (_this.props.onClick) {\n                _this.props.onClick(event);\n            }\n        };\n        _this.handleOnKeyDown = function(event) {\n            var _a, _b;\n            var eventKey = event.key;\n            if (eventKey === KeyType.Space) {\n                event.preventDefault();\n                event.key = KeyType.Enter;\n            }\n            (_b = (_a = _this.props).handleOnKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        };\n        _this.isKeyboardSelected = function() {\n            return !_this.props.disabledKeyboardNavigation && !isSameDay(_this.props.date, _this.props.selected) && isSameDay(_this.props.date, _this.props.preSelection);\n        };\n        _this.getTabIndex = function() {\n            return _this.props.showWeekPicker && _this.props.showWeekNumber && (_this.isKeyboardSelected() || isSameDay(_this.props.date, _this.props.selected) && isSameDay(_this.props.preSelection, _this.props.selected)) ? 0 : -1;\n        };\n        // various cases when we need to apply focus to the preselected week-number\n        // focus the week-number on mount/update so that keyboard navigation works while cycling through months with up or down keys (not for prev and next month buttons)\n        // prevent focus for these activeElement cases so we don't pull focus from the input as the calendar opens\n        _this.handleFocusWeekNumber = function(prevProps) {\n            var shouldFocusWeekNumber = false;\n            // only do this while the input isn't focused\n            // otherwise, typing/backspacing the date manually may steal focus away from the input\n            if (_this.getTabIndex() === 0 && !(prevProps === null || prevProps === void 0 ? void 0 : prevProps.isInputFocused) && isSameDay(_this.props.date, _this.props.preSelection)) {\n                // there is currently no activeElement and not inline\n                if (!document.activeElement || document.activeElement === document.body) {\n                    shouldFocusWeekNumber = true;\n                }\n                // inline version:\n                // do not focus on initial render to prevent autoFocus issue\n                // focus after month has changed via keyboard\n                if (_this.props.inline && !_this.props.shouldFocusDayInline) {\n                    shouldFocusWeekNumber = false;\n                }\n                // the activeElement is in the container, and it is another instance of WeekNumber\n                if (_this.props.containerRef && _this.props.containerRef.current && _this.props.containerRef.current.contains(document.activeElement) && document.activeElement && document.activeElement.classList.contains(\"react-datepicker__week-number\")) {\n                    shouldFocusWeekNumber = true;\n                }\n            }\n            shouldFocusWeekNumber && _this.weekNumberEl.current && _this.weekNumberEl.current.focus({\n                preventScroll: true\n            });\n        };\n        return _this;\n    }\n    Object.defineProperty(WeekNumber, \"defaultProps\", {\n        get: function() {\n            return {\n                ariaLabelPrefix: \"week \"\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WeekNumber.prototype.componentDidMount = function() {\n        this.handleFocusWeekNumber();\n    };\n    WeekNumber.prototype.componentDidUpdate = function(prevProps) {\n        this.handleFocusWeekNumber(prevProps);\n    };\n    WeekNumber.prototype.render = function() {\n        var _a = this.props, weekNumber = _a.weekNumber, isWeekDisabled = _a.isWeekDisabled, _b = _a.ariaLabelPrefix, ariaLabelPrefix = _b === void 0 ? WeekNumber.defaultProps.ariaLabelPrefix : _b, onClick = _a.onClick;\n        var weekNumberClasses = {\n            \"react-datepicker__week-number\": true,\n            \"react-datepicker__week-number--clickable\": !!onClick && !isWeekDisabled,\n            \"react-datepicker__week-number--selected\": !!onClick && isSameDay(this.props.date, this.props.selected)\n        };\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            ref: this.weekNumberEl,\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(weekNumberClasses),\n            \"aria-label\": \"\".concat(ariaLabelPrefix, \" \").concat(this.props.weekNumber),\n            onClick: this.handleClick,\n            onKeyDown: this.handleOnKeyDown,\n            tabIndex: this.getTabIndex()\n        }, weekNumber);\n    };\n    return WeekNumber;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar Week = /** @class */ function(_super) {\n    __extends(Week, _super);\n    function Week() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isDisabled = function(day) {\n            return isDayDisabled(day, {\n                minDate: _this.props.minDate,\n                maxDate: _this.props.maxDate,\n                excludeDates: _this.props.excludeDates,\n                excludeDateIntervals: _this.props.excludeDateIntervals,\n                includeDateIntervals: _this.props.includeDateIntervals,\n                includeDates: _this.props.includeDates,\n                filterDate: _this.props.filterDate\n            });\n        };\n        _this.handleDayClick = function(day, event) {\n            if (_this.props.onDayClick) {\n                _this.props.onDayClick(day, event);\n            }\n        };\n        _this.handleDayMouseEnter = function(day) {\n            if (_this.props.onDayMouseEnter) {\n                _this.props.onDayMouseEnter(day);\n            }\n        };\n        _this.handleWeekClick = function(day, weekNumber, event) {\n            var _a, _b, _c;\n            var enabledWeekDay = new Date(day);\n            for(var i = 0; i < 7; i++){\n                var processingDay = new Date(day);\n                processingDay.setDate(processingDay.getDate() + i);\n                var isEnabled = !_this.isDisabled(processingDay);\n                if (isEnabled) {\n                    enabledWeekDay = processingDay;\n                    break;\n                }\n            }\n            if (typeof _this.props.onWeekSelect === \"function\") {\n                _this.props.onWeekSelect(enabledWeekDay, weekNumber, event);\n            }\n            if (_this.props.showWeekPicker) {\n                _this.handleDayClick(enabledWeekDay, event);\n            }\n            if ((_a = _this.props.shouldCloseOnSelect) !== null && _a !== void 0 ? _a : Week.defaultProps.shouldCloseOnSelect) {\n                (_c = (_b = _this.props).setOpen) === null || _c === void 0 ? void 0 : _c.call(_b, false);\n            }\n        };\n        _this.formatWeekNumber = function(date) {\n            if (_this.props.formatWeekNumber) {\n                return _this.props.formatWeekNumber(date);\n            }\n            return getWeek(date);\n        };\n        _this.isWeekDisabled = function() {\n            var startOfWeek = _this.startOfWeek();\n            var endOfWeek = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(startOfWeek, 6);\n            var processingDate = new Date(startOfWeek);\n            while(processingDate <= endOfWeek){\n                if (!_this.isDisabled(processingDate)) return false;\n                processingDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(processingDate, 1);\n            }\n            return true;\n        };\n        _this.renderDays = function() {\n            var startOfWeek = _this.startOfWeek();\n            var days = [];\n            var weekNumber = _this.formatWeekNumber(startOfWeek);\n            if (_this.props.showWeekNumber) {\n                var onClickAction = _this.props.onWeekSelect || _this.props.showWeekPicker ? _this.handleWeekClick.bind(_this, startOfWeek, weekNumber) : undefined;\n                days.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(WeekNumber, _assign({\n                    key: \"W\"\n                }, Week.defaultProps, _this.props, {\n                    weekNumber: weekNumber,\n                    isWeekDisabled: _this.isWeekDisabled(),\n                    date: startOfWeek,\n                    onClick: onClickAction\n                })));\n            }\n            return days.concat([\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6\n            ].map(function(offset) {\n                var day = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(startOfWeek, offset);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Day, _assign({}, Week.defaultProps, _this.props, {\n                    ariaLabelPrefixWhenEnabled: _this.props.chooseDayAriaLabelPrefix,\n                    ariaLabelPrefixWhenDisabled: _this.props.disabledDayAriaLabelPrefix,\n                    key: day.valueOf(),\n                    day: day,\n                    onClick: _this.handleDayClick.bind(_this, day),\n                    onMouseEnter: _this.handleDayMouseEnter.bind(_this, day)\n                }));\n            }));\n        };\n        _this.startOfWeek = function() {\n            return getStartOfWeek(_this.props.day, _this.props.locale, _this.props.calendarStartDay);\n        };\n        _this.isKeyboardSelected = function() {\n            return !_this.props.disabledKeyboardNavigation && !isSameDay(_this.startOfWeek(), _this.props.selected) && isSameDay(_this.startOfWeek(), _this.props.preSelection);\n        };\n        return _this;\n    }\n    Object.defineProperty(Week, \"defaultProps\", {\n        get: function() {\n            return {\n                shouldCloseOnSelect: true\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Week.prototype.render = function() {\n        var weekNumberClasses = {\n            \"react-datepicker__week\": true,\n            \"react-datepicker__week--selected\": isSameDay(this.startOfWeek(), this.props.selected),\n            \"react-datepicker__week--keyboard-selected\": this.isKeyboardSelected()\n        };\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(weekNumberClasses)\n        }, this.renderDays());\n    };\n    return Week;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar _a;\nvar FIXED_HEIGHT_STANDARD_WEEK_COUNT = 6;\nvar MONTH_COLUMNS_LAYOUT = {\n    TWO_COLUMNS: \"two_columns\",\n    THREE_COLUMNS: \"three_columns\",\n    FOUR_COLUMNS: \"four_columns\"\n};\nvar MONTH_COLUMNS = (_a = {}, _a[MONTH_COLUMNS_LAYOUT.TWO_COLUMNS] = {\n    grid: [\n        [\n            0,\n            1\n        ],\n        [\n            2,\n            3\n        ],\n        [\n            4,\n            5\n        ],\n        [\n            6,\n            7\n        ],\n        [\n            8,\n            9\n        ],\n        [\n            10,\n            11\n        ]\n    ],\n    verticalNavigationOffset: 2\n}, _a[MONTH_COLUMNS_LAYOUT.THREE_COLUMNS] = {\n    grid: [\n        [\n            0,\n            1,\n            2\n        ],\n        [\n            3,\n            4,\n            5\n        ],\n        [\n            6,\n            7,\n            8\n        ],\n        [\n            9,\n            10,\n            11\n        ]\n    ],\n    verticalNavigationOffset: 3\n}, _a[MONTH_COLUMNS_LAYOUT.FOUR_COLUMNS] = {\n    grid: [\n        [\n            0,\n            1,\n            2,\n            3\n        ],\n        [\n            4,\n            5,\n            6,\n            7\n        ],\n        [\n            8,\n            9,\n            10,\n            11\n        ]\n    ],\n    verticalNavigationOffset: 4\n}, _a);\nvar MONTH_NAVIGATION_HORIZONTAL_OFFSET = 1;\nfunction getMonthColumnsLayout(showFourColumnMonthYearPicker, showTwoColumnMonthYearPicker) {\n    if (showFourColumnMonthYearPicker) {\n        return MONTH_COLUMNS_LAYOUT.FOUR_COLUMNS;\n    }\n    if (showTwoColumnMonthYearPicker) {\n        return MONTH_COLUMNS_LAYOUT.TWO_COLUMNS;\n    }\n    return MONTH_COLUMNS_LAYOUT.THREE_COLUMNS;\n}\n/**\n * `Month` is a React component that represents a month in a calendar.\n * It accepts a `MonthProps` object as props which provides various configurations and event handlers.\n *\n * @prop dayClassName - Function to determine the class name for a day.\n * @prop monthClassName - Function to determine the class name for a month.\n * @prop filterDate - Function to filter dates.\n * @prop formatWeekNumber - Function to format the week number.\n * @prop onDayClick - Function to handle day click events.\n * @prop onDayMouseEnter - Function to handle mouse enter events on a day.\n * @prop onMouseLeave - Function to handle mouse leave events.\n * @prop onWeekSelect - Function to handle week selection.\n * @prop setPreSelection - Function to set pre-selection.\n * @prop setOpen - Function to set open state.\n * @prop renderDayContents - Function to render day contents.\n * @prop renderMonthContent - Function to render month content.\n * @prop renderQuarterContent - Function to render quarter content.\n * @prop handleOnKeyDown - Function to handle key down events.\n * @prop handleOnMonthKeyDown - Function to handle key down events on a month.\n * @prop ariaLabelPrefix - Aria label prefix.\n * @prop chooseDayAriaLabelPrefix - Aria label prefix for choosing a day.\n * @prop disabledDayAriaLabelPrefix - Aria label prefix for disabled day.\n * @prop disabledKeyboardNavigation - Flag to disable keyboard navigation.\n * @prop day - The day.\n * @prop endDate - The end date.\n * @prop orderInDisplay - The order in display.\n * @prop excludeDates - Dates to exclude.\n * @prop excludeDateIntervals - Date intervals to exclude.\n * @prop fixedHeight - Flag to set fixed height.\n * @prop highlightDates - Dates to highlight.\n * @prop holidays - Holidays.\n * @prop includeDates - Dates to include.\n * @prop includeDateIntervals - Date intervals to include.\n * @prop inline - Flag to set inline.\n * @prop shouldFocusDayInline - Flag to set focus on day inline.\n * @prop locale - The locale.\n * @prop maxDate - The maximum date.\n * @prop minDate - The minimum date.\n * @prop usePointerEvent - Flag to use pointer event.\n * @prop peekNextMonth - Flag to peek next month.\n * @prop preSelection - The pre-selection.\n * @prop selected - The selected date.\n * @prop selectingDate - The selecting date.\n * @prop calendarStartDay - The calendar start day.\n * @prop selectsEnd - Flag to select end.\n * @prop selectsStart - Flag to select start.\n * @prop selectsRange - Flag to select range.\n * @prop selectsDisabledDaysInRange - Flag to select disabled days in range.\n * @prop selectsMultiple - Flag to select multiple.\n * @prop selectedDates - The selected dates.\n * @prop showWeekNumbers - Flag to show week numbers.\n * @prop startDate - The start date.\n * @prop shouldCloseOnSelect - Flag to close on select.\n * @prop showMonthYearPicker - Flag to show month year picker.\n * @prop showFullMonthYearPicker - Flag to show full month year picker.\n * @prop showTwoColumnMonthYearPicker - Flag to show two column month year picker.\n * @prop showFourColumnMonthYearPicker - Flag to show four column month year picker.\n * @prop showQuarterYearPicker - Flag to show quarter year picker.\n * @prop showWeekPicker - Flag to show week picker.\n * @prop isInputFocused - Flag to set input focus.\n * @prop weekAriaLabelPrefix - Aria label prefix for week.\n * @prop containerRef - The container reference.\n * @prop monthShowsDuplicateDaysEnd - Flag to show duplicate days at the end of the month.\n * @prop monthShowsDuplicateDaysStart - Flag to show duplicate days at the start of the month.\n *\n * @example\n * ```tsx\n * function App() {\n *  const handleDayClick = (date) => {\n *     console.log('Day clicked: ', date);\n *   };\n *\n *   const handleDayMouseEnter = (date) => {\n *     console.log('Mouse entered on day: ', date);\n *   };\n *\n *   return (\n *     <div>\n *       <Month\n *         day={new Date()}\n *         endDate={new Date()}\n *         onDayClick={handleDayClick}\n *         onDayMouseEnter={handleDayMouseEnter}\n *         disabledKeyboardNavigation={false}\n *         showWeekNumbers={true}\n *         showMonthYearPicker={false}\n *       />\n *     </div>\n *   );\n * }\n * ```\n */ var Month = /** @class */ function(_super) {\n    __extends(Month, _super);\n    function Month() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.MONTH_REFS = __spreadArray([], Array(12), true).map(function() {\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        });\n        _this.QUARTER_REFS = __spreadArray([], Array(4), true).map(function() {\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        });\n        _this.isDisabled = function(day) {\n            // Almost all props previously were passed as this.props w/o proper typing with prop-types\n            // after the migration to TS i made it explicit\n            return isDayDisabled(day, {\n                minDate: _this.props.minDate,\n                maxDate: _this.props.maxDate,\n                excludeDates: _this.props.excludeDates,\n                excludeDateIntervals: _this.props.excludeDateIntervals,\n                includeDateIntervals: _this.props.includeDateIntervals,\n                includeDates: _this.props.includeDates,\n                filterDate: _this.props.filterDate\n            });\n        };\n        _this.isExcluded = function(day) {\n            // Almost all props previously were passed as this.props w/o proper typing with prop-types\n            // after the migration to TS i made it explicit\n            return isDayExcluded(day, {\n                excludeDates: _this.props.excludeDates,\n                excludeDateIntervals: _this.props.excludeDateIntervals\n            });\n        };\n        _this.handleDayClick = function(day, event) {\n            var _a, _b;\n            (_b = (_a = _this.props).onDayClick) === null || _b === void 0 ? void 0 : _b.call(_a, day, event, _this.props.orderInDisplay);\n        };\n        _this.handleDayMouseEnter = function(day) {\n            var _a, _b;\n            (_b = (_a = _this.props).onDayMouseEnter) === null || _b === void 0 ? void 0 : _b.call(_a, day);\n        };\n        _this.handleMouseLeave = function() {\n            var _a, _b;\n            (_b = (_a = _this.props).onMouseLeave) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n        _this.isRangeStartMonth = function(m) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameMonth((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, m), startDate);\n        };\n        _this.isRangeStartQuarter = function(q) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameQuarter((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(day, q), startDate);\n        };\n        _this.isRangeEndMonth = function(m) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameMonth((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, m), endDate);\n        };\n        _this.isRangeEndQuarter = function(q) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate;\n            if (!startDate || !endDate) {\n                return false;\n            }\n            return isSameQuarter((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(day, q), endDate);\n        };\n        _this.isInSelectingRangeMonth = function(m) {\n            var _a;\n            var _b = _this.props, day = _b.day, selectsStart = _b.selectsStart, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange, startDate = _b.startDate, endDate = _b.endDate;\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (!(selectsStart || selectsEnd || selectsRange) || !selectingDate) {\n                return false;\n            }\n            if (selectsStart && endDate) {\n                return isMonthInRange(selectingDate, endDate, m, day);\n            }\n            if (selectsEnd && startDate) {\n                return isMonthInRange(startDate, selectingDate, m, day);\n            }\n            if (selectsRange && startDate && !endDate) {\n                return isMonthInRange(startDate, selectingDate, m, day);\n            }\n            return false;\n        };\n        _this.isSelectingMonthRangeStart = function(m) {\n            var _a;\n            if (!_this.isInSelectingRangeMonth(m)) {\n                return false;\n            }\n            var _b = _this.props, day = _b.day, startDate = _b.startDate, selectsStart = _b.selectsStart;\n            var _month = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, m);\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (selectsStart) {\n                return isSameMonth(_month, selectingDate);\n            } else {\n                return isSameMonth(_month, startDate);\n            }\n        };\n        _this.isSelectingMonthRangeEnd = function(m) {\n            var _a;\n            if (!_this.isInSelectingRangeMonth(m)) {\n                return false;\n            }\n            var _b = _this.props, day = _b.day, endDate = _b.endDate, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange;\n            var _month = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, m);\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (selectsEnd || selectsRange) {\n                return isSameMonth(_month, selectingDate);\n            } else {\n                return isSameMonth(_month, endDate);\n            }\n        };\n        _this.isInSelectingRangeQuarter = function(q) {\n            var _a;\n            var _b = _this.props, day = _b.day, selectsStart = _b.selectsStart, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange, startDate = _b.startDate, endDate = _b.endDate;\n            var selectingDate = (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n            if (!(selectsStart || selectsEnd || selectsRange) || !selectingDate) {\n                return false;\n            }\n            if (selectsStart && endDate) {\n                return isQuarterInRange(selectingDate, endDate, q, day);\n            }\n            if (selectsEnd && startDate) {\n                return isQuarterInRange(startDate, selectingDate, q, day);\n            }\n            if (selectsRange && startDate && !endDate) {\n                return isQuarterInRange(startDate, selectingDate, q, day);\n            }\n            return false;\n        };\n        _this.isWeekInMonth = function(startOfWeek) {\n            var day = _this.props.day;\n            var endOfWeek = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(startOfWeek, 6);\n            return isSameMonth(startOfWeek, day) || isSameMonth(endOfWeek, day);\n        };\n        _this.isCurrentMonth = function(day, m) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(newDate()) && m === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(newDate());\n        };\n        _this.isCurrentQuarter = function(day, q) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(newDate()) && q === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__.getQuarter)(newDate());\n        };\n        _this.isSelectedMonth = function(day, m, selected) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(selected) === m && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(selected);\n        };\n        _this.isSelectMonthInList = function(day, m, selectedDates) {\n            return selectedDates.some(function(selectedDate) {\n                return _this.isSelectedMonth(day, m, selectedDate);\n            });\n        };\n        _this.isSelectedQuarter = function(day, q, selected) {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__.getQuarter)(day) === q && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(day) === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(selected);\n        };\n        _this.isMonthSelected = function() {\n            var _a = _this.props, day = _a.day, selected = _a.selected, selectedDates = _a.selectedDates, selectsMultiple = _a.selectsMultiple;\n            var monthIdx = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(day);\n            if (selectsMultiple) {\n                return selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.some(function(date) {\n                    return _this.isSelectedMonth(day, monthIdx, date);\n                });\n            }\n            return !!selected && _this.isSelectedMonth(day, monthIdx, selected);\n        };\n        _this.renderWeeks = function() {\n            var weeks = [];\n            var isFixedHeight = _this.props.fixedHeight;\n            var i = 0;\n            var breakAfterNextPush = false;\n            var currentWeekStart = getStartOfWeek(getStartOfMonth(_this.props.day), _this.props.locale, _this.props.calendarStartDay);\n            var isPreSelected = function(preSelection) {\n                return _this.props.showWeekPicker ? getStartOfWeek(preSelection, _this.props.locale, _this.props.calendarStartDay) : _this.props.preSelection;\n            };\n            var isSelected = function(selected) {\n                return _this.props.showWeekPicker ? getStartOfWeek(selected, _this.props.locale, _this.props.calendarStartDay) : _this.props.selected;\n            };\n            var selected = _this.props.selected ? isSelected(_this.props.selected) : undefined;\n            var preSelection = _this.props.preSelection ? isPreSelected(_this.props.preSelection) : undefined;\n            while(true){\n                weeks.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Week, _assign({}, _this.props, {\n                    ariaLabelPrefix: _this.props.weekAriaLabelPrefix,\n                    key: i,\n                    day: currentWeekStart,\n                    month: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.props.day),\n                    onDayClick: _this.handleDayClick,\n                    onDayMouseEnter: _this.handleDayMouseEnter,\n                    selected: selected,\n                    preSelection: preSelection,\n                    showWeekNumber: _this.props.showWeekNumbers\n                })));\n                if (breakAfterNextPush) break;\n                i++;\n                currentWeekStart = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_56__.addWeeks)(currentWeekStart, 1);\n                // If one of these conditions is true, we will either break on this week\n                // or break on the next week\n                var isFixedAndFinalWeek = isFixedHeight && i >= FIXED_HEIGHT_STANDARD_WEEK_COUNT;\n                var isNonFixedAndOutOfMonth = !isFixedHeight && !_this.isWeekInMonth(currentWeekStart);\n                if (isFixedAndFinalWeek || isNonFixedAndOutOfMonth) {\n                    if (_this.props.peekNextMonth) {\n                        breakAfterNextPush = true;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            return weeks;\n        };\n        _this.onMonthClick = function(event, m) {\n            var _a = _this.isMonthDisabledForLabelDate(m), isDisabled = _a.isDisabled, labelDate = _a.labelDate;\n            if (isDisabled) {\n                return;\n            }\n            _this.handleDayClick(getStartOfMonth(labelDate), event);\n        };\n        _this.onMonthMouseEnter = function(m) {\n            var _a = _this.isMonthDisabledForLabelDate(m), isDisabled = _a.isDisabled, labelDate = _a.labelDate;\n            if (isDisabled) {\n                return;\n            }\n            _this.handleDayMouseEnter(getStartOfMonth(labelDate));\n        };\n        _this.handleMonthNavigation = function(newMonth, newDate) {\n            var _a, _b, _c, _d;\n            (_b = (_a = _this.props).setPreSelection) === null || _b === void 0 ? void 0 : _b.call(_a, newDate);\n            (_d = (_c = _this.MONTH_REFS[newMonth]) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.focus();\n        };\n        _this.handleKeyboardNavigation = function(event, eventKey, month) {\n            var _a;\n            var _b = _this.props, selected = _b.selected, preSelection = _b.preSelection, setPreSelection = _b.setPreSelection, minDate = _b.minDate, maxDate = _b.maxDate, showFourColumnMonthYearPicker = _b.showFourColumnMonthYearPicker, showTwoColumnMonthYearPicker = _b.showTwoColumnMonthYearPicker;\n            if (!preSelection) return;\n            var monthColumnsLayout = getMonthColumnsLayout(showFourColumnMonthYearPicker, showTwoColumnMonthYearPicker);\n            var verticalOffset = _this.getVerticalOffset(monthColumnsLayout);\n            var monthsGrid = (_a = MONTH_COLUMNS[monthColumnsLayout]) === null || _a === void 0 ? void 0 : _a.grid;\n            var calculateNewDateAndMonth = function(eventKey, date, month) {\n                var _a, _b;\n                var newCalculatedDate = date;\n                var newCalculatedMonth = month;\n                switch(eventKey){\n                    case KeyType.ArrowRight:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(date, MONTH_NAVIGATION_HORIZONTAL_OFFSET);\n                        newCalculatedMonth = month === 11 ? 0 : month + MONTH_NAVIGATION_HORIZONTAL_OFFSET;\n                        break;\n                    case KeyType.ArrowLeft:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(date, MONTH_NAVIGATION_HORIZONTAL_OFFSET);\n                        newCalculatedMonth = month === 0 ? 11 : month - MONTH_NAVIGATION_HORIZONTAL_OFFSET;\n                        break;\n                    case KeyType.ArrowUp:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(date, verticalOffset);\n                        newCalculatedMonth = ((_a = monthsGrid === null || monthsGrid === void 0 ? void 0 : monthsGrid[0]) === null || _a === void 0 ? void 0 : _a.includes(month)) ? month + 12 - verticalOffset : month - verticalOffset;\n                        break;\n                    case KeyType.ArrowDown:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(date, verticalOffset);\n                        newCalculatedMonth = ((_b = monthsGrid === null || monthsGrid === void 0 ? void 0 : monthsGrid[monthsGrid.length - 1]) === null || _b === void 0 ? void 0 : _b.includes(month)) ? month - 12 + verticalOffset : month + verticalOffset;\n                        break;\n                }\n                return {\n                    newCalculatedDate: newCalculatedDate,\n                    newCalculatedMonth: newCalculatedMonth\n                };\n            };\n            var getNewDateAndMonth = function(eventKey, selectedDate, month) {\n                var MAX_ITERATIONS = 40;\n                var eventKeyCopy = eventKey;\n                var validDateFound = false;\n                var iterations = 0;\n                var _a = calculateNewDateAndMonth(eventKeyCopy, selectedDate, month), newCalculatedDate = _a.newCalculatedDate, newCalculatedMonth = _a.newCalculatedMonth;\n                while(!validDateFound){\n                    if (iterations >= MAX_ITERATIONS) {\n                        newCalculatedDate = selectedDate;\n                        newCalculatedMonth = month;\n                        break;\n                    }\n                    // if minDate exists and the new month is before the minimum month, it will try to find the next available month after\n                    if (minDate && newCalculatedDate < minDate) {\n                        eventKeyCopy = KeyType.ArrowRight;\n                        var obj = calculateNewDateAndMonth(eventKeyCopy, newCalculatedDate, newCalculatedMonth);\n                        newCalculatedDate = obj.newCalculatedDate;\n                        newCalculatedMonth = obj.newCalculatedMonth;\n                    }\n                    // if maxDate exists and the new month is after the maximum month, it will try to find the next available month before\n                    if (maxDate && newCalculatedDate > maxDate) {\n                        eventKeyCopy = KeyType.ArrowLeft;\n                        var obj = calculateNewDateAndMonth(eventKeyCopy, newCalculatedDate, newCalculatedMonth);\n                        newCalculatedDate = obj.newCalculatedDate;\n                        newCalculatedMonth = obj.newCalculatedMonth;\n                    }\n                    if (isMonthYearDisabled(newCalculatedDate, _this.props)) {\n                        var obj = calculateNewDateAndMonth(eventKeyCopy, newCalculatedDate, newCalculatedMonth);\n                        newCalculatedDate = obj.newCalculatedDate;\n                        newCalculatedMonth = obj.newCalculatedMonth;\n                    } else {\n                        validDateFound = true;\n                    }\n                    iterations++;\n                }\n                return {\n                    newCalculatedDate: newCalculatedDate,\n                    newCalculatedMonth: newCalculatedMonth\n                };\n            };\n            if (eventKey === KeyType.Enter) {\n                if (!_this.isMonthDisabled(month)) {\n                    _this.onMonthClick(event, month);\n                    setPreSelection === null || setPreSelection === void 0 ? void 0 : setPreSelection(selected);\n                }\n                return;\n            }\n            var _c = getNewDateAndMonth(eventKey, preSelection, month), newCalculatedDate = _c.newCalculatedDate, newCalculatedMonth = _c.newCalculatedMonth;\n            switch(eventKey){\n                case KeyType.ArrowRight:\n                case KeyType.ArrowLeft:\n                case KeyType.ArrowUp:\n                case KeyType.ArrowDown:\n                    _this.handleMonthNavigation(newCalculatedMonth, newCalculatedDate);\n                    break;\n            }\n        };\n        _this.getVerticalOffset = function(monthColumnsLayout) {\n            var _a, _b;\n            return (_b = (_a = MONTH_COLUMNS[monthColumnsLayout]) === null || _a === void 0 ? void 0 : _a.verticalNavigationOffset) !== null && _b !== void 0 ? _b : 0;\n        };\n        _this.onMonthKeyDown = function(event, month) {\n            var _a = _this.props, disabledKeyboardNavigation = _a.disabledKeyboardNavigation, handleOnMonthKeyDown = _a.handleOnMonthKeyDown;\n            var eventKey = event.key;\n            if (eventKey !== KeyType.Tab) {\n                // preventDefault on tab event blocks focus change\n                event.preventDefault();\n            }\n            if (!disabledKeyboardNavigation) {\n                _this.handleKeyboardNavigation(event, eventKey, month);\n            }\n            handleOnMonthKeyDown && handleOnMonthKeyDown(event);\n        };\n        _this.onQuarterClick = function(event, q) {\n            var labelDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(_this.props.day, q);\n            if (isQuarterDisabled(labelDate, _this.props)) {\n                return;\n            }\n            _this.handleDayClick(getStartOfQuarter(labelDate), event);\n        };\n        _this.onQuarterMouseEnter = function(q) {\n            var labelDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(_this.props.day, q);\n            if (isQuarterDisabled(labelDate, _this.props)) {\n                return;\n            }\n            _this.handleDayMouseEnter(getStartOfQuarter(labelDate));\n        };\n        _this.handleQuarterNavigation = function(newQuarter, newDate) {\n            var _a, _b, _c, _d;\n            if (_this.isDisabled(newDate) || _this.isExcluded(newDate)) {\n                return;\n            }\n            (_b = (_a = _this.props).setPreSelection) === null || _b === void 0 ? void 0 : _b.call(_a, newDate);\n            (_d = (_c = _this.QUARTER_REFS[newQuarter - 1]) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.focus();\n        };\n        _this.onQuarterKeyDown = function(event, quarter) {\n            var _a, _b;\n            var eventKey = event.key;\n            if (!_this.props.disabledKeyboardNavigation) {\n                switch(eventKey){\n                    case KeyType.Enter:\n                        _this.onQuarterClick(event, quarter);\n                        (_b = (_a = _this.props).setPreSelection) === null || _b === void 0 ? void 0 : _b.call(_a, _this.props.selected);\n                        break;\n                    case KeyType.ArrowRight:\n                        if (!_this.props.preSelection) {\n                            break;\n                        }\n                        _this.handleQuarterNavigation(quarter === 4 ? 1 : quarter + 1, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_42__.addQuarters)(_this.props.preSelection, 1));\n                        break;\n                    case KeyType.ArrowLeft:\n                        if (!_this.props.preSelection) {\n                            break;\n                        }\n                        _this.handleQuarterNavigation(quarter === 1 ? 4 : quarter - 1, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_40__.subQuarters)(_this.props.preSelection, 1));\n                        break;\n                }\n            }\n        };\n        _this.isMonthDisabledForLabelDate = function(month) {\n            var _a;\n            var _b = _this.props, day = _b.day, minDate = _b.minDate, maxDate = _b.maxDate, excludeDates = _b.excludeDates, includeDates = _b.includeDates;\n            var labelDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, month);\n            return {\n                isDisabled: (_a = (minDate || maxDate || excludeDates || includeDates) && isMonthDisabled(labelDate, _this.props)) !== null && _a !== void 0 ? _a : false,\n                labelDate: labelDate\n            };\n        };\n        _this.isMonthDisabled = function(month) {\n            var isDisabled = _this.isMonthDisabledForLabelDate(month).isDisabled;\n            return isDisabled;\n        };\n        _this.getMonthClassNames = function(m) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate, preSelection = _a.preSelection, monthClassName = _a.monthClassName;\n            var _monthClassName = monthClassName ? monthClassName((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, m)) : undefined;\n            var selection = _this.getSelection();\n            return (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__month-text\", \"react-datepicker__month-\".concat(m), _monthClassName, {\n                \"react-datepicker__month-text--disabled\": _this.isMonthDisabled(m),\n                \"react-datepicker__month-text--selected\": selection ? _this.isSelectMonthInList(day, m, selection) : undefined,\n                \"react-datepicker__month-text--keyboard-selected\": !_this.props.disabledKeyboardNavigation && preSelection && _this.isSelectedMonth(day, m, preSelection) && !_this.isMonthSelected() && !_this.isMonthDisabled(m),\n                \"react-datepicker__month-text--in-selecting-range\": _this.isInSelectingRangeMonth(m),\n                \"react-datepicker__month-text--in-range\": startDate && endDate ? isMonthInRange(startDate, endDate, m, day) : undefined,\n                \"react-datepicker__month-text--range-start\": _this.isRangeStartMonth(m),\n                \"react-datepicker__month-text--range-end\": _this.isRangeEndMonth(m),\n                \"react-datepicker__month-text--selecting-range-start\": _this.isSelectingMonthRangeStart(m),\n                \"react-datepicker__month-text--selecting-range-end\": _this.isSelectingMonthRangeEnd(m),\n                \"react-datepicker__month-text--today\": _this.isCurrentMonth(day, m)\n            });\n        };\n        _this.getTabIndex = function(m) {\n            if (_this.props.preSelection == null) {\n                return \"-1\";\n            }\n            var preSelectedMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.props.preSelection);\n            var isPreSelectedMonthDisabled = _this.isMonthDisabledForLabelDate(preSelectedMonth).isDisabled;\n            var tabIndex = m === preSelectedMonth && !(isPreSelectedMonthDisabled || _this.props.disabledKeyboardNavigation) ? \"0\" : \"-1\";\n            return tabIndex;\n        };\n        _this.getQuarterTabIndex = function(q) {\n            if (_this.props.preSelection == null) {\n                return \"-1\";\n            }\n            var preSelectedQuarter = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_32__.getQuarter)(_this.props.preSelection);\n            var isCurrentQuarterDisabled = isQuarterDisabled(_this.props.day, _this.props);\n            var tabIndex = q === preSelectedQuarter && !(isCurrentQuarterDisabled || _this.props.disabledKeyboardNavigation) ? \"0\" : \"-1\";\n            return tabIndex;\n        };\n        _this.getAriaLabel = function(month) {\n            var _a = _this.props, _b = _a.chooseDayAriaLabelPrefix, chooseDayAriaLabelPrefix = _b === void 0 ? \"Choose\" : _b, _c = _a.disabledDayAriaLabelPrefix, disabledDayAriaLabelPrefix = _c === void 0 ? \"Not available\" : _c, day = _a.day, locale = _a.locale;\n            var labelDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(day, month);\n            var prefix = _this.isDisabled(labelDate) || _this.isExcluded(labelDate) ? disabledDayAriaLabelPrefix : chooseDayAriaLabelPrefix;\n            return \"\".concat(prefix, \" \").concat(formatDate(labelDate, \"MMMM yyyy\", locale));\n        };\n        _this.getQuarterClassNames = function(q) {\n            var _a = _this.props, day = _a.day, startDate = _a.startDate, endDate = _a.endDate, selected = _a.selected, minDate = _a.minDate, maxDate = _a.maxDate, excludeDates = _a.excludeDates, includeDates = _a.includeDates, filterDate = _a.filterDate, preSelection = _a.preSelection, disabledKeyboardNavigation = _a.disabledKeyboardNavigation;\n            var isDisabled = (minDate || maxDate || excludeDates || includeDates || filterDate) && isQuarterDisabled((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_28__.setQuarter)(day, q), _this.props);\n            return (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__quarter-text\", \"react-datepicker__quarter-\".concat(q), {\n                \"react-datepicker__quarter-text--disabled\": isDisabled,\n                \"react-datepicker__quarter-text--selected\": selected ? _this.isSelectedQuarter(day, q, selected) : undefined,\n                \"react-datepicker__quarter-text--keyboard-selected\": !disabledKeyboardNavigation && preSelection && _this.isSelectedQuarter(day, q, preSelection) && !isDisabled,\n                \"react-datepicker__quarter-text--in-selecting-range\": _this.isInSelectingRangeQuarter(q),\n                \"react-datepicker__quarter-text--in-range\": startDate && endDate ? isQuarterInRange(startDate, endDate, q, day) : undefined,\n                \"react-datepicker__quarter-text--range-start\": _this.isRangeStartQuarter(q),\n                \"react-datepicker__quarter-text--range-end\": _this.isRangeEndQuarter(q),\n                \"react-datepicker__quarter-text--today\": _this.isCurrentQuarter(day, q)\n            });\n        };\n        _this.getMonthContent = function(m) {\n            var _a = _this.props, showFullMonthYearPicker = _a.showFullMonthYearPicker, renderMonthContent = _a.renderMonthContent, locale = _a.locale, day = _a.day;\n            var shortMonthText = getMonthShortInLocale(m, locale);\n            var fullMonthText = getMonthInLocale(m, locale);\n            if (renderMonthContent) {\n                return renderMonthContent(m, shortMonthText, fullMonthText, day);\n            }\n            return showFullMonthYearPicker ? fullMonthText : shortMonthText;\n        };\n        _this.getQuarterContent = function(q) {\n            var _a;\n            var _b = _this.props, renderQuarterContent = _b.renderQuarterContent, locale = _b.locale;\n            var shortQuarter = getQuarterShortInLocale(q, locale);\n            return (_a = renderQuarterContent === null || renderQuarterContent === void 0 ? void 0 : renderQuarterContent(q, shortQuarter)) !== null && _a !== void 0 ? _a : shortQuarter;\n        };\n        _this.renderMonths = function() {\n            var _a;\n            var _b = _this.props, showTwoColumnMonthYearPicker = _b.showTwoColumnMonthYearPicker, showFourColumnMonthYearPicker = _b.showFourColumnMonthYearPicker, day = _b.day, selected = _b.selected;\n            var monthColumns = (_a = MONTH_COLUMNS[getMonthColumnsLayout(showFourColumnMonthYearPicker, showTwoColumnMonthYearPicker)]) === null || _a === void 0 ? void 0 : _a.grid;\n            return monthColumns === null || monthColumns === void 0 ? void 0 : monthColumns.map(function(month, i) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: \"react-datepicker__month-wrapper\",\n                    key: i\n                }, month.map(function(m, j) {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                        ref: _this.MONTH_REFS[m],\n                        key: j,\n                        onClick: function(event) {\n                            _this.onMonthClick(event, m);\n                        },\n                        onKeyDown: function(event) {\n                            if (isSpaceKeyDown(event)) {\n                                event.preventDefault();\n                                event.key = KeyType.Enter;\n                            }\n                            _this.onMonthKeyDown(event, m);\n                        },\n                        onMouseEnter: !_this.props.usePointerEvent ? function() {\n                            return _this.onMonthMouseEnter(m);\n                        } : undefined,\n                        onPointerEnter: _this.props.usePointerEvent ? function() {\n                            return _this.onMonthMouseEnter(m);\n                        } : undefined,\n                        tabIndex: Number(_this.getTabIndex(m)),\n                        className: _this.getMonthClassNames(m),\n                        \"aria-disabled\": _this.isMonthDisabled(m),\n                        role: \"option\",\n                        \"aria-label\": _this.getAriaLabel(m),\n                        \"aria-current\": _this.isCurrentMonth(day, m) ? \"date\" : undefined,\n                        \"aria-selected\": selected ? _this.isSelectedMonth(day, m, selected) : undefined\n                    }, _this.getMonthContent(m));\n                }));\n            });\n        };\n        _this.renderQuarters = function() {\n            var _a = _this.props, day = _a.day, selected = _a.selected;\n            var quarters = [\n                1,\n                2,\n                3,\n                4\n            ];\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__quarter-wrapper\"\n            }, quarters.map(function(q, j) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    key: j,\n                    ref: _this.QUARTER_REFS[j],\n                    role: \"option\",\n                    onClick: function(event) {\n                        _this.onQuarterClick(event, q);\n                    },\n                    onKeyDown: function(event) {\n                        _this.onQuarterKeyDown(event, q);\n                    },\n                    onMouseEnter: !_this.props.usePointerEvent ? function() {\n                        return _this.onQuarterMouseEnter(q);\n                    } : undefined,\n                    onPointerEnter: _this.props.usePointerEvent ? function() {\n                        return _this.onQuarterMouseEnter(q);\n                    } : undefined,\n                    className: _this.getQuarterClassNames(q),\n                    \"aria-selected\": selected ? _this.isSelectedQuarter(day, q, selected) : undefined,\n                    tabIndex: Number(_this.getQuarterTabIndex(q)),\n                    \"aria-current\": _this.isCurrentQuarter(day, q) ? \"date\" : undefined\n                }, _this.getQuarterContent(q));\n            }));\n        };\n        _this.getClassNames = function() {\n            var _a = _this.props, selectingDate = _a.selectingDate, selectsStart = _a.selectsStart, selectsEnd = _a.selectsEnd, showMonthYearPicker = _a.showMonthYearPicker, showQuarterYearPicker = _a.showQuarterYearPicker, showWeekPicker = _a.showWeekPicker;\n            return (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__month\", {\n                \"react-datepicker__month--selecting-range\": selectingDate && (selectsStart || selectsEnd)\n            }, {\n                \"react-datepicker__monthPicker\": showMonthYearPicker\n            }, {\n                \"react-datepicker__quarterPicker\": showQuarterYearPicker\n            }, {\n                \"react-datepicker__weekPicker\": showWeekPicker\n            });\n        };\n        return _this;\n    }\n    Month.prototype.getSelection = function() {\n        var _a = this.props, selected = _a.selected, selectedDates = _a.selectedDates, selectsMultiple = _a.selectsMultiple;\n        if (selectsMultiple) {\n            return selectedDates;\n        }\n        if (selected) {\n            return [\n                selected\n            ];\n        }\n        return undefined;\n    };\n    Month.prototype.render = function() {\n        var _a = this.props, showMonthYearPicker = _a.showMonthYearPicker, showQuarterYearPicker = _a.showQuarterYearPicker, day = _a.day, _b = _a.ariaLabelPrefix, ariaLabelPrefix = _b === void 0 ? \"Month \" : _b;\n        var formattedAriaLabelPrefix = ariaLabelPrefix ? ariaLabelPrefix.trim() + \" \" : \"\";\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: this.getClassNames(),\n            onMouseLeave: !this.props.usePointerEvent ? this.handleMouseLeave : undefined,\n            onPointerLeave: this.props.usePointerEvent ? this.handleMouseLeave : undefined,\n            \"aria-label\": \"\".concat(formattedAriaLabelPrefix).concat(formatDate(day, \"MMMM, yyyy\", this.props.locale)),\n            role: \"listbox\"\n        }, showMonthYearPicker ? this.renderMonths() : showQuarterYearPicker ? this.renderQuarters() : this.renderWeeks());\n    };\n    return Month;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar MonthDropdownOptions = /** @class */ function(_super) {\n    __extends(MonthDropdownOptions, _super);\n    function MonthDropdownOptions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isSelectedMonth = function(i) {\n            return _this.props.month === i;\n        };\n        _this.renderOptions = function() {\n            return _this.props.monthNames.map(function(month, i) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: _this.isSelectedMonth(i) ? \"react-datepicker__month-option react-datepicker__month-option--selected_month\" : \"react-datepicker__month-option\",\n                    key: month,\n                    onClick: _this.onChange.bind(_this, i),\n                    \"aria-selected\": _this.isSelectedMonth(i) ? \"true\" : undefined\n                }, _this.isSelectedMonth(i) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                    className: \"react-datepicker__month-option--selected\"\n                }, \"✓\") : \"\", month);\n            });\n        };\n        _this.onChange = function(month) {\n            return _this.props.onChange(month);\n        };\n        _this.handleClickOutside = function() {\n            return _this.props.onCancel();\n        };\n        return _this;\n    }\n    MonthDropdownOptions.prototype.render = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ClickOutsideWrapper, {\n            className: \"react-datepicker__month-dropdown\",\n            onClickOutside: this.handleClickOutside\n        }, this.renderOptions());\n    };\n    return MonthDropdownOptions;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar MonthDropdown = /** @class */ function(_super) {\n    __extends(MonthDropdown, _super);\n    function MonthDropdown() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dropdownVisible: false\n        };\n        _this.renderSelectOptions = function(monthNames) {\n            return monthNames.map(function(m, i) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n                    key: m,\n                    value: i\n                }, m);\n            });\n        };\n        _this.renderSelectMode = function(monthNames) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"select\", {\n                value: _this.props.month,\n                className: \"react-datepicker__month-select\",\n                onChange: function(e) {\n                    return _this.onChange(parseInt(e.target.value));\n                }\n            }, _this.renderSelectOptions(monthNames));\n        };\n        _this.renderReadView = function(visible, monthNames) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                key: \"read\",\n                style: {\n                    visibility: visible ? \"visible\" : \"hidden\"\n                },\n                className: \"react-datepicker__month-read-view\",\n                onClick: _this.toggleDropdown\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__month-read-view--down-arrow\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__month-read-view--selected-month\"\n            }, monthNames[_this.props.month]));\n        };\n        _this.renderDropdown = function(monthNames) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(MonthDropdownOptions, _assign({\n                key: \"dropdown\"\n            }, _this.props, {\n                monthNames: monthNames,\n                onChange: _this.onChange,\n                onCancel: _this.toggleDropdown\n            }));\n        };\n        _this.renderScrollMode = function(monthNames) {\n            var dropdownVisible = _this.state.dropdownVisible;\n            var result = [\n                _this.renderReadView(!dropdownVisible, monthNames)\n            ];\n            if (dropdownVisible) {\n                result.unshift(_this.renderDropdown(monthNames));\n            }\n            return result;\n        };\n        _this.onChange = function(month) {\n            _this.toggleDropdown();\n            if (month !== _this.props.month) {\n                _this.props.onChange(month);\n            }\n        };\n        _this.toggleDropdown = function() {\n            return _this.setState({\n                dropdownVisible: !_this.state.dropdownVisible\n            });\n        };\n        return _this;\n    }\n    MonthDropdown.prototype.render = function() {\n        var _this = this;\n        var monthNames = [\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11\n        ].map(this.props.useShortMonthInDropdown ? function(m) {\n            return getMonthShortInLocale(m, _this.props.locale);\n        } : function(m) {\n            return getMonthInLocale(m, _this.props.locale);\n        });\n        var renderedDropdown;\n        switch(this.props.dropdownMode){\n            case \"scroll\":\n                renderedDropdown = this.renderScrollMode(monthNames);\n                break;\n            case \"select\":\n                renderedDropdown = this.renderSelectMode(monthNames);\n                break;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--\".concat(this.props.dropdownMode)\n        }, renderedDropdown);\n    };\n    return MonthDropdown;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nfunction generateMonthYears(minDate, maxDate) {\n    var list = [];\n    var currDate = getStartOfMonth(minDate);\n    var lastDate = getStartOfMonth(maxDate);\n    while(!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(currDate, lastDate)){\n        list.push(newDate(currDate));\n        currDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(currDate, 1);\n    }\n    return list;\n}\nvar MonthYearDropdownOptions = /** @class */ function(_super) {\n    __extends(MonthYearDropdownOptions, _super);\n    function MonthYearDropdownOptions(props) {\n        var _this = _super.call(this, props) || this;\n        _this.renderOptions = function() {\n            return _this.state.monthYearsList.map(function(monthYear) {\n                var monthYearPoint = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_57__.getTime)(monthYear);\n                var isSameMonthYear = isSameYear(_this.props.date, monthYear) && isSameMonth(_this.props.date, monthYear);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: isSameMonthYear ? \"react-datepicker__month-year-option--selected_month-year\" : \"react-datepicker__month-year-option\",\n                    key: monthYearPoint,\n                    onClick: _this.onChange.bind(_this, monthYearPoint),\n                    \"aria-selected\": isSameMonthYear ? \"true\" : undefined\n                }, isSameMonthYear ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                    className: \"react-datepicker__month-year-option--selected\"\n                }, \"✓\") : \"\", formatDate(monthYear, _this.props.dateFormat, _this.props.locale));\n            });\n        };\n        _this.onChange = function(monthYear) {\n            return _this.props.onChange(monthYear);\n        };\n        _this.handleClickOutside = function() {\n            _this.props.onCancel();\n        };\n        _this.state = {\n            monthYearsList: generateMonthYears(_this.props.minDate, _this.props.maxDate)\n        };\n        return _this;\n    }\n    MonthYearDropdownOptions.prototype.render = function() {\n        var dropdownClass = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)({\n            \"react-datepicker__month-year-dropdown\": true,\n            \"react-datepicker__month-year-dropdown--scrollable\": this.props.scrollableMonthYearDropdown\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ClickOutsideWrapper, {\n            className: dropdownClass,\n            onClickOutside: this.handleClickOutside\n        }, this.renderOptions());\n    };\n    return MonthYearDropdownOptions;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar MonthYearDropdown = /** @class */ function(_super) {\n    __extends(MonthYearDropdown, _super);\n    function MonthYearDropdown() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dropdownVisible: false\n        };\n        _this.renderSelectOptions = function() {\n            var currDate = getStartOfMonth(_this.props.minDate);\n            var lastDate = getStartOfMonth(_this.props.maxDate);\n            var options = [];\n            while(!(0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(currDate, lastDate)){\n                var timePoint = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_57__.getTime)(currDate);\n                options.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n                    key: timePoint,\n                    value: timePoint\n                }, formatDate(currDate, _this.props.dateFormat, _this.props.locale)));\n                currDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(currDate, 1);\n            }\n            return options;\n        };\n        _this.onSelectChange = function(event) {\n            _this.onChange(parseInt(event.target.value));\n        };\n        _this.renderSelectMode = function() {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"select\", {\n                value: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_57__.getTime)(getStartOfMonth(_this.props.date)),\n                className: \"react-datepicker__month-year-select\",\n                onChange: _this.onSelectChange\n            }, _this.renderSelectOptions());\n        };\n        _this.renderReadView = function(visible) {\n            var yearMonth = formatDate(_this.props.date, _this.props.dateFormat, _this.props.locale);\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                key: \"read\",\n                style: {\n                    visibility: visible ? \"visible\" : \"hidden\"\n                },\n                className: \"react-datepicker__month-year-read-view\",\n                onClick: _this.toggleDropdown\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__month-year-read-view--down-arrow\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__month-year-read-view--selected-month-year\"\n            }, yearMonth));\n        };\n        _this.renderDropdown = function() {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(MonthYearDropdownOptions, _assign({\n                key: \"dropdown\"\n            }, _this.props, {\n                onChange: _this.onChange,\n                onCancel: _this.toggleDropdown\n            }));\n        };\n        _this.renderScrollMode = function() {\n            var dropdownVisible = _this.state.dropdownVisible;\n            var result = [\n                _this.renderReadView(!dropdownVisible)\n            ];\n            if (dropdownVisible) {\n                result.unshift(_this.renderDropdown());\n            }\n            return result;\n        };\n        _this.onChange = function(monthYearPoint) {\n            _this.toggleDropdown();\n            var changedDate = newDate(monthYearPoint);\n            if (isSameYear(_this.props.date, changedDate) && isSameMonth(_this.props.date, changedDate)) {\n                return;\n            }\n            _this.props.onChange(changedDate);\n        };\n        _this.toggleDropdown = function() {\n            return _this.setState({\n                dropdownVisible: !_this.state.dropdownVisible\n            });\n        };\n        return _this;\n    }\n    MonthYearDropdown.prototype.render = function() {\n        var renderedDropdown;\n        switch(this.props.dropdownMode){\n            case \"scroll\":\n                renderedDropdown = this.renderScrollMode();\n                break;\n            case \"select\":\n                renderedDropdown = this.renderSelectMode();\n                break;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--\".concat(this.props.dropdownMode)\n        }, renderedDropdown);\n    };\n    return MonthYearDropdown;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar Time = /** @class */ function(_super) {\n    __extends(Time, _super);\n    function Time() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            height: null\n        };\n        _this.scrollToTheSelectedTime = function() {\n            requestAnimationFrame(function() {\n                var _a, _b, _c;\n                if (!_this.list) return;\n                _this.list.scrollTop = (_c = _this.centerLi && Time.calcCenterPosition(_this.props.monthRef ? _this.props.monthRef.clientHeight - ((_b = (_a = _this.header) === null || _a === void 0 ? void 0 : _a.clientHeight) !== null && _b !== void 0 ? _b : 0) : _this.list.clientHeight, _this.centerLi)) !== null && _c !== void 0 ? _c : 0;\n            });\n        };\n        _this.handleClick = function(time) {\n            var _a, _b;\n            if ((_this.props.minTime || _this.props.maxTime) && isTimeInDisabledRange(time, _this.props) || (_this.props.excludeTimes || _this.props.includeTimes || _this.props.filterTime) && isTimeDisabled(time, _this.props)) {\n                return;\n            }\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, time);\n        };\n        _this.isSelectedTime = function(time) {\n            return _this.props.selected && isSameMinute(_this.props.selected, time);\n        };\n        _this.isDisabledTime = function(time) {\n            return (_this.props.minTime || _this.props.maxTime) && isTimeInDisabledRange(time, _this.props) || (_this.props.excludeTimes || _this.props.includeTimes || _this.props.filterTime) && isTimeDisabled(time, _this.props);\n        };\n        _this.liClasses = function(time) {\n            var _a;\n            var classes = [\n                \"react-datepicker__time-list-item\",\n                _this.props.timeClassName ? _this.props.timeClassName(time) : undefined\n            ];\n            if (_this.isSelectedTime(time)) {\n                classes.push(\"react-datepicker__time-list-item--selected\");\n            }\n            if (_this.isDisabledTime(time)) {\n                classes.push(\"react-datepicker__time-list-item--disabled\");\n            }\n            //convert this.props.intervals and the relevant time to seconds and check if it it's a clean multiple of the interval\n            if (_this.props.injectTimes && ((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(time) * 3600 + (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(time) * 60 + (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(time)) % (((_a = _this.props.intervals) !== null && _a !== void 0 ? _a : Time.defaultProps.intervals) * 60) !== 0) {\n                classes.push(\"react-datepicker__time-list-item--injected\");\n            }\n            return classes.join(\" \");\n        };\n        _this.handleOnKeyDown = function(event, time) {\n            var _a, _b;\n            if (event.key === KeyType.Space) {\n                event.preventDefault();\n                event.key = KeyType.Enter;\n            }\n            if ((event.key === KeyType.ArrowUp || event.key === KeyType.ArrowLeft) && event.target instanceof HTMLElement && event.target.previousSibling) {\n                event.preventDefault();\n                event.target.previousSibling instanceof HTMLElement && event.target.previousSibling.focus();\n            }\n            if ((event.key === KeyType.ArrowDown || event.key === KeyType.ArrowRight) && event.target instanceof HTMLElement && event.target.nextSibling) {\n                event.preventDefault();\n                event.target.nextSibling instanceof HTMLElement && event.target.nextSibling.focus();\n            }\n            if (event.key === KeyType.Enter) {\n                _this.handleClick(time);\n            }\n            (_b = (_a = _this.props).handleOnKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        };\n        _this.renderTimes = function() {\n            var _a;\n            var times = [];\n            var format = typeof _this.props.format === \"string\" ? _this.props.format : \"p\";\n            var intervals = (_a = _this.props.intervals) !== null && _a !== void 0 ? _a : Time.defaultProps.intervals;\n            var activeDate = _this.props.selected || _this.props.openToDate || newDate();\n            var base = getStartOfDay(activeDate);\n            var sortedInjectTimes = _this.props.injectTimes && _this.props.injectTimes.sort(function(a, b) {\n                return a.getTime() - b.getTime();\n            });\n            var minutesInDay = 60 * getHoursInDay(activeDate);\n            var multiplier = minutesInDay / intervals;\n            for(var i = 0; i < multiplier; i++){\n                var currentTime = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_50__.addMinutes)(base, i * intervals);\n                times.push(currentTime);\n                if (sortedInjectTimes) {\n                    var timesToInject = timesToInjectAfter(base, currentTime, i, intervals, sortedInjectTimes);\n                    times = times.concat(timesToInject);\n                }\n            }\n            // Determine which time to focus and scroll into view when component mounts\n            var timeToFocus = times.reduce(function(prev, time) {\n                if (time.getTime() <= activeDate.getTime()) {\n                    return time;\n                }\n                return prev;\n            }, times[0]);\n            return times.map(function(time) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"li\", {\n                    key: time.valueOf(),\n                    onClick: _this.handleClick.bind(_this, time),\n                    className: _this.liClasses(time),\n                    ref: function(li) {\n                        if (time === timeToFocus) {\n                            _this.centerLi = li;\n                        }\n                    },\n                    onKeyDown: function(event) {\n                        _this.handleOnKeyDown(event, time);\n                    },\n                    tabIndex: time === timeToFocus ? 0 : -1,\n                    role: \"option\",\n                    \"aria-selected\": _this.isSelectedTime(time) ? \"true\" : undefined,\n                    \"aria-disabled\": _this.isDisabledTime(time) ? \"true\" : undefined\n                }, formatDate(time, format, _this.props.locale));\n            });\n        };\n        _this.renderTimeCaption = function() {\n            if (_this.props.showTimeCaption === false) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null);\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__header react-datepicker__header--time \".concat(_this.props.showTimeSelectOnly ? \"react-datepicker__header--time--only\" : \"\"),\n                ref: function(header) {\n                    _this.header = header;\n                }\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker-time__header\"\n            }, _this.props.timeCaption));\n        };\n        return _this;\n    }\n    Object.defineProperty(Time, \"defaultProps\", {\n        get: function() {\n            return {\n                intervals: 30,\n                todayButton: null,\n                timeCaption: \"Time\",\n                showTimeCaption: true\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Time.prototype.componentDidMount = function() {\n        // code to ensure selected time will always be in focus within time window when it first appears\n        this.scrollToTheSelectedTime();\n        this.observeDatePickerHeightChanges();\n    };\n    Time.prototype.componentWillUnmount = function() {\n        var _a;\n        (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    };\n    Time.prototype.observeDatePickerHeightChanges = function() {\n        var _this = this;\n        var monthRef = this.props.monthRef;\n        this.updateContainerHeight();\n        if (monthRef) {\n            this.resizeObserver = new ResizeObserver(function() {\n                _this.updateContainerHeight();\n            });\n            this.resizeObserver.observe(monthRef);\n        }\n    };\n    Time.prototype.updateContainerHeight = function() {\n        if (this.props.monthRef && this.header) {\n            this.setState({\n                height: this.props.monthRef.clientHeight - this.header.clientHeight\n            });\n        }\n    };\n    Time.prototype.render = function() {\n        var _this = this;\n        var _a;\n        var height = this.state.height;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__time-container \".concat(((_a = this.props.todayButton) !== null && _a !== void 0 ? _a : Time.defaultProps.todayButton) ? \"react-datepicker__time-container--with-today-button\" : \"\")\n        }, this.renderTimeCaption(), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__time\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__time-box\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"ul\", {\n            className: \"react-datepicker__time-list\",\n            ref: function(list) {\n                _this.list = list;\n            },\n            style: height ? {\n                height: height\n            } : {},\n            role: \"listbox\",\n            \"aria-label\": this.props.timeCaption\n        }, this.renderTimes()))));\n    };\n    Time.calcCenterPosition = function(listHeight, centerLiRef) {\n        return centerLiRef.offsetTop - (listHeight / 2 - centerLiRef.clientHeight / 2);\n    };\n    return Time;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar VERTICAL_NAVIGATION_OFFSET = 3;\n/**\n * `Year` is a component that represents a year in a date picker.\n *\n * @class\n * @param {YearProps} props - The properties that define the `Year` component.\n * @property {VoidFunction} [props.clearSelectingDate] - Function to clear the selected date.\n * @property {Date} [props.date] - The currently selected date.\n * @property {boolean} [props.disabledKeyboardNavigation] - If true, keyboard navigation is disabled.\n * @property {Date} [props.endDate] - The end date in a range selection.\n * @property {(date: Date) => void} props.onDayClick - Function to handle day click events.\n * @property {Date} props.preSelection - The date that is currently in focus.\n * @property {(date: Date) => void} props.setPreSelection - Function to set the pre-selected date.\n * @property {{ [key: string]: any }} props.selected - The selected date(s).\n * @property {boolean} props.inline - If true, the date picker is displayed inline.\n * @property {Date} props.maxDate - The maximum selectable date.\n * @property {Date} props.minDate - The minimum selectable date.\n * @property {boolean} props.usePointerEvent - If true, pointer events are used instead of mouse events.\n * @property {(date: Date) => void} props.onYearMouseEnter - Function to handle mouse enter events on a year.\n * @property {(date: Date) => void} props.onYearMouseLeave - Function to handle mouse leave events on a year.\n */ var Year = /** @class */ function(_super) {\n    __extends(Year, _super);\n    function Year(props) {\n        var _this = _super.call(this, props) || this;\n        _this.YEAR_REFS = __spreadArray([], Array(_this.props.yearItemNumber), true).map(function() {\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        });\n        _this.isDisabled = function(date) {\n            return isDayDisabled(date, {\n                minDate: _this.props.minDate,\n                maxDate: _this.props.maxDate,\n                excludeDates: _this.props.excludeDates,\n                includeDates: _this.props.includeDates,\n                filterDate: _this.props.filterDate\n            });\n        };\n        _this.isExcluded = function(date) {\n            return isDayExcluded(date, {\n                excludeDates: _this.props.excludeDates\n            });\n        };\n        _this.selectingDate = function() {\n            var _a;\n            return (_a = _this.props.selectingDate) !== null && _a !== void 0 ? _a : _this.props.preSelection;\n        };\n        _this.updateFocusOnPaginate = function(refIndex) {\n            var waitForReRender = function() {\n                var _a, _b;\n                (_b = (_a = _this.YEAR_REFS[refIndex]) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.focus();\n            };\n            window.requestAnimationFrame(waitForReRender);\n        };\n        _this.handleYearClick = function(day, event) {\n            if (_this.props.onDayClick) {\n                _this.props.onDayClick(day, event);\n            }\n        };\n        _this.handleYearNavigation = function(newYear, newDate) {\n            var _a, _b, _c, _d;\n            var _e = _this.props, date = _e.date, yearItemNumber = _e.yearItemNumber;\n            if (date === undefined || yearItemNumber === undefined) {\n                return;\n            }\n            var startPeriod = getYearsPeriod(date, yearItemNumber).startPeriod;\n            if (_this.isDisabled(newDate) || _this.isExcluded(newDate)) {\n                return;\n            }\n            (_b = (_a = _this.props).setPreSelection) === null || _b === void 0 ? void 0 : _b.call(_a, newDate);\n            if (newYear - startPeriod < 0) {\n                _this.updateFocusOnPaginate(yearItemNumber - (startPeriod - newYear));\n            } else if (newYear - startPeriod >= yearItemNumber) {\n                _this.updateFocusOnPaginate(Math.abs(yearItemNumber - (newYear - startPeriod)));\n            } else (_d = (_c = _this.YEAR_REFS[newYear - startPeriod]) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.focus();\n        };\n        _this.isSameDay = function(y, other) {\n            return isSameDay(y, other);\n        };\n        _this.isCurrentYear = function(y) {\n            return y === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(newDate());\n        };\n        _this.isRangeStart = function(y) {\n            return _this.props.startDate && _this.props.endDate && isSameYear((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(newDate(), y), _this.props.startDate);\n        };\n        _this.isRangeEnd = function(y) {\n            return _this.props.startDate && _this.props.endDate && isSameYear((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(newDate(), y), _this.props.endDate);\n        };\n        _this.isInRange = function(y) {\n            return isYearInRange(y, _this.props.startDate, _this.props.endDate);\n        };\n        _this.isInSelectingRange = function(y) {\n            var _a = _this.props, selectsStart = _a.selectsStart, selectsEnd = _a.selectsEnd, selectsRange = _a.selectsRange, startDate = _a.startDate, endDate = _a.endDate;\n            if (!(selectsStart || selectsEnd || selectsRange) || !_this.selectingDate()) {\n                return false;\n            }\n            if (selectsStart && endDate) {\n                return isYearInRange(y, _this.selectingDate(), endDate);\n            }\n            if (selectsEnd && startDate) {\n                return isYearInRange(y, startDate, _this.selectingDate());\n            }\n            if (selectsRange && startDate && !endDate) {\n                return isYearInRange(y, startDate, _this.selectingDate());\n            }\n            return false;\n        };\n        _this.isSelectingRangeStart = function(y) {\n            var _a;\n            if (!_this.isInSelectingRange(y)) {\n                return false;\n            }\n            var _b = _this.props, startDate = _b.startDate, selectsStart = _b.selectsStart;\n            var _year = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(newDate(), y);\n            if (selectsStart) {\n                return isSameYear(_year, (_a = _this.selectingDate()) !== null && _a !== void 0 ? _a : null);\n            }\n            return isSameYear(_year, startDate !== null && startDate !== void 0 ? startDate : null);\n        };\n        _this.isSelectingRangeEnd = function(y) {\n            var _a;\n            if (!_this.isInSelectingRange(y)) {\n                return false;\n            }\n            var _b = _this.props, endDate = _b.endDate, selectsEnd = _b.selectsEnd, selectsRange = _b.selectsRange;\n            var _year = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(newDate(), y);\n            if (selectsEnd || selectsRange) {\n                return isSameYear(_year, (_a = _this.selectingDate()) !== null && _a !== void 0 ? _a : null);\n            }\n            return isSameYear(_year, endDate !== null && endDate !== void 0 ? endDate : null);\n        };\n        _this.isKeyboardSelected = function(y) {\n            if (_this.props.date === undefined || _this.props.selected == null || _this.props.preSelection == null) {\n                return;\n            }\n            var _a = _this.props, minDate = _a.minDate, maxDate = _a.maxDate, excludeDates = _a.excludeDates, includeDates = _a.includeDates, filterDate = _a.filterDate;\n            var date = getStartOfYear((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(_this.props.date, y));\n            var isDisabled = (minDate || maxDate || excludeDates || includeDates || filterDate) && isYearDisabled(y, _this.props);\n            return !_this.props.disabledKeyboardNavigation && !_this.props.inline && !isSameDay(date, getStartOfYear(_this.props.selected)) && isSameDay(date, getStartOfYear(_this.props.preSelection)) && !isDisabled;\n        };\n        _this.isSelectedYear = function(year) {\n            var _a = _this.props, selectsMultiple = _a.selectsMultiple, selected = _a.selected, selectedDates = _a.selectedDates;\n            if (selectsMultiple) {\n                return selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.some(function(date) {\n                    return year === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(date);\n                });\n            }\n            return !!selected && year === (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(selected);\n        };\n        _this.onYearClick = function(event, y) {\n            var date = _this.props.date;\n            if (date === undefined) {\n                return;\n            }\n            _this.handleYearClick(getStartOfYear((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(date, y)), event);\n        };\n        _this.onYearKeyDown = function(event, y) {\n            var _a, _b;\n            var key = event.key;\n            var _c = _this.props, date = _c.date, yearItemNumber = _c.yearItemNumber, handleOnKeyDown = _c.handleOnKeyDown;\n            if (key !== KeyType.Tab) {\n                // preventDefault on tab event blocks focus change\n                event.preventDefault();\n            }\n            if (!_this.props.disabledKeyboardNavigation) {\n                switch(key){\n                    case KeyType.Enter:\n                        if (_this.props.selected == null) {\n                            break;\n                        }\n                        _this.onYearClick(event, y);\n                        (_b = (_a = _this.props).setPreSelection) === null || _b === void 0 ? void 0 : _b.call(_a, _this.props.selected);\n                        break;\n                    case KeyType.ArrowRight:\n                        if (_this.props.preSelection == null) {\n                            break;\n                        }\n                        _this.handleYearNavigation(y + 1, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(_this.props.preSelection, 1));\n                        break;\n                    case KeyType.ArrowLeft:\n                        if (_this.props.preSelection == null) {\n                            break;\n                        }\n                        _this.handleYearNavigation(y - 1, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(_this.props.preSelection, 1));\n                        break;\n                    case KeyType.ArrowUp:\n                        {\n                            if (date === undefined || yearItemNumber === undefined || _this.props.preSelection == null) {\n                                break;\n                            }\n                            var startPeriod = getYearsPeriod(date, yearItemNumber).startPeriod;\n                            var offset = VERTICAL_NAVIGATION_OFFSET;\n                            var newYear = y - offset;\n                            if (newYear < startPeriod) {\n                                var leftOverOffset = yearItemNumber % offset;\n                                if (y >= startPeriod && y < startPeriod + leftOverOffset) {\n                                    offset = leftOverOffset;\n                                } else {\n                                    offset += leftOverOffset;\n                                }\n                                newYear = y - offset;\n                            }\n                            _this.handleYearNavigation(newYear, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(_this.props.preSelection, offset));\n                            break;\n                        }\n                    case KeyType.ArrowDown:\n                        {\n                            if (date === undefined || yearItemNumber === undefined || _this.props.preSelection == null) {\n                                break;\n                            }\n                            var endPeriod = getYearsPeriod(date, yearItemNumber).endPeriod;\n                            var offset = VERTICAL_NAVIGATION_OFFSET;\n                            var newYear = y + offset;\n                            if (newYear > endPeriod) {\n                                var leftOverOffset = yearItemNumber % offset;\n                                if (y <= endPeriod && y > endPeriod - leftOverOffset) {\n                                    offset = leftOverOffset;\n                                } else {\n                                    offset += leftOverOffset;\n                                }\n                                newYear = y + offset;\n                            }\n                            _this.handleYearNavigation(newYear, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(_this.props.preSelection, offset));\n                            break;\n                        }\n                }\n            }\n            handleOnKeyDown && handleOnKeyDown(event);\n        };\n        _this.getYearClassNames = function(y) {\n            var _a = _this.props, date = _a.date, minDate = _a.minDate, maxDate = _a.maxDate, excludeDates = _a.excludeDates, includeDates = _a.includeDates, filterDate = _a.filterDate, yearClassName = _a.yearClassName;\n            return (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__year-text\", \"react-datepicker__year-\".concat(y), date ? yearClassName === null || yearClassName === void 0 ? void 0 : yearClassName((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(date, y)) : undefined, {\n                \"react-datepicker__year-text--selected\": _this.isSelectedYear(y),\n                \"react-datepicker__year-text--disabled\": (minDate || maxDate || excludeDates || includeDates || filterDate) && isYearDisabled(y, _this.props),\n                \"react-datepicker__year-text--keyboard-selected\": _this.isKeyboardSelected(y),\n                \"react-datepicker__year-text--range-start\": _this.isRangeStart(y),\n                \"react-datepicker__year-text--range-end\": _this.isRangeEnd(y),\n                \"react-datepicker__year-text--in-range\": _this.isInRange(y),\n                \"react-datepicker__year-text--in-selecting-range\": _this.isInSelectingRange(y),\n                \"react-datepicker__year-text--selecting-range-start\": _this.isSelectingRangeStart(y),\n                \"react-datepicker__year-text--selecting-range-end\": _this.isSelectingRangeEnd(y),\n                \"react-datepicker__year-text--today\": _this.isCurrentYear(y)\n            });\n        };\n        _this.getYearTabIndex = function(y) {\n            if (_this.props.disabledKeyboardNavigation || _this.props.preSelection == null) {\n                return \"-1\";\n            }\n            var preSelected = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.props.preSelection);\n            var isPreSelectedYearDisabled = isYearDisabled(y, _this.props);\n            return y === preSelected && !isPreSelectedYearDisabled ? \"0\" : \"-1\";\n        };\n        _this.getYearContent = function(y) {\n            return _this.props.renderYearContent ? _this.props.renderYearContent(y) : y;\n        };\n        return _this;\n    }\n    Year.prototype.render = function() {\n        var _this = this;\n        var yearsList = [];\n        var _a = this.props, date = _a.date, yearItemNumber = _a.yearItemNumber, onYearMouseEnter = _a.onYearMouseEnter, onYearMouseLeave = _a.onYearMouseLeave;\n        if (date === undefined) {\n            return null;\n        }\n        var _b = getYearsPeriod(date, yearItemNumber), startPeriod = _b.startPeriod, endPeriod = _b.endPeriod;\n        var _loop_1 = function(y) {\n            yearsList.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                ref: this_1.YEAR_REFS[y - startPeriod],\n                onClick: function(event) {\n                    _this.onYearClick(event, y);\n                },\n                onKeyDown: function(event) {\n                    if (isSpaceKeyDown(event)) {\n                        event.preventDefault();\n                        event.key = KeyType.Enter;\n                    }\n                    _this.onYearKeyDown(event, y);\n                },\n                tabIndex: Number(this_1.getYearTabIndex(y)),\n                className: this_1.getYearClassNames(y),\n                onMouseEnter: !this_1.props.usePointerEvent ? function(event) {\n                    return onYearMouseEnter(event, y);\n                } : undefined,\n                onPointerEnter: this_1.props.usePointerEvent ? function(event) {\n                    return onYearMouseEnter(event, y);\n                } : undefined,\n                onMouseLeave: !this_1.props.usePointerEvent ? function(event) {\n                    return onYearMouseLeave(event, y);\n                } : undefined,\n                onPointerLeave: this_1.props.usePointerEvent ? function(event) {\n                    return onYearMouseLeave(event, y);\n                } : undefined,\n                key: y,\n                \"aria-current\": this_1.isCurrentYear(y) ? \"date\" : undefined\n            }, this_1.getYearContent(y)));\n        };\n        var this_1 = this;\n        for(var y = startPeriod; y <= endPeriod; y++){\n            _loop_1(y);\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__year\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__year-wrapper\",\n            onMouseLeave: !this.props.usePointerEvent ? this.props.clearSelectingDate : undefined,\n            onPointerLeave: this.props.usePointerEvent ? this.props.clearSelectingDate : undefined\n        }, yearsList));\n    };\n    return Year;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nfunction generateYears(year, noOfYear, minDate, maxDate) {\n    var list = [];\n    for(var i = 0; i < 2 * noOfYear + 1; i++){\n        var newYear = year + noOfYear - i;\n        var isInRange = true;\n        if (minDate) {\n            isInRange = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(minDate) <= newYear;\n        }\n        if (maxDate && isInRange) {\n            isInRange = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(maxDate) >= newYear;\n        }\n        if (isInRange) {\n            list.push(newYear);\n        }\n    }\n    return list;\n}\nvar YearDropdownOptions = /** @class */ function(_super) {\n    __extends(YearDropdownOptions, _super);\n    function YearDropdownOptions(props) {\n        var _this = _super.call(this, props) || this;\n        _this.renderOptions = function() {\n            var selectedYear = _this.props.year;\n            var options = _this.state.yearsList.map(function(year) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: selectedYear === year ? \"react-datepicker__year-option react-datepicker__year-option--selected_year\" : \"react-datepicker__year-option\",\n                    key: year,\n                    onClick: _this.onChange.bind(_this, year),\n                    \"aria-selected\": selectedYear === year ? \"true\" : undefined\n                }, selectedYear === year ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                    className: \"react-datepicker__year-option--selected\"\n                }, \"✓\") : \"\", year);\n            });\n            var minYear = _this.props.minDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.props.minDate) : null;\n            var maxYear = _this.props.maxDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.props.maxDate) : null;\n            if (!maxYear || !_this.state.yearsList.find(function(year) {\n                return year === maxYear;\n            })) {\n                options.unshift(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: \"react-datepicker__year-option\",\n                    key: \"upcoming\",\n                    onClick: _this.incrementYears\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"a\", {\n                    className: \"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming\"\n                })));\n            }\n            if (!minYear || !_this.state.yearsList.find(function(year) {\n                return year === minYear;\n            })) {\n                options.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: \"react-datepicker__year-option\",\n                    key: \"previous\",\n                    onClick: _this.decrementYears\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"a\", {\n                    className: \"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous\"\n                })));\n            }\n            return options;\n        };\n        _this.onChange = function(year) {\n            _this.props.onChange(year);\n        };\n        _this.handleClickOutside = function() {\n            _this.props.onCancel();\n        };\n        _this.shiftYears = function(amount) {\n            var years = _this.state.yearsList.map(function(year) {\n                return year + amount;\n            });\n            _this.setState({\n                yearsList: years\n            });\n        };\n        _this.incrementYears = function() {\n            return _this.shiftYears(1);\n        };\n        _this.decrementYears = function() {\n            return _this.shiftYears(-1);\n        };\n        var yearDropdownItemNumber = props.yearDropdownItemNumber, scrollableYearDropdown = props.scrollableYearDropdown;\n        var noOfYear = yearDropdownItemNumber || (scrollableYearDropdown ? 10 : 5);\n        _this.state = {\n            yearsList: generateYears(_this.props.year, noOfYear, _this.props.minDate, _this.props.maxDate)\n        };\n        _this.dropdownRef = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        return _this;\n    }\n    YearDropdownOptions.prototype.componentDidMount = function() {\n        var dropdownCurrent = this.dropdownRef.current;\n        if (dropdownCurrent) {\n            // Get array from HTMLCollection\n            var dropdownCurrentChildren = dropdownCurrent.children ? Array.from(dropdownCurrent.children) : null;\n            var selectedYearOptionEl = dropdownCurrentChildren ? dropdownCurrentChildren.find(function(childEl) {\n                return childEl.ariaSelected;\n            }) : null;\n            dropdownCurrent.scrollTop = selectedYearOptionEl && selectedYearOptionEl instanceof HTMLElement ? selectedYearOptionEl.offsetTop + (selectedYearOptionEl.clientHeight - dropdownCurrent.clientHeight) / 2 : (dropdownCurrent.scrollHeight - dropdownCurrent.clientHeight) / 2;\n        }\n    };\n    YearDropdownOptions.prototype.render = function() {\n        var dropdownClass = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)({\n            \"react-datepicker__year-dropdown\": true,\n            \"react-datepicker__year-dropdown--scrollable\": this.props.scrollableYearDropdown\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ClickOutsideWrapper, {\n            className: dropdownClass,\n            containerRef: this.dropdownRef,\n            onClickOutside: this.handleClickOutside\n        }, this.renderOptions());\n    };\n    return YearDropdownOptions;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar YearDropdown = /** @class */ function(_super) {\n    __extends(YearDropdown, _super);\n    function YearDropdown() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dropdownVisible: false\n        };\n        _this.renderSelectOptions = function() {\n            var minYear = _this.props.minDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.props.minDate) : 1900;\n            var maxYear = _this.props.maxDate ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.props.maxDate) : 2100;\n            var options = [];\n            for(var i = minYear; i <= maxYear; i++){\n                options.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"option\", {\n                    key: i,\n                    value: i\n                }, i));\n            }\n            return options;\n        };\n        _this.onSelectChange = function(event) {\n            _this.onChange(parseInt(event.target.value));\n        };\n        _this.renderSelectMode = function() {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"select\", {\n                value: _this.props.year,\n                className: \"react-datepicker__year-select\",\n                onChange: _this.onSelectChange\n            }, _this.renderSelectOptions());\n        };\n        _this.renderReadView = function(visible) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                key: \"read\",\n                style: {\n                    visibility: visible ? \"visible\" : \"hidden\"\n                },\n                className: \"react-datepicker__year-read-view\",\n                onClick: function(event) {\n                    return _this.toggleDropdown(event);\n                }\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__year-read-view--down-arrow\"\n            }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: \"react-datepicker__year-read-view--selected-year\"\n            }, _this.props.year));\n        };\n        _this.renderDropdown = function() {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(YearDropdownOptions, _assign({\n                key: \"dropdown\"\n            }, _this.props, {\n                onChange: _this.onChange,\n                onCancel: _this.toggleDropdown\n            }));\n        };\n        _this.renderScrollMode = function() {\n            var dropdownVisible = _this.state.dropdownVisible;\n            var result = [\n                _this.renderReadView(!dropdownVisible)\n            ];\n            if (dropdownVisible) {\n                result.unshift(_this.renderDropdown());\n            }\n            return result;\n        };\n        _this.onChange = function(year) {\n            _this.toggleDropdown();\n            if (year === _this.props.year) return;\n            _this.props.onChange(year);\n        };\n        _this.toggleDropdown = function(event) {\n            _this.setState({\n                dropdownVisible: !_this.state.dropdownVisible\n            }, function() {\n                if (_this.props.adjustDateOnChange) {\n                    _this.handleYearChange(_this.props.date, event);\n                }\n            });\n        };\n        _this.handleYearChange = function(date, event) {\n            var _a;\n            (_a = _this.onSelect) === null || _a === void 0 ? void 0 : _a.call(_this, date, event);\n            _this.setOpen();\n        };\n        _this.onSelect = function(date, event) {\n            var _a, _b;\n            (_b = (_a = _this.props).onSelect) === null || _b === void 0 ? void 0 : _b.call(_a, date, event);\n        };\n        _this.setOpen = function() {\n            var _a, _b;\n            (_b = (_a = _this.props).setOpen) === null || _b === void 0 ? void 0 : _b.call(_a, true);\n        };\n        return _this;\n    }\n    YearDropdown.prototype.render = function() {\n        var renderedDropdown;\n        switch(this.props.dropdownMode){\n            case \"scroll\":\n                renderedDropdown = this.renderScrollMode();\n                break;\n            case \"select\":\n                renderedDropdown = this.renderSelectMode();\n                break;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--\".concat(this.props.dropdownMode)\n        }, renderedDropdown);\n    };\n    return YearDropdown;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar DROPDOWN_FOCUS_CLASSNAMES = [\n    \"react-datepicker__year-select\",\n    \"react-datepicker__month-select\",\n    \"react-datepicker__month-year-select\"\n];\nvar isDropdownSelect = function(element) {\n    var classNames = (element.className || \"\").split(/\\s+/);\n    return DROPDOWN_FOCUS_CLASSNAMES.some(function(testClassname) {\n        return classNames.indexOf(testClassname) >= 0;\n    });\n};\nvar Calendar = /** @class */ function(_super) {\n    __extends(Calendar, _super);\n    function Calendar(props) {\n        var _this = _super.call(this, props) || this;\n        _this.monthContainer = undefined;\n        _this.handleClickOutside = function(event) {\n            _this.props.onClickOutside(event);\n        };\n        _this.setClickOutsideRef = function() {\n            return _this.containerRef.current;\n        };\n        _this.handleDropdownFocus = function(event) {\n            var _a, _b;\n            if (isDropdownSelect(event.target)) {\n                (_b = (_a = _this.props).onDropdownFocus) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            }\n        };\n        _this.getDateInView = function() {\n            var _a = _this.props, preSelection = _a.preSelection, selected = _a.selected, openToDate = _a.openToDate;\n            var minDate = getEffectiveMinDate(_this.props);\n            var maxDate = getEffectiveMaxDate(_this.props);\n            var current = newDate();\n            var initialDate = openToDate || selected || preSelection;\n            if (initialDate) {\n                return initialDate;\n            } else {\n                if (minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(current, minDate)) {\n                    return minDate;\n                } else if (maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(current, maxDate)) {\n                    return maxDate;\n                }\n            }\n            return current;\n        };\n        _this.increaseMonth = function() {\n            _this.setState(function(_a) {\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(date, 1)\n                };\n            }, function() {\n                return _this.handleMonthChange(_this.state.date);\n            });\n        };\n        _this.decreaseMonth = function() {\n            _this.setState(function(_a) {\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(date, 1)\n                };\n            }, function() {\n                return _this.handleMonthChange(_this.state.date);\n            });\n        };\n        _this.handleDayClick = function(day, event, monthSelectedIn) {\n            _this.props.onSelect(day, event, monthSelectedIn);\n            _this.props.setPreSelection && _this.props.setPreSelection(day);\n        };\n        _this.handleDayMouseEnter = function(day) {\n            _this.setState({\n                selectingDate: day\n            });\n            _this.props.onDayMouseEnter && _this.props.onDayMouseEnter(day);\n        };\n        _this.handleMonthMouseLeave = function() {\n            _this.setState({\n                selectingDate: undefined\n            });\n            _this.props.onMonthMouseLeave && _this.props.onMonthMouseLeave();\n        };\n        _this.handleYearMouseEnter = function(event, year) {\n            _this.setState({\n                selectingDate: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(newDate(), year)\n            });\n            !!_this.props.onYearMouseEnter && _this.props.onYearMouseEnter(event, year);\n        };\n        _this.handleYearMouseLeave = function(event, year) {\n            !!_this.props.onYearMouseLeave && _this.props.onYearMouseLeave(event, year);\n        };\n        _this.handleYearChange = function(date) {\n            var _a, _b, _c, _d;\n            (_b = (_a = _this.props).onYearChange) === null || _b === void 0 ? void 0 : _b.call(_a, date);\n            _this.setState({\n                isRenderAriaLiveMessage: true\n            });\n            if (_this.props.adjustDateOnChange) {\n                _this.props.onSelect(date);\n                (_d = (_c = _this.props).setOpen) === null || _d === void 0 ? void 0 : _d.call(_c, true);\n            }\n            _this.props.setPreSelection && _this.props.setPreSelection(date);\n        };\n        _this.getEnabledPreSelectionDateForMonth = function(date) {\n            if (!isDayDisabled(date, _this.props)) {\n                return date;\n            }\n            var startOfMonth = getStartOfMonth(date);\n            var endOfMonth = getEndOfMonth(date);\n            var totalDays = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_59__.differenceInDays)(endOfMonth, startOfMonth);\n            var preSelectedDate = null;\n            for(var dayIdx = 0; dayIdx <= totalDays; dayIdx++){\n                var processingDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(startOfMonth, dayIdx);\n                if (!isDayDisabled(processingDate, _this.props)) {\n                    preSelectedDate = processingDate;\n                    break;\n                }\n            }\n            return preSelectedDate;\n        };\n        _this.handleMonthChange = function(date) {\n            var _a, _b, _c;\n            var enabledPreSelectionDate = (_a = _this.getEnabledPreSelectionDateForMonth(date)) !== null && _a !== void 0 ? _a : date;\n            _this.handleCustomMonthChange(enabledPreSelectionDate);\n            if (_this.props.adjustDateOnChange) {\n                _this.props.onSelect(enabledPreSelectionDate);\n                (_c = (_b = _this.props).setOpen) === null || _c === void 0 ? void 0 : _c.call(_b, true);\n            }\n            _this.props.setPreSelection && _this.props.setPreSelection(enabledPreSelectionDate);\n        };\n        _this.handleCustomMonthChange = function(date) {\n            var _a, _b;\n            (_b = (_a = _this.props).onMonthChange) === null || _b === void 0 ? void 0 : _b.call(_a, date);\n            _this.setState({\n                isRenderAriaLiveMessage: true\n            });\n        };\n        _this.handleMonthYearChange = function(date) {\n            _this.handleYearChange(date);\n            _this.handleMonthChange(date);\n        };\n        _this.changeYear = function(year) {\n            _this.setState(function(_a) {\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)(date, Number(year))\n                };\n            }, function() {\n                return _this.handleYearChange(_this.state.date);\n            });\n        };\n        _this.changeMonth = function(month) {\n            _this.setState(function(_a) {\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(date, Number(month))\n                };\n            }, function() {\n                return _this.handleMonthChange(_this.state.date);\n            });\n        };\n        _this.changeMonthYear = function(monthYear) {\n            _this.setState(function(_a) {\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_58__.setYear)((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_27__.setMonth)(date, (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(monthYear)), (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(monthYear))\n                };\n            }, function() {\n                return _this.handleMonthYearChange(_this.state.date);\n            });\n        };\n        _this.header = function(date) {\n            if (date === void 0) {\n                date = _this.state.date;\n            }\n            var startOfWeek = getStartOfWeek(date, _this.props.locale, _this.props.calendarStartDay);\n            var dayNames = [];\n            if (_this.props.showWeekNumbers) {\n                dayNames.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    key: \"W\",\n                    className: \"react-datepicker__day-name\"\n                }, _this.props.weekLabel || \"#\"));\n            }\n            return dayNames.concat([\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6\n            ].map(function(offset) {\n                var day = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(startOfWeek, offset);\n                var weekDayName = _this.formatWeekday(day, _this.props.locale);\n                var weekDayClassName = _this.props.weekDayClassName ? _this.props.weekDayClassName(day) : undefined;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    key: offset,\n                    \"aria-label\": formatDate(day, \"EEEE\", _this.props.locale),\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__day-name\", weekDayClassName)\n                }, weekDayName);\n            }));\n        };\n        _this.formatWeekday = function(day, locale) {\n            if (_this.props.formatWeekDay) {\n                return getFormattedWeekdayInLocale(day, _this.props.formatWeekDay, locale);\n            }\n            return _this.props.useWeekdaysShort ? getWeekdayShortInLocale(day, locale) : getWeekdayMinInLocale(day, locale);\n        };\n        _this.decreaseYear = function() {\n            _this.setState(function(_a) {\n                var _b;\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(date, _this.props.showYearPicker ? (_b = _this.props.yearItemNumber) !== null && _b !== void 0 ? _b : Calendar.defaultProps.yearItemNumber : 1)\n                };\n            }, function() {\n                return _this.handleYearChange(_this.state.date);\n            });\n        };\n        _this.clearSelectingDate = function() {\n            _this.setState({\n                selectingDate: undefined\n            });\n        };\n        _this.renderPreviousButton = function() {\n            var _a, _b, _c;\n            if (_this.props.renderCustomHeader) {\n                return;\n            }\n            var monthsShown = (_a = _this.props.monthsShown) !== null && _a !== void 0 ? _a : Calendar.defaultProps.monthsShown;\n            var monthsToSubtract = _this.props.showPreviousMonths ? monthsShown - 1 : 0;\n            var monthSelectedIn = (_b = _this.props.monthSelectedIn) !== null && _b !== void 0 ? _b : monthsToSubtract;\n            var fromMonthDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(_this.state.date, monthSelectedIn);\n            var allPrevDaysDisabled;\n            switch(true){\n                case _this.props.showMonthYearPicker:\n                    allPrevDaysDisabled = yearDisabledBefore(_this.state.date, _this.props);\n                    break;\n                case _this.props.showYearPicker:\n                    allPrevDaysDisabled = yearsDisabledBefore(_this.state.date, _this.props);\n                    break;\n                case _this.props.showQuarterYearPicker:\n                    allPrevDaysDisabled = quarterDisabledBefore(_this.state.date, _this.props);\n                    break;\n                default:\n                    allPrevDaysDisabled = monthDisabledBefore(fromMonthDate, _this.props);\n                    break;\n            }\n            if (!((_c = _this.props.forceShowMonthNavigation) !== null && _c !== void 0 ? _c : Calendar.defaultProps.forceShowMonthNavigation) && !_this.props.showDisabledMonthNavigation && allPrevDaysDisabled || _this.props.showTimeSelectOnly) {\n                return;\n            }\n            var iconClasses = [\n                \"react-datepicker__navigation-icon\",\n                \"react-datepicker__navigation-icon--previous\"\n            ];\n            var classes = [\n                \"react-datepicker__navigation\",\n                \"react-datepicker__navigation--previous\"\n            ];\n            var clickHandler = _this.decreaseMonth;\n            if (_this.props.showMonthYearPicker || _this.props.showQuarterYearPicker || _this.props.showYearPicker) {\n                clickHandler = _this.decreaseYear;\n            }\n            if (allPrevDaysDisabled && _this.props.showDisabledMonthNavigation) {\n                classes.push(\"react-datepicker__navigation--previous--disabled\");\n                clickHandler = undefined;\n            }\n            var isForYear = _this.props.showMonthYearPicker || _this.props.showQuarterYearPicker || _this.props.showYearPicker;\n            var _d = _this.props, _e = _d.previousMonthButtonLabel, previousMonthButtonLabel = _e === void 0 ? Calendar.defaultProps.previousMonthButtonLabel : _e, _f = _d.previousYearButtonLabel, previousYearButtonLabel = _f === void 0 ? Calendar.defaultProps.previousYearButtonLabel : _f;\n            var _g = _this.props, _h = _g.previousMonthAriaLabel, previousMonthAriaLabel = _h === void 0 ? typeof previousMonthButtonLabel === \"string\" ? previousMonthButtonLabel : \"Previous Month\" : _h, _j = _g.previousYearAriaLabel, previousYearAriaLabel = _j === void 0 ? typeof previousYearButtonLabel === \"string\" ? previousYearButtonLabel : \"Previous Year\" : _j;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n                type: \"button\",\n                className: classes.join(\" \"),\n                onClick: clickHandler,\n                onKeyDown: _this.props.handleOnKeyDown,\n                \"aria-label\": isForYear ? previousYearAriaLabel : previousMonthAriaLabel\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: iconClasses.join(\" \")\n            }, isForYear ? previousYearButtonLabel : previousMonthButtonLabel));\n        };\n        _this.increaseYear = function() {\n            _this.setState(function(_a) {\n                var _b;\n                var date = _a.date;\n                return {\n                    date: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(date, _this.props.showYearPicker ? (_b = _this.props.yearItemNumber) !== null && _b !== void 0 ? _b : Calendar.defaultProps.yearItemNumber : 1)\n                };\n            }, function() {\n                return _this.handleYearChange(_this.state.date);\n            });\n        };\n        _this.renderNextButton = function() {\n            var _a;\n            if (_this.props.renderCustomHeader) {\n                return;\n            }\n            var allNextDaysDisabled;\n            switch(true){\n                case _this.props.showMonthYearPicker:\n                    allNextDaysDisabled = yearDisabledAfter(_this.state.date, _this.props);\n                    break;\n                case _this.props.showYearPicker:\n                    allNextDaysDisabled = yearsDisabledAfter(_this.state.date, _this.props);\n                    break;\n                case _this.props.showQuarterYearPicker:\n                    allNextDaysDisabled = quarterDisabledAfter(_this.state.date, _this.props);\n                    break;\n                default:\n                    allNextDaysDisabled = monthDisabledAfter(_this.state.date, _this.props);\n                    break;\n            }\n            if (!((_a = _this.props.forceShowMonthNavigation) !== null && _a !== void 0 ? _a : Calendar.defaultProps.forceShowMonthNavigation) && !_this.props.showDisabledMonthNavigation && allNextDaysDisabled || _this.props.showTimeSelectOnly) {\n                return;\n            }\n            var classes = [\n                \"react-datepicker__navigation\",\n                \"react-datepicker__navigation--next\"\n            ];\n            var iconClasses = [\n                \"react-datepicker__navigation-icon\",\n                \"react-datepicker__navigation-icon--next\"\n            ];\n            if (_this.props.showTimeSelect) {\n                classes.push(\"react-datepicker__navigation--next--with-time\");\n            }\n            if (_this.props.todayButton) {\n                classes.push(\"react-datepicker__navigation--next--with-today-button\");\n            }\n            var clickHandler = _this.increaseMonth;\n            if (_this.props.showMonthYearPicker || _this.props.showQuarterYearPicker || _this.props.showYearPicker) {\n                clickHandler = _this.increaseYear;\n            }\n            if (allNextDaysDisabled && _this.props.showDisabledMonthNavigation) {\n                classes.push(\"react-datepicker__navigation--next--disabled\");\n                clickHandler = undefined;\n            }\n            var isForYear = _this.props.showMonthYearPicker || _this.props.showQuarterYearPicker || _this.props.showYearPicker;\n            var _b = _this.props, _c = _b.nextMonthButtonLabel, nextMonthButtonLabel = _c === void 0 ? Calendar.defaultProps.nextMonthButtonLabel : _c, _d = _b.nextYearButtonLabel, nextYearButtonLabel = _d === void 0 ? Calendar.defaultProps.nextYearButtonLabel : _d;\n            var _e = _this.props, _f = _e.nextMonthAriaLabel, nextMonthAriaLabel = _f === void 0 ? typeof nextMonthButtonLabel === \"string\" ? nextMonthButtonLabel : \"Next Month\" : _f, _g = _e.nextYearAriaLabel, nextYearAriaLabel = _g === void 0 ? typeof nextYearButtonLabel === \"string\" ? nextYearButtonLabel : \"Next Year\" : _g;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n                type: \"button\",\n                className: classes.join(\" \"),\n                onClick: clickHandler,\n                onKeyDown: _this.props.handleOnKeyDown,\n                \"aria-label\": isForYear ? nextYearAriaLabel : nextMonthAriaLabel\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                className: iconClasses.join(\" \")\n            }, isForYear ? nextYearButtonLabel : nextMonthButtonLabel));\n        };\n        _this.renderCurrentMonth = function(date) {\n            if (date === void 0) {\n                date = _this.state.date;\n            }\n            var classes = [\n                \"react-datepicker__current-month\"\n            ];\n            if (_this.props.showYearDropdown) {\n                classes.push(\"react-datepicker__current-month--hasYearDropdown\");\n            }\n            if (_this.props.showMonthDropdown) {\n                classes.push(\"react-datepicker__current-month--hasMonthDropdown\");\n            }\n            if (_this.props.showMonthYearDropdown) {\n                classes.push(\"react-datepicker__current-month--hasMonthYearDropdown\");\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", {\n                className: classes.join(\" \")\n            }, formatDate(date, _this.props.dateFormat, _this.props.locale));\n        };\n        _this.renderYearDropdown = function(overrideHide) {\n            if (overrideHide === void 0) {\n                overrideHide = false;\n            }\n            if (!_this.props.showYearDropdown || overrideHide) {\n                return;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(YearDropdown, _assign({}, Calendar.defaultProps, _this.props, {\n                date: _this.state.date,\n                onChange: _this.changeYear,\n                year: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.state.date)\n            }));\n        };\n        _this.renderMonthDropdown = function(overrideHide) {\n            if (overrideHide === void 0) {\n                overrideHide = false;\n            }\n            if (!_this.props.showMonthDropdown || overrideHide) {\n                return;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(MonthDropdown, _assign({}, Calendar.defaultProps, _this.props, {\n                month: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.state.date),\n                onChange: _this.changeMonth\n            }));\n        };\n        _this.renderMonthYearDropdown = function(overrideHide) {\n            if (overrideHide === void 0) {\n                overrideHide = false;\n            }\n            if (!_this.props.showMonthYearDropdown || overrideHide) {\n                return;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(MonthYearDropdown, _assign({}, Calendar.defaultProps, _this.props, {\n                date: _this.state.date,\n                onChange: _this.changeMonthYear\n            }));\n        };\n        _this.handleTodayButtonClick = function(event) {\n            _this.props.onSelect(getStartOfToday(), event);\n            _this.props.setPreSelection && _this.props.setPreSelection(getStartOfToday());\n        };\n        _this.renderTodayButton = function() {\n            if (!_this.props.todayButton || _this.props.showTimeSelectOnly) {\n                return;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__today-button\",\n                onClick: _this.handleTodayButtonClick\n            }, _this.props.todayButton);\n        };\n        _this.renderDefaultHeader = function(_a) {\n            var monthDate = _a.monthDate, i = _a.i;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__header \".concat(_this.props.showTimeSelect ? \"react-datepicker__header--has-time-select\" : \"\")\n            }, _this.renderCurrentMonth(monthDate), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__header__dropdown react-datepicker__header__dropdown--\".concat(_this.props.dropdownMode),\n                onFocus: _this.handleDropdownFocus\n            }, _this.renderMonthDropdown(i !== 0), _this.renderMonthYearDropdown(i !== 0), _this.renderYearDropdown(i !== 0)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__day-names\"\n            }, _this.header(monthDate)));\n        };\n        _this.renderCustomHeader = function(headerArgs) {\n            var _a, _b;\n            var monthDate = headerArgs.monthDate, i = headerArgs.i;\n            if (_this.props.showTimeSelect && !_this.state.monthContainer || _this.props.showTimeSelectOnly) {\n                return null;\n            }\n            var prevMonthButtonDisabled = monthDisabledBefore(_this.state.date, _this.props);\n            var nextMonthButtonDisabled = monthDisabledAfter(_this.state.date, _this.props);\n            var prevYearButtonDisabled = yearDisabledBefore(_this.state.date, _this.props);\n            var nextYearButtonDisabled = yearDisabledAfter(_this.state.date, _this.props);\n            var showDayNames = !_this.props.showMonthYearPicker && !_this.props.showQuarterYearPicker && !_this.props.showYearPicker;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__header react-datepicker__header--custom\",\n                onFocus: _this.props.onDropdownFocus\n            }, (_b = (_a = _this.props).renderCustomHeader) === null || _b === void 0 ? void 0 : _b.call(_a, _assign(_assign({}, _this.state), {\n                customHeaderCount: i,\n                monthDate: monthDate,\n                changeMonth: _this.changeMonth,\n                changeYear: _this.changeYear,\n                decreaseMonth: _this.decreaseMonth,\n                increaseMonth: _this.increaseMonth,\n                decreaseYear: _this.decreaseYear,\n                increaseYear: _this.increaseYear,\n                prevMonthButtonDisabled: prevMonthButtonDisabled,\n                nextMonthButtonDisabled: nextMonthButtonDisabled,\n                prevYearButtonDisabled: prevYearButtonDisabled,\n                nextYearButtonDisabled: nextYearButtonDisabled\n            })), showDayNames && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__day-names\"\n            }, _this.header(monthDate)));\n        };\n        _this.renderYearHeader = function(_a) {\n            var monthDate = _a.monthDate;\n            var _b = _this.props, showYearPicker = _b.showYearPicker, _c = _b.yearItemNumber, yearItemNumber = _c === void 0 ? Calendar.defaultProps.yearItemNumber : _c;\n            var _d = getYearsPeriod(monthDate, yearItemNumber), startPeriod = _d.startPeriod, endPeriod = _d.endPeriod;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__header react-datepicker-year-header\"\n            }, showYearPicker ? \"\".concat(startPeriod, \" - \").concat(endPeriod) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(monthDate));\n        };\n        _this.renderHeader = function(_a) {\n            var monthDate = _a.monthDate, _b = _a.i, i = _b === void 0 ? 0 : _b;\n            var headerArgs = {\n                monthDate: monthDate,\n                i: i\n            };\n            switch(true){\n                case _this.props.renderCustomHeader !== undefined:\n                    return _this.renderCustomHeader(headerArgs);\n                case _this.props.showMonthYearPicker || _this.props.showQuarterYearPicker || _this.props.showYearPicker:\n                    return _this.renderYearHeader(headerArgs);\n                default:\n                    return _this.renderDefaultHeader(headerArgs);\n            }\n        };\n        _this.renderMonths = function() {\n            var _a, _b;\n            if (_this.props.showTimeSelectOnly || _this.props.showYearPicker) {\n                return;\n            }\n            var monthList = [];\n            var monthsShown = (_a = _this.props.monthsShown) !== null && _a !== void 0 ? _a : Calendar.defaultProps.monthsShown;\n            var monthsToSubtract = _this.props.showPreviousMonths ? monthsShown - 1 : 0;\n            var fromMonthDate = _this.props.showMonthYearPicker || _this.props.showQuarterYearPicker ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(_this.state.date, monthsToSubtract) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(_this.state.date, monthsToSubtract);\n            var monthSelectedIn = (_b = _this.props.monthSelectedIn) !== null && _b !== void 0 ? _b : monthsToSubtract;\n            for(var i = 0; i < monthsShown; ++i){\n                var monthsToAdd = i - monthSelectedIn + monthsToSubtract;\n                var monthDate = _this.props.showMonthYearPicker || _this.props.showQuarterYearPicker ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(fromMonthDate, monthsToAdd) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(fromMonthDate, monthsToAdd);\n                var monthKey = \"month-\".concat(i);\n                var monthShowsDuplicateDaysEnd = i < monthsShown - 1;\n                var monthShowsDuplicateDaysStart = i > 0;\n                monthList.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    key: monthKey,\n                    ref: function(div) {\n                        _this.monthContainer = div !== null && div !== void 0 ? div : undefined;\n                    },\n                    className: \"react-datepicker__month-container\"\n                }, _this.renderHeader({\n                    monthDate: monthDate,\n                    i: i\n                }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Month, _assign({}, Calendar.defaultProps, _this.props, {\n                    containerRef: _this.containerRef,\n                    ariaLabelPrefix: _this.props.monthAriaLabelPrefix,\n                    day: monthDate,\n                    onDayClick: _this.handleDayClick,\n                    handleOnKeyDown: _this.props.handleOnDayKeyDown,\n                    handleOnMonthKeyDown: _this.props.handleOnKeyDown,\n                    onDayMouseEnter: _this.handleDayMouseEnter,\n                    onMouseLeave: _this.handleMonthMouseLeave,\n                    orderInDisplay: i,\n                    selectingDate: _this.state.selectingDate,\n                    monthShowsDuplicateDaysEnd: monthShowsDuplicateDaysEnd,\n                    monthShowsDuplicateDaysStart: monthShowsDuplicateDaysStart\n                }))));\n            }\n            return monthList;\n        };\n        _this.renderYears = function() {\n            if (_this.props.showTimeSelectOnly) {\n                return;\n            }\n            if (_this.props.showYearPicker) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: \"react-datepicker__year--container\"\n                }, _this.renderHeader({\n                    monthDate: _this.state.date\n                }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Year, _assign({}, Calendar.defaultProps, _this.props, {\n                    selectingDate: _this.state.selectingDate,\n                    date: _this.state.date,\n                    onDayClick: _this.handleDayClick,\n                    clearSelectingDate: _this.clearSelectingDate,\n                    onYearMouseEnter: _this.handleYearMouseEnter,\n                    onYearMouseLeave: _this.handleYearMouseLeave\n                })));\n            }\n            return;\n        };\n        _this.renderTimeSection = function() {\n            if (_this.props.showTimeSelect && (_this.state.monthContainer || _this.props.showTimeSelectOnly)) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Time, _assign({}, Calendar.defaultProps, _this.props, {\n                    onChange: _this.props.onTimeChange,\n                    format: _this.props.timeFormat,\n                    intervals: _this.props.timeIntervals,\n                    monthRef: _this.state.monthContainer\n                }));\n            }\n            return;\n        };\n        _this.renderInputTimeSection = function() {\n            var time = _this.props.selected ? new Date(_this.props.selected) : undefined;\n            var timeValid = time && isValid(time) && Boolean(_this.props.selected);\n            var timeString = timeValid ? \"\".concat(addZero(time.getHours()), \":\").concat(addZero(time.getMinutes())) : \"\";\n            if (_this.props.showTimeInput) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(InputTime, _assign({}, Calendar.defaultProps, _this.props, {\n                    date: time,\n                    timeString: timeString,\n                    onChange: _this.props.onTimeChange\n                }));\n            }\n            return;\n        };\n        _this.renderAriaLiveRegion = function() {\n            var _a;\n            var _b = getYearsPeriod(_this.state.date, (_a = _this.props.yearItemNumber) !== null && _a !== void 0 ? _a : Calendar.defaultProps.yearItemNumber), startPeriod = _b.startPeriod, endPeriod = _b.endPeriod;\n            var ariaLiveMessage;\n            if (_this.props.showYearPicker) {\n                ariaLiveMessage = \"\".concat(startPeriod, \" - \").concat(endPeriod);\n            } else if (_this.props.showMonthYearPicker || _this.props.showQuarterYearPicker) {\n                ariaLiveMessage = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.state.date);\n            } else {\n                ariaLiveMessage = \"\".concat(getMonthInLocale((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(_this.state.date), _this.props.locale), \" \").concat((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(_this.state.date));\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                role: \"alert\",\n                \"aria-live\": \"polite\",\n                className: \"react-datepicker__aria-live\"\n            }, _this.state.isRenderAriaLiveMessage && ariaLiveMessage);\n        };\n        _this.renderChildren = function() {\n            if (_this.props.children) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                    className: \"react-datepicker__children-container\"\n                }, _this.props.children);\n            }\n            return;\n        };\n        _this.containerRef = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        _this.state = {\n            date: _this.getDateInView(),\n            selectingDate: undefined,\n            monthContainer: undefined,\n            isRenderAriaLiveMessage: false\n        };\n        return _this;\n    }\n    Object.defineProperty(Calendar, \"defaultProps\", {\n        get: function() {\n            return {\n                monthsShown: 1,\n                forceShowMonthNavigation: false,\n                timeCaption: \"Time\",\n                previousYearButtonLabel: \"Previous Year\",\n                nextYearButtonLabel: \"Next Year\",\n                previousMonthButtonLabel: \"Previous Month\",\n                nextMonthButtonLabel: \"Next Month\",\n                yearItemNumber: DEFAULT_YEAR_ITEM_NUMBER\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Calendar.prototype.componentDidMount = function() {\n        var _this = this;\n        // monthContainer height is needed in time component\n        // to determine the height for the ul in the time component\n        // setState here so height is given after final component\n        // layout is rendered\n        if (this.props.showTimeSelect) {\n            this.assignMonthContainer = function() {\n                _this.setState({\n                    monthContainer: _this.monthContainer\n                });\n            }();\n        }\n    };\n    Calendar.prototype.componentDidUpdate = function(prevProps) {\n        var _this = this;\n        if (this.props.preSelection && (!isSameDay(this.props.preSelection, prevProps.preSelection) || this.props.monthSelectedIn !== prevProps.monthSelectedIn)) {\n            var hasMonthChanged_1 = !isSameMonth(this.state.date, this.props.preSelection);\n            this.setState({\n                date: this.props.preSelection\n            }, function() {\n                return hasMonthChanged_1 && _this.handleCustomMonthChange(_this.state.date);\n            });\n        } else if (this.props.openToDate && !isSameDay(this.props.openToDate, prevProps.openToDate)) {\n            this.setState({\n                date: this.props.openToDate\n            });\n        }\n    };\n    Calendar.prototype.render = function() {\n        var Container = this.props.container || CalendarContainer;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ClickOutsideWrapper, {\n            onClickOutside: this.handleClickOutside,\n            style: {\n                display: \"contents\"\n            },\n            ignoreClass: this.props.outsideClickIgnoreClass\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            style: {\n                display: \"contents\"\n            },\n            ref: this.containerRef\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Container, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker\", this.props.className, {\n                \"react-datepicker--time-only\": this.props.showTimeSelectOnly\n            }),\n            showTime: this.props.showTimeSelect || this.props.showTimeInput,\n            showTimeSelectOnly: this.props.showTimeSelectOnly\n        }, this.renderAriaLiveRegion(), this.renderPreviousButton(), this.renderNextButton(), this.renderMonths(), this.renderYears(), this.renderTodayButton(), this.renderTimeSection(), this.renderInputTimeSection(), this.renderChildren())));\n    };\n    return Calendar;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n/**\n * `CalendarIcon` is a React component that renders an icon for a calendar.\n * The icon can be a string representing a CSS class, a React node, or a default SVG icon.\n *\n * @component\n * @prop  icon - The icon to be displayed. This can be a string representing a CSS class or a React node.\n * @prop  className - An optional string representing additional CSS classes to be applied to the icon.\n * @prop  onClick - An optional function to be called when the icon is clicked.\n *\n * @example\n * // To use a CSS class as the icon\n * <CalendarIcon icon=\"my-icon-class\" onClick={myClickHandler} />\n *\n * @example\n * // To use a React node as the icon\n * <CalendarIcon icon={<MyIconComponent />} onClick={myClickHandler} />\n *\n * @returns  The `CalendarIcon` component.\n */ var CalendarIcon = function(_a) {\n    var icon = _a.icon, _b = _a.className, className = _b === void 0 ? \"\" : _b, onClick = _a.onClick;\n    var defaultClass = \"react-datepicker__calendar-icon\";\n    if (typeof icon === \"string\") {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"i\", {\n            className: \"\".concat(defaultClass, \" \").concat(icon, \" \").concat(className),\n            \"aria-hidden\": \"true\",\n            onClick: onClick\n        });\n    }\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(icon)) {\n        // Because we are checking that typeof icon is string first, we can safely cast icon as React.ReactElement on types level and code level\n        var iconElement_1 = icon;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(iconElement_1, {\n            className: \"\".concat(iconElement_1.props.className || \"\", \" \").concat(defaultClass, \" \").concat(className),\n            onClick: function(event) {\n                if (typeof iconElement_1.props.onClick === \"function\") {\n                    iconElement_1.props.onClick(event);\n                }\n                if (typeof onClick === \"function\") {\n                    onClick(event);\n                }\n            }\n        });\n    }\n    // Default SVG Icon\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"svg\", {\n        className: \"\".concat(defaultClass, \" \").concat(className),\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 448 512\",\n        onClick: onClick\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"path\", {\n        d: \"M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z\"\n    }));\n};\n/**\n * `Portal` is a React component that allows you to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @class\n * @param {PortalProps} props - The properties that define the `Portal` component.\n * @property {React.ReactNode} props.children - The children to be rendered into the `Portal`.\n * @property {string} props.portalId - The id of the DOM node into which the `Portal` will render.\n * @property {ShadowRoot} [props.portalHost] - The DOM node to host the `Portal`.\n */ var Portal = /** @class */ function(_super) {\n    __extends(Portal, _super);\n    function Portal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.portalRoot = null;\n        _this.el = document.createElement(\"div\");\n        return _this;\n    }\n    Portal.prototype.componentDidMount = function() {\n        this.portalRoot = (this.props.portalHost || document).getElementById(this.props.portalId);\n        if (!this.portalRoot) {\n            this.portalRoot = document.createElement(\"div\");\n            this.portalRoot.setAttribute(\"id\", this.props.portalId);\n            (this.props.portalHost || document.body).appendChild(this.portalRoot);\n        }\n        this.portalRoot.appendChild(this.el);\n    };\n    Portal.prototype.componentWillUnmount = function() {\n        if (this.portalRoot) {\n            this.portalRoot.removeChild(this.el);\n        }\n    };\n    Portal.prototype.render = function() {\n        return /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_2___default().createPortal(this.props.children, this.el);\n    };\n    return Portal;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar focusableElementsSelector = \"[tabindex], a, button, input, select, textarea\";\nvar focusableFilter = function(node) {\n    if (node instanceof HTMLAnchorElement) {\n        return node.tabIndex !== -1;\n    }\n    return !node.disabled && node.tabIndex !== -1;\n};\n/**\n * `TabLoop` is a React component that manages tabbing behavior for its children.\n *\n * TabLoop prevents the user from tabbing outside of the popper\n * It creates a tabindex loop so that \"Tab\" on the last element will focus the first element\n * and \"Shift Tab\" on the first element will focus the last element\n *\n * @component\n * @example\n * <TabLoop enableTabLoop={true}>\n *   <ChildComponent />\n * </TabLoop>\n *\n * @param props - The properties that define the `TabLoop` component.\n * @param props.children - The child components.\n * @param props.enableTabLoop - Whether to enable the tab loop.\n *\n * @returns The `TabLoop` component.\n */ var TabLoop = /** @class */ function(_super) {\n    __extends(TabLoop, _super);\n    function TabLoop(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * `getTabChildren` is a method of the `TabLoop` class that retrieves all tabbable children of the component.\n         *\n         * This method uses the `tabbable` library to find all tabbable elements within the `TabLoop` component.\n         * It then filters out any elements that are not visible.\n         *\n         * @returns An array of all tabbable and visible children of the `TabLoop` component.\n         */ _this.getTabChildren = function() {\n            var _a;\n            return Array.prototype.slice.call((_a = _this.tabLoopRef.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(focusableElementsSelector), 1, -1).filter(focusableFilter);\n        };\n        _this.handleFocusStart = function() {\n            var tabChildren = _this.getTabChildren();\n            tabChildren && tabChildren.length > 1 && tabChildren[tabChildren.length - 1].focus();\n        };\n        _this.handleFocusEnd = function() {\n            var tabChildren = _this.getTabChildren();\n            tabChildren && tabChildren.length > 1 && tabChildren[0].focus();\n        };\n        _this.tabLoopRef = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n        return _this;\n    }\n    TabLoop.prototype.render = function() {\n        var _a;\n        if (!((_a = this.props.enableTabLoop) !== null && _a !== void 0 ? _a : TabLoop.defaultProps.enableTabLoop)) {\n            return this.props.children;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__tab-loop\",\n            ref: this.tabLoopRef\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__tab-loop__start\",\n            tabIndex: 0,\n            onFocus: this.handleFocusStart\n        }), this.props.children, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__tab-loop__end\",\n            tabIndex: 0,\n            onFocus: this.handleFocusEnd\n        }));\n    };\n    TabLoop.defaultProps = {\n        enableTabLoop: true\n    };\n    return TabLoop;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n/**\n * `withFloating` is a higher-order component that adds floating behavior to a component.\n *\n * @param Component - The component to enhance.\n *\n * @example\n * const FloatingComponent = withFloating(MyComponent);\n * <FloatingComponent popperModifiers={[]} popperProps={{}} hidePopper={true} />\n *\n * @param popperModifiers - The modifiers to use for the popper.\n * @param popperProps - The props to pass to the popper.\n * @param hidePopper - Whether to hide the popper.\n * @param popperPlacement - The placement of the popper.\n *\n * @returns A new component with floating behavior.\n */ function withFloating(Component) {\n    var WithFloating = function(props) {\n        var _a;\n        var hidePopper = typeof props.hidePopper === \"boolean\" ? props.hidePopper : true;\n        var arrowRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n        var floatingProps = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_60__.useFloating)(_assign({\n            open: !hidePopper,\n            whileElementsMounted: _floating_ui_react__WEBPACK_IMPORTED_MODULE_61__.autoUpdate,\n            placement: props.popperPlacement,\n            middleware: __spreadArray([\n                (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_62__.flip)({\n                    padding: 15\n                }),\n                (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_62__.offset)(10),\n                (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_62__.arrow)({\n                    element: arrowRef\n                })\n            ], (_a = props.popperModifiers) !== null && _a !== void 0 ? _a : [], true)\n        }, props.popperProps));\n        var componentProps = _assign(_assign({}, props), {\n            hidePopper: hidePopper,\n            popperProps: _assign(_assign({}, floatingProps), {\n                arrowRef: arrowRef\n            })\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Component, _assign({}, componentProps));\n    };\n    return WithFloating;\n}\n// Exported for testing purposes\nvar PopperComponent = /** @class */ function(_super) {\n    __extends(PopperComponent, _super);\n    function PopperComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PopperComponent, \"defaultProps\", {\n        get: function() {\n            return {\n                hidePopper: true\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PopperComponent.prototype.render = function() {\n        var _a = this.props, className = _a.className, wrapperClassName = _a.wrapperClassName, _b = _a.hidePopper, hidePopper = _b === void 0 ? PopperComponent.defaultProps.hidePopper : _b, popperComponent = _a.popperComponent, targetComponent = _a.targetComponent, enableTabLoop = _a.enableTabLoop, popperOnKeyDown = _a.popperOnKeyDown, portalId = _a.portalId, portalHost = _a.portalHost, popperProps = _a.popperProps, showArrow = _a.showArrow;\n        var popper = undefined;\n        if (!hidePopper) {\n            var classes = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker-popper\", className);\n            popper = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(TabLoop, {\n                enableTabLoop: enableTabLoop\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                ref: popperProps.refs.setFloating,\n                style: popperProps.floatingStyles,\n                className: classes,\n                \"data-placement\": popperProps.placement,\n                onKeyDown: popperOnKeyDown\n            }, popperComponent, showArrow && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_floating_ui_react__WEBPACK_IMPORTED_MODULE_60__.FloatingArrow, {\n                ref: popperProps.arrowRef,\n                context: popperProps.context,\n                fill: \"currentColor\",\n                strokeWidth: 1,\n                height: 8,\n                width: 16,\n                style: {\n                    transform: \"translateY(-1px)\"\n                },\n                className: \"react-datepicker__triangle\"\n            })));\n        }\n        if (this.props.popperContainer) {\n            popper = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(this.props.popperContainer, {}, popper);\n        }\n        if (portalId && !hidePopper) {\n            popper = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Portal, {\n                portalId: portalId,\n                portalHost: portalHost\n            }, popper);\n        }\n        var wrapperClasses = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker-wrapper\", wrapperClassName);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            ref: popperProps.refs.setReference,\n            className: wrapperClasses\n        }, targetComponent), popper);\n    };\n    return PopperComponent;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar PopperComponent$1 = withFloating(PopperComponent);\nvar outsideClickIgnoreClass = \"react-datepicker-ignore-onclickoutside\";\n// Compares dates year+month combinations\nfunction hasPreSelectionChanged(date1, date2) {\n    if (date1 && date2) {\n        return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(date1) !== (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(date2) || (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(date1) !== (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(date2);\n    }\n    return date1 !== date2;\n}\n/**\n * General datepicker component.\n */ var INPUT_ERR_1 = \"Date input not valid.\";\nvar DatePicker = /** @class */ function(_super) {\n    __extends(DatePicker, _super);\n    function DatePicker(props) {\n        var _this = _super.call(this, props) || this;\n        _this.calendar = null;\n        _this.input = null;\n        _this.getPreSelection = function() {\n            return _this.props.openToDate ? _this.props.openToDate : _this.props.selectsEnd && _this.props.startDate ? _this.props.startDate : _this.props.selectsStart && _this.props.endDate ? _this.props.endDate : newDate();\n        };\n        // Convert the date from string format to standard Date format\n        _this.modifyHolidays = function() {\n            var _a;\n            return (_a = _this.props.holidays) === null || _a === void 0 ? void 0 : _a.reduce(function(accumulator, holiday) {\n                var date = new Date(holiday.date);\n                if (!isValid(date)) {\n                    return accumulator;\n                }\n                return __spreadArray(__spreadArray([], accumulator, true), [\n                    _assign(_assign({}, holiday), {\n                        date: date\n                    })\n                ], false);\n            }, []);\n        };\n        _this.calcInitialState = function() {\n            var _a;\n            var defaultPreSelection = _this.getPreSelection();\n            var minDate = getEffectiveMinDate(_this.props);\n            var maxDate = getEffectiveMaxDate(_this.props);\n            var boundedPreSelection = minDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(defaultPreSelection, getStartOfDay(minDate)) ? minDate : maxDate && (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(defaultPreSelection, getEndOfDay(maxDate)) ? maxDate : defaultPreSelection;\n            return {\n                open: _this.props.startOpen || false,\n                preventFocus: false,\n                inputValue: null,\n                preSelection: (_a = _this.props.selectsRange ? _this.props.startDate : _this.props.selected) !== null && _a !== void 0 ? _a : boundedPreSelection,\n                // transforming highlighted days (perhaps nested array)\n                // to flat Map for faster access in day.jsx\n                highlightDates: getHighLightDaysMap(_this.props.highlightDates),\n                focused: false,\n                // used to focus day in inline version after month has changed, but not on\n                // initial render\n                shouldFocusDayInline: false,\n                isRenderAriaLiveMessage: false,\n                wasHidden: false\n            };\n        };\n        _this.resetHiddenStatus = function() {\n            _this.setState(_assign(_assign({}, _this.state), {\n                wasHidden: false\n            }));\n        };\n        _this.setHiddenStatus = function() {\n            _this.setState(_assign(_assign({}, _this.state), {\n                wasHidden: true\n            }));\n        };\n        _this.setHiddenStateOnVisibilityHidden = function() {\n            if (document.visibilityState !== \"hidden\") {\n                return;\n            }\n            _this.setHiddenStatus();\n        };\n        _this.clearPreventFocusTimeout = function() {\n            if (_this.preventFocusTimeout) {\n                clearTimeout(_this.preventFocusTimeout);\n            }\n        };\n        _this.setFocus = function() {\n            var _a, _b;\n            (_b = (_a = _this.input) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                preventScroll: true\n            });\n        };\n        _this.setBlur = function() {\n            var _a, _b;\n            (_b = (_a = _this.input) === null || _a === void 0 ? void 0 : _a.blur) === null || _b === void 0 ? void 0 : _b.call(_a);\n            _this.cancelFocusInput();\n        };\n        _this.deferBlur = function() {\n            requestAnimationFrame(function() {\n                _this.setBlur();\n            });\n        };\n        _this.setOpen = function(open, skipSetBlur) {\n            if (skipSetBlur === void 0) {\n                skipSetBlur = false;\n            }\n            _this.setState({\n                open: open,\n                preSelection: open && _this.state.open ? _this.state.preSelection : _this.calcInitialState().preSelection,\n                lastPreSelectChange: PRESELECT_CHANGE_VIA_NAVIGATE\n            }, function() {\n                if (!open) {\n                    _this.setState(function(prev) {\n                        return {\n                            focused: skipSetBlur ? prev.focused : false\n                        };\n                    }, function() {\n                        !skipSetBlur && _this.deferBlur();\n                        _this.setState({\n                            inputValue: null\n                        });\n                    });\n                }\n            });\n        };\n        _this.inputOk = function() {\n            return (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(_this.state.preSelection);\n        };\n        _this.isCalendarOpen = function() {\n            return _this.props.open === undefined ? _this.state.open && !_this.props.disabled && !_this.props.readOnly : _this.props.open;\n        };\n        _this.handleFocus = function(event) {\n            var _a, _b;\n            var isAutoReFocus = _this.state.wasHidden;\n            var isOpenAllowed = isAutoReFocus ? _this.state.open : true;\n            if (isAutoReFocus) {\n                _this.resetHiddenStatus();\n            }\n            if (!_this.state.preventFocus) {\n                (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n                if (isOpenAllowed && !_this.props.preventOpenOnFocus && !_this.props.readOnly) {\n                    _this.setOpen(true);\n                }\n            }\n            _this.setState({\n                focused: true\n            });\n        };\n        _this.sendFocusBackToInput = function() {\n            // Clear previous timeout if it exists\n            if (_this.preventFocusTimeout) {\n                _this.clearPreventFocusTimeout();\n            }\n            // close the popper and refocus the input\n            // stop the input from auto opening onFocus\n            // setFocus to the input\n            _this.setState({\n                preventFocus: true\n            }, function() {\n                _this.preventFocusTimeout = setTimeout(function() {\n                    _this.setFocus();\n                    _this.setState({\n                        preventFocus: false\n                    });\n                });\n            });\n        };\n        _this.cancelFocusInput = function() {\n            clearTimeout(_this.inputFocusTimeout);\n            _this.inputFocusTimeout = undefined;\n        };\n        _this.deferFocusInput = function() {\n            _this.cancelFocusInput();\n            _this.inputFocusTimeout = setTimeout(function() {\n                return _this.setFocus();\n            }, 1);\n        };\n        _this.handleDropdownFocus = function() {\n            _this.cancelFocusInput();\n        };\n        _this.handleBlur = function(event) {\n            var _a, _b;\n            if (!_this.state.open || _this.props.withPortal || _this.props.showTimeInput) {\n                (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            }\n            if (_this.state.open && _this.props.open === false) {\n                _this.setOpen(false);\n            }\n            _this.setState({\n                focused: false\n            });\n        };\n        _this.handleCalendarClickOutside = function(event) {\n            var _a, _b;\n            if (!_this.props.inline) {\n                _this.setOpen(false);\n            }\n            (_b = (_a = _this.props).onClickOutside) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            if (_this.props.withPortal) {\n                event.preventDefault();\n            }\n        };\n        // handleChange is called when user types in the textbox\n        _this.handleChange = function() {\n            var _a, _b, _c, _d, _e;\n            var allArgs = [];\n            for(var _i = 0; _i < arguments.length; _i++){\n                allArgs[_i] = arguments[_i];\n            }\n            var event = allArgs[0];\n            if (_this.props.onChangeRaw) {\n                _this.props.onChangeRaw.apply(_this, allArgs);\n                if (!event || typeof event.isDefaultPrevented !== \"function\" || event.isDefaultPrevented()) {\n                    return;\n                }\n            }\n            _this.setState({\n                inputValue: (event === null || event === void 0 ? void 0 : event.target) instanceof HTMLInputElement ? event.target.value : null,\n                lastPreSelectChange: PRESELECT_CHANGE_VIA_INPUT\n            });\n            var _f = _this.props, selectsRange = _f.selectsRange, startDate = _f.startDate, endDate = _f.endDate;\n            var dateFormat = (_a = _this.props.dateFormat) !== null && _a !== void 0 ? _a : DatePicker.defaultProps.dateFormat;\n            var strictParsing = (_b = _this.props.strictParsing) !== null && _b !== void 0 ? _b : DatePicker.defaultProps.strictParsing;\n            var value = (event === null || event === void 0 ? void 0 : event.target) instanceof HTMLInputElement ? event.target.value : \"\";\n            if (selectsRange) {\n                var _g = value.split(dateFormat.includes(\"-\") ? DATE_RANGE_SEPARATOR : \"-\", 2).map(function(val) {\n                    return val.trim();\n                }), valueStart = _g[0], valueEnd = _g[1];\n                var startDateNew = parseDate(valueStart !== null && valueStart !== void 0 ? valueStart : \"\", dateFormat, _this.props.locale, strictParsing);\n                var endDateNew = parseDate(valueEnd !== null && valueEnd !== void 0 ? valueEnd : \"\", dateFormat, _this.props.locale, strictParsing);\n                var startChanged = (startDate === null || startDate === void 0 ? void 0 : startDate.getTime()) !== (startDateNew === null || startDateNew === void 0 ? void 0 : startDateNew.getTime());\n                var endChanged = (endDate === null || endDate === void 0 ? void 0 : endDate.getTime()) !== (endDateNew === null || endDateNew === void 0 ? void 0 : endDateNew.getTime());\n                if (!startChanged && !endChanged) {\n                    return;\n                }\n                if (startDateNew && isDayDisabled(startDateNew, _this.props)) {\n                    return;\n                }\n                if (endDateNew && isDayDisabled(endDateNew, _this.props)) {\n                    return;\n                }\n                (_d = (_c = _this.props).onChange) === null || _d === void 0 ? void 0 : _d.call(_c, [\n                    startDateNew,\n                    endDateNew\n                ], event);\n            } else {\n                // not selectsRange\n                var date = parseDate(value, dateFormat, _this.props.locale, strictParsing, (_e = _this.props.selected) !== null && _e !== void 0 ? _e : undefined);\n                // Update selection if either (1) date was successfully parsed, or (2) input field is empty\n                if (date || !value) {\n                    _this.setSelected(date, event, true);\n                }\n            }\n        };\n        _this.handleSelect = function(date, event, monthSelectedIn) {\n            if (_this.props.readOnly) return;\n            if (_this.props.shouldCloseOnSelect && !_this.props.showTimeSelect) {\n                // Preventing onFocus event to fix issue\n                // https://github.com/Hacker0x01/react-datepicker/issues/628\n                _this.sendFocusBackToInput();\n            }\n            if (_this.props.onChangeRaw) {\n                _this.props.onChangeRaw(event);\n            }\n            _this.setSelected(date, event, false, monthSelectedIn);\n            if (_this.props.showDateSelect) {\n                _this.setState({\n                    isRenderAriaLiveMessage: true\n                });\n            }\n            if (!_this.props.shouldCloseOnSelect || _this.props.showTimeSelect) {\n                _this.setPreSelection(date);\n            } else if (!_this.props.inline) {\n                if (!_this.props.selectsRange) {\n                    _this.setOpen(false);\n                }\n                var _a = _this.props, startDate = _a.startDate, endDate = _a.endDate;\n                if (startDate && !endDate && (_this.props.swapRange || !isDateBefore(date, startDate))) {\n                    _this.setOpen(false);\n                }\n            }\n        };\n        // setSelected is called either from handleChange (user typed date into textbox and it was parsed) or handleSelect (user selected date from calendar using mouse or keyboard)\n        _this.setSelected = function(date, event, keepInput, monthSelectedIn) {\n            var _a, _b;\n            var changedDate = date;\n            // Early return if selected year/month/day is disabled\n            if (_this.props.showYearPicker) {\n                if (changedDate !== null && isYearDisabled((0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(changedDate), _this.props)) {\n                    return;\n                }\n            } else if (_this.props.showMonthYearPicker) {\n                if (changedDate !== null && isMonthDisabled(changedDate, _this.props)) {\n                    return;\n                }\n            } else {\n                if (changedDate !== null && isDayDisabled(changedDate, _this.props)) {\n                    return;\n                }\n            }\n            var _c = _this.props, onChange = _c.onChange, selectsRange = _c.selectsRange, startDate = _c.startDate, endDate = _c.endDate, selectsMultiple = _c.selectsMultiple, selectedDates = _c.selectedDates, minTime = _c.minTime, swapRange = _c.swapRange;\n            if (!isEqual(_this.props.selected, changedDate) || _this.props.allowSameDay || selectsRange || selectsMultiple) {\n                if (changedDate !== null) {\n                    // Preserve previously selected time if only date is currently being changed\n                    if (_this.props.selected && (!keepInput || !_this.props.showTimeSelect && !_this.props.showTimeSelectOnly && !_this.props.showTimeInput)) {\n                        changedDate = setTime(changedDate, {\n                            hour: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(_this.props.selected),\n                            minute: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(_this.props.selected),\n                            second: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_36__.getSeconds)(_this.props.selected)\n                        });\n                    }\n                    // If minTime is present then set the time to minTime\n                    if (!keepInput && (_this.props.showTimeSelect || _this.props.showTimeSelectOnly)) {\n                        if (minTime) {\n                            changedDate = setTime(changedDate, {\n                                hour: minTime.getHours(),\n                                minute: minTime.getMinutes(),\n                                second: minTime.getSeconds()\n                            });\n                        }\n                    }\n                    if (!_this.props.inline) {\n                        _this.setState({\n                            preSelection: changedDate\n                        });\n                    }\n                    if (!_this.props.focusSelectedMonth) {\n                        _this.setState({\n                            monthSelectedIn: monthSelectedIn\n                        });\n                    }\n                }\n                if (selectsRange) {\n                    var noRanges = !startDate && !endDate;\n                    var hasStartRange = startDate && !endDate;\n                    var isRangeFilled = startDate && endDate;\n                    if (noRanges) {\n                        onChange === null || onChange === void 0 ? void 0 : onChange([\n                            changedDate,\n                            null\n                        ], event);\n                    } else if (hasStartRange) {\n                        if (changedDate === null) {\n                            onChange === null || onChange === void 0 ? void 0 : onChange([\n                                null,\n                                null\n                            ], event);\n                        } else if (isDateBefore(changedDate, startDate)) {\n                            if (swapRange) {\n                                onChange === null || onChange === void 0 ? void 0 : onChange([\n                                    changedDate,\n                                    startDate\n                                ], event);\n                            } else {\n                                onChange === null || onChange === void 0 ? void 0 : onChange([\n                                    changedDate,\n                                    null\n                                ], event);\n                            }\n                        } else {\n                            onChange === null || onChange === void 0 ? void 0 : onChange([\n                                startDate,\n                                changedDate\n                            ], event);\n                        }\n                    }\n                    if (isRangeFilled) {\n                        onChange === null || onChange === void 0 ? void 0 : onChange([\n                            changedDate,\n                            null\n                        ], event);\n                    }\n                } else if (selectsMultiple) {\n                    if (changedDate !== null) {\n                        if (!(selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.length)) {\n                            onChange === null || onChange === void 0 ? void 0 : onChange([\n                                changedDate\n                            ], event);\n                        } else {\n                            var isChangedDateAlreadySelected = selectedDates.some(function(selectedDate) {\n                                return isSameDay(selectedDate, changedDate);\n                            });\n                            if (isChangedDateAlreadySelected) {\n                                var nextDates = selectedDates.filter(function(selectedDate) {\n                                    return !isSameDay(selectedDate, changedDate);\n                                });\n                                onChange === null || onChange === void 0 ? void 0 : onChange(nextDates, event);\n                            } else {\n                                onChange === null || onChange === void 0 ? void 0 : onChange(__spreadArray(__spreadArray([], selectedDates, true), [\n                                    changedDate\n                                ], false), event);\n                            }\n                        }\n                    }\n                } else {\n                    onChange === null || onChange === void 0 ? void 0 : onChange(changedDate, event);\n                }\n            }\n            if (!keepInput) {\n                (_b = (_a = _this.props).onSelect) === null || _b === void 0 ? void 0 : _b.call(_a, changedDate, event);\n                _this.setState({\n                    inputValue: null\n                });\n            }\n        };\n        // When checking preSelection via min/maxDate, times need to be manipulated via getStartOfDay/getEndOfDay\n        _this.setPreSelection = function(date) {\n            if (_this.props.readOnly) return;\n            var hasMinDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(_this.props.minDate);\n            var hasMaxDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_48__.isDate)(_this.props.maxDate);\n            var isValidDateSelection = true;\n            if (date) {\n                var dateStartOfDay = getStartOfDay(date);\n                if (hasMinDate && hasMaxDate) {\n                    // isDayInRange uses getStartOfDay internally, so not necessary to manipulate times here\n                    isValidDateSelection = isDayInRange(date, _this.props.minDate, _this.props.maxDate);\n                } else if (hasMinDate) {\n                    var minDateStartOfDay = getStartOfDay(_this.props.minDate);\n                    isValidDateSelection = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_52__.isAfter)(date, minDateStartOfDay) || isEqual(dateStartOfDay, minDateStartOfDay);\n                } else if (hasMaxDate) {\n                    var maxDateEndOfDay = getEndOfDay(_this.props.maxDate);\n                    isValidDateSelection = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_7__.isBefore)(date, maxDateEndOfDay) || isEqual(dateStartOfDay, maxDateEndOfDay);\n                }\n            }\n            if (isValidDateSelection) {\n                _this.setState({\n                    preSelection: date\n                });\n            }\n        };\n        _this.toggleCalendar = function() {\n            _this.setOpen(!_this.state.open);\n        };\n        _this.handleTimeChange = function(time) {\n            var _a, _b;\n            if (_this.props.selectsRange || _this.props.selectsMultiple) {\n                return;\n            }\n            var selected = _this.props.selected ? _this.props.selected : _this.getPreSelection();\n            var changedDate = _this.props.selected ? time : setTime(selected, {\n                hour: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_34__.getHours)(time),\n                minute: (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_35__.getMinutes)(time)\n            });\n            _this.setState({\n                preSelection: changedDate\n            });\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, changedDate);\n            if (_this.props.shouldCloseOnSelect && !_this.props.showTimeInput) {\n                _this.sendFocusBackToInput();\n                _this.setOpen(false);\n            }\n            if (_this.props.showTimeInput) {\n                _this.setOpen(true);\n            }\n            if (_this.props.showTimeSelectOnly || _this.props.showTimeSelect) {\n                _this.setState({\n                    isRenderAriaLiveMessage: true\n                });\n            }\n            _this.setState({\n                inputValue: null\n            });\n        };\n        _this.onInputClick = function() {\n            var _a, _b;\n            if (!_this.props.disabled && !_this.props.readOnly) {\n                _this.setOpen(true);\n            }\n            (_b = (_a = _this.props).onInputClick) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n        _this.onInputKeyDown = function(event) {\n            var _a, _b, _c, _d, _e, _f;\n            (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            var eventKey = event.key;\n            if (!_this.state.open && !_this.props.inline && !_this.props.preventOpenOnFocus) {\n                if (eventKey === KeyType.ArrowDown || eventKey === KeyType.ArrowUp || eventKey === KeyType.Enter) {\n                    (_c = _this.onInputClick) === null || _c === void 0 ? void 0 : _c.call(_this);\n                }\n                return;\n            }\n            // if calendar is open, these keys will focus the selected item\n            if (_this.state.open) {\n                if (eventKey === KeyType.ArrowDown || eventKey === KeyType.ArrowUp) {\n                    event.preventDefault();\n                    var selectorString = _this.props.showTimeSelectOnly ? \".react-datepicker__time-list-item[tabindex='0']\" : _this.props.showWeekPicker && _this.props.showWeekNumbers ? '.react-datepicker__week-number[tabindex=\"0\"]' : _this.props.showFullMonthYearPicker || _this.props.showMonthYearPicker ? '.react-datepicker__month-text[tabindex=\"0\"]' : '.react-datepicker__day[tabindex=\"0\"]';\n                    var selectedItem = ((_d = _this.calendar) === null || _d === void 0 ? void 0 : _d.containerRef.current) instanceof Element && _this.calendar.containerRef.current.querySelector(selectorString);\n                    selectedItem instanceof HTMLElement && selectedItem.focus({\n                        preventScroll: true\n                    });\n                    return;\n                }\n                var copy = newDate(_this.state.preSelection);\n                if (eventKey === KeyType.Enter) {\n                    event.preventDefault();\n                    event.target.blur();\n                    if (_this.inputOk() && _this.state.lastPreSelectChange === PRESELECT_CHANGE_VIA_NAVIGATE) {\n                        _this.handleSelect(copy, event);\n                        !_this.props.shouldCloseOnSelect && _this.setPreSelection(copy);\n                    } else {\n                        _this.setOpen(false);\n                    }\n                } else if (eventKey === KeyType.Escape) {\n                    event.preventDefault();\n                    event.target.blur();\n                    _this.sendFocusBackToInput();\n                    _this.setOpen(false);\n                } else if (eventKey === KeyType.Tab) {\n                    _this.setOpen(false);\n                }\n                if (!_this.inputOk()) {\n                    (_f = (_e = _this.props).onInputError) === null || _f === void 0 ? void 0 : _f.call(_e, {\n                        code: 1,\n                        msg: INPUT_ERR_1\n                    });\n                }\n            }\n        };\n        _this.onPortalKeyDown = function(event) {\n            var eventKey = event.key;\n            if (eventKey === KeyType.Escape) {\n                event.preventDefault();\n                _this.setState({\n                    preventFocus: true\n                }, function() {\n                    _this.setOpen(false);\n                    setTimeout(function() {\n                        _this.setFocus();\n                        _this.setState({\n                            preventFocus: false\n                        });\n                    });\n                });\n            }\n        };\n        // keyDown events passed down to day.jsx\n        _this.onDayKeyDown = function(event) {\n            var _a, _b, _c, _d, _e, _f;\n            var _g = _this.props, minDate = _g.minDate, maxDate = _g.maxDate, disabledKeyboardNavigation = _g.disabledKeyboardNavigation, showWeekPicker = _g.showWeekPicker, shouldCloseOnSelect = _g.shouldCloseOnSelect, locale = _g.locale, calendarStartDay = _g.calendarStartDay, adjustDateOnChange = _g.adjustDateOnChange, inline = _g.inline;\n            (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            if (disabledKeyboardNavigation) return;\n            var eventKey = event.key;\n            var isShiftKeyActive = event.shiftKey;\n            var copy = newDate(_this.state.preSelection);\n            var calculateNewDate = function(eventKey, date) {\n                var newCalculatedDate = date;\n                switch(eventKey){\n                    case KeyType.ArrowRight:\n                        newCalculatedDate = showWeekPicker ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_56__.addWeeks)(date, 1) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_55__.addDays)(date, 1);\n                        break;\n                    case KeyType.ArrowLeft:\n                        newCalculatedDate = showWeekPicker ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_63__.subWeeks)(date, 1) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_64__.subDays)(date, 1);\n                        break;\n                    case KeyType.ArrowUp:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_63__.subWeeks)(date, 1);\n                        break;\n                    case KeyType.ArrowDown:\n                        newCalculatedDate = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_56__.addWeeks)(date, 1);\n                        break;\n                    case KeyType.PageUp:\n                        newCalculatedDate = isShiftKeyActive ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_43__.subYears)(date, 1) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(date, 1);\n                        break;\n                    case KeyType.PageDown:\n                        newCalculatedDate = isShiftKeyActive ? (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_45__.addYears)(date, 1) : (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_39__.addMonths)(date, 1);\n                        break;\n                    case KeyType.Home:\n                        newCalculatedDate = getStartOfWeek(date, locale, calendarStartDay);\n                        break;\n                    case KeyType.End:\n                        newCalculatedDate = getEndOfWeek(date);\n                        break;\n                }\n                return newCalculatedDate;\n            };\n            var getNewDate = function(eventKey, date) {\n                var MAX_ITERATIONS = 40;\n                var eventKeyCopy = eventKey;\n                var validDateFound = false;\n                var iterations = 0;\n                var newSelection = calculateNewDate(eventKey, date);\n                while(!validDateFound){\n                    if (iterations >= MAX_ITERATIONS) {\n                        newSelection = date;\n                        break;\n                    }\n                    // if minDate exists and the new selection is before the min date, get the nearest date that isn't disabled\n                    if (minDate && newSelection < minDate) {\n                        eventKeyCopy = KeyType.ArrowRight;\n                        newSelection = isDayDisabled(minDate, _this.props) ? calculateNewDate(eventKeyCopy, newSelection) : minDate;\n                    }\n                    // if maxDate exists and the new selection is after the max date, get the nearest date that isn't disabled\n                    if (maxDate && newSelection > maxDate) {\n                        eventKeyCopy = KeyType.ArrowLeft;\n                        newSelection = isDayDisabled(maxDate, _this.props) ? calculateNewDate(eventKeyCopy, newSelection) : maxDate;\n                    }\n                    if (isDayDisabled(newSelection, _this.props)) {\n                        // if PageUp and Home is pressed to a disabled date, it will try to find the next available date after\n                        if (eventKeyCopy === KeyType.PageUp || eventKeyCopy === KeyType.Home) {\n                            eventKeyCopy = KeyType.ArrowRight;\n                        }\n                        // if PageDown and End is pressed to a disabled date, it will try to find the next available date before\n                        if (eventKeyCopy === KeyType.PageDown || eventKeyCopy === KeyType.End) {\n                            eventKeyCopy = KeyType.ArrowLeft;\n                        }\n                        newSelection = calculateNewDate(eventKeyCopy, newSelection);\n                    } else {\n                        validDateFound = true;\n                    }\n                    iterations++;\n                }\n                return newSelection;\n            };\n            if (eventKey === KeyType.Enter) {\n                event.preventDefault();\n                _this.handleSelect(copy, event);\n                !shouldCloseOnSelect && _this.setPreSelection(copy);\n                return;\n            } else if (eventKey === KeyType.Escape) {\n                event.preventDefault();\n                _this.setOpen(false);\n                if (!_this.inputOk()) {\n                    (_d = (_c = _this.props).onInputError) === null || _d === void 0 ? void 0 : _d.call(_c, {\n                        code: 1,\n                        msg: INPUT_ERR_1\n                    });\n                }\n                return;\n            }\n            var newSelection = null;\n            switch(eventKey){\n                case KeyType.ArrowLeft:\n                case KeyType.ArrowRight:\n                case KeyType.ArrowUp:\n                case KeyType.ArrowDown:\n                case KeyType.PageUp:\n                case KeyType.PageDown:\n                case KeyType.Home:\n                case KeyType.End:\n                    newSelection = getNewDate(eventKey, copy);\n                    break;\n            }\n            if (!newSelection) {\n                (_f = (_e = _this.props).onInputError) === null || _f === void 0 ? void 0 : _f.call(_e, {\n                    code: 1,\n                    msg: INPUT_ERR_1\n                });\n                return;\n            }\n            event.preventDefault();\n            _this.setState({\n                lastPreSelectChange: PRESELECT_CHANGE_VIA_NAVIGATE\n            });\n            if (adjustDateOnChange) {\n                _this.setSelected(newSelection);\n            }\n            _this.setPreSelection(newSelection);\n            // need to figure out whether month has changed to focus day in inline version\n            if (inline) {\n                var prevMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(copy);\n                var newMonth = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_30__.getMonth)(newSelection);\n                var prevYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(copy);\n                var newYear = (0,_barrel_optimize_names_addDays_addHours_addMinutes_addMonths_addQuarters_addSeconds_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_differenceInCalendarQuarters_differenceInCalendarYears_differenceInDays_endOfDay_endOfMonth_endOfWeek_endOfYear_format_getDate_getDay_getHours_getISOWeek_getMinutes_getMonth_getQuarter_getSeconds_getTime_getYear_isAfter_isBefore_isDate_isEqual_isSameDay_isSameMonth_isSameQuarter_isSameYear_isValid_isWithinInterval_max_min_parse_parseISO_setHours_setMinutes_setMonth_setQuarter_setSeconds_setYear_startOfDay_startOfMonth_startOfQuarter_startOfWeek_startOfYear_subDays_subMonths_subQuarters_subWeeks_subYears_toDate_date_fns__WEBPACK_IMPORTED_MODULE_29__.getYear)(newSelection);\n                if (prevMonth !== newMonth || prevYear !== newYear) {\n                    // month has changed\n                    _this.setState({\n                        shouldFocusDayInline: true\n                    });\n                } else {\n                    // month hasn't changed\n                    _this.setState({\n                        shouldFocusDayInline: false\n                    });\n                }\n            }\n        };\n        // handle generic key down events in the popper that do not adjust or select dates\n        // ex: while focusing prev and next month buttons\n        _this.onPopperKeyDown = function(event) {\n            var eventKey = event.key;\n            if (eventKey === KeyType.Escape) {\n                event.preventDefault();\n                _this.sendFocusBackToInput();\n                _this.setOpen(false);\n            }\n        };\n        _this.onClearClick = function(event) {\n            if (event) {\n                if (event.preventDefault) {\n                    event.preventDefault();\n                }\n            }\n            _this.sendFocusBackToInput();\n            var _a = _this.props, selectsRange = _a.selectsRange, onChange = _a.onChange;\n            if (selectsRange) {\n                onChange === null || onChange === void 0 ? void 0 : onChange([\n                    null,\n                    null\n                ], event);\n            } else {\n                onChange === null || onChange === void 0 ? void 0 : onChange(null, event);\n            }\n            _this.setState({\n                inputValue: null\n            });\n        };\n        _this.clear = function() {\n            _this.onClearClick();\n        };\n        _this.onScroll = function(event) {\n            if (typeof _this.props.closeOnScroll === \"boolean\" && _this.props.closeOnScroll) {\n                if (event.target === document || event.target === document.documentElement || event.target === document.body) {\n                    _this.setOpen(false);\n                }\n            } else if (typeof _this.props.closeOnScroll === \"function\") {\n                if (_this.props.closeOnScroll(event)) {\n                    _this.setOpen(false);\n                }\n            }\n        };\n        _this.renderCalendar = function() {\n            var _a, _b;\n            if (!_this.props.inline && !_this.isCalendarOpen()) {\n                return null;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Calendar, _assign({\n                showMonthYearDropdown: undefined,\n                ref: function(elem) {\n                    _this.calendar = elem;\n                }\n            }, _this.props, _this.state, {\n                setOpen: _this.setOpen,\n                dateFormat: (_a = _this.props.dateFormatCalendar) !== null && _a !== void 0 ? _a : DatePicker.defaultProps.dateFormatCalendar,\n                onSelect: _this.handleSelect,\n                onClickOutside: _this.handleCalendarClickOutside,\n                holidays: getHolidaysMap(_this.modifyHolidays()),\n                outsideClickIgnoreClass: outsideClickIgnoreClass,\n                onDropdownFocus: _this.handleDropdownFocus,\n                onTimeChange: _this.handleTimeChange,\n                className: _this.props.calendarClassName,\n                container: _this.props.calendarContainer,\n                handleOnKeyDown: _this.props.onKeyDown,\n                handleOnDayKeyDown: _this.onDayKeyDown,\n                setPreSelection: _this.setPreSelection,\n                dropdownMode: (_b = _this.props.dropdownMode) !== null && _b !== void 0 ? _b : DatePicker.defaultProps.dropdownMode\n            }), _this.props.children);\n        };\n        _this.renderAriaLiveRegion = function() {\n            var _a = _this.props, _b = _a.dateFormat, dateFormat = _b === void 0 ? DatePicker.defaultProps.dateFormat : _b, locale = _a.locale;\n            var isContainsTime = _this.props.showTimeInput || _this.props.showTimeSelect;\n            var longDateFormat = isContainsTime ? \"PPPPp\" : \"PPPP\";\n            var ariaLiveMessage;\n            if (_this.props.selectsRange) {\n                ariaLiveMessage = \"Selected start date: \".concat(safeDateFormat(_this.props.startDate, {\n                    dateFormat: longDateFormat,\n                    locale: locale\n                }), \". \").concat(_this.props.endDate ? \"End date: \" + safeDateFormat(_this.props.endDate, {\n                    dateFormat: longDateFormat,\n                    locale: locale\n                }) : \"\");\n            } else {\n                if (_this.props.showTimeSelectOnly) {\n                    ariaLiveMessage = \"Selected time: \".concat(safeDateFormat(_this.props.selected, {\n                        dateFormat: dateFormat,\n                        locale: locale\n                    }));\n                } else if (_this.props.showYearPicker) {\n                    ariaLiveMessage = \"Selected year: \".concat(safeDateFormat(_this.props.selected, {\n                        dateFormat: \"yyyy\",\n                        locale: locale\n                    }));\n                } else if (_this.props.showMonthYearPicker) {\n                    ariaLiveMessage = \"Selected month: \".concat(safeDateFormat(_this.props.selected, {\n                        dateFormat: \"MMMM yyyy\",\n                        locale: locale\n                    }));\n                } else if (_this.props.showQuarterYearPicker) {\n                    ariaLiveMessage = \"Selected quarter: \".concat(safeDateFormat(_this.props.selected, {\n                        dateFormat: \"yyyy, QQQ\",\n                        locale: locale\n                    }));\n                } else {\n                    ariaLiveMessage = \"Selected date: \".concat(safeDateFormat(_this.props.selected, {\n                        dateFormat: longDateFormat,\n                        locale: locale\n                    }));\n                }\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n                role: \"alert\",\n                \"aria-live\": \"polite\",\n                className: \"react-datepicker__aria-live\"\n            }, ariaLiveMessage);\n        };\n        _this.renderDateInput = function() {\n            var _a, _b;\n            var _c;\n            var className = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(_this.props.className, (_a = {}, _a[outsideClickIgnoreClass] = _this.state.open, _a));\n            var customInput = _this.props.customInput || /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"input\", {\n                type: \"text\"\n            });\n            var customInputRef = _this.props.customInputRef || \"ref\";\n            var _d = _this.props, _e = _d.dateFormat, dateFormat = _e === void 0 ? DatePicker.defaultProps.dateFormat : _e, locale = _d.locale;\n            var inputValue = typeof _this.props.value === \"string\" ? _this.props.value : typeof _this.state.inputValue === \"string\" ? _this.state.inputValue : _this.props.selectsRange ? safeDateRangeFormat(_this.props.startDate, _this.props.endDate, {\n                dateFormat: dateFormat,\n                locale: locale\n            }) : _this.props.selectsMultiple ? safeMultipleDatesFormat((_c = _this.props.selectedDates) !== null && _c !== void 0 ? _c : [], {\n                dateFormat: dateFormat,\n                locale: locale\n            }) : safeDateFormat(_this.props.selected, {\n                dateFormat: dateFormat,\n                locale: locale\n            });\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(customInput, (_b = {}, _b[customInputRef] = function(input) {\n                _this.input = input;\n            }, _b.value = inputValue, _b.onBlur = _this.handleBlur, _b.onChange = _this.handleChange, _b.onClick = _this.onInputClick, _b.onFocus = _this.handleFocus, _b.onKeyDown = _this.onInputKeyDown, _b.id = _this.props.id, _b.name = _this.props.name, _b.form = _this.props.form, _b.autoFocus = _this.props.autoFocus, _b.placeholder = _this.props.placeholderText, _b.disabled = _this.props.disabled, _b.autoComplete = _this.props.autoComplete, _b.className = (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(customInput.props.className, className), _b.title = _this.props.title, _b.readOnly = _this.props.readOnly, _b.required = _this.props.required, _b.tabIndex = _this.props.tabIndex, _b[\"aria-describedby\"] = _this.props.ariaDescribedBy, _b[\"aria-invalid\"] = _this.props.ariaInvalid, _b[\"aria-labelledby\"] = _this.props.ariaLabelledBy, _b[\"aria-required\"] = _this.props.ariaRequired, _b));\n        };\n        _this.renderClearButton = function() {\n            var _a = _this.props, isClearable = _a.isClearable, disabled = _a.disabled, selected = _a.selected, startDate = _a.startDate, endDate = _a.endDate, clearButtonTitle = _a.clearButtonTitle, _b = _a.clearButtonClassName, clearButtonClassName = _b === void 0 ? \"\" : _b, _c = _a.ariaLabelClose, ariaLabelClose = _c === void 0 ? \"Close\" : _c, selectedDates = _a.selectedDates, readOnly = _a.readOnly;\n            if (isClearable && !readOnly && (selected != null || startDate != null || endDate != null || (selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.length))) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n                    type: \"button\",\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(\"react-datepicker__close-icon\", clearButtonClassName, {\n                        \"react-datepicker__close-icon--disabled\": disabled\n                    }),\n                    disabled: disabled,\n                    \"aria-label\": ariaLabelClose,\n                    onClick: _this.onClearClick,\n                    title: clearButtonTitle,\n                    tabIndex: -1\n                });\n            } else {\n                return null;\n            }\n        };\n        _this.state = _this.calcInitialState();\n        _this.preventFocusTimeout = undefined;\n        return _this;\n    }\n    Object.defineProperty(DatePicker, \"defaultProps\", {\n        get: function() {\n            return {\n                allowSameDay: false,\n                dateFormat: \"MM/dd/yyyy\",\n                dateFormatCalendar: \"LLLL yyyy\",\n                disabled: false,\n                disabledKeyboardNavigation: false,\n                dropdownMode: \"scroll\",\n                preventOpenOnFocus: false,\n                monthsShown: 1,\n                readOnly: false,\n                withPortal: false,\n                selectsDisabledDaysInRange: false,\n                shouldCloseOnSelect: true,\n                showTimeSelect: false,\n                showTimeInput: false,\n                showPreviousMonths: false,\n                showMonthYearPicker: false,\n                showFullMonthYearPicker: false,\n                showTwoColumnMonthYearPicker: false,\n                showFourColumnMonthYearPicker: false,\n                showYearPicker: false,\n                showQuarterYearPicker: false,\n                showWeekPicker: false,\n                strictParsing: false,\n                swapRange: false,\n                timeIntervals: 30,\n                timeCaption: \"Time\",\n                previousMonthAriaLabel: \"Previous Month\",\n                previousMonthButtonLabel: \"Previous Month\",\n                nextMonthAriaLabel: \"Next Month\",\n                nextMonthButtonLabel: \"Next Month\",\n                previousYearAriaLabel: \"Previous Year\",\n                previousYearButtonLabel: \"Previous Year\",\n                nextYearAriaLabel: \"Next Year\",\n                nextYearButtonLabel: \"Next Year\",\n                timeInputLabel: \"Time\",\n                enableTabLoop: true,\n                yearItemNumber: DEFAULT_YEAR_ITEM_NUMBER,\n                focusSelectedMonth: false,\n                showPopperArrow: true,\n                excludeScrollbar: true,\n                customTimeInput: null,\n                calendarStartDay: undefined,\n                toggleCalendarOnIconClick: false,\n                usePointerEvent: false\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DatePicker.prototype.componentDidMount = function() {\n        window.addEventListener(\"scroll\", this.onScroll, true);\n        document.addEventListener(\"visibilitychange\", this.setHiddenStateOnVisibilityHidden);\n    };\n    DatePicker.prototype.componentDidUpdate = function(prevProps, prevState) {\n        var _a, _b, _c, _d;\n        if (prevProps.inline && hasPreSelectionChanged(prevProps.selected, this.props.selected)) {\n            this.setPreSelection(this.props.selected);\n        }\n        if (this.state.monthSelectedIn !== undefined && prevProps.monthsShown !== this.props.monthsShown) {\n            this.setState({\n                monthSelectedIn: 0\n            });\n        }\n        if (prevProps.highlightDates !== this.props.highlightDates) {\n            this.setState({\n                highlightDates: getHighLightDaysMap(this.props.highlightDates)\n            });\n        }\n        if (!prevState.focused && !isEqual(prevProps.selected, this.props.selected)) {\n            this.setState({\n                inputValue: null\n            });\n        }\n        if (prevState.open !== this.state.open) {\n            if (prevState.open === false && this.state.open === true) {\n                (_b = (_a = this.props).onCalendarOpen) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            if (prevState.open === true && this.state.open === false) {\n                (_d = (_c = this.props).onCalendarClose) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }\n    };\n    DatePicker.prototype.componentWillUnmount = function() {\n        this.clearPreventFocusTimeout();\n        window.removeEventListener(\"scroll\", this.onScroll, true);\n        document.removeEventListener(\"visibilitychange\", this.setHiddenStateOnVisibilityHidden);\n    };\n    DatePicker.prototype.renderInputContainer = function() {\n        var _a = this.props, showIcon = _a.showIcon, icon = _a.icon, calendarIconClassname = _a.calendarIconClassname, calendarIconClassName = _a.calendarIconClassName, toggleCalendarOnIconClick = _a.toggleCalendarOnIconClick;\n        var open = this.state.open;\n        if (calendarIconClassname) {\n            console.warn(\"calendarIconClassname props is deprecated. should use calendarIconClassName props.\");\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n            className: \"react-datepicker__input-container\".concat(showIcon ? \" react-datepicker__view-calendar-icon\" : \"\")\n        }, showIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(CalendarIcon, _assign({\n            icon: icon,\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(calendarIconClassName, !calendarIconClassName && calendarIconClassname, open && \"react-datepicker-ignore-onclickoutside\")\n        }, toggleCalendarOnIconClick ? {\n            onClick: this.toggleCalendar\n        } : null)), this.state.isRenderAriaLiveMessage && this.renderAriaLiveRegion(), this.renderDateInput(), this.renderClearButton());\n    };\n    DatePicker.prototype.render = function() {\n        var calendar = this.renderCalendar();\n        if (this.props.inline) return calendar;\n        if (this.props.withPortal) {\n            var portalContainer = this.state.open ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(TabLoop, {\n                enableTabLoop: this.props.enableTabLoop\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n                className: \"react-datepicker__portal\",\n                tabIndex: -1,\n                onKeyDown: this.onPortalKeyDown\n            }, calendar)) : null;\n            if (this.state.open && this.props.portalId) {\n                portalContainer = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Portal, _assign({\n                    portalId: this.props.portalId\n                }, this.props), portalContainer);\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, this.renderInputContainer(), portalContainer);\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(PopperComponent$1, _assign({}, this.props, {\n            className: this.props.popperClassName,\n            hidePopper: !this.isCalendarOpen(),\n            targetComponent: this.renderInputContainer(),\n            popperComponent: calendar,\n            popperOnKeyDown: this.onPopperKeyDown,\n            showArrow: this.props.showPopperArrow\n        }));\n    };\n    return DatePicker;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\nvar PRESELECT_CHANGE_VIA_INPUT = \"input\";\nvar PRESELECT_CHANGE_VIA_NAVIGATE = \"navigate\";\n //# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZGF0ZXBpY2tlci9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBSUEsR0FDNEI7QUFDcUY7QUFDd3NCO0FBQ3h0QjtBQUNoRTtBQUVqQzs7Ozs7Ozs7Ozs7Ozs4RUFhOEUsR0FDOUUsOERBQThELEdBRTlELElBQUlpRixpQkFBaUIsU0FBU0MsY0FBY0MsQ0FBQyxFQUFFQyxDQUFDO0lBQzlDSCxpQkFBaUJJLE9BQU9DLGNBQWMsSUFBSTtRQUN4Q0MsV0FBVyxFQUFFO0lBQ2YsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7UUFDbENELEVBQUVJLFNBQVMsR0FBR0g7SUFDaEIsS0FBSyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7SUFDOUU7SUFDQSxPQUFPUixlQUFlRSxHQUFHQztBQUMzQjtBQUNBLFNBQVNTLFVBQVVWLENBQUMsRUFBRUMsQ0FBQztJQUNyQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUFNLE1BQU0sSUFBSVUsVUFBVSx5QkFBeUJDLE9BQU9YLEtBQUs7SUFDcEdILGVBQWVFLEdBQUdDO0lBQ2xCLFNBQVNZO1FBQ1AsSUFBSSxDQUFDQyxXQUFXLEdBQUdkO0lBQ3JCO0lBQ0FBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPYSxNQUFNLENBQUNkLEtBQU1ZLENBQUFBLEdBQUdOLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlNLElBQUc7QUFDcEY7QUFDQSxJQUFJRyxVQUFVLFNBQVND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bUIsQ0FBQ2s3QixtQkFBbUJoMUIsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDa0csS0FBSyxFQUFFO1lBQUVuRSxXQUFXLElBQUksQ0FBQ21FLEtBQUssQ0FBQyszQixlQUFlO1lBQUUvSyxZQUFZLENBQUMsSUFBSSxDQUFDK0QsY0FBYztZQUFJaEQsaUJBQWlCLElBQUksQ0FBQzJKLG9CQUFvQjtZQUFJNUosaUJBQWlCb0I7WUFBVWxCLGlCQUFpQixJQUFJLENBQUNzSCxlQUFlO1lBQUVySCxXQUFXLElBQUksQ0FBQ2p1QixLQUFLLENBQUNvM0IsZUFBZTtRQUFDO0lBQzlTO0lBQ0EsT0FBT25JO0FBQ1gsRUFBRWg3Qiw0Q0FBU0E7QUFDWCxJQUFJaStCLDZCQUE2QjtBQUNqQyxJQUFJckIsZ0NBQWdDO0FBRW9FLENBQ3hHLHcrbFJBQXcrbFIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcm9zaC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kYXRlcGlja2VyL2Rpc3QvaW5kZXguZXMuanM/NWRjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAgcmVhY3QtZGF0ZXBpY2tlciB2OC40LjBcbiAgaHR0cHM6Ly9naXRodWIuY29tL0hhY2tlcjB4MDEvcmVhY3QtZGF0ZXBpY2tlclxuICBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4qL1xuaW1wb3J0IHsgY2xzeCB9IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgY2xvbmVFbGVtZW50LCBDb21wb25lbnQsIGNyZWF0ZVJlZiwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzU2FtZURheSBhcyBpc1NhbWVEYXkkMSwgaXNXaXRoaW5JbnRlcnZhbCwgc3RhcnRPZldlZWssIGZvcm1hdCwgc3RhcnRPZkRheSwgZW5kT2ZEYXksIGlzRXF1YWwgYXMgaXNFcXVhbCQxLCBwYXJzZUlTTywgdG9EYXRlLCBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMsIGlzVmFsaWQgYXMgaXNWYWxpZCQxLCBpc0JlZm9yZSwgZ2V0SVNPV2VlaywgaXNTYW1lTW9udGggYXMgaXNTYW1lTW9udGgkMSwgaXNTYW1lUXVhcnRlciBhcyBpc1NhbWVRdWFydGVyJDEsIGdldFllYXIsIGdldE1vbnRoLCBnZXRRdWFydGVyLCBzdGFydE9mTW9udGgsIHN0YXJ0T2ZRdWFydGVyLCBlbmRPZk1vbnRoLCBzZXRNb250aCwgc2V0UXVhcnRlciwgaXNTYW1lWWVhciBhcyBpc1NhbWVZZWFyJDEsIHNldEhvdXJzLCBnZXRIb3Vycywgc2V0TWludXRlcywgZ2V0TWludXRlcywgc2V0U2Vjb25kcywgZ2V0U2Vjb25kcywgYWRkSG91cnMsIGFkZE1pbnV0ZXMsIGFkZFNlY29uZHMsIGlzQWZ0ZXIsIHN0YXJ0T2ZZZWFyLCBlbmRPZlllYXIsIG1pbiwgbWF4LCBzdWJNb250aHMsIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzLCBzdWJRdWFydGVycywgZGlmZmVyZW5jZUluQ2FsZW5kYXJRdWFydGVycywgc3ViWWVhcnMsIGRpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnMsIGFkZE1vbnRocywgYWRkUXVhcnRlcnMsIGFkZFllYXJzLCBpc0RhdGUsIHBhcnNlLCBlbmRPZldlZWssIGdldERheSwgZ2V0RGF0ZSwgYWRkRGF5cywgYWRkV2Vla3MsIGdldFRpbWUsIHNldFllYXIsIGRpZmZlcmVuY2VJbkRheXMsIHN1YldlZWtzLCBzdWJEYXlzIH0gZnJvbSAnZGF0ZS1mbnMnO1xuaW1wb3J0IHsgdXNlRmxvYXRpbmcsIGF1dG9VcGRhdGUsIGZsaXAsIG9mZnNldCwgYXJyb3csIEZsb2F0aW5nQXJyb3cgfSBmcm9tICdAZmxvYXRpbmctdWkvcmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXHJcblxyXG5QZXJtaXNzaW9uIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhbmQvb3IgZGlzdHJpYnV0ZSB0aGlzIHNvZnR3YXJlIGZvciBhbnlcclxucHVycG9zZSB3aXRoIG9yIHdpdGhvdXQgZmVlIGlzIGhlcmVieSBncmFudGVkLlxyXG5cclxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiBBTkQgVEhFIEFVVEhPUiBESVNDTEFJTVMgQUxMIFdBUlJBTlRJRVMgV0lUSFxyXG5SRUdBUkQgVE8gVEhJUyBTT0ZUV0FSRSBJTkNMVURJTkcgQUxMIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFlcclxuQU5EIEZJVE5FU1MuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IgQkUgTElBQkxFIEZPUiBBTlkgU1BFQ0lBTCwgRElSRUNULFxyXG5JTkRJUkVDVCwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIE9SIEFOWSBEQU1BR0VTIFdIQVRTT0VWRVIgUkVTVUxUSU5HIEZST01cclxuTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1JcclxuT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFVTRSBPUlxyXG5QRVJGT1JNQU5DRSBPRiBUSElTIFNPRlRXQVJFLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqL1xuLyogZ2xvYmFsIFJlZmxlY3QsIFByb21pc2UsIFN1cHByZXNzZWRFcnJvciwgU3ltYm9sLCBJdGVyYXRvciAqL1xuXG52YXIgX2V4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiBleHRlbmRTdGF0aWNzKGQsIGIpIHtcbiAgX2V4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwge1xuICAgIF9fcHJvdG9fXzogW11cbiAgfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZC5fX3Byb3RvX18gPSBiO1xuICB9IHx8IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTtcbiAgfTtcbiAgcmV0dXJuIF9leHRlbmRTdGF0aWNzKGQsIGIpO1xufTtcbmZ1bmN0aW9uIF9fZXh0ZW5kcyhkLCBiKSB7XG4gIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgX2V4dGVuZFN0YXRpY3MoZCwgYik7XG4gIGZ1bmN0aW9uIF9fKCkge1xuICAgIHRoaXMuY29uc3RydWN0b3IgPSBkO1xuICB9XG4gIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbn1cbnZhciBfYXNzaWduID0gZnVuY3Rpb24gX19hc3NpZ24oKSB7XG4gIF9hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uIF9fYXNzaWduKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbiAgfTtcbiAgcmV0dXJuIF9hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5mdW5jdGlvbiBfX3NwcmVhZEFycmF5KHRvLCBmcm9tLCBwYWNrKSB7XG4gIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59XG50eXBlb2YgU3VwcHJlc3NlZEVycm9yID09PSBcImZ1bmN0aW9uXCIgPyBTdXBwcmVzc2VkRXJyb3IgOiBmdW5jdGlvbiAoZXJyb3IsIHN1cHByZXNzZWQsIG1lc3NhZ2UpIHtcbiAgdmFyIGUgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlLm5hbWUgPSBcIlN1cHByZXNzZWRFcnJvclwiLCBlLmVycm9yID0gZXJyb3IsIGUuc3VwcHJlc3NlZCA9IHN1cHByZXNzZWQsIGU7XG59O1xuXG52YXIgQ2FsZW5kYXJDb250YWluZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgX2IgPSBfYS5zaG93VGltZVNlbGVjdE9ubHksIHNob3dUaW1lU2VsZWN0T25seSA9IF9iID09PSB2b2lkIDAgPyBmYWxzZSA6IF9iLCBfYyA9IF9hLnNob3dUaW1lLCBzaG93VGltZSA9IF9jID09PSB2b2lkIDAgPyBmYWxzZSA6IF9jLCBjbGFzc05hbWUgPSBfYS5jbGFzc05hbWUsIGNoaWxkcmVuID0gX2EuY2hpbGRyZW47XG4gICAgdmFyIGFyaWFMYWJlbCA9IHNob3dUaW1lU2VsZWN0T25seVxuICAgICAgICA/IFwiQ2hvb3NlIFRpbWVcIlxuICAgICAgICA6IFwiQ2hvb3NlIERhdGVcIi5jb25jYXQoc2hvd1RpbWUgPyBcIiBhbmQgVGltZVwiIDogXCJcIik7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBjbGFzc05hbWUsIHJvbGU6IFwiZGlhbG9nXCIsIFwiYXJpYS1sYWJlbFwiOiBhcmlhTGFiZWwsIFwiYXJpYS1tb2RhbFwiOiBcInRydWVcIiB9LCBjaGlsZHJlbikpO1xufTtcblxudmFyIHVzZURldGVjdENsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uIChvbkNsaWNrT3V0c2lkZSwgaWdub3JlQ2xhc3MpIHtcbiAgICB2YXIgcmVmID0gdXNlUmVmKG51bGwpO1xuICAgIHZhciBvbkNsaWNrT3V0c2lkZVJlZiA9IHVzZVJlZihvbkNsaWNrT3V0c2lkZSk7XG4gICAgb25DbGlja091dHNpZGVSZWYuY3VycmVudCA9IG9uQ2xpY2tPdXRzaWRlO1xuICAgIHZhciBoYW5kbGVDbGlja091dHNpZGUgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB2YXIgdGFyZ2V0ID0gKGV2ZW50LmNvbXBvc2VkICYmXG4gICAgICAgICAgICBldmVudC5jb21wb3NlZFBhdGggJiZcbiAgICAgICAgICAgIGV2ZW50XG4gICAgICAgICAgICAgICAgLmNvbXBvc2VkUGF0aCgpXG4gICAgICAgICAgICAgICAgLmZpbmQoZnVuY3Rpb24gKGV2ZW50VGFyZ2V0KSB7IHJldHVybiBldmVudFRhcmdldCBpbnN0YW5jZW9mIE5vZGU7IH0pKSB8fFxuICAgICAgICAgICAgZXZlbnQudGFyZ2V0O1xuICAgICAgICBpZiAocmVmLmN1cnJlbnQgJiYgIXJlZi5jdXJyZW50LmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgICAgICAgIGlmICghKGlnbm9yZUNsYXNzICYmXG4gICAgICAgICAgICAgICAgdGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGlnbm9yZUNsYXNzKSkpIHtcbiAgICAgICAgICAgICAgICAoX2EgPSBvbkNsaWNrT3V0c2lkZVJlZi5jdXJyZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChvbkNsaWNrT3V0c2lkZVJlZiwgZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW2lnbm9yZUNsYXNzXSk7XG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBoYW5kbGVDbGlja091dHNpZGUpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBoYW5kbGVDbGlja091dHNpZGUpO1xuICAgICAgICB9O1xuICAgIH0sIFtoYW5kbGVDbGlja091dHNpZGVdKTtcbiAgICByZXR1cm4gcmVmO1xufTtcbnZhciBDbGlja091dHNpZGVXcmFwcGVyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIG9uQ2xpY2tPdXRzaWRlID0gX2Eub25DbGlja091dHNpZGUsIGNsYXNzTmFtZSA9IF9hLmNsYXNzTmFtZSwgY29udGFpbmVyUmVmID0gX2EuY29udGFpbmVyUmVmLCBzdHlsZSA9IF9hLnN0eWxlLCBpZ25vcmVDbGFzcyA9IF9hLmlnbm9yZUNsYXNzO1xuICAgIHZhciBkZXRlY3RSZWYgPSB1c2VEZXRlY3RDbGlja091dHNpZGUob25DbGlja091dHNpZGUsIGlnbm9yZUNsYXNzKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZSwgc3R5bGU6IHN0eWxlLCByZWY6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICBkZXRlY3RSZWYuY3VycmVudCA9IG5vZGU7XG4gICAgICAgICAgICBpZiAoY29udGFpbmVyUmVmKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyUmVmLmN1cnJlbnQgPSBub2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IH0sIGNoaWxkcmVuKSk7XG59O1xuXG52YXIgS2V5VHlwZTtcbihmdW5jdGlvbiAoS2V5VHlwZSkge1xuICAgIEtleVR5cGVbXCJBcnJvd1VwXCJdID0gXCJBcnJvd1VwXCI7XG4gICAgS2V5VHlwZVtcIkFycm93RG93blwiXSA9IFwiQXJyb3dEb3duXCI7XG4gICAgS2V5VHlwZVtcIkFycm93TGVmdFwiXSA9IFwiQXJyb3dMZWZ0XCI7XG4gICAgS2V5VHlwZVtcIkFycm93UmlnaHRcIl0gPSBcIkFycm93UmlnaHRcIjtcbiAgICBLZXlUeXBlW1wiUGFnZVVwXCJdID0gXCJQYWdlVXBcIjtcbiAgICBLZXlUeXBlW1wiUGFnZURvd25cIl0gPSBcIlBhZ2VEb3duXCI7XG4gICAgS2V5VHlwZVtcIkhvbWVcIl0gPSBcIkhvbWVcIjtcbiAgICBLZXlUeXBlW1wiRW5kXCJdID0gXCJFbmRcIjtcbiAgICBLZXlUeXBlW1wiRW50ZXJcIl0gPSBcIkVudGVyXCI7XG4gICAgS2V5VHlwZVtcIlNwYWNlXCJdID0gXCIgXCI7XG4gICAgS2V5VHlwZVtcIlRhYlwiXSA9IFwiVGFiXCI7XG4gICAgS2V5VHlwZVtcIkVzY2FwZVwiXSA9IFwiRXNjYXBlXCI7XG4gICAgS2V5VHlwZVtcIkJhY2tzcGFjZVwiXSA9IFwiQmFja3NwYWNlXCI7XG4gICAgS2V5VHlwZVtcIlhcIl0gPSBcInhcIjtcbn0pKEtleVR5cGUgfHwgKEtleVR5cGUgPSB7fSkpO1xuZnVuY3Rpb24gZ2V0TG9jYWxlU2NvcGUoKSB7XG4gICAgLy8gVXNlIHRoaXMgY2FzdCB0byBhdm9pZCBtZXNzaW5nIHdpdGggdXNlcnMgZ2xvYmFsVGhpcyAobGlrZSB3aW5kb3cpIGFuZCB0aGUgcmVzdCBvZiBrZXlzIGluIHRoZSBnbG9iYWxUaGlzIG9iamVjdCB3ZSBkb24ndCBjYXJlIGFib3V0XG4gICAgdmFyIHNjb3BlID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCJcbiAgICAgICAgPyB3aW5kb3dcbiAgICAgICAgOiBnbG9iYWxUaGlzKTtcbiAgICByZXR1cm4gc2NvcGU7XG59XG52YXIgREVGQVVMVF9ZRUFSX0lURU1fTlVNQkVSID0gMTI7XG4vLyAqKiBEYXRlIENvbnN0cnVjdG9ycyAqKlxuZnVuY3Rpb24gbmV3RGF0ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSgpO1xuICAgIH1cbiAgICB2YXIgZCA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlSVNPKHZhbHVlKSA6IHRvRGF0ZSh2YWx1ZSk7XG4gICAgcmV0dXJuIGlzVmFsaWQoZCkgPyBkIDogbmV3IERhdGUoKTtcbn1cbi8qKlxuICogUGFyc2VzIGEgZGF0ZS5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgLSBUaGUgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgRGF0ZSBpbiBhIHBhcnNhYmxlIGZvcm0sIGUuZy4sIElTTyAxODYxXG4gKiBAcGFyYW0gZGF0ZUZvcm1hdCAtIFRoZSBkYXRlIGZvcm1hdC5cbiAqIEBwYXJhbSBsb2NhbGUgLSBUaGUgbG9jYWxlLlxuICogQHBhcmFtIHN0cmljdFBhcnNpbmcgLSBUaGUgc3RyaWN0IHBhcnNpbmcgZmxhZy5cbiAqIEBwYXJhbSByZWZEYXRlIC0gVGhlIGJhc2UgZGF0ZSB0byBiZSBwYXNzZWQgdG8gZGF0ZS1mbnMgcGFyc2UoKSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIC0gVGhlIHBhcnNlZCBkYXRlIG9yIG51bGwuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlRGF0ZSh2YWx1ZSwgZGF0ZUZvcm1hdCwgbG9jYWxlLCBzdHJpY3RQYXJzaW5nLCByZWZEYXRlKSB7XG4gICAgaWYgKHJlZkRhdGUgPT09IHZvaWQgMCkgeyByZWZEYXRlID0gbmV3RGF0ZSgpOyB9XG4gICAgdmFyIGxvY2FsZU9iamVjdCA9IGdldExvY2FsZU9iamVjdChsb2NhbGUpIHx8IGdldExvY2FsZU9iamVjdChnZXREZWZhdWx0TG9jYWxlKCkpO1xuICAgIHZhciBmb3JtYXRzID0gQXJyYXkuaXNBcnJheShkYXRlRm9ybWF0KSA/IGRhdGVGb3JtYXQgOiBbZGF0ZUZvcm1hdF07XG4gICAgZm9yICh2YXIgX2kgPSAwLCBmb3JtYXRzXzEgPSBmb3JtYXRzOyBfaSA8IGZvcm1hdHNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGZvcm1hdF8xID0gZm9ybWF0c18xW19pXTtcbiAgICAgICAgdmFyIHBhcnNlZERhdGUgPSBwYXJzZSh2YWx1ZSwgZm9ybWF0XzEsIHJlZkRhdGUsIHtcbiAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlT2JqZWN0LFxuICAgICAgICAgICAgdXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zOiB0cnVlLFxuICAgICAgICAgICAgdXNlQWRkaXRpb25hbERheU9mWWVhclRva2VuczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChpc1ZhbGlkKHBhcnNlZERhdGUpICYmXG4gICAgICAgICAgICAoIXN0cmljdFBhcnNpbmcgfHwgdmFsdWUgPT09IGZvcm1hdERhdGUocGFyc2VkRGF0ZSwgZm9ybWF0XzEsIGxvY2FsZSkpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VkRGF0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gZGF0ZSBpcyB2YWxpZCBhbmQgbm90IGJlZm9yZSB0aGUgbWluaW11bSBkYXRlLlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZSB0byBiZSBjaGVja2VkLlxuICogQHBhcmFtIG1pbkRhdGUgLSBUaGUgbWluaW11bSBkYXRlIGFsbG93ZWQuIElmIG5vdCBwcm92aWRlZCwgZGVmYXVsdHMgdG8gXCIxLzEvMTgwMFwiLlxuICogQHJldHVybnMgQSBib29sZWFuIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciB0aGUgZGF0ZSBpcyB2YWxpZCBhbmQgbm90IGJlZm9yZSB0aGUgbWluaW11bSBkYXRlLlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkKGRhdGUsIG1pbkRhdGUpIHtcbiAgICAvKiB0aGUgZmFsbGJhY2sgZGF0ZSBpcyBlc3NlbnRpYWwgdG8gbm90IGJyZWFrIHRlc3QgY2FzZVxuICAgICAqIGBzaG91bGQgYXV0byB1cGRhdGUgY2FsZW5kYXIgd2hlbiB0aGUgdXBkYXRlZCBkYXRlIHRleHQgaXMgYWZ0ZXIgcHJvcHMubWluRGF0ZWBcbiAgICAgKiBhbmQgYmFja3dhcmQgY29tcGF0aWJpbGl0eSByZXNwZWN0ZnVsbHlcbiAgICAgKi9cbiAgICByZXR1cm4gaXNWYWxpZCQxKGRhdGUpICYmICFpc0JlZm9yZShkYXRlLCBuZXcgRGF0ZShcIjEvMS8xODAwXCIpKTtcbn1cbi8vICoqIERhdGUgRm9ybWF0dGluZyAqKlxuLyoqXG4gKiBGb3JtYXRzIGEgZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHBhcmFtIGZvcm1hdFN0ciAtIFRoZSBmb3JtYXQgc3RyaW5nLlxuICogQHBhcmFtIGxvY2FsZSAtIFRoZSBsb2NhbGUuXG4gKiBAcmV0dXJucyAtIFRoZSBmb3JtYXR0ZWQgZGF0ZS5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlLCBmb3JtYXRTdHIsIGxvY2FsZSkge1xuICAgIGlmIChsb2NhbGUgPT09IFwiZW5cIikge1xuICAgICAgICByZXR1cm4gZm9ybWF0KGRhdGUsIGZvcm1hdFN0ciwge1xuICAgICAgICAgICAgdXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zOiB0cnVlLFxuICAgICAgICAgICAgdXNlQWRkaXRpb25hbERheU9mWWVhclRva2VuczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHZhciBsb2NhbGVPYmogPSBsb2NhbGUgPyBnZXRMb2NhbGVPYmplY3QobG9jYWxlKSA6IHVuZGVmaW5lZDtcbiAgICBpZiAobG9jYWxlICYmICFsb2NhbGVPYmopIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQSBsb2NhbGUgb2JqZWN0IHdhcyBub3QgZm91bmQgZm9yIHRoZSBwcm92aWRlZCBzdHJpbmcgW1xcXCJcIi5jb25jYXQobG9jYWxlLCBcIlxcXCJdLlwiKSk7XG4gICAgfVxuICAgIGxvY2FsZU9iaiA9IGxvY2FsZU9iaiB8fCBnZXRMb2NhbGVPYmplY3QoZ2V0RGVmYXVsdExvY2FsZSgpKTtcbiAgICByZXR1cm4gZm9ybWF0KGRhdGUsIGZvcm1hdFN0ciwge1xuICAgICAgICBsb2NhbGU6IGxvY2FsZU9iaixcbiAgICAgICAgdXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zOiB0cnVlLFxuICAgICAgICB1c2VBZGRpdGlvbmFsRGF5T2ZZZWFyVG9rZW5zOiB0cnVlLFxuICAgIH0pO1xufVxuLyoqXG4gKiBTYWZlbHkgZm9ybWF0cyBhIGRhdGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGRhdGVGb3JtYXQgYW5kIGxvY2FsZS5cbiAqIEByZXR1cm5zIC0gVGhlIGZvcm1hdHRlZCBkYXRlIG9yIGFuIGVtcHR5IHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gc2FmZURhdGVGb3JtYXQoZGF0ZSwgX2EpIHtcbiAgICB2YXIgZGF0ZUZvcm1hdCA9IF9hLmRhdGVGb3JtYXQsIGxvY2FsZSA9IF9hLmxvY2FsZTtcbiAgICB2YXIgZm9ybWF0U3RyID0gKEFycmF5LmlzQXJyYXkoZGF0ZUZvcm1hdCkgJiYgZGF0ZUZvcm1hdC5sZW5ndGggPiAwXG4gICAgICAgID8gZGF0ZUZvcm1hdFswXVxuICAgICAgICA6IGRhdGVGb3JtYXQpOyAvLyBDYXN0IHRvIHN0cmluZyBiZWNhdXNlIGl0J3MgaW1wb3NzaWJsZSB0byBnZXQgYHN0cmluZyB8IHN0cmluZ1tdIHwgdW5kZWZpbmVkYCBoZXJlIGFuZCB0eXBlc2NyaXB0IGRvZXNuJ3Qga25vdyB0aGF0XG4gICAgcmV0dXJuIChkYXRlICYmIGZvcm1hdERhdGUoZGF0ZSwgZm9ybWF0U3RyLCBsb2NhbGUpKSB8fCBcIlwiO1xufVxuLyoqXG4gKiBVc2VkIGFzIGEgZGVsaW1pdGVyIHRvIHNlcGFyYXRlIHR3byBkYXRlcyB3aGVuIGZvcm1hdHRpbmcgYSBkYXRlIHJhbmdlXG4gKi9cbnZhciBEQVRFX1JBTkdFX1NFUEFSQVRPUiA9IFwiIC0gXCI7XG4vKipcbiAqIFNhZmVseSBmb3JtYXRzIGEgZGF0ZSByYW5nZS5cbiAqXG4gKiBAcGFyYW0gc3RhcnREYXRlIC0gVGhlIHN0YXJ0IGRhdGUuXG4gKiBAcGFyYW0gZW5kRGF0ZSAtIFRoZSBlbmQgZGF0ZS5cbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBwcm9wcy5cbiAqIEByZXR1cm5zIC0gVGhlIGZvcm1hdHRlZCBkYXRlIHJhbmdlIG9yIGFuIGVtcHR5IHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gc2FmZURhdGVSYW5nZUZvcm1hdChzdGFydERhdGUsIGVuZERhdGUsIHByb3BzKSB7XG4gICAgaWYgKCFzdGFydERhdGUpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICAgIHZhciBmb3JtYXR0ZWRTdGFydERhdGUgPSBzYWZlRGF0ZUZvcm1hdChzdGFydERhdGUsIHByb3BzKTtcbiAgICB2YXIgZm9ybWF0dGVkRW5kRGF0ZSA9IGVuZERhdGUgPyBzYWZlRGF0ZUZvcm1hdChlbmREYXRlLCBwcm9wcykgOiBcIlwiO1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChmb3JtYXR0ZWRTdGFydERhdGUpLmNvbmNhdChEQVRFX1JBTkdFX1NFUEFSQVRPUikuY29uY2F0KGZvcm1hdHRlZEVuZERhdGUpO1xufVxuLyoqXG4gKiBTYWZlbHkgZm9ybWF0cyBtdWx0aXBsZSBkYXRlcy5cbiAqXG4gKiBAcGFyYW0gZGF0ZXMgLSBUaGUgZGF0ZXMuXG4gKiBAcGFyYW0gcHJvcHMgLSBUaGUgcHJvcHMuXG4gKiBAcmV0dXJucyAtIFRoZSBmb3JtYXR0ZWQgZGF0ZXMgb3IgYW4gZW1wdHkgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBzYWZlTXVsdGlwbGVEYXRlc0Zvcm1hdChkYXRlcywgcHJvcHMpIHtcbiAgICBpZiAoIShkYXRlcyA9PT0gbnVsbCB8fCBkYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0ZXMubGVuZ3RoKSkge1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgdmFyIGZvcm1hdHRlZEZpcnN0RGF0ZSA9IGRhdGVzWzBdID8gc2FmZURhdGVGb3JtYXQoZGF0ZXNbMF0sIHByb3BzKSA6IFwiXCI7XG4gICAgaWYgKGRhdGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gZm9ybWF0dGVkRmlyc3REYXRlO1xuICAgIH1cbiAgICBpZiAoZGF0ZXMubGVuZ3RoID09PSAyICYmIGRhdGVzWzFdKSB7XG4gICAgICAgIHZhciBmb3JtYXR0ZWRTZWNvbmREYXRlID0gc2FmZURhdGVGb3JtYXQoZGF0ZXNbMV0sIHByb3BzKTtcbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGZvcm1hdHRlZEZpcnN0RGF0ZSwgXCIsIFwiKS5jb25jYXQoZm9ybWF0dGVkU2Vjb25kRGF0ZSk7XG4gICAgfVxuICAgIHZhciBleHRyYURhdGVzQ291bnQgPSBkYXRlcy5sZW5ndGggLSAxO1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChmb3JtYXR0ZWRGaXJzdERhdGUsIFwiICgrXCIpLmNvbmNhdChleHRyYURhdGVzQ291bnQsIFwiKVwiKTtcbn1cbi8vICoqIERhdGUgU2V0dGVycyAqKlxuLyoqXG4gKiBTZXRzIHRoZSB0aW1lIGZvciBhIGdpdmVuIGRhdGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZS5cbiAqIEBwYXJhbSB0aW1lIC0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGhvdXIsIG1pbnV0ZSwgYW5kIHNlY29uZC5cbiAqIEByZXR1cm5zIC0gVGhlIGRhdGUgd2l0aCB0aGUgdGltZSBzZXQuXG4gKi9cbmZ1bmN0aW9uIHNldFRpbWUoZGF0ZSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYS5ob3VyLCBob3VyID0gX2IgPT09IHZvaWQgMCA/IDAgOiBfYiwgX2MgPSBfYS5taW51dGUsIG1pbnV0ZSA9IF9jID09PSB2b2lkIDAgPyAwIDogX2MsIF9kID0gX2Euc2Vjb25kLCBzZWNvbmQgPSBfZCA9PT0gdm9pZCAwID8gMCA6IF9kO1xuICAgIHJldHVybiBzZXRIb3VycyhzZXRNaW51dGVzKHNldFNlY29uZHMoZGF0ZSwgc2Vjb25kKSwgbWludXRlKSwgaG91cik7XG59XG4vKipcbiAqIEdldHMgdGhlIHdlZWsgb2YgdGhlIHllYXIgZm9yIGEgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHJldHVybnMgLSBUaGUgd2VlayBvZiB0aGUgeWVhci5cbiAqL1xuZnVuY3Rpb24gZ2V0V2VlayhkYXRlKSB7XG4gICAgcmV0dXJuIGdldElTT1dlZWsoZGF0ZSk7XG59XG4vKipcbiAqIEdldHMgdGhlIGRheSBvZiB0aGUgd2VlayBjb2RlIGZvciBhIGdpdmVuIGRheS5cbiAqXG4gKiBAcGFyYW0gZGF5IC0gVGhlIGRheS5cbiAqIEBwYXJhbSBsb2NhbGUgLSBUaGUgbG9jYWxlLlxuICogQHJldHVybnMgLSBUaGUgZGF5IG9mIHRoZSB3ZWVrIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIGdldERheU9mV2Vla0NvZGUoZGF5LCBsb2NhbGUpIHtcbiAgICByZXR1cm4gZm9ybWF0RGF0ZShkYXksIFwiZGRkXCIsIGxvY2FsZSk7XG59XG4vLyAqKiogU3RhcnQgb2YgKioqXG4vKipcbiAqIEdldHMgdGhlIHN0YXJ0IG9mIHRoZSBkYXkgZm9yIGEgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHJldHVybnMgLSBUaGUgc3RhcnQgb2YgdGhlIGRheS5cbiAqL1xuZnVuY3Rpb24gZ2V0U3RhcnRPZkRheShkYXRlKSB7XG4gICAgcmV0dXJuIHN0YXJ0T2ZEYXkoZGF0ZSk7XG59XG4vKipcbiAqIEdldHMgdGhlIHN0YXJ0IG9mIHRoZSB3ZWVrIGZvciBhIGdpdmVuIGRhdGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZS5cbiAqIEBwYXJhbSBsb2NhbGUgLSBUaGUgbG9jYWxlLlxuICogQHBhcmFtIGNhbGVuZGFyU3RhcnREYXkgLSBUaGUgZGF5IHRoZSBjYWxlbmRhciBzdGFydHMgb24uXG4gKiBAcmV0dXJucyAtIFRoZSBzdGFydCBvZiB0aGUgd2Vlay5cbiAqL1xuZnVuY3Rpb24gZ2V0U3RhcnRPZldlZWsoZGF0ZSwgbG9jYWxlLCBjYWxlbmRhclN0YXJ0RGF5KSB7XG4gICAgdmFyIGxvY2FsZU9iaiA9IGxvY2FsZVxuICAgICAgICA/IGdldExvY2FsZU9iamVjdChsb2NhbGUpXG4gICAgICAgIDogZ2V0TG9jYWxlT2JqZWN0KGdldERlZmF1bHRMb2NhbGUoKSk7XG4gICAgcmV0dXJuIHN0YXJ0T2ZXZWVrKGRhdGUsIHtcbiAgICAgICAgbG9jYWxlOiBsb2NhbGVPYmosXG4gICAgICAgIHdlZWtTdGFydHNPbjogY2FsZW5kYXJTdGFydERheSxcbiAgICB9KTtcbn1cbi8qKlxuICogR2V0cyB0aGUgc3RhcnQgb2YgdGhlIG1vbnRoIGZvciBhIGdpdmVuIGRhdGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZS5cbiAqIEByZXR1cm5zIC0gVGhlIHN0YXJ0IG9mIHRoZSBtb250aC5cbiAqL1xuZnVuY3Rpb24gZ2V0U3RhcnRPZk1vbnRoKGRhdGUpIHtcbiAgICByZXR1cm4gc3RhcnRPZk1vbnRoKGRhdGUpO1xufVxuLyoqXG4gKiBHZXRzIHRoZSBzdGFydCBvZiB0aGUgeWVhciBmb3IgYSBnaXZlbiBkYXRlLlxuICpcbiAqIEBwYXJhbSBkYXRlIC0gVGhlIGRhdGUuXG4gKiBAcmV0dXJucyAtIFRoZSBzdGFydCBvZiB0aGUgeWVhci5cbiAqL1xuZnVuY3Rpb24gZ2V0U3RhcnRPZlllYXIoZGF0ZSkge1xuICAgIHJldHVybiBzdGFydE9mWWVhcihkYXRlKTtcbn1cbi8qKlxuICogR2V0cyB0aGUgc3RhcnQgb2YgdGhlIHF1YXJ0ZXIgZm9yIGEgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHJldHVybnMgLSBUaGUgc3RhcnQgb2YgdGhlIHF1YXJ0ZXIuXG4gKi9cbmZ1bmN0aW9uIGdldFN0YXJ0T2ZRdWFydGVyKGRhdGUpIHtcbiAgICByZXR1cm4gc3RhcnRPZlF1YXJ0ZXIoZGF0ZSk7XG59XG4vKipcbiAqIEdldHMgdGhlIHN0YXJ0IG9mIHRvZGF5LlxuICpcbiAqIEByZXR1cm5zIC0gVGhlIHN0YXJ0IG9mIHRvZGF5LlxuICovXG5mdW5jdGlvbiBnZXRTdGFydE9mVG9kYXkoKSB7XG4gICAgcmV0dXJuIHN0YXJ0T2ZEYXkobmV3RGF0ZSgpKTtcbn1cbi8vICoqKiBFbmQgb2YgKioqXG4vKipcbiAqIEdldHMgdGhlIGVuZCBvZiB0aGUgZGF5IGZvciBhIGdpdmVuIGRhdGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZS5cbiAqIEByZXR1cm5zIC0gVGhlIGVuZCBvZiB0aGUgZGF5LlxuICovXG5mdW5jdGlvbiBnZXRFbmRPZkRheShkYXRlKSB7XG4gICAgcmV0dXJuIGVuZE9mRGF5KGRhdGUpO1xufVxuLyoqXG4gKiBHZXRzIHRoZSBlbmQgb2YgdGhlIHdlZWsgZm9yIGEgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHJldHVybnMgLSBUaGUgZW5kIG9mIHRoZSB3ZWVrLlxuICovXG5mdW5jdGlvbiBnZXRFbmRPZldlZWsoZGF0ZSkge1xuICAgIHJldHVybiBlbmRPZldlZWsoZGF0ZSk7XG59XG4vKipcbiAqIEdldHMgdGhlIGVuZCBvZiB0aGUgbW9udGggZm9yIGEgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlLlxuICogQHJldHVybnMgLSBUaGUgZW5kIG9mIHRoZSBtb250aC5cbiAqL1xuZnVuY3Rpb24gZ2V0RW5kT2ZNb250aChkYXRlKSB7XG4gICAgcmV0dXJuIGVuZE9mTW9udGgoZGF0ZSk7XG59XG4vKipcbiAqIENoZWNrcyBpZiB0d28gZGF0ZXMgYXJlIGluIHRoZSBzYW1lIHllYXIuXG4gKlxuICogQHBhcmFtIGRhdGUxIC0gVGhlIGZpcnN0IGRhdGUuXG4gKiBAcGFyYW0gZGF0ZTIgLSBUaGUgc2Vjb25kIGRhdGUuXG4gKiBAcmV0dXJucyAtIFRydWUgaWYgdGhlIGRhdGVzIGFyZSBpbiB0aGUgc2FtZSB5ZWFyLCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzU2FtZVllYXIoZGF0ZTEsIGRhdGUyKSB7XG4gICAgaWYgKGRhdGUxICYmIGRhdGUyKSB7XG4gICAgICAgIHJldHVybiBpc1NhbWVZZWFyJDEoZGF0ZTEsIGRhdGUyKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAhZGF0ZTEgJiYgIWRhdGUyO1xuICAgIH1cbn1cbi8qKlxuICogQ2hlY2tzIGlmIHR3byBkYXRlcyBhcmUgaW4gdGhlIHNhbWUgbW9udGguXG4gKlxuICogQHBhcmFtIGRhdGUxIC0gVGhlIGZpcnN0IGRhdGUuXG4gKiBAcGFyYW0gZGF0ZTIgLSBUaGUgc2Vjb25kIGRhdGUuXG4gKiBAcmV0dXJucyAtIFRydWUgaWYgdGhlIGRhdGVzIGFyZSBpbiB0aGUgc2FtZSBtb250aCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc1NhbWVNb250aChkYXRlMSwgZGF0ZTIpIHtcbiAgICBpZiAoZGF0ZTEgJiYgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIGlzU2FtZU1vbnRoJDEoZGF0ZTEsIGRhdGUyKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAhZGF0ZTEgJiYgIWRhdGUyO1xuICAgIH1cbn1cbi8qKlxuICogQ2hlY2tzIGlmIHR3byBkYXRlcyBhcmUgaW4gdGhlIHNhbWUgcXVhcnRlci5cbiAqXG4gKiBAcGFyYW0gZGF0ZTEgLSBUaGUgZmlyc3QgZGF0ZS5cbiAqIEBwYXJhbSBkYXRlMiAtIFRoZSBzZWNvbmQgZGF0ZS5cbiAqIEByZXR1cm5zIC0gVHJ1ZSBpZiB0aGUgZGF0ZXMgYXJlIGluIHRoZSBzYW1lIHF1YXJ0ZXIsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNTYW1lUXVhcnRlcihkYXRlMSwgZGF0ZTIpIHtcbiAgICBpZiAoZGF0ZTEgJiYgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIGlzU2FtZVF1YXJ0ZXIkMShkYXRlMSwgZGF0ZTIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuICFkYXRlMSAmJiAhZGF0ZTI7XG4gICAgfVxufVxuLyoqXG4gKiBDaGVja3MgaWYgdHdvIGRhdGVzIGFyZSBvbiB0aGUgc2FtZSBkYXkuXG4gKlxuICogQHBhcmFtIGRhdGUxIC0gVGhlIGZpcnN0IGRhdGUuXG4gKiBAcGFyYW0gZGF0ZTIgLSBUaGUgc2Vjb25kIGRhdGUuXG4gKiBAcmV0dXJucyAtIFRydWUgaWYgdGhlIGRhdGVzIGFyZSBvbiB0aGUgc2FtZSBkYXksIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNTYW1lRGF5KGRhdGUxLCBkYXRlMikge1xuICAgIGlmIChkYXRlMSAmJiBkYXRlMikge1xuICAgICAgICByZXR1cm4gaXNTYW1lRGF5JDEoZGF0ZTEsIGRhdGUyKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAhZGF0ZTEgJiYgIWRhdGUyO1xuICAgIH1cbn1cbi8qKlxuICogQ2hlY2tzIGlmIHR3byBkYXRlcyBhcmUgZXF1YWwuXG4gKlxuICogQHBhcmFtIGRhdGUxIC0gVGhlIGZpcnN0IGRhdGUuXG4gKiBAcGFyYW0gZGF0ZTIgLSBUaGUgc2Vjb25kIGRhdGUuXG4gKiBAcmV0dXJucyAtIFRydWUgaWYgdGhlIGRhdGVzIGFyZSBlcXVhbCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0VxdWFsKGRhdGUxLCBkYXRlMikge1xuICAgIGlmIChkYXRlMSAmJiBkYXRlMikge1xuICAgICAgICByZXR1cm4gaXNFcXVhbCQxKGRhdGUxLCBkYXRlMik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gIWRhdGUxICYmICFkYXRlMjtcbiAgICB9XG59XG4vKipcbiAqIENoZWNrcyBpZiBhIGRheSBpcyB3aXRoaW4gYSBkYXRlIHJhbmdlLlxuICpcbiAqIEBwYXJhbSBkYXkgLSBUaGUgZGF5IHRvIGNoZWNrLlxuICogQHBhcmFtIHN0YXJ0RGF0ZSAtIFRoZSBzdGFydCBkYXRlIG9mIHRoZSByYW5nZS5cbiAqIEBwYXJhbSBlbmREYXRlIC0gVGhlIGVuZCBkYXRlIG9mIHRoZSByYW5nZS5cbiAqIEByZXR1cm5zIC0gVHJ1ZSBpZiB0aGUgZGF5IGlzIHdpdGhpbiB0aGUgcmFuZ2UsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNEYXlJblJhbmdlKGRheSwgc3RhcnREYXRlLCBlbmREYXRlKSB7XG4gICAgdmFyIHZhbGlkO1xuICAgIHZhciBzdGFydCA9IHN0YXJ0T2ZEYXkoc3RhcnREYXRlKTtcbiAgICB2YXIgZW5kID0gZW5kT2ZEYXkoZW5kRGF0ZSk7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFsaWQgPSBpc1dpdGhpbkludGVydmFsKGRheSwgeyBzdGFydDogc3RhcnQsIGVuZDogZW5kIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHZhbGlkID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZDtcbn1cbi8vICoqIERhdGUgTG9jYWxpemF0aW9uICoqXG4vKipcbiAqIFJlZ2lzdGVycyBhIGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gbG9jYWxlTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBsb2NhbGUuXG4gKiBAcGFyYW0gbG9jYWxlRGF0YSAtIFRoZSBkYXRhIG9mIHRoZSBsb2NhbGUuXG4gKi9cbmZ1bmN0aW9uIHJlZ2lzdGVyTG9jYWxlKGxvY2FsZU5hbWUsIGxvY2FsZURhdGEpIHtcbiAgICB2YXIgc2NvcGUgPSBnZXRMb2NhbGVTY29wZSgpO1xuICAgIGlmICghc2NvcGUuX19sb2NhbGVEYXRhX18pIHtcbiAgICAgICAgc2NvcGUuX19sb2NhbGVEYXRhX18gPSB7fTtcbiAgICB9XG4gICAgc2NvcGUuX19sb2NhbGVEYXRhX19bbG9jYWxlTmFtZV0gPSBsb2NhbGVEYXRhO1xufVxuLyoqXG4gKiBTZXRzIHRoZSBkZWZhdWx0IGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gbG9jYWxlTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBsb2NhbGUuXG4gKi9cbmZ1bmN0aW9uIHNldERlZmF1bHRMb2NhbGUobG9jYWxlTmFtZSkge1xuICAgIHZhciBzY29wZSA9IGdldExvY2FsZVNjb3BlKCk7XG4gICAgc2NvcGUuX19sb2NhbGVJZF9fID0gbG9jYWxlTmFtZTtcbn1cbi8qKlxuICogR2V0cyB0aGUgZGVmYXVsdCBsb2NhbGUuXG4gKlxuICogQHJldHVybnMgLSBUaGUgZGVmYXVsdCBsb2NhbGUuXG4gKi9cbmZ1bmN0aW9uIGdldERlZmF1bHRMb2NhbGUoKSB7XG4gICAgdmFyIHNjb3BlID0gZ2V0TG9jYWxlU2NvcGUoKTtcbiAgICByZXR1cm4gc2NvcGUuX19sb2NhbGVJZF9fO1xufVxuLyoqXG4gKiBHZXRzIHRoZSBsb2NhbGUgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBsb2NhbGVTcGVjIC0gVGhlIGxvY2FsZSBzcGVjaWZpY2F0aW9uLlxuICogQHJldHVybnMgLSBUaGUgbG9jYWxlIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gZ2V0TG9jYWxlT2JqZWN0KGxvY2FsZVNwZWMpIHtcbiAgICBpZiAodHlwZW9mIGxvY2FsZVNwZWMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgLy8gVHJlYXQgaXQgYXMgYSBsb2NhbGUgbmFtZSByZWdpc3RlcmVkIGJ5IHJlZ2lzdGVyTG9jYWxlXG4gICAgICAgIHZhciBzY29wZSA9IGdldExvY2FsZVNjb3BlKCk7XG4gICAgICAgIC8vIE51bGwgd2FzIHJlcGxhY2VkIHdpdGggdW5kZWZpbmVkIHRvIGF2b2lkIHR5cGUgY29lcmNpb25cbiAgICAgICAgcmV0dXJuIHNjb3BlLl9fbG9jYWxlRGF0YV9fID8gc2NvcGUuX19sb2NhbGVEYXRhX19bbG9jYWxlU3BlY10gOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBUcmVhdCBpdCBhcyBhIHJhdyBkYXRlLWZucyBsb2NhbGUgb2JqZWN0XG4gICAgICAgIHJldHVybiBsb2NhbGVTcGVjO1xuICAgIH1cbn1cbi8qKlxuICogRm9ybWF0cyB0aGUgd2Vla2RheSBpbiBhIGdpdmVuIGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBkYXRlIHRvIGZvcm1hdC5cbiAqIEBwYXJhbSBmb3JtYXRGdW5jIC0gVGhlIGZvcm1hdHRpbmcgZnVuY3Rpb24uXG4gKiBAcGFyYW0gbG9jYWxlIC0gVGhlIGxvY2FsZSB0byB1c2UgZm9yIGZvcm1hdHRpbmcuXG4gKiBAcmV0dXJucyAtIFRoZSBmb3JtYXR0ZWQgd2Vla2RheS5cbiAqL1xuZnVuY3Rpb24gZ2V0Rm9ybWF0dGVkV2Vla2RheUluTG9jYWxlKGRhdGUsIGZvcm1hdEZ1bmMsIGxvY2FsZSkge1xuICAgIHJldHVybiBmb3JtYXRGdW5jKGZvcm1hdERhdGUoZGF0ZSwgXCJFRUVFXCIsIGxvY2FsZSkpO1xufVxuLyoqXG4gKiBHZXRzIHRoZSBtaW5pbXVtIHdlZWtkYXkgaW4gYSBnaXZlbiBsb2NhbGUuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZGF0ZSB0byBmb3JtYXQuXG4gKiBAcGFyYW0gbG9jYWxlIC0gVGhlIGxvY2FsZSB0byB1c2UgZm9yIGZvcm1hdHRpbmcuXG4gKiBAcmV0dXJucyAtIFRoZSBtaW5pbXVtIHdlZWtkYXkuXG4gKi9cbmZ1bmN0aW9uIGdldFdlZWtkYXlNaW5JbkxvY2FsZShkYXRlLCBsb2NhbGUpIHtcbiAgICByZXR1cm4gZm9ybWF0RGF0ZShkYXRlLCBcIkVFRUVFRVwiLCBsb2NhbGUpO1xufVxuLyoqXG4gKiBHZXRzIHRoZSBzaG9ydCB3ZWVrZGF5IGluIGEgZ2l2ZW4gbG9jYWxlLlxuICpcbiAqIEBwYXJhbSBkYXRlIC0gVGhlIGRhdGUgdG8gZm9ybWF0LlxuICogQHBhcmFtIGxvY2FsZSAtIFRoZSBsb2NhbGUgdG8gdXNlIGZvciBmb3JtYXR0aW5nLlxuICogQHJldHVybnMgLSBUaGUgc2hvcnQgd2Vla2RheS5cbiAqL1xuZnVuY3Rpb24gZ2V0V2Vla2RheVNob3J0SW5Mb2NhbGUoZGF0ZSwgbG9jYWxlKSB7XG4gICAgcmV0dXJuIGZvcm1hdERhdGUoZGF0ZSwgXCJFRUVcIiwgbG9jYWxlKTtcbn1cbi8qKlxuICogR2V0cyB0aGUgbW9udGggaW4gYSBnaXZlbiBsb2NhbGUuXG4gKlxuICogQHBhcmFtIG1vbnRoIC0gVGhlIG1vbnRoIHRvIGZvcm1hdC5cbiAqIEBwYXJhbSBsb2NhbGUgLSBUaGUgbG9jYWxlIHRvIHVzZSBmb3IgZm9ybWF0dGluZy5cbiAqIEByZXR1cm5zIC0gVGhlIG1vbnRoLlxuICovXG5mdW5jdGlvbiBnZXRNb250aEluTG9jYWxlKG1vbnRoLCBsb2NhbGUpIHtcbiAgICByZXR1cm4gZm9ybWF0RGF0ZShzZXRNb250aChuZXdEYXRlKCksIG1vbnRoKSwgXCJMTExMXCIsIGxvY2FsZSk7XG59XG4vKipcbiAqIEdldHMgdGhlIHNob3J0IG1vbnRoIGluIGEgZ2l2ZW4gbG9jYWxlLlxuICpcbiAqIEBwYXJhbSBtb250aCAtIFRoZSBtb250aCB0byBmb3JtYXQuXG4gKiBAcGFyYW0gbG9jYWxlIC0gVGhlIGxvY2FsZSB0byB1c2UgZm9yIGZvcm1hdHRpbmcuXG4gKiBAcmV0dXJucyAtIFRoZSBzaG9ydCBtb250aC5cbiAqL1xuZnVuY3Rpb24gZ2V0TW9udGhTaG9ydEluTG9jYWxlKG1vbnRoLCBsb2NhbGUpIHtcbiAgICByZXR1cm4gZm9ybWF0RGF0ZShzZXRNb250aChuZXdEYXRlKCksIG1vbnRoKSwgXCJMTExcIiwgbG9jYWxlKTtcbn1cbi8qKlxuICogR2V0cyB0aGUgc2hvcnQgcXVhcnRlciBpbiBhIGdpdmVuIGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gcXVhcnRlciAtIFRoZSBxdWFydGVyIHRvIGZvcm1hdC5cbiAqIEBwYXJhbSBsb2NhbGUgLSBUaGUgbG9jYWxlIHRvIHVzZSBmb3IgZm9ybWF0dGluZy5cbiAqIEByZXR1cm5zIC0gVGhlIHNob3J0IHF1YXJ0ZXIuXG4gKi9cbmZ1bmN0aW9uIGdldFF1YXJ0ZXJTaG9ydEluTG9jYWxlKHF1YXJ0ZXIsIGxvY2FsZSkge1xuICAgIHJldHVybiBmb3JtYXREYXRlKHNldFF1YXJ0ZXIobmV3RGF0ZSgpLCBxdWFydGVyKSwgXCJRUVFcIiwgbG9jYWxlKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGEgZGF5IGlzIGRpc2FibGVkLlxuICpcbiAqIEBwYXJhbSBkYXkgLSBUaGUgZGF5IHRvIGNoZWNrLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB0byBjb25zaWRlciB3aGVuIGNoZWNraW5nLlxuICogQHJldHVybnMgLSBSZXR1cm5zIHRydWUgaWYgdGhlIGRheSBpcyBkaXNhYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0RheURpc2FibGVkKGRheSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgbWluRGF0ZSA9IF9iLm1pbkRhdGUsIG1heERhdGUgPSBfYi5tYXhEYXRlLCBleGNsdWRlRGF0ZXMgPSBfYi5leGNsdWRlRGF0ZXMsIGV4Y2x1ZGVEYXRlSW50ZXJ2YWxzID0gX2IuZXhjbHVkZURhdGVJbnRlcnZhbHMsIGluY2x1ZGVEYXRlcyA9IF9iLmluY2x1ZGVEYXRlcywgaW5jbHVkZURhdGVJbnRlcnZhbHMgPSBfYi5pbmNsdWRlRGF0ZUludGVydmFscywgZmlsdGVyRGF0ZSA9IF9iLmZpbHRlckRhdGU7XG4gICAgcmV0dXJuIChpc091dE9mQm91bmRzKGRheSwgeyBtaW5EYXRlOiBtaW5EYXRlLCBtYXhEYXRlOiBtYXhEYXRlIH0pIHx8XG4gICAgICAgIChleGNsdWRlRGF0ZXMgJiZcbiAgICAgICAgICAgIGV4Y2x1ZGVEYXRlcy5zb21lKGZ1bmN0aW9uIChleGNsdWRlRGF0ZSkge1xuICAgICAgICAgICAgICAgIGlmIChleGNsdWRlRGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShkYXksIGV4Y2x1ZGVEYXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVEYXkoZGF5LCBleGNsdWRlRGF0ZS5kYXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSkgfHxcbiAgICAgICAgKGV4Y2x1ZGVEYXRlSW50ZXJ2YWxzICYmXG4gICAgICAgICAgICBleGNsdWRlRGF0ZUludGVydmFscy5zb21lKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IF9hLnN0YXJ0LCBlbmQgPSBfYS5lbmQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzV2l0aGluSW50ZXJ2YWwoZGF5LCB7IHN0YXJ0OiBzdGFydCwgZW5kOiBlbmQgfSk7XG4gICAgICAgICAgICB9KSkgfHxcbiAgICAgICAgKGluY2x1ZGVEYXRlcyAmJlxuICAgICAgICAgICAgIWluY2x1ZGVEYXRlcy5zb21lKGZ1bmN0aW9uIChpbmNsdWRlRGF0ZSkgeyByZXR1cm4gaXNTYW1lRGF5KGRheSwgaW5jbHVkZURhdGUpOyB9KSkgfHxcbiAgICAgICAgKGluY2x1ZGVEYXRlSW50ZXJ2YWxzICYmXG4gICAgICAgICAgICAhaW5jbHVkZURhdGVJbnRlcnZhbHMuc29tZShmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBfYS5zdGFydCwgZW5kID0gX2EuZW5kO1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1dpdGhpbkludGVydmFsKGRheSwgeyBzdGFydDogc3RhcnQsIGVuZDogZW5kIH0pO1xuICAgICAgICAgICAgfSkpIHx8XG4gICAgICAgIChmaWx0ZXJEYXRlICYmICFmaWx0ZXJEYXRlKG5ld0RhdGUoZGF5KSkpIHx8XG4gICAgICAgIGZhbHNlKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGEgZGF5IGlzIGV4Y2x1ZGVkLlxuICpcbiAqIEBwYXJhbSBkYXkgLSBUaGUgZGF5IHRvIGNoZWNrLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB0byBjb25zaWRlciB3aGVuIGNoZWNraW5nLlxuICogQHJldHVybnMgLSBSZXR1cm5zIHRydWUgaWYgdGhlIGRheSBpcyBleGNsdWRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0RheUV4Y2x1ZGVkKGRheSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgZXhjbHVkZURhdGVzID0gX2IuZXhjbHVkZURhdGVzLCBleGNsdWRlRGF0ZUludGVydmFscyA9IF9iLmV4Y2x1ZGVEYXRlSW50ZXJ2YWxzO1xuICAgIGlmIChleGNsdWRlRGF0ZUludGVydmFscyAmJiBleGNsdWRlRGF0ZUludGVydmFscy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiBleGNsdWRlRGF0ZUludGVydmFscy5zb21lKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gX2Euc3RhcnQsIGVuZCA9IF9hLmVuZDtcbiAgICAgICAgICAgIHJldHVybiBpc1dpdGhpbkludGVydmFsKGRheSwgeyBzdGFydDogc3RhcnQsIGVuZDogZW5kIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuICgoZXhjbHVkZURhdGVzICYmXG4gICAgICAgIGV4Y2x1ZGVEYXRlcy5zb21lKGZ1bmN0aW9uIChleGNsdWRlRGF0ZSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKGV4Y2x1ZGVEYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVEYXkoZGF5LCBleGNsdWRlRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNTYW1lRGF5KGRheSwgKF9hID0gZXhjbHVkZURhdGUuZGF0ZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbmV3IERhdGUoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBpc01vbnRoRGlzYWJsZWQobW9udGgsIF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIG1pbkRhdGUgPSBfYi5taW5EYXRlLCBtYXhEYXRlID0gX2IubWF4RGF0ZSwgZXhjbHVkZURhdGVzID0gX2IuZXhjbHVkZURhdGVzLCBpbmNsdWRlRGF0ZXMgPSBfYi5pbmNsdWRlRGF0ZXMsIGZpbHRlckRhdGUgPSBfYi5maWx0ZXJEYXRlO1xuICAgIHJldHVybiAoaXNPdXRPZkJvdW5kcyhtb250aCwge1xuICAgICAgICBtaW5EYXRlOiBtaW5EYXRlID8gc3RhcnRPZk1vbnRoKG1pbkRhdGUpIDogdW5kZWZpbmVkLFxuICAgICAgICBtYXhEYXRlOiBtYXhEYXRlID8gZW5kT2ZNb250aChtYXhEYXRlKSA6IHVuZGVmaW5lZCxcbiAgICB9KSB8fFxuICAgICAgICAoZXhjbHVkZURhdGVzID09PSBudWxsIHx8IGV4Y2x1ZGVEYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXhjbHVkZURhdGVzLnNvbWUoZnVuY3Rpb24gKGV4Y2x1ZGVEYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNTYW1lTW9udGgobW9udGgsIGV4Y2x1ZGVEYXRlIGluc3RhbmNlb2YgRGF0ZSA/IGV4Y2x1ZGVEYXRlIDogZXhjbHVkZURhdGUuZGF0ZSk7XG4gICAgICAgIH0pKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICAhaW5jbHVkZURhdGVzLnNvbWUoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7IHJldHVybiBpc1NhbWVNb250aChtb250aCwgaW5jbHVkZURhdGUpOyB9KSkgfHxcbiAgICAgICAgKGZpbHRlckRhdGUgJiYgIWZpbHRlckRhdGUobmV3RGF0ZShtb250aCkpKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBpc01vbnRoSW5SYW5nZShzdGFydERhdGUsIGVuZERhdGUsIG0sIGRheSkge1xuICAgIHZhciBzdGFydERhdGVZZWFyID0gZ2V0WWVhcihzdGFydERhdGUpO1xuICAgIHZhciBzdGFydERhdGVNb250aCA9IGdldE1vbnRoKHN0YXJ0RGF0ZSk7XG4gICAgdmFyIGVuZERhdGVZZWFyID0gZ2V0WWVhcihlbmREYXRlKTtcbiAgICB2YXIgZW5kRGF0ZU1vbnRoID0gZ2V0TW9udGgoZW5kRGF0ZSk7XG4gICAgdmFyIGRheVllYXIgPSBnZXRZZWFyKGRheSk7XG4gICAgaWYgKHN0YXJ0RGF0ZVllYXIgPT09IGVuZERhdGVZZWFyICYmIHN0YXJ0RGF0ZVllYXIgPT09IGRheVllYXIpIHtcbiAgICAgICAgcmV0dXJuIHN0YXJ0RGF0ZU1vbnRoIDw9IG0gJiYgbSA8PSBlbmREYXRlTW9udGg7XG4gICAgfVxuICAgIGVsc2UgaWYgKHN0YXJ0RGF0ZVllYXIgPCBlbmREYXRlWWVhcikge1xuICAgICAgICByZXR1cm4gKChkYXlZZWFyID09PSBzdGFydERhdGVZZWFyICYmIHN0YXJ0RGF0ZU1vbnRoIDw9IG0pIHx8XG4gICAgICAgICAgICAoZGF5WWVhciA9PT0gZW5kRGF0ZVllYXIgJiYgZW5kRGF0ZU1vbnRoID49IG0pIHx8XG4gICAgICAgICAgICAoZGF5WWVhciA8IGVuZERhdGVZZWFyICYmIGRheVllYXIgPiBzdGFydERhdGVZZWFyKSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogVG8gY2hlY2sgaWYgYSBkYXRlJ3MgbW9udGggYW5kIHllYXIgYXJlIGRpc2FibGVkL2V4Y2x1ZGVkXG4gKiBAcGFyYW0gZGF0ZSBEYXRlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBtb250aCBhbmQgeWVhciBhcmUgZGlzYWJsZWQvZXhjbHVkZWQsIGZhbHNlIG90aGVyd2lzZVxuICovXG5mdW5jdGlvbiBpc01vbnRoWWVhckRpc2FibGVkKGRhdGUsIF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIG1pbkRhdGUgPSBfYi5taW5EYXRlLCBtYXhEYXRlID0gX2IubWF4RGF0ZSwgZXhjbHVkZURhdGVzID0gX2IuZXhjbHVkZURhdGVzLCBpbmNsdWRlRGF0ZXMgPSBfYi5pbmNsdWRlRGF0ZXM7XG4gICAgcmV0dXJuIChpc091dE9mQm91bmRzKGRhdGUsIHsgbWluRGF0ZTogbWluRGF0ZSwgbWF4RGF0ZTogbWF4RGF0ZSB9KSB8fFxuICAgICAgICAoZXhjbHVkZURhdGVzICYmXG4gICAgICAgICAgICBleGNsdWRlRGF0ZXMuc29tZShmdW5jdGlvbiAoZXhjbHVkZWREYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZU1vbnRoKGV4Y2x1ZGVkRGF0ZSBpbnN0YW5jZW9mIERhdGUgPyBleGNsdWRlZERhdGUgOiBleGNsdWRlZERhdGUuZGF0ZSwgZGF0ZSk7XG4gICAgICAgICAgICB9KSkgfHxcbiAgICAgICAgKGluY2x1ZGVEYXRlcyAmJlxuICAgICAgICAgICAgIWluY2x1ZGVEYXRlcy5zb21lKGZ1bmN0aW9uIChpbmNsdWRlZERhdGUpIHsgcmV0dXJuIGlzU2FtZU1vbnRoKGluY2x1ZGVkRGF0ZSwgZGF0ZSk7IH0pKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBpc1F1YXJ0ZXJEaXNhYmxlZChxdWFydGVyLCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBtaW5EYXRlID0gX2IubWluRGF0ZSwgbWF4RGF0ZSA9IF9iLm1heERhdGUsIGV4Y2x1ZGVEYXRlcyA9IF9iLmV4Y2x1ZGVEYXRlcywgaW5jbHVkZURhdGVzID0gX2IuaW5jbHVkZURhdGVzLCBmaWx0ZXJEYXRlID0gX2IuZmlsdGVyRGF0ZTtcbiAgICByZXR1cm4gKGlzT3V0T2ZCb3VuZHMocXVhcnRlciwgeyBtaW5EYXRlOiBtaW5EYXRlLCBtYXhEYXRlOiBtYXhEYXRlIH0pIHx8XG4gICAgICAgIChleGNsdWRlRGF0ZXMgPT09IG51bGwgfHwgZXhjbHVkZURhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBleGNsdWRlRGF0ZXMuc29tZShmdW5jdGlvbiAoZXhjbHVkZURhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVRdWFydGVyKHF1YXJ0ZXIsIGV4Y2x1ZGVEYXRlIGluc3RhbmNlb2YgRGF0ZSA/IGV4Y2x1ZGVEYXRlIDogZXhjbHVkZURhdGUuZGF0ZSk7XG4gICAgICAgIH0pKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICAhaW5jbHVkZURhdGVzLnNvbWUoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZVF1YXJ0ZXIocXVhcnRlciwgaW5jbHVkZURhdGUpO1xuICAgICAgICAgICAgfSkpIHx8XG4gICAgICAgIChmaWx0ZXJEYXRlICYmICFmaWx0ZXJEYXRlKG5ld0RhdGUocXVhcnRlcikpKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBpc1llYXJJblJhbmdlKHllYXIsIHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoIXN0YXJ0IHx8ICFlbmQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzVmFsaWQkMShzdGFydCkgfHwgIWlzVmFsaWQkMShlbmQpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIHN0YXJ0WWVhciA9IGdldFllYXIoc3RhcnQpO1xuICAgIHZhciBlbmRZZWFyID0gZ2V0WWVhcihlbmQpO1xuICAgIHJldHVybiBzdGFydFllYXIgPD0geWVhciAmJiBlbmRZZWFyID49IHllYXI7XG59XG5mdW5jdGlvbiBpc1llYXJEaXNhYmxlZCh5ZWFyLCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBtaW5EYXRlID0gX2IubWluRGF0ZSwgbWF4RGF0ZSA9IF9iLm1heERhdGUsIGV4Y2x1ZGVEYXRlcyA9IF9iLmV4Y2x1ZGVEYXRlcywgaW5jbHVkZURhdGVzID0gX2IuaW5jbHVkZURhdGVzLCBmaWx0ZXJEYXRlID0gX2IuZmlsdGVyRGF0ZTtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHllYXIsIDAsIDEpO1xuICAgIHJldHVybiAoaXNPdXRPZkJvdW5kcyhkYXRlLCB7XG4gICAgICAgIG1pbkRhdGU6IG1pbkRhdGUgPyBzdGFydE9mWWVhcihtaW5EYXRlKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgbWF4RGF0ZTogbWF4RGF0ZSA/IGVuZE9mWWVhcihtYXhEYXRlKSA6IHVuZGVmaW5lZCxcbiAgICB9KSB8fFxuICAgICAgICAoZXhjbHVkZURhdGVzID09PSBudWxsIHx8IGV4Y2x1ZGVEYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXhjbHVkZURhdGVzLnNvbWUoZnVuY3Rpb24gKGV4Y2x1ZGVEYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNTYW1lWWVhcihkYXRlLCBleGNsdWRlRGF0ZSBpbnN0YW5jZW9mIERhdGUgPyBleGNsdWRlRGF0ZSA6IGV4Y2x1ZGVEYXRlLmRhdGUpO1xuICAgICAgICB9KSkgfHxcbiAgICAgICAgKGluY2x1ZGVEYXRlcyAmJlxuICAgICAgICAgICAgIWluY2x1ZGVEYXRlcy5zb21lKGZ1bmN0aW9uIChpbmNsdWRlRGF0ZSkgeyByZXR1cm4gaXNTYW1lWWVhcihkYXRlLCBpbmNsdWRlRGF0ZSk7IH0pKSB8fFxuICAgICAgICAoZmlsdGVyRGF0ZSAmJiAhZmlsdGVyRGF0ZShuZXdEYXRlKGRhdGUpKSkgfHxcbiAgICAgICAgZmFsc2UpO1xufVxuZnVuY3Rpb24gaXNRdWFydGVySW5SYW5nZShzdGFydERhdGUsIGVuZERhdGUsIHEsIGRheSkge1xuICAgIHZhciBzdGFydERhdGVZZWFyID0gZ2V0WWVhcihzdGFydERhdGUpO1xuICAgIHZhciBzdGFydERhdGVRdWFydGVyID0gZ2V0UXVhcnRlcihzdGFydERhdGUpO1xuICAgIHZhciBlbmREYXRlWWVhciA9IGdldFllYXIoZW5kRGF0ZSk7XG4gICAgdmFyIGVuZERhdGVRdWFydGVyID0gZ2V0UXVhcnRlcihlbmREYXRlKTtcbiAgICB2YXIgZGF5WWVhciA9IGdldFllYXIoZGF5KTtcbiAgICBpZiAoc3RhcnREYXRlWWVhciA9PT0gZW5kRGF0ZVllYXIgJiYgc3RhcnREYXRlWWVhciA9PT0gZGF5WWVhcikge1xuICAgICAgICByZXR1cm4gc3RhcnREYXRlUXVhcnRlciA8PSBxICYmIHEgPD0gZW5kRGF0ZVF1YXJ0ZXI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHN0YXJ0RGF0ZVllYXIgPCBlbmREYXRlWWVhcikge1xuICAgICAgICByZXR1cm4gKChkYXlZZWFyID09PSBzdGFydERhdGVZZWFyICYmIHN0YXJ0RGF0ZVF1YXJ0ZXIgPD0gcSkgfHxcbiAgICAgICAgICAgIChkYXlZZWFyID09PSBlbmREYXRlWWVhciAmJiBlbmREYXRlUXVhcnRlciA+PSBxKSB8fFxuICAgICAgICAgICAgKGRheVllYXIgPCBlbmREYXRlWWVhciAmJiBkYXlZZWFyID4gc3RhcnREYXRlWWVhcikpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBpc091dE9mQm91bmRzKGRheSwgX2EpIHtcbiAgICB2YXIgX2I7XG4gICAgdmFyIF9jID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIG1pbkRhdGUgPSBfYy5taW5EYXRlLCBtYXhEYXRlID0gX2MubWF4RGF0ZTtcbiAgICByZXR1cm4gKChfYiA9ICgobWluRGF0ZSAmJiBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoZGF5LCBtaW5EYXRlKSA8IDApIHx8XG4gICAgICAgIChtYXhEYXRlICYmIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkYXksIG1heERhdGUpID4gMCkpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBmYWxzZSk7XG59XG5mdW5jdGlvbiBpc1RpbWVJbkxpc3QodGltZSwgdGltZXMpIHtcbiAgICByZXR1cm4gdGltZXMuc29tZShmdW5jdGlvbiAobGlzdFRpbWUpIHtcbiAgICAgICAgcmV0dXJuIGdldEhvdXJzKGxpc3RUaW1lKSA9PT0gZ2V0SG91cnModGltZSkgJiZcbiAgICAgICAgICAgIGdldE1pbnV0ZXMobGlzdFRpbWUpID09PSBnZXRNaW51dGVzKHRpbWUpICYmXG4gICAgICAgICAgICBnZXRTZWNvbmRzKGxpc3RUaW1lKSA9PT0gZ2V0U2Vjb25kcyh0aW1lKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVGltZURpc2FibGVkKHRpbWUsIF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIGV4Y2x1ZGVUaW1lcyA9IF9iLmV4Y2x1ZGVUaW1lcywgaW5jbHVkZVRpbWVzID0gX2IuaW5jbHVkZVRpbWVzLCBmaWx0ZXJUaW1lID0gX2IuZmlsdGVyVGltZTtcbiAgICByZXR1cm4gKChleGNsdWRlVGltZXMgJiYgaXNUaW1lSW5MaXN0KHRpbWUsIGV4Y2x1ZGVUaW1lcykpIHx8XG4gICAgICAgIChpbmNsdWRlVGltZXMgJiYgIWlzVGltZUluTGlzdCh0aW1lLCBpbmNsdWRlVGltZXMpKSB8fFxuICAgICAgICAoZmlsdGVyVGltZSAmJiAhZmlsdGVyVGltZSh0aW1lKSkgfHxcbiAgICAgICAgZmFsc2UpO1xufVxuZnVuY3Rpb24gaXNUaW1lSW5EaXNhYmxlZFJhbmdlKHRpbWUsIF9hKSB7XG4gICAgdmFyIG1pblRpbWUgPSBfYS5taW5UaW1lLCBtYXhUaW1lID0gX2EubWF4VGltZTtcbiAgICBpZiAoIW1pblRpbWUgfHwgIW1heFRpbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQm90aCBtaW5UaW1lIGFuZCBtYXhUaW1lIHByb3BzIHJlcXVpcmVkXCIpO1xuICAgIH1cbiAgICB2YXIgYmFzZVRpbWUgPSBuZXdEYXRlKCk7XG4gICAgYmFzZVRpbWUgPSBzZXRIb3VycyhiYXNlVGltZSwgZ2V0SG91cnModGltZSkpO1xuICAgIGJhc2VUaW1lID0gc2V0TWludXRlcyhiYXNlVGltZSwgZ2V0TWludXRlcyh0aW1lKSk7XG4gICAgYmFzZVRpbWUgPSBzZXRTZWNvbmRzKGJhc2VUaW1lLCBnZXRTZWNvbmRzKHRpbWUpKTtcbiAgICB2YXIgbWluID0gbmV3RGF0ZSgpO1xuICAgIG1pbiA9IHNldEhvdXJzKG1pbiwgZ2V0SG91cnMobWluVGltZSkpO1xuICAgIG1pbiA9IHNldE1pbnV0ZXMobWluLCBnZXRNaW51dGVzKG1pblRpbWUpKTtcbiAgICBtaW4gPSBzZXRTZWNvbmRzKG1pbiwgZ2V0U2Vjb25kcyhtaW5UaW1lKSk7XG4gICAgdmFyIG1heCA9IG5ld0RhdGUoKTtcbiAgICBtYXggPSBzZXRIb3VycyhtYXgsIGdldEhvdXJzKG1heFRpbWUpKTtcbiAgICBtYXggPSBzZXRNaW51dGVzKG1heCwgZ2V0TWludXRlcyhtYXhUaW1lKSk7XG4gICAgbWF4ID0gc2V0U2Vjb25kcyhtYXgsIGdldFNlY29uZHMobWF4VGltZSkpO1xuICAgIHZhciB2YWxpZDtcbiAgICB0cnkge1xuICAgICAgICB2YWxpZCA9ICFpc1dpdGhpbkludGVydmFsKGJhc2VUaW1lLCB7IHN0YXJ0OiBtaW4sIGVuZDogbWF4IH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHZhbGlkID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZDtcbn1cbmZ1bmN0aW9uIG1vbnRoRGlzYWJsZWRCZWZvcmUoZGF5LCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBtaW5EYXRlID0gX2IubWluRGF0ZSwgaW5jbHVkZURhdGVzID0gX2IuaW5jbHVkZURhdGVzO1xuICAgIHZhciBwcmV2aW91c01vbnRoID0gc3ViTW9udGhzKGRheSwgMSk7XG4gICAgcmV0dXJuICgobWluRGF0ZSAmJiBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhtaW5EYXRlLCBwcmV2aW91c01vbnRoKSA+IDApIHx8XG4gICAgICAgIChpbmNsdWRlRGF0ZXMgJiZcbiAgICAgICAgICAgIGluY2x1ZGVEYXRlcy5ldmVyeShmdW5jdGlvbiAoaW5jbHVkZURhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMoaW5jbHVkZURhdGUsIHByZXZpb3VzTW9udGgpID4gMDtcbiAgICAgICAgICAgIH0pKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBtb250aERpc2FibGVkQWZ0ZXIoZGF5LCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBtYXhEYXRlID0gX2IubWF4RGF0ZSwgaW5jbHVkZURhdGVzID0gX2IuaW5jbHVkZURhdGVzO1xuICAgIHZhciBuZXh0TW9udGggPSBhZGRNb250aHMoZGF5LCAxKTtcbiAgICByZXR1cm4gKChtYXhEYXRlICYmIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzKG5leHRNb250aCwgbWF4RGF0ZSkgPiAwKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICBpbmNsdWRlRGF0ZXMuZXZlcnkoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7IHJldHVybiBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhuZXh0TW9udGgsIGluY2x1ZGVEYXRlKSA+IDA7IH0pKSB8fFxuICAgICAgICBmYWxzZSk7XG59XG5mdW5jdGlvbiBxdWFydGVyRGlzYWJsZWRCZWZvcmUoZGF0ZSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgbWluRGF0ZSA9IF9iLm1pbkRhdGUsIGluY2x1ZGVEYXRlcyA9IF9iLmluY2x1ZGVEYXRlcztcbiAgICB2YXIgZmlyc3REYXRlT2ZZZWFyID0gc3RhcnRPZlllYXIoZGF0ZSk7XG4gICAgdmFyIHByZXZpb3VzUXVhcnRlciA9IHN1YlF1YXJ0ZXJzKGZpcnN0RGF0ZU9mWWVhciwgMSk7XG4gICAgcmV0dXJuICgobWluRGF0ZSAmJiBkaWZmZXJlbmNlSW5DYWxlbmRhclF1YXJ0ZXJzKG1pbkRhdGUsIHByZXZpb3VzUXVhcnRlcikgPiAwKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICBpbmNsdWRlRGF0ZXMuZXZlcnkoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRpZmZlcmVuY2VJbkNhbGVuZGFyUXVhcnRlcnMoaW5jbHVkZURhdGUsIHByZXZpb3VzUXVhcnRlcikgPiAwO1xuICAgICAgICAgICAgfSkpIHx8XG4gICAgICAgIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHF1YXJ0ZXJEaXNhYmxlZEFmdGVyKGRhdGUsIF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIG1heERhdGUgPSBfYi5tYXhEYXRlLCBpbmNsdWRlRGF0ZXMgPSBfYi5pbmNsdWRlRGF0ZXM7XG4gICAgdmFyIGxhc3REYXRlT2ZZZWFyID0gZW5kT2ZZZWFyKGRhdGUpO1xuICAgIHZhciBuZXh0UXVhcnRlciA9IGFkZFF1YXJ0ZXJzKGxhc3REYXRlT2ZZZWFyLCAxKTtcbiAgICByZXR1cm4gKChtYXhEYXRlICYmIGRpZmZlcmVuY2VJbkNhbGVuZGFyUXVhcnRlcnMobmV4dFF1YXJ0ZXIsIG1heERhdGUpID4gMCkgfHxcbiAgICAgICAgKGluY2x1ZGVEYXRlcyAmJlxuICAgICAgICAgICAgaW5jbHVkZURhdGVzLmV2ZXJ5KGZ1bmN0aW9uIChpbmNsdWRlRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkaWZmZXJlbmNlSW5DYWxlbmRhclF1YXJ0ZXJzKG5leHRRdWFydGVyLCBpbmNsdWRlRGF0ZSkgPiAwO1xuICAgICAgICAgICAgfSkpIHx8XG4gICAgICAgIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHllYXJEaXNhYmxlZEJlZm9yZShkYXksIF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIG1pbkRhdGUgPSBfYi5taW5EYXRlLCBpbmNsdWRlRGF0ZXMgPSBfYi5pbmNsdWRlRGF0ZXM7XG4gICAgdmFyIHByZXZpb3VzWWVhciA9IHN1YlllYXJzKGRheSwgMSk7XG4gICAgcmV0dXJuICgobWluRGF0ZSAmJiBkaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzKG1pbkRhdGUsIHByZXZpb3VzWWVhcikgPiAwKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICBpbmNsdWRlRGF0ZXMuZXZlcnkoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnMoaW5jbHVkZURhdGUsIHByZXZpb3VzWWVhcikgPiAwO1xuICAgICAgICAgICAgfSkpIHx8XG4gICAgICAgIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHllYXJzRGlzYWJsZWRCZWZvcmUoZGF5LCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBtaW5EYXRlID0gX2IubWluRGF0ZSwgX2MgPSBfYi55ZWFySXRlbU51bWJlciwgeWVhckl0ZW1OdW1iZXIgPSBfYyA9PT0gdm9pZCAwID8gREVGQVVMVF9ZRUFSX0lURU1fTlVNQkVSIDogX2M7XG4gICAgdmFyIHByZXZpb3VzWWVhciA9IGdldFN0YXJ0T2ZZZWFyKHN1YlllYXJzKGRheSwgeWVhckl0ZW1OdW1iZXIpKTtcbiAgICB2YXIgZW5kUGVyaW9kID0gZ2V0WWVhcnNQZXJpb2QocHJldmlvdXNZZWFyLCB5ZWFySXRlbU51bWJlcikuZW5kUGVyaW9kO1xuICAgIHZhciBtaW5EYXRlWWVhciA9IG1pbkRhdGUgJiYgZ2V0WWVhcihtaW5EYXRlKTtcbiAgICByZXR1cm4gKG1pbkRhdGVZZWFyICYmIG1pbkRhdGVZZWFyID4gZW5kUGVyaW9kKSB8fCBmYWxzZTtcbn1cbmZ1bmN0aW9uIHllYXJEaXNhYmxlZEFmdGVyKGRheSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgbWF4RGF0ZSA9IF9iLm1heERhdGUsIGluY2x1ZGVEYXRlcyA9IF9iLmluY2x1ZGVEYXRlcztcbiAgICB2YXIgbmV4dFllYXIgPSBhZGRZZWFycyhkYXksIDEpO1xuICAgIHJldHVybiAoKG1heERhdGUgJiYgZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycyhuZXh0WWVhciwgbWF4RGF0ZSkgPiAwKSB8fFxuICAgICAgICAoaW5jbHVkZURhdGVzICYmXG4gICAgICAgICAgICBpbmNsdWRlRGF0ZXMuZXZlcnkoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7IHJldHVybiBkaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzKG5leHRZZWFyLCBpbmNsdWRlRGF0ZSkgPiAwOyB9KSkgfHxcbiAgICAgICAgZmFsc2UpO1xufVxuZnVuY3Rpb24geWVhcnNEaXNhYmxlZEFmdGVyKGRheSwgX2EpIHtcbiAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgbWF4RGF0ZSA9IF9iLm1heERhdGUsIF9jID0gX2IueWVhckl0ZW1OdW1iZXIsIHllYXJJdGVtTnVtYmVyID0gX2MgPT09IHZvaWQgMCA/IERFRkFVTFRfWUVBUl9JVEVNX05VTUJFUiA6IF9jO1xuICAgIHZhciBuZXh0WWVhciA9IGFkZFllYXJzKGRheSwgeWVhckl0ZW1OdW1iZXIpO1xuICAgIHZhciBzdGFydFBlcmlvZCA9IGdldFllYXJzUGVyaW9kKG5leHRZZWFyLCB5ZWFySXRlbU51bWJlcikuc3RhcnRQZXJpb2Q7XG4gICAgdmFyIG1heERhdGVZZWFyID0gbWF4RGF0ZSAmJiBnZXRZZWFyKG1heERhdGUpO1xuICAgIHJldHVybiAobWF4RGF0ZVllYXIgJiYgbWF4RGF0ZVllYXIgPCBzdGFydFBlcmlvZCkgfHwgZmFsc2U7XG59XG5mdW5jdGlvbiBnZXRFZmZlY3RpdmVNaW5EYXRlKF9hKSB7XG4gICAgdmFyIG1pbkRhdGUgPSBfYS5taW5EYXRlLCBpbmNsdWRlRGF0ZXMgPSBfYS5pbmNsdWRlRGF0ZXM7XG4gICAgaWYgKGluY2x1ZGVEYXRlcyAmJiBtaW5EYXRlKSB7XG4gICAgICAgIHZhciBtaW5EYXRlcyA9IGluY2x1ZGVEYXRlcy5maWx0ZXIoZnVuY3Rpb24gKGluY2x1ZGVEYXRlKSB7IHJldHVybiBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoaW5jbHVkZURhdGUsIG1pbkRhdGUpID49IDA7IH0pO1xuICAgICAgICByZXR1cm4gbWluKG1pbkRhdGVzKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaW5jbHVkZURhdGVzKSB7XG4gICAgICAgIHJldHVybiBtaW4oaW5jbHVkZURhdGVzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBtaW5EYXRlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldEVmZmVjdGl2ZU1heERhdGUoX2EpIHtcbiAgICB2YXIgbWF4RGF0ZSA9IF9hLm1heERhdGUsIGluY2x1ZGVEYXRlcyA9IF9hLmluY2x1ZGVEYXRlcztcbiAgICBpZiAoaW5jbHVkZURhdGVzICYmIG1heERhdGUpIHtcbiAgICAgICAgdmFyIG1heERhdGVzID0gaW5jbHVkZURhdGVzLmZpbHRlcihmdW5jdGlvbiAoaW5jbHVkZURhdGUpIHsgcmV0dXJuIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhpbmNsdWRlRGF0ZSwgbWF4RGF0ZSkgPD0gMDsgfSk7XG4gICAgICAgIHJldHVybiBtYXgobWF4RGF0ZXMpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpbmNsdWRlRGF0ZXMpIHtcbiAgICAgICAgcmV0dXJuIG1heChpbmNsdWRlRGF0ZXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG1heERhdGU7XG4gICAgfVxufVxuLyoqXG4gKiBHZXQgYSBtYXAgb2YgaGlnaGxpZ2h0ZWQgZGF0ZXMgd2l0aCB0aGVpciBjb3JyZXNwb25kaW5nIGNsYXNzZXMuXG4gKiBAcGFyYW0gaGlnaGxpZ2h0RGF0ZXMgVGhlIGRhdGVzIHRvIGhpZ2hsaWdodC5cbiAqIEBwYXJhbSBkZWZhdWx0Q2xhc3NOYW1lIFRoZSBkZWZhdWx0IGNsYXNzIHRvIHVzZSBmb3IgaGlnaGxpZ2h0aW5nLlxuICogQHJldHVybnMgQSBtYXAgd2l0aCBkYXRlcyBhcyBrZXlzIGFuZCBhcnJheXMgb2YgY2xhc3MgbmFtZXMgYXMgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBnZXRIaWdoTGlnaHREYXlzTWFwKGhpZ2hsaWdodERhdGVzLCBkZWZhdWx0Q2xhc3NOYW1lKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmIChoaWdobGlnaHREYXRlcyA9PT0gdm9pZCAwKSB7IGhpZ2hsaWdodERhdGVzID0gW107IH1cbiAgICBpZiAoZGVmYXVsdENsYXNzTmFtZSA9PT0gdm9pZCAwKSB7IGRlZmF1bHRDbGFzc05hbWUgPSBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0taGlnaGxpZ2h0ZWRcIjsgfVxuICAgIHZhciBkYXRlQ2xhc3NlcyA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gaGlnaGxpZ2h0RGF0ZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgdmFyIG9iaiA9IGhpZ2hsaWdodERhdGVzW2ldO1xuICAgICAgICBpZiAoaXNEYXRlKG9iaikpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBmb3JtYXREYXRlKG9iaiwgXCJNTS5kZC55eXl5XCIpO1xuICAgICAgICAgICAgdmFyIGNsYXNzTmFtZXNBcnIgPSBkYXRlQ2xhc3Nlcy5nZXQoa2V5KSB8fCBbXTtcbiAgICAgICAgICAgIGlmICghY2xhc3NOYW1lc0Fyci5pbmNsdWRlcyhkZWZhdWx0Q2xhc3NOYW1lKSkge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZXNBcnIucHVzaChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICBkYXRlQ2xhc3Nlcy5zZXQoa2V5LCBjbGFzc05hbWVzQXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgICAgICAgICB2YXIgY2xhc3NOYW1lID0gKF9hID0ga2V5c1swXSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIjtcbiAgICAgICAgICAgIHZhciBhcnJPZkRhdGVzID0gb2JqW2NsYXNzTmFtZV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBBcnJheS5pc0FycmF5KGFyck9mRGF0ZXMpKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDAsIGxlbl8xID0gYXJyT2ZEYXRlcy5sZW5ndGg7IGsgPCBsZW5fMTsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRlSyA9IGFyck9mRGF0ZXNba107XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRlSykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IGZvcm1hdERhdGUoZGF0ZUssIFwiTU0uZGQueXl5eVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbGFzc05hbWVzQXJyID0gZGF0ZUNsYXNzZXMuZ2V0KGtleSkgfHwgW107XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNsYXNzTmFtZXNBcnIuaW5jbHVkZXMoY2xhc3NOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZXNBcnIucHVzaChjbGFzc05hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVDbGFzc2VzLnNldChrZXksIGNsYXNzTmFtZXNBcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkYXRlQ2xhc3Nlcztcbn1cbi8qKlxuICogQ29tcGFyZSB0aGUgdHdvIGFycmF5c1xuICogQHBhcmFtIGFycmF5MSBUaGUgZmlyc3QgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSBhcnJheTIgVGhlIHNlY29uZCBhcnJheSB0byBjb21wYXJlLlxuICogQHJldHVybnMgdHJ1ZSwgaWYgdGhlIHBhc3NlZCBhcnJheXMgYXJlIGVxdWFsLCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGFycmF5c0FyZUVxdWFsKGFycmF5MSwgYXJyYXkyKSB7XG4gICAgaWYgKGFycmF5MS5sZW5ndGggIT09IGFycmF5Mi5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXkxLmV2ZXJ5KGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIHZhbHVlID09PSBhcnJheTJbaW5kZXhdOyB9KTtcbn1cbi8qKlxuICogQXNzaWduIHRoZSBjdXN0b20gY2xhc3MgdG8gZWFjaCBkYXRlXG4gKiBAcGFyYW0gaG9saWRheURhdGVzIGFycmF5IG9mIG9iamVjdCBjb250YWluaW5nIGRhdGUgYW5kIG5hbWUgb2YgdGhlIGhvbGlkYXlcbiAqIEBwYXJhbSBkZWZhdWx0Q2xhc3NOYW1lIGNsYXNzTmFtZSB0byBiZSBhZGRlZC5cbiAqIEByZXR1cm5zIE1hcCBjb250YWluaW5nIGRhdGUgYXMga2V5IGFuZCBhcnJheSBvZiBjbGFzc05hbWUgYW5kIGhvbGlkYXkgbmFtZSBhcyB2YWx1ZVxuICovXG5mdW5jdGlvbiBnZXRIb2xpZGF5c01hcChob2xpZGF5RGF0ZXMsIGRlZmF1bHRDbGFzc05hbWUpIHtcbiAgICBpZiAoaG9saWRheURhdGVzID09PSB2b2lkIDApIHsgaG9saWRheURhdGVzID0gW107IH1cbiAgICBpZiAoZGVmYXVsdENsYXNzTmFtZSA9PT0gdm9pZCAwKSB7IGRlZmF1bHRDbGFzc05hbWUgPSBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0taG9saWRheXNcIjsgfVxuICAgIHZhciBkYXRlQ2xhc3NlcyA9IG5ldyBNYXAoKTtcbiAgICBob2xpZGF5RGF0ZXMuZm9yRWFjaChmdW5jdGlvbiAoaG9saWRheSkge1xuICAgICAgICB2YXIgZGF0ZU9iaiA9IGhvbGlkYXkuZGF0ZSwgaG9saWRheU5hbWUgPSBob2xpZGF5LmhvbGlkYXlOYW1lO1xuICAgICAgICBpZiAoIWlzRGF0ZShkYXRlT2JqKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBrZXkgPSBmb3JtYXREYXRlKGRhdGVPYmosIFwiTU0uZGQueXl5eVwiKTtcbiAgICAgICAgdmFyIGNsYXNzTmFtZXNPYmogPSBkYXRlQ2xhc3Nlcy5nZXQoa2V5KSB8fCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwiXCIsXG4gICAgICAgICAgICBob2xpZGF5TmFtZXM6IFtdLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoXCJjbGFzc05hbWVcIiBpbiBjbGFzc05hbWVzT2JqICYmXG4gICAgICAgICAgICBjbGFzc05hbWVzT2JqW1wiY2xhc3NOYW1lXCJdID09PSBkZWZhdWx0Q2xhc3NOYW1lICYmXG4gICAgICAgICAgICBhcnJheXNBcmVFcXVhbChjbGFzc05hbWVzT2JqW1wiaG9saWRheU5hbWVzXCJdLCBbaG9saWRheU5hbWVdKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNsYXNzTmFtZXNPYmpbXCJjbGFzc05hbWVcIl0gPSBkZWZhdWx0Q2xhc3NOYW1lO1xuICAgICAgICB2YXIgaG9saWRheU5hbWVBcnIgPSBjbGFzc05hbWVzT2JqW1wiaG9saWRheU5hbWVzXCJdO1xuICAgICAgICBjbGFzc05hbWVzT2JqW1wiaG9saWRheU5hbWVzXCJdID0gaG9saWRheU5hbWVBcnJcbiAgICAgICAgICAgID8gX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBob2xpZGF5TmFtZUFyciwgdHJ1ZSksIFtob2xpZGF5TmFtZV0sIGZhbHNlKSA6IFtob2xpZGF5TmFtZV07XG4gICAgICAgIGRhdGVDbGFzc2VzLnNldChrZXksIGNsYXNzTmFtZXNPYmopO1xuICAgIH0pO1xuICAgIHJldHVybiBkYXRlQ2xhc3Nlcztcbn1cbi8qKlxuICogRGV0ZXJtaW5lcyB0aGUgdGltZXMgdG8gaW5qZWN0IGFmdGVyIGEgZ2l2ZW4gc3RhcnQgb2YgZGF5LCBjdXJyZW50IHRpbWUsIGFuZCBtdWx0aXBsaWVyLlxuICogQHBhcmFtIHN0YXJ0T2ZEYXkgVGhlIHN0YXJ0IG9mIHRoZSBkYXkuXG4gKiBAcGFyYW0gY3VycmVudFRpbWUgVGhlIGN1cnJlbnQgdGltZS5cbiAqIEBwYXJhbSBjdXJyZW50TXVsdGlwbGllciBUaGUgY3VycmVudCBtdWx0aXBsaWVyLlxuICogQHBhcmFtIGludGVydmFscyBUaGUgaW50ZXJ2YWxzLlxuICogQHBhcmFtIGluamVjdGVkVGltZXMgVGhlIHRpbWVzIHRvIHBvdGVudGlhbGx5IGluamVjdC5cbiAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHRpbWVzIHRvIGluamVjdC5cbiAqL1xuZnVuY3Rpb24gdGltZXNUb0luamVjdEFmdGVyKHN0YXJ0T2ZEYXksIGN1cnJlbnRUaW1lLCBjdXJyZW50TXVsdGlwbGllciwgaW50ZXJ2YWxzLCBpbmplY3RlZFRpbWVzKSB7XG4gICAgdmFyIGwgPSBpbmplY3RlZFRpbWVzLmxlbmd0aDtcbiAgICB2YXIgdGltZXMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICB2YXIgaW5qZWN0ZWRUaW1lID0gc3RhcnRPZkRheTtcbiAgICAgICAgdmFyIGluamVjdGVkVGltZVZhbHVlID0gaW5qZWN0ZWRUaW1lc1tpXTtcbiAgICAgICAgaWYgKGluamVjdGVkVGltZVZhbHVlKSB7XG4gICAgICAgICAgICBpbmplY3RlZFRpbWUgPSBhZGRIb3VycyhpbmplY3RlZFRpbWUsIGdldEhvdXJzKGluamVjdGVkVGltZVZhbHVlKSk7XG4gICAgICAgICAgICBpbmplY3RlZFRpbWUgPSBhZGRNaW51dGVzKGluamVjdGVkVGltZSwgZ2V0TWludXRlcyhpbmplY3RlZFRpbWVWYWx1ZSkpO1xuICAgICAgICAgICAgaW5qZWN0ZWRUaW1lID0gYWRkU2Vjb25kcyhpbmplY3RlZFRpbWUsIGdldFNlY29uZHMoaW5qZWN0ZWRUaW1lVmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbmV4dFRpbWUgPSBhZGRNaW51dGVzKHN0YXJ0T2ZEYXksIChjdXJyZW50TXVsdGlwbGllciArIDEpICogaW50ZXJ2YWxzKTtcbiAgICAgICAgaWYgKGlzQWZ0ZXIoaW5qZWN0ZWRUaW1lLCBjdXJyZW50VGltZSkgJiZcbiAgICAgICAgICAgIGlzQmVmb3JlKGluamVjdGVkVGltZSwgbmV4dFRpbWUpICYmXG4gICAgICAgICAgICBpbmplY3RlZFRpbWVWYWx1ZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRpbWVzLnB1c2goaW5qZWN0ZWRUaW1lVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aW1lcztcbn1cbi8qKlxuICogQWRkcyBhIGxlYWRpbmcgemVybyB0byBhIG51bWJlciBpZiBpdCdzIGxlc3MgdGhhbiAxMC5cbiAqIEBwYXJhbSBpIFRoZSBudW1iZXIgdG8gYWRkIGEgbGVhZGluZyB6ZXJvIHRvLlxuICogQHJldHVybnMgVGhlIG51bWJlciBhcyBhIHN0cmluZywgd2l0aCBhIGxlYWRpbmcgemVybyBpZiBpdCB3YXMgbGVzcyB0aGFuIDEwLlxuICovXG5mdW5jdGlvbiBhZGRaZXJvKGkpIHtcbiAgICByZXR1cm4gaSA8IDEwID8gXCIwXCIuY29uY2F0KGkpIDogXCJcIi5jb25jYXQoaSk7XG59XG4vKipcbiAqIEdldHMgdGhlIHN0YXJ0IGFuZCBlbmQgeWVhcnMgZm9yIGEgcGVyaW9kLlxuICogQHBhcmFtIGRhdGUgVGhlIGRhdGUgdG8gZ2V0IHRoZSBwZXJpb2QgZm9yLlxuICogQHBhcmFtIHllYXJJdGVtTnVtYmVyIFRoZSBudW1iZXIgb2YgeWVhcnMgaW4gdGhlIHBlcmlvZC4gRGVmYXVsdHMgdG8gREVGQVVMVF9ZRUFSX0lURU1fTlVNQkVSLlxuICogQHJldHVybnMgQW4gb2JqZWN0IHdpdGggdGhlIHN0YXJ0IGFuZCBlbmQgeWVhcnMgZm9yIHRoZSBwZXJpb2QuXG4gKi9cbmZ1bmN0aW9uIGdldFllYXJzUGVyaW9kKGRhdGUsIHllYXJJdGVtTnVtYmVyKSB7XG4gICAgaWYgKHllYXJJdGVtTnVtYmVyID09PSB2b2lkIDApIHsgeWVhckl0ZW1OdW1iZXIgPSBERUZBVUxUX1lFQVJfSVRFTV9OVU1CRVI7IH1cbiAgICB2YXIgZW5kUGVyaW9kID0gTWF0aC5jZWlsKGdldFllYXIoZGF0ZSkgLyB5ZWFySXRlbU51bWJlcikgKiB5ZWFySXRlbU51bWJlcjtcbiAgICB2YXIgc3RhcnRQZXJpb2QgPSBlbmRQZXJpb2QgLSAoeWVhckl0ZW1OdW1iZXIgLSAxKTtcbiAgICByZXR1cm4geyBzdGFydFBlcmlvZDogc3RhcnRQZXJpb2QsIGVuZFBlcmlvZDogZW5kUGVyaW9kIH07XG59XG4vKipcbiAqIEdldHMgdGhlIG51bWJlciBvZiBob3VycyBpbiBhIGRheS5cbiAqIEBwYXJhbSBkIFRoZSBkYXRlIHRvIGdldCB0aGUgbnVtYmVyIG9mIGhvdXJzIGZvci5cbiAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgaG91cnMgaW4gdGhlIGRheS5cbiAqL1xuZnVuY3Rpb24gZ2V0SG91cnNJbkRheShkKSB7XG4gICAgdmFyIHN0YXJ0T2ZEYXkgPSBuZXcgRGF0ZShkLmdldEZ1bGxZZWFyKCksIGQuZ2V0TW9udGgoKSwgZC5nZXREYXRlKCkpO1xuICAgIHZhciBzdGFydE9mVGhlTmV4dERheSA9IG5ldyBEYXRlKGQuZ2V0RnVsbFllYXIoKSwgZC5nZXRNb250aCgpLCBkLmdldERhdGUoKSwgMjQpO1xuICAgIHJldHVybiBNYXRoLnJvdW5kKCgrc3RhcnRPZlRoZU5leHREYXkgLSArc3RhcnRPZkRheSkgLyAzNjAwMDAwKTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgc3RhcnQgb2YgdGhlIG1pbnV0ZSBmb3IgdGhlIGdpdmVuIGRhdGVcbiAqXG4gKiBOT1RFOiB0aGlzIGZ1bmN0aW9uIGlzIGEgRFNUIGFuZCB0aW1lem9uZS1zYWZlIGFuYWxvZyBvZiBgZGF0ZS1mbnMvc3RhcnRPZk1pbnV0ZWBcbiAqIGRvIG5vdCBtYWtlIGNoYW5nZXMgdW5sZXNzIHlvdSBrbm93IHdoYXQgeW91J3JlIGRvaW5nXG4gKlxuICogU2VlIGNvbW1lbnRzIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9IYWNrZXIweDAxL3JlYWN0LWRhdGVwaWNrZXIvcHVsbC80MjQ0XG4gKiBmb3IgbW9yZSBkZXRhaWxzXG4gKlxuICogQHBhcmFtIGQgZGF0ZVxuICogQHJldHVybnMgc3RhcnQgb2YgdGhlIG1pbnV0ZVxuICovXG5mdW5jdGlvbiBzdGFydE9mTWludXRlKGQpIHtcbiAgICB2YXIgc2Vjb25kcyA9IGQuZ2V0U2Vjb25kcygpO1xuICAgIHZhciBtaWxsaXNlY29uZHMgPSBkLmdldE1pbGxpc2Vjb25kcygpO1xuICAgIHJldHVybiB0b0RhdGUoZC5nZXRUaW1lKCkgLSBzZWNvbmRzICogMTAwMCAtIG1pbGxpc2Vjb25kcyk7XG59XG4vKipcbiAqIFJldHVybnMgd2hldGhlciB0aGUgZ2l2ZW4gZGF0ZXMgYXJlIGluIHRoZSBzYW1lIG1pbnV0ZVxuICpcbiAqIFRoaXMgZnVuY3Rpb24gaXMgYSBEU1QgYW5kIHRpbWV6b25lLXNhZmUgYW5hbG9nIG9mIGBkYXRlLWZucy9pc1NhbWVNaW51dGVgXG4gKlxuICogQHBhcmFtIGQxXG4gKiBAcGFyYW0gZDJcbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIGlzU2FtZU1pbnV0ZShkMSwgZDIpIHtcbiAgICByZXR1cm4gc3RhcnRPZk1pbnV0ZShkMSkuZ2V0VGltZSgpID09PSBzdGFydE9mTWludXRlKGQyKS5nZXRUaW1lKCk7XG59XG4vKipcbiAqIFJldHVybnMgYSBuZXcgZGF0ZXRpbWUgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgaW5wdXQgZGF0ZSB3aXRoIG1pZG5pZ2h0IHRpbWVcbiAqIEBwYXJhbSBkYXRlIFRoZSBkYXRlIHRvIGdldCB0aGUgbWlkbmlnaHQgdGltZSBmb3JcbiAqIEByZXR1cm5zIEEgbmV3IGRhdGV0aW1lIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIGlucHV0IGRhdGUgd2l0aCBtaWRuaWdodCB0aW1lXG4gKi9cbmZ1bmN0aW9uIGdldE1pZG5pZ2h0RGF0ZShkYXRlKSB7XG4gICAgaWYgKCFpc0RhdGUoZGF0ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkYXRlXCIpO1xuICAgIH1cbiAgICB2YXIgZGF0ZVdpdGhvdXRUaW1lID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgZGF0ZVdpdGhvdXRUaW1lLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgIHJldHVybiBkYXRlV2l0aG91dFRpbWU7XG59XG4vKipcbiAqIElzIHRoZSBmaXJzdCBkYXRlIGJlZm9yZSB0aGUgc2Vjb25kIG9uZT9cbiAqIEBwYXJhbSBkYXRlIFRoZSBkYXRlIHRoYXQgc2hvdWxkIGJlIGJlZm9yZSB0aGUgb3RoZXIgb25lIHRvIHJldHVybiB0cnVlXG4gKiBAcGFyYW0gZGF0ZVRvQ29tcGFyZSBUaGUgZGF0ZSB0byBjb21wYXJlIHdpdGhcbiAqIEByZXR1cm5zIFRoZSBmaXJzdCBkYXRlIGlzIGJlZm9yZSB0aGUgc2Vjb25kIGRhdGVcbiAqXG4gKiBOb3RlOlxuICogIFRoaXMgZnVuY3Rpb24gY29uc2lkZXJzIHRoZSBtaWQtbmlnaHQgb2YgdGhlIGdpdmVuIGRhdGVzIGZvciBjb21wYXJpc29uLlxuICogIEl0IGV2YWx1YXRlcyB3aGV0aGVyIGRhdGUgaXMgYmVmb3JlIGRhdGVUb0NvbXBhcmUgYmFzZWQgb24gdGhlaXIgbWlkLW5pZ2h0IHRpbWVzdGFtcHMuXG4gKi9cbmZ1bmN0aW9uIGlzRGF0ZUJlZm9yZShkYXRlLCBkYXRlVG9Db21wYXJlKSB7XG4gICAgaWYgKCFpc0RhdGUoZGF0ZSkgfHwgIWlzRGF0ZShkYXRlVG9Db21wYXJlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGRhdGUgcmVjZWl2ZWRcIik7XG4gICAgfVxuICAgIHZhciBtaWRuaWdodERhdGUgPSBnZXRNaWRuaWdodERhdGUoZGF0ZSk7XG4gICAgdmFyIG1pZG5pZ2h0RGF0ZVRvQ29tcGFyZSA9IGdldE1pZG5pZ2h0RGF0ZShkYXRlVG9Db21wYXJlKTtcbiAgICByZXR1cm4gaXNCZWZvcmUobWlkbmlnaHREYXRlLCBtaWRuaWdodERhdGVUb0NvbXBhcmUpO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIHNwYWNlIGtleSB3YXMgcHJlc3NlZCBkb3duLlxuICpcbiAqIEBwYXJhbSBldmVudCAtIFRoZSBrZXlib2FyZCBldmVudC5cbiAqIEByZXR1cm5zIC0gUmV0dXJucyB0cnVlIGlmIHRoZSBzcGFjZSBrZXkgd2FzIHByZXNzZWQgZG93biwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc1NwYWNlS2V5RG93bihldmVudCkge1xuICAgIHJldHVybiBldmVudC5rZXkgPT09IEtleVR5cGUuU3BhY2U7XG59XG5cbi8qKlxuICogYElucHV0VGltZWAgaXMgYSBSZWFjdCBjb21wb25lbnQgdGhhdCBtYW5hZ2VzIHRpbWUgaW5wdXQuXG4gKlxuICogQGNvbXBvbmVudFxuICogQGV4YW1wbGVcbiAqIDxJbnB1dFRpbWUgdGltZVN0cmluZz1cIjEyOjAwXCIgLz5cbiAqXG4gKiBAcGFyYW0gcHJvcHMgLSBUaGUgcHJvcGVydGllcyB0aGF0IGRlZmluZSB0aGUgYElucHV0VGltZWAgY29tcG9uZW50LlxuICogQHBhcmFtIHByb3BzLm9uQ2hhbmdlIC0gRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiB0aGUgZGF0ZSBjaGFuZ2VzLlxuICogQHBhcmFtIHByb3BzLmRhdGUgLSBUaGUgaW5pdGlhbCBkYXRlIHZhbHVlLlxuICogQHBhcmFtIHByb3BzLnRpbWVTdHJpbmcgLSBUaGUgaW5pdGlhbCB0aW1lIHN0cmluZyB2YWx1ZS5cbiAqIEBwYXJhbSBwcm9wcy50aW1lSW5wdXRMYWJlbCAtIFRoZSBsYWJlbCBmb3IgdGhlIHRpbWUgaW5wdXQuXG4gKiBAcGFyYW0gcHJvcHMuY3VzdG9tVGltZUlucHV0IC0gQW4gb3B0aW9uYWwgY3VzdG9tIHRpbWUgaW5wdXQgZWxlbWVudC5cbiAqXG4gKiBAcmV0dXJucyBUaGUgYElucHV0VGltZWAgY29tcG9uZW50LlxuICovXG52YXIgSW5wdXRUaW1lID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbnB1dFRpbWUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW5wdXRUaW1lKHByb3BzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5pbnB1dFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgICAgICBfdGhpcy5vblRpbWVDaGFuZ2UgPSBmdW5jdGlvbiAodGltZSkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgdGltZTogdGltZSB9KTtcbiAgICAgICAgICAgIHZhciBwcm9wRGF0ZSA9IF90aGlzLnByb3BzLmRhdGU7XG4gICAgICAgICAgICB2YXIgaXNQcm9wRGF0ZVZhbGlkID0gcHJvcERhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFpc05hTigrcHJvcERhdGUpO1xuICAgICAgICAgICAgdmFyIGRhdGUgPSBpc1Byb3BEYXRlVmFsaWQgPyBwcm9wRGF0ZSA6IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICBpZiAodGltZSA9PT0gbnVsbCB8fCB0aW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aW1lLmluY2x1ZGVzKFwiOlwiKSkge1xuICAgICAgICAgICAgICAgIHZhciBfYyA9IHRpbWUuc3BsaXQoXCI6XCIpLCBob3VycyA9IF9jWzBdLCBtaW51dGVzID0gX2NbMV07XG4gICAgICAgICAgICAgICAgZGF0ZS5zZXRIb3VycyhOdW1iZXIoaG91cnMpKTtcbiAgICAgICAgICAgICAgICBkYXRlLnNldE1pbnV0ZXMoTnVtYmVyKG1pbnV0ZXMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIChfYiA9IChfYSA9IF90aGlzLnByb3BzKS5vbkNoYW5nZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGRhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJUaW1lSW5wdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdGltZSA9IF90aGlzLnN0YXRlLnRpbWU7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF0ZSA9IF9hLmRhdGUsIHRpbWVTdHJpbmcgPSBfYS50aW1lU3RyaW5nLCBjdXN0b21UaW1lSW5wdXQgPSBfYS5jdXN0b21UaW1lSW5wdXQ7XG4gICAgICAgICAgICBpZiAoY3VzdG9tVGltZUlucHV0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsb25lRWxlbWVudChjdXN0b21UaW1lSW5wdXQsIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRpbWUsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBfdGhpcy5vblRpbWVDaGFuZ2UsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7IHR5cGU6IFwidGltZVwiLCBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlci10aW1lX19pbnB1dFwiLCBwbGFjZWhvbGRlcjogXCJUaW1lXCIsIG5hbWU6IFwidGltZS1pbnB1dFwiLCByZWY6IF90aGlzLmlucHV0UmVmLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAgICAgKF9hID0gX3RoaXMuaW5wdXRSZWYuY3VycmVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfSwgcmVxdWlyZWQ6IHRydWUsIHZhbHVlOiB0aW1lLCBvbkNoYW5nZTogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLm9uVGltZUNoYW5nZShldmVudC50YXJnZXQudmFsdWUgfHwgdGltZVN0cmluZyk7XG4gICAgICAgICAgICAgICAgfSB9KSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdGltZTogX3RoaXMucHJvcHMudGltZVN0cmluZyxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBJbnB1dFRpbWUuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzID0gZnVuY3Rpb24gKHByb3BzLCBzdGF0ZSkge1xuICAgICAgICBpZiAocHJvcHMudGltZVN0cmluZyAhPT0gc3RhdGUudGltZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0aW1lOiBwcm9wcy50aW1lU3RyaW5nLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXR1cm4gbnVsbCB0byBpbmRpY2F0ZSBubyBjaGFuZ2UgdG8gc3RhdGUuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgSW5wdXRUaW1lLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19pbnB1dC10aW1lLWNvbnRhaW5lclwiIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXItdGltZV9fY2FwdGlvblwiIH0sIHRoaXMucHJvcHMudGltZUlucHV0TGFiZWwpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyLXRpbWVfX2lucHV0LWNvbnRhaW5lclwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyLXRpbWVfX2lucHV0XCIgfSwgdGhpcy5yZW5kZXJUaW1lSW5wdXQoKSkpKSk7XG4gICAgfTtcbiAgICByZXR1cm4gSW5wdXRUaW1lO1xufShDb21wb25lbnQpKTtcblxuLyoqXG4gKiBgRGF5YCBpcyBhIFJlYWN0IGNvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgYSBzaW5nbGUgZGF5IGluIGEgZGF0ZSBwaWNrZXIuXG4gKiBJdCBoYW5kbGVzIHRoZSByZW5kZXJpbmcgYW5kIGludGVyYWN0aW9uIG9mIGEgZGF5LlxuICpcbiAqIEBwcm9wIGFyaWFMYWJlbFByZWZpeFdoZW5FbmFibGVkIC0gQXJpYSBsYWJlbCBwcmVmaXggd2hlbiB0aGUgZGF5IGlzIGVuYWJsZWQuXG4gKiBAcHJvcCBhcmlhTGFiZWxQcmVmaXhXaGVuRGlzYWJsZWQgLSBBcmlhIGxhYmVsIHByZWZpeCB3aGVuIHRoZSBkYXkgaXMgZGlzYWJsZWQuXG4gKiBAcHJvcCBkaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbiAtIFdoZXRoZXIga2V5Ym9hcmQgbmF2aWdhdGlvbiBpcyBkaXNhYmxlZC5cbiAqIEBwcm9wIGRheSAtIFRoZSBkYXkgdG8gYmUgZGlzcGxheWVkLlxuICogQHByb3AgZGF5Q2xhc3NOYW1lIC0gRnVuY3Rpb24gdG8gY3VzdG9taXplIHRoZSBDU1MgY2xhc3Mgb2YgdGhlIGRheS5cbiAqIEBwcm9wIGVuZERhdGUgLSBUaGUgZW5kIGRhdGUgaW4gYSByYW5nZS5cbiAqIEBwcm9wIGhpZ2hsaWdodERhdGVzIC0gTWFwIG9mIGRhdGVzIHRvIGJlIGhpZ2hsaWdodGVkLlxuICogQHByb3AgaG9saWRheXMgLSBNYXAgb2YgaG9saWRheSBkYXRlcy5cbiAqIEBwcm9wIGlubGluZSAtIFdoZXRoZXIgdGhlIGRhdGUgcGlja2VyIGlzIGlubGluZS5cbiAqIEBwcm9wIHNob3VsZEZvY3VzRGF5SW5saW5lIC0gV2hldGhlciB0aGUgZGF5IHNob3VsZCBiZSBmb2N1c2VkIHdoZW4gZGF0ZSBwaWNrZXIgaXMgaW5saW5lLlxuICogQHByb3AgbW9udGggLSBUaGUgbW9udGggdGhlIGRheSBiZWxvbmdzIHRvLlxuICogQHByb3Agb25DbGljayAtIENsaWNrIGV2ZW50IGhhbmRsZXIuXG4gKiBAcHJvcCBvbk1vdXNlRW50ZXIgLSBNb3VzZSBlbnRlciBldmVudCBoYW5kbGVyLlxuICogQHByb3AgaGFuZGxlT25LZXlEb3duIC0gS2V5IGRvd24gZXZlbnQgaGFuZGxlci5cbiAqIEBwcm9wIHVzZVBvaW50ZXJFdmVudCAtIFdoZXRoZXIgdG8gdXNlIHBvaW50ZXIgZXZlbnRzLlxuICogQHByb3AgcHJlU2VsZWN0aW9uIC0gVGhlIGRhdGUgdGhhdCBpcyBjdXJyZW50bHkgc2VsZWN0ZWQuXG4gKiBAcHJvcCBzZWxlY3RlZCAtIFRoZSBzZWxlY3RlZCBkYXRlLlxuICogQHByb3Agc2VsZWN0aW5nRGF0ZSAtIFRoZSBkYXRlIGN1cnJlbnRseSBiZWluZyBzZWxlY3RlZC5cbiAqIEBwcm9wIHNlbGVjdHNFbmQgLSBXaGV0aGVyIHRoZSBkYXkgY2FuIGJlIHRoZSBlbmQgZGF0ZSBpbiBhIHJhbmdlLlxuICogQHByb3Agc2VsZWN0c1N0YXJ0IC0gV2hldGhlciB0aGUgZGF5IGNhbiBiZSB0aGUgc3RhcnQgZGF0ZSBpbiBhIHJhbmdlLlxuICogQHByb3Agc2VsZWN0c1JhbmdlIC0gV2hldGhlciB0aGUgZGF5IGNhbiBiZSBpbiBhIHJhbmdlLlxuICogQHByb3Agc2hvd1dlZWtQaWNrZXIgLSBXaGV0aGVyIHRvIHNob3cgd2VlayBwaWNrZXIuXG4gKiBAcHJvcCBzaG93V2Vla051bWJlciAtIFdoZXRoZXIgdG8gc2hvdyB3ZWVrIG51bWJlcnMuXG4gKiBAcHJvcCBzZWxlY3RzRGlzYWJsZWREYXlzSW5SYW5nZSAtIFdoZXRoZXIgdG8gc2VsZWN0IGRpc2FibGVkIGRheXMgaW4gYSByYW5nZS5cbiAqIEBwcm9wIHNlbGVjdHNNdWx0aXBsZSAtIFdoZXRoZXIgdG8gYWxsb3cgbXVsdGlwbGUgZGF0ZSBzZWxlY3Rpb24uXG4gKiBAcHJvcCBzZWxlY3RlZERhdGVzIC0gQXJyYXkgb2Ygc2VsZWN0ZWQgZGF0ZXMuXG4gKiBAcHJvcCBzdGFydERhdGUgLSBUaGUgc3RhcnQgZGF0ZSBpbiBhIHJhbmdlLlxuICogQHByb3AgcmVuZGVyRGF5Q29udGVudHMgLSBGdW5jdGlvbiB0byBjdXN0b21pemUgdGhlIHJlbmRlcmluZyBvZiB0aGUgZGF5J3MgY29udGVudHMuXG4gKiBAcHJvcCBjb250YWluZXJSZWYgLSBSZWYgZm9yIHRoZSBjb250YWluZXIuXG4gKiBAcHJvcCBleGNsdWRlRGF0ZXMgLSBBcnJheSBvZiBkYXRlcyB0byBiZSBleGNsdWRlZC5cbiAqIEBwcm9wIGNhbGVuZGFyU3RhcnREYXkgLSBUaGUgc3RhcnQgZGF5IG9mIHRoZSB3ZWVrLlxuICogQHByb3AgbG9jYWxlIC0gVGhlIGxvY2FsZSBvYmplY3QuXG4gKiBAcHJvcCBtb250aFNob3dzRHVwbGljYXRlRGF5c0VuZCAtIFdoZXRoZXIgdG8gc2hvdyBkdXBsaWNhdGUgZGF5cyBhdCB0aGUgZW5kIG9mIHRoZSBtb250aC5cbiAqIEBwcm9wIG1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzU3RhcnQgLSBXaGV0aGVyIHRvIHNob3cgZHVwbGljYXRlIGRheXMgYXQgdGhlIHN0YXJ0IG9mIHRoZSBtb250aC5cbiAqIEBwcm9wIGluY2x1ZGVEYXRlcyAtIEFycmF5IG9mIGRhdGVzIHRvIGJlIGluY2x1ZGVkLlxuICogQHByb3AgaW5jbHVkZURhdGVJbnRlcnZhbHMgLSBBcnJheSBvZiBkYXRlIGludGVydmFscyB0byBiZSBpbmNsdWRlZC5cbiAqIEBwcm9wIG1pbkRhdGUgLSBUaGUgbWluaW11bSBkYXRlIHRoYXQgY2FuIGJlIHNlbGVjdGVkLlxuICogQHByb3AgbWF4RGF0ZSAtIFRoZSBtYXhpbXVtIGRhdGUgdGhhdCBjYW4gYmUgc2VsZWN0ZWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzeFxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCBEYXkgZnJvbSAnLi9kYXknO1xuICpcbiAqIGZ1bmN0aW9uIE15Q29tcG9uZW50KCkge1xuICogICBjb25zdCBoYW5kbGVEYXlDbGljayA9IChldmVudCkgPT4ge1xuICogICAgIGNvbnNvbGUubG9nKCdEYXkgY2xpY2tlZCcsIGV2ZW50KTtcbiAqICAgfTtcbiAqXG4gKiAgIGNvbnN0IGhhbmRsZURheU1vdXNlRW50ZXIgPSAoZXZlbnQpID0+IHtcbiAqICAgICBjb25zb2xlLmxvZygnTW91c2UgZW50ZXJlZCBkYXknLCBldmVudCk7XG4gKiAgIH07XG4gKlxuICogICBjb25zdCByZW5kZXJEYXlDb250ZW50cyA9IChkYXRlKSA9PiB7XG4gKiAgICAgcmV0dXJuIDxkaXY+e2RhdGUuZ2V0RGF0ZSgpfTwvZGl2PjtcbiAqICAgfTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPERheVxuICogICAgICAgZGF5PXtuZXcgRGF0ZSgpfVxuICogICAgICAgb25DbGljaz17aGFuZGxlRGF5Q2xpY2t9XG4gKiAgICAgICBvbk1vdXNlRW50ZXI9e2hhbmRsZURheU1vdXNlRW50ZXJ9XG4gKiAgICAgICByZW5kZXJEYXlDb250ZW50cz17cmVuZGVyRGF5Q29udGVudHN9XG4gKiAgICAgLz5cbiAqICAgKTtcbiAqIH1cbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqIGBgYFxuICovXG52YXIgRGF5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEYXksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRGF5KCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZGF5RWwgPSBjcmVhdGVSZWYoKTtcbiAgICAgICAgX3RoaXMuaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICghX3RoaXMuaXNEaXNhYmxlZCgpICYmIF90aGlzLnByb3BzLm9uQ2xpY2spIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlTW91c2VFbnRlciA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5pc0Rpc2FibGVkKCkgJiYgX3RoaXMucHJvcHMub25Nb3VzZUVudGVyKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25Nb3VzZUVudGVyKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlT25LZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLlNwYWNlKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBldmVudC5rZXkgPSBLZXlUeXBlLkVudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLmhhbmRsZU9uS2V5RG93bikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTYW1lRGF5ID0gZnVuY3Rpb24gKG90aGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNTYW1lRGF5KF90aGlzLnByb3BzLmRheSwgb3RoZXIpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0tleWJvYXJkU2VsZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaXNTZWxlY3RlZERhdGUgPSBfdGhpcy5wcm9wcy5zZWxlY3RzTXVsdGlwbGVcbiAgICAgICAgICAgICAgICA/IChfYSA9IF90aGlzLnByb3BzLnNlbGVjdGVkRGF0ZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zb21lKGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBfdGhpcy5pc1NhbWVEYXlPcldlZWsoZGF0ZSk7IH0pXG4gICAgICAgICAgICAgICAgOiBfdGhpcy5pc1NhbWVEYXlPcldlZWsoX3RoaXMucHJvcHMuc2VsZWN0ZWQpO1xuICAgICAgICAgICAgdmFyIGlzRGlzYWJsZWQgPSBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24gJiYgX3RoaXMuaXNEaXNhYmxlZChfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24pO1xuICAgICAgICAgICAgcmV0dXJuICghaXNTZWxlY3RlZERhdGUgJiZcbiAgICAgICAgICAgICAgICBfdGhpcy5pc1NhbWVEYXlPcldlZWsoX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uKSAmJlxuICAgICAgICAgICAgICAgICFpc0Rpc2FibGVkKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNEaXNhYmxlZCA9IGZ1bmN0aW9uIChkYXkpIHtcbiAgICAgICAgICAgIGlmIChkYXkgPT09IHZvaWQgMCkgeyBkYXkgPSBfdGhpcy5wcm9wcy5kYXk7IH1cbiAgICAgICAgICAgIC8vIEFsbW9zdCBhbGwgcHJvcHMgcHJldmlvdXNseSB3ZXJlIHBhc3NlZCBhcyB0aGlzLnByb3BzIHcvbyBwcm9wZXIgdHlwaW5nIHdpdGggcHJvcC10eXBlc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgdGhlIG1pZ3JhdGlvbiB0byBUUyBpIG1hZGUgaXQgZXhwbGljaXRcbiAgICAgICAgICAgIHJldHVybiBpc0RheURpc2FibGVkKGRheSwge1xuICAgICAgICAgICAgICAgIG1pbkRhdGU6IF90aGlzLnByb3BzLm1pbkRhdGUsXG4gICAgICAgICAgICAgICAgbWF4RGF0ZTogX3RoaXMucHJvcHMubWF4RGF0ZSxcbiAgICAgICAgICAgICAgICBleGNsdWRlRGF0ZXM6IF90aGlzLnByb3BzLmV4Y2x1ZGVEYXRlcyxcbiAgICAgICAgICAgICAgICBleGNsdWRlRGF0ZUludGVydmFsczogX3RoaXMucHJvcHMuZXhjbHVkZURhdGVJbnRlcnZhbHMsXG4gICAgICAgICAgICAgICAgaW5jbHVkZURhdGVJbnRlcnZhbHM6IF90aGlzLnByb3BzLmluY2x1ZGVEYXRlSW50ZXJ2YWxzLFxuICAgICAgICAgICAgICAgIGluY2x1ZGVEYXRlczogX3RoaXMucHJvcHMuaW5jbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGZpbHRlckRhdGU6IF90aGlzLnByb3BzLmZpbHRlckRhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNFeGNsdWRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vIEFsbW9zdCBhbGwgcHJvcHMgcHJldmlvdXNseSB3ZXJlIHBhc3NlZCBhcyB0aGlzLnByb3BzIHcvbyBwcm9wZXIgdHlwaW5nIHdpdGggcHJvcC10eXBlc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgdGhlIG1pZ3JhdGlvbiB0byBUUyBpIG1hZGUgaXQgZXhwbGljaXRcbiAgICAgICAgICAgIHJldHVybiBpc0RheUV4Y2x1ZGVkKF90aGlzLnByb3BzLmRheSwge1xuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlczogX3RoaXMucHJvcHMuZXhjbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlSW50ZXJ2YWxzOiBfdGhpcy5wcm9wcy5leGNsdWRlRGF0ZUludGVydmFscyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1N0YXJ0T2ZXZWVrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShfdGhpcy5wcm9wcy5kYXksIGdldFN0YXJ0T2ZXZWVrKF90aGlzLnByb3BzLmRheSwgX3RoaXMucHJvcHMubG9jYWxlLCBfdGhpcy5wcm9wcy5jYWxlbmRhclN0YXJ0RGF5KSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzU2FtZVdlZWsgPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlciAmJlxuICAgICAgICAgICAgICAgIGlzU2FtZURheShvdGhlciwgZ2V0U3RhcnRPZldlZWsoX3RoaXMucHJvcHMuZGF5LCBfdGhpcy5wcm9wcy5sb2NhbGUsIF90aGlzLnByb3BzLmNhbGVuZGFyU3RhcnREYXkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTYW1lRGF5T3JXZWVrID0gZnVuY3Rpb24gKG90aGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaXNTYW1lRGF5KG90aGVyKSB8fCBfdGhpcy5pc1NhbWVXZWVrKG90aGVyKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZ2V0SGlnaExpZ2h0ZWRDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIGhpZ2hsaWdodERhdGVzID0gX2EuaGlnaGxpZ2h0RGF0ZXM7XG4gICAgICAgICAgICBpZiAoIWhpZ2hsaWdodERhdGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTG9va2luZyBmb3IgY2xhc3NOYW1lIGluIHRoZSBNYXAgb2YgeydkYXkgc3RyaW5nLCAnY2xhc3NOYW1lJ31cbiAgICAgICAgICAgIHZhciBkYXlTdHIgPSBmb3JtYXREYXRlKGRheSwgXCJNTS5kZC55eXl5XCIpO1xuICAgICAgICAgICAgcmV0dXJuIGhpZ2hsaWdodERhdGVzLmdldChkYXlTdHIpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBGdW5jdGlvbiB0byByZXR1cm4gdGhlIGFycmF5IGNvbnRhaW5pbmcgY2xhc3NOYW1lIGFzc29jaWF0ZWQgdG8gdGhlIGRhdGVcbiAgICAgICAgX3RoaXMuZ2V0SG9saWRheXNDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBkYXkgPSBfYi5kYXksIGhvbGlkYXlzID0gX2IuaG9saWRheXM7XG4gICAgICAgICAgICBpZiAoIWhvbGlkYXlzKSB7XG4gICAgICAgICAgICAgICAgLy8gRm9yIHR5cGUgY29uc2lzdGVuY3kgbm8gb3RoZXIgcmVhc29uc1xuICAgICAgICAgICAgICAgIHJldHVybiBbdW5kZWZpbmVkXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkYXlTdHIgPSBmb3JtYXREYXRlKGRheSwgXCJNTS5kZC55eXl5XCIpO1xuICAgICAgICAgICAgLy8gTG9va2luZyBmb3IgY2xhc3NOYW1lIGluIHRoZSBNYXAgb2Yge2RheSBzdHJpbmc6IHtjbGFzc05hbWUsIGhvbGlkYXlOYW1lfX1cbiAgICAgICAgICAgIGlmIChob2xpZGF5cy5oYXMoZGF5U3RyKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbKF9hID0gaG9saWRheXMuZ2V0KGRheVN0cikpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbGFzc05hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRm9yIHR5cGUgY29uc2lzdGVuY3kgbm8gb3RoZXIgcmVhc29uc1xuICAgICAgICAgICAgcmV0dXJuIFt1bmRlZmluZWRdO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0luUmFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2EuZGF5LCBzdGFydERhdGUgPSBfYS5zdGFydERhdGUsIGVuZERhdGUgPSBfYS5lbmREYXRlO1xuICAgICAgICAgICAgaWYgKCFzdGFydERhdGUgfHwgIWVuZERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXNEYXlJblJhbmdlKGRheSwgc3RhcnREYXRlLCBlbmREYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIGRheSA9IF9iLmRheSwgc2VsZWN0c1N0YXJ0ID0gX2Iuc2VsZWN0c1N0YXJ0LCBzZWxlY3RzRW5kID0gX2Iuc2VsZWN0c0VuZCwgc2VsZWN0c1JhbmdlID0gX2Iuc2VsZWN0c1JhbmdlLCBzZWxlY3RzRGlzYWJsZWREYXlzSW5SYW5nZSA9IF9iLnNlbGVjdHNEaXNhYmxlZERheXNJblJhbmdlLCBzdGFydERhdGUgPSBfYi5zdGFydERhdGUsIGVuZERhdGUgPSBfYi5lbmREYXRlO1xuICAgICAgICAgICAgdmFyIHNlbGVjdGluZ0RhdGUgPSAoX2EgPSBfdGhpcy5wcm9wcy5zZWxlY3RpbmdEYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb247XG4gICAgICAgICAgICBpZiAoIShzZWxlY3RzU3RhcnQgfHwgc2VsZWN0c0VuZCB8fCBzZWxlY3RzUmFuZ2UpIHx8XG4gICAgICAgICAgICAgICAgIXNlbGVjdGluZ0RhdGUgfHxcbiAgICAgICAgICAgICAgICAoIXNlbGVjdHNEaXNhYmxlZERheXNJblJhbmdlICYmIF90aGlzLmlzRGlzYWJsZWQoKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c1N0YXJ0ICYmXG4gICAgICAgICAgICAgICAgZW5kRGF0ZSAmJlxuICAgICAgICAgICAgICAgIChpc0JlZm9yZShzZWxlY3RpbmdEYXRlLCBlbmREYXRlKSB8fCBpc0VxdWFsKHNlbGVjdGluZ0RhdGUsIGVuZERhdGUpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc0RheUluUmFuZ2UoZGF5LCBzZWxlY3RpbmdEYXRlLCBlbmREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxlY3RzRW5kICYmXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlICYmXG4gICAgICAgICAgICAgICAgKGlzQWZ0ZXIoc2VsZWN0aW5nRGF0ZSwgc3RhcnREYXRlKSB8fCBpc0VxdWFsKHNlbGVjdGluZ0RhdGUsIHN0YXJ0RGF0ZSkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzRGF5SW5SYW5nZShkYXksIHN0YXJ0RGF0ZSwgc2VsZWN0aW5nRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c1JhbmdlICYmXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlICYmXG4gICAgICAgICAgICAgICAgIWVuZERhdGUgJiZcbiAgICAgICAgICAgICAgICAoaXNBZnRlcihzZWxlY3RpbmdEYXRlLCBzdGFydERhdGUpIHx8IGlzRXF1YWwoc2VsZWN0aW5nRGF0ZSwgc3RhcnREYXRlKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNEYXlJblJhbmdlKGRheSwgc3RhcnREYXRlLCBzZWxlY3RpbmdEYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RpbmdSYW5nZVN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5pc0luU2VsZWN0aW5nUmFuZ2UoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBkYXkgPSBfYi5kYXksIHN0YXJ0RGF0ZSA9IF9iLnN0YXJ0RGF0ZSwgc2VsZWN0c1N0YXJ0ID0gX2Iuc2VsZWN0c1N0YXJ0O1xuICAgICAgICAgICAgdmFyIHNlbGVjdGluZ0RhdGUgPSAoX2EgPSBfdGhpcy5wcm9wcy5zZWxlY3RpbmdEYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb247XG4gICAgICAgICAgICBpZiAoc2VsZWN0c1N0YXJ0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShkYXksIHNlbGVjdGluZ0RhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShkYXksIHN0YXJ0RGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzU2VsZWN0aW5nUmFuZ2VFbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIV90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIGRheSA9IF9iLmRheSwgZW5kRGF0ZSA9IF9iLmVuZERhdGUsIHNlbGVjdHNFbmQgPSBfYi5zZWxlY3RzRW5kLCBzZWxlY3RzUmFuZ2UgPSBfYi5zZWxlY3RzUmFuZ2U7XG4gICAgICAgICAgICB2YXIgc2VsZWN0aW5nRGF0ZSA9IChfYSA9IF90aGlzLnByb3BzLnNlbGVjdGluZ0RhdGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IF90aGlzLnByb3BzLnByZVNlbGVjdGlvbjtcbiAgICAgICAgICAgIGlmIChzZWxlY3RzRW5kIHx8IHNlbGVjdHNSYW5nZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVEYXkoZGF5LCBzZWxlY3RpbmdEYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVEYXkoZGF5LCBlbmREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNSYW5nZVN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRheSA9IF9hLmRheSwgc3RhcnREYXRlID0gX2Euc3RhcnREYXRlLCBlbmREYXRlID0gX2EuZW5kRGF0ZTtcbiAgICAgICAgICAgIGlmICghc3RhcnREYXRlIHx8ICFlbmREYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShzdGFydERhdGUsIGRheSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzUmFuZ2VFbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2EuZGF5LCBzdGFydERhdGUgPSBfYS5zdGFydERhdGUsIGVuZERhdGUgPSBfYS5lbmREYXRlO1xuICAgICAgICAgICAgaWYgKCFzdGFydERhdGUgfHwgIWVuZERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXNTYW1lRGF5KGVuZERhdGUsIGRheSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzV2Vla2VuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB3ZWVrZGF5ID0gZ2V0RGF5KF90aGlzLnByb3BzLmRheSk7XG4gICAgICAgICAgICByZXR1cm4gd2Vla2RheSA9PT0gMCB8fCB3ZWVrZGF5ID09PSA2O1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0FmdGVyTW9udGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gKF90aGlzLnByb3BzLm1vbnRoICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoX3RoaXMucHJvcHMubW9udGggKyAxKSAlIDEyID09PSBnZXRNb250aChfdGhpcy5wcm9wcy5kYXkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNCZWZvcmVNb250aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAoX3RoaXMucHJvcHMubW9udGggIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIChnZXRNb250aChfdGhpcy5wcm9wcy5kYXkpICsgMSkgJSAxMiA9PT0gX3RoaXMucHJvcHMubW9udGgpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0N1cnJlbnREYXkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5pc1NhbWVEYXkobmV3RGF0ZSgpKTsgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zZWxlY3RzTXVsdGlwbGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9hID0gX3RoaXMucHJvcHMuc2VsZWN0ZWREYXRlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNvbWUoZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmlzU2FtZURheU9yV2VlayhkYXRlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pc1NhbWVEYXlPcldlZWsoX3RoaXMucHJvcHMuc2VsZWN0ZWQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRDbGFzc05hbWVzID0gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgIHZhciBkYXlDbGFzc05hbWUgPSBfdGhpcy5wcm9wcy5kYXlDbGFzc05hbWVcbiAgICAgICAgICAgICAgICA/IF90aGlzLnByb3BzLmRheUNsYXNzTmFtZShkYXRlKVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgcmV0dXJuIGNsc3goXCJyZWFjdC1kYXRlcGlja2VyX19kYXlcIiwgZGF5Q2xhc3NOYW1lLCBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0tXCIgKyBnZXREYXlPZldlZWtDb2RlKF90aGlzLnByb3BzLmRheSksIHtcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0tZGlzYWJsZWRcIjogX3RoaXMuaXNEaXNhYmxlZCgpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LS1leGNsdWRlZFwiOiBfdGhpcy5pc0V4Y2x1ZGVkKCksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19kYXktLXNlbGVjdGVkXCI6IF90aGlzLmlzU2VsZWN0ZWQoKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0ta2V5Ym9hcmQtc2VsZWN0ZWRcIjogX3RoaXMuaXNLZXlib2FyZFNlbGVjdGVkKCksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19kYXktLXJhbmdlLXN0YXJ0XCI6IF90aGlzLmlzUmFuZ2VTdGFydCgpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LS1yYW5nZS1lbmRcIjogX3RoaXMuaXNSYW5nZUVuZCgpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LS1pbi1yYW5nZVwiOiBfdGhpcy5pc0luUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0taW4tc2VsZWN0aW5nLXJhbmdlXCI6IF90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZSgpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LS1zZWxlY3RpbmctcmFuZ2Utc3RhcnRcIjogX3RoaXMuaXNTZWxlY3RpbmdSYW5nZVN0YXJ0KCksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19kYXktLXNlbGVjdGluZy1yYW5nZS1lbmRcIjogX3RoaXMuaXNTZWxlY3RpbmdSYW5nZUVuZCgpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LS10b2RheVwiOiBfdGhpcy5pc0N1cnJlbnREYXkoKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0td2Vla2VuZFwiOiBfdGhpcy5pc1dlZWtlbmQoKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS0tb3V0c2lkZS1tb250aFwiOiBfdGhpcy5pc0FmdGVyTW9udGgoKSB8fCBfdGhpcy5pc0JlZm9yZU1vbnRoKCksXG4gICAgICAgICAgICB9LCBfdGhpcy5nZXRIaWdoTGlnaHRlZENsYXNzKCksIF90aGlzLmdldEhvbGlkYXlzQ2xhc3MoKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldEFyaWFMYWJlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIF9iID0gX2EuYXJpYUxhYmVsUHJlZml4V2hlbkVuYWJsZWQsIGFyaWFMYWJlbFByZWZpeFdoZW5FbmFibGVkID0gX2IgPT09IHZvaWQgMCA/IFwiQ2hvb3NlXCIgOiBfYiwgX2MgPSBfYS5hcmlhTGFiZWxQcmVmaXhXaGVuRGlzYWJsZWQsIGFyaWFMYWJlbFByZWZpeFdoZW5EaXNhYmxlZCA9IF9jID09PSB2b2lkIDAgPyBcIk5vdCBhdmFpbGFibGVcIiA6IF9jO1xuICAgICAgICAgICAgdmFyIHByZWZpeCA9IF90aGlzLmlzRGlzYWJsZWQoKSB8fCBfdGhpcy5pc0V4Y2x1ZGVkKClcbiAgICAgICAgICAgICAgICA/IGFyaWFMYWJlbFByZWZpeFdoZW5EaXNhYmxlZFxuICAgICAgICAgICAgICAgIDogYXJpYUxhYmVsUHJlZml4V2hlbkVuYWJsZWQ7XG4gICAgICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQocHJlZml4LCBcIiBcIikuY29uY2F0KGZvcm1hdERhdGUoZGF5LCBcIlBQUFBcIiwgX3RoaXMucHJvcHMubG9jYWxlKSk7XG4gICAgICAgIH07XG4gICAgICAgIC8vIEEgZnVuY3Rpb24gdG8gcmV0dXJuIHRoZSBob2xpZGF5J3MgbmFtZSBhcyB0aXRsZSdzIGNvbnRlbnRcbiAgICAgICAgX3RoaXMuZ2V0VGl0bGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2EuZGF5LCBfYiA9IF9hLmhvbGlkYXlzLCBob2xpZGF5cyA9IF9iID09PSB2b2lkIDAgPyBuZXcgTWFwKCkgOiBfYiwgZXhjbHVkZURhdGVzID0gX2EuZXhjbHVkZURhdGVzO1xuICAgICAgICAgICAgdmFyIGNvbXBhcmVEdCA9IGZvcm1hdERhdGUoZGF5LCBcIk1NLmRkLnl5eXlcIik7XG4gICAgICAgICAgICB2YXIgdGl0bGVzID0gW107XG4gICAgICAgICAgICBpZiAoaG9saWRheXMuaGFzKGNvbXBhcmVEdCkpIHtcbiAgICAgICAgICAgICAgICB0aXRsZXMucHVzaC5hcHBseSh0aXRsZXMsIGhvbGlkYXlzLmdldChjb21wYXJlRHQpLmhvbGlkYXlOYW1lcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3RoaXMuaXNFeGNsdWRlZCgpKSB7XG4gICAgICAgICAgICAgICAgdGl0bGVzLnB1c2goZXhjbHVkZURhdGVzID09PSBudWxsIHx8IGV4Y2x1ZGVEYXRlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXhjbHVkZURhdGVzLmZpbHRlcihmdW5jdGlvbiAoZXhjbHVkZURhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV4Y2x1ZGVEYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZURheShleGNsdWRlRGF0ZSwgZGF5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNTYW1lRGF5KGV4Y2x1ZGVEYXRlID09PSBudWxsIHx8IGV4Y2x1ZGVEYXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBleGNsdWRlRGF0ZS5kYXRlLCBkYXkpO1xuICAgICAgICAgICAgICAgIH0pLm1hcChmdW5jdGlvbiAoZXhjbHVkZURhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV4Y2x1ZGVEYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXhjbHVkZURhdGUgPT09IG51bGwgfHwgZXhjbHVkZURhdGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGV4Y2x1ZGVEYXRlLm1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSSdtIG5vdCBzdXJlIHRoYXQgdGhpcyBpcyBhIHJpZ2h0IG91dHB1dCwgYnV0IGFsbCB0ZXN0cyBhcmUgZ3JlZW5cbiAgICAgICAgICAgIHJldHVybiB0aXRsZXMuam9pbihcIiwgXCIpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRUYWJJbmRleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZERheSA9IF90aGlzLnByb3BzLnNlbGVjdGVkO1xuICAgICAgICAgICAgdmFyIHByZVNlbGVjdGlvbkRheSA9IF90aGlzLnByb3BzLnByZVNlbGVjdGlvbjtcbiAgICAgICAgICAgIHZhciB0YWJJbmRleCA9ICEoX3RoaXMucHJvcHMuc2hvd1dlZWtQaWNrZXIgJiZcbiAgICAgICAgICAgICAgICAoX3RoaXMucHJvcHMuc2hvd1dlZWtOdW1iZXIgfHwgIV90aGlzLmlzU3RhcnRPZldlZWsoKSkpICYmXG4gICAgICAgICAgICAgICAgKF90aGlzLmlzS2V5Ym9hcmRTZWxlY3RlZCgpIHx8XG4gICAgICAgICAgICAgICAgICAgIChfdGhpcy5pc1NhbWVEYXkoc2VsZWN0ZWREYXkpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NhbWVEYXkocHJlU2VsZWN0aW9uRGF5LCBzZWxlY3RlZERheSkpKVxuICAgICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICAgIDogLTE7XG4gICAgICAgICAgICByZXR1cm4gdGFiSW5kZXg7XG4gICAgICAgIH07XG4gICAgICAgIC8vIHZhcmlvdXMgY2FzZXMgd2hlbiB3ZSBuZWVkIHRvIGFwcGx5IGZvY3VzIHRvIHRoZSBwcmVzZWxlY3RlZCBkYXlcbiAgICAgICAgLy8gZm9jdXMgdGhlIGRheSBvbiBtb3VudC91cGRhdGUgc28gdGhhdCBrZXlib2FyZCBuYXZpZ2F0aW9uIHdvcmtzIHdoaWxlIGN5Y2xpbmcgdGhyb3VnaCBtb250aHMgd2l0aCB1cCBvciBkb3duIGtleXMgKG5vdCBmb3IgcHJldiBhbmQgbmV4dCBtb250aCBidXR0b25zKVxuICAgICAgICAvLyBwcmV2ZW50IGZvY3VzIGZvciB0aGVzZSBhY3RpdmVFbGVtZW50IGNhc2VzIHNvIHdlIGRvbid0IHB1bGwgZm9jdXMgZnJvbSB0aGUgaW5wdXQgYXMgdGhlIGNhbGVuZGFyIG9wZW5zXG4gICAgICAgIF90aGlzLmhhbmRsZUZvY3VzRGF5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgLy8gb25seSBkbyB0aGlzIHdoaWxlIHRoZSBpbnB1dCBpc24ndCBmb2N1c2VkXG4gICAgICAgICAgICAvLyBvdGhlcndpc2UsIHR5cGluZy9iYWNrc3BhY2luZyB0aGUgZGF0ZSBtYW51YWxseSBtYXkgc3RlYWwgZm9jdXMgYXdheSBmcm9tIHRoZSBpbnB1dFxuICAgICAgICAgICAgX3RoaXMuc2hvdWxkRm9jdXNEYXkoKSAmJiAoKF9hID0gX3RoaXMuZGF5RWwuY3VycmVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlckRheUNvbnRlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzRW5kICYmIF90aGlzLmlzQWZ0ZXJNb250aCgpKVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzU3RhcnQgJiYgX3RoaXMuaXNCZWZvcmVNb250aCgpKVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnByb3BzLnJlbmRlckRheUNvbnRlbnRzXG4gICAgICAgICAgICAgICAgPyBfdGhpcy5wcm9wcy5yZW5kZXJEYXlDb250ZW50cyhnZXREYXRlKF90aGlzLnByb3BzLmRheSksIF90aGlzLnByb3BzLmRheSlcbiAgICAgICAgICAgICAgICA6IGdldERhdGUoX3RoaXMucHJvcHMuZGF5KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKFxuICAgICAgICAvLyBUT0RPOiBVc2UgPG9wdGlvbj4gaW5zdGVhZCBvZiB0aGUgXCJvcHRpb25cIiByb2xlIHRvIGVuc3VyZSBhY2Nlc3NpYmlsaXR5IGFjcm9zcyBhbGwgZGV2aWNlcy5cbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogX3RoaXMuZGF5RWwsIGNsYXNzTmFtZTogX3RoaXMuZ2V0Q2xhc3NOYW1lcyhfdGhpcy5wcm9wcy5kYXkpLCBvbktleURvd246IF90aGlzLmhhbmRsZU9uS2V5RG93biwgb25DbGljazogX3RoaXMuaGFuZGxlQ2xpY2ssIG9uTW91c2VFbnRlcjogIV90aGlzLnByb3BzLnVzZVBvaW50ZXJFdmVudCA/IF90aGlzLmhhbmRsZU1vdXNlRW50ZXIgOiB1bmRlZmluZWQsIG9uUG9pbnRlckVudGVyOiBfdGhpcy5wcm9wcy51c2VQb2ludGVyRXZlbnQgPyBfdGhpcy5oYW5kbGVNb3VzZUVudGVyIDogdW5kZWZpbmVkLCB0YWJJbmRleDogX3RoaXMuZ2V0VGFiSW5kZXgoKSwgXCJhcmlhLWxhYmVsXCI6IF90aGlzLmdldEFyaWFMYWJlbCgpLCByb2xlOiBcIm9wdGlvblwiLCB0aXRsZTogX3RoaXMuZ2V0VGl0bGUoKSwgXCJhcmlhLWRpc2FibGVkXCI6IF90aGlzLmlzRGlzYWJsZWQoKSwgXCJhcmlhLWN1cnJlbnRcIjogX3RoaXMuaXNDdXJyZW50RGF5KCkgPyBcImRhdGVcIiA6IHVuZGVmaW5lZCwgXCJhcmlhLXNlbGVjdGVkXCI6IF90aGlzLmlzU2VsZWN0ZWQoKSB8fCBfdGhpcy5pc0luUmFuZ2UoKSB9LFxuICAgICAgICAgICAgX3RoaXMucmVuZGVyRGF5Q29udGVudHMoKSxcbiAgICAgICAgICAgIF90aGlzLmdldFRpdGxlKCkgIT09IFwiXCIgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcIm92ZXJsYXlcIiB9LCBfdGhpcy5nZXRUaXRsZSgpKSkpKTsgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBEYXkucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhhbmRsZUZvY3VzRGF5KCk7XG4gICAgfTtcbiAgICBEYXkucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVGb2N1c0RheSgpO1xuICAgIH07XG4gICAgRGF5LnByb3RvdHlwZS5zaG91bGRGb2N1c0RheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNob3VsZEZvY3VzRGF5ID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLmdldFRhYkluZGV4KCkgPT09IDAgJiYgdGhpcy5pc1NhbWVEYXkodGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24pKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBjdXJyZW50bHkgbm8gYWN0aXZlRWxlbWVudCBhbmQgbm90IGlubGluZVxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5hY3RpdmVFbGVtZW50IHx8IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICAgICAgICBzaG91bGRGb2N1c0RheSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpbmxpbmUgdmVyc2lvbjpcbiAgICAgICAgICAgIC8vIGRvIG5vdCBmb2N1cyBvbiBpbml0aWFsIHJlbmRlciB0byBwcmV2ZW50IGF1dG9Gb2N1cyBpc3N1ZVxuICAgICAgICAgICAgLy8gZm9jdXMgYWZ0ZXIgbW9udGggaGFzIGNoYW5nZWQgdmlhIGtleWJvYXJkXG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5pbmxpbmUgJiYgIXRoaXMucHJvcHMuc2hvdWxkRm9jdXNEYXlJbmxpbmUpIHtcbiAgICAgICAgICAgICAgICBzaG91bGRGb2N1c0RheSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNEYXlBY3RpdmVFbGVtZW50KCkpIHtcbiAgICAgICAgICAgICAgICBzaG91bGRGb2N1c0RheSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5pc0R1cGxpY2F0ZURheSgpKSB7XG4gICAgICAgICAgICAgICAgc2hvdWxkRm9jdXNEYXkgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2hvdWxkRm9jdXNEYXk7XG4gICAgfTtcbiAgICAvLyB0aGUgYWN0aXZlRWxlbWVudCBpcyBpbiB0aGUgY29udGFpbmVyLCBhbmQgaXQgaXMgYW5vdGhlciBpbnN0YW5jZSBvZiBEYXlcbiAgICBEYXkucHJvdG90eXBlLmlzRGF5QWN0aXZlRWxlbWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgIHJldHVybiAoKChfYiA9IChfYSA9IHRoaXMucHJvcHMuY29udGFpbmVyUmVmKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY3VycmVudCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSAmJlxuICAgICAgICAgICAgKChfYyA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jbGFzc0xpc3QuY29udGFpbnMoXCJyZWFjdC1kYXRlcGlja2VyX19kYXlcIikpKTtcbiAgICB9O1xuICAgIERheS5wcm90b3R5cGUuaXNEdXBsaWNhdGVEYXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgIC8vZGF5IGlzIG9uZSBvZiB0aGUgbm9uIHJlbmRlcmVkIGR1cGxpY2F0ZSBkYXlzXG4gICAgICAgICh0aGlzLnByb3BzLm1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzRW5kICYmIHRoaXMuaXNBZnRlck1vbnRoKCkpIHx8XG4gICAgICAgICAgICAodGhpcy5wcm9wcy5tb250aFNob3dzRHVwbGljYXRlRGF5c1N0YXJ0ICYmIHRoaXMuaXNCZWZvcmVNb250aCgpKSk7XG4gICAgfTtcbiAgICByZXR1cm4gRGF5O1xufShDb21wb25lbnQpKTtcblxudmFyIFdlZWtOdW1iZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFdlZWtOdW1iZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gV2Vla051bWJlcigpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLndlZWtOdW1iZXJFbCA9IGNyZWF0ZVJlZigpO1xuICAgICAgICBfdGhpcy5oYW5kbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2xpY2spIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlT25LZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLlNwYWNlKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBldmVudC5rZXkgPSBLZXlUeXBlLkVudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLmhhbmRsZU9uS2V5RG93bikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNLZXlib2FyZFNlbGVjdGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICFfdGhpcy5wcm9wcy5kaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbiAmJlxuICAgICAgICAgICAgICAgICFpc1NhbWVEYXkoX3RoaXMucHJvcHMuZGF0ZSwgX3RoaXMucHJvcHMuc2VsZWN0ZWQpICYmXG4gICAgICAgICAgICAgICAgaXNTYW1lRGF5KF90aGlzLnByb3BzLmRhdGUsIF90aGlzLnByb3BzLnByZVNlbGVjdGlvbik7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldFRhYkluZGV4ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnByb3BzLnNob3dXZWVrUGlja2VyICYmXG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2hvd1dlZWtOdW1iZXIgJiZcbiAgICAgICAgICAgICAgICAoX3RoaXMuaXNLZXlib2FyZFNlbGVjdGVkKCkgfHxcbiAgICAgICAgICAgICAgICAgICAgKGlzU2FtZURheShfdGhpcy5wcm9wcy5kYXRlLCBfdGhpcy5wcm9wcy5zZWxlY3RlZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzU2FtZURheShfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24sIF90aGlzLnByb3BzLnNlbGVjdGVkKSkpXG4gICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgOiAtMTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gdmFyaW91cyBjYXNlcyB3aGVuIHdlIG5lZWQgdG8gYXBwbHkgZm9jdXMgdG8gdGhlIHByZXNlbGVjdGVkIHdlZWstbnVtYmVyXG4gICAgICAgIC8vIGZvY3VzIHRoZSB3ZWVrLW51bWJlciBvbiBtb3VudC91cGRhdGUgc28gdGhhdCBrZXlib2FyZCBuYXZpZ2F0aW9uIHdvcmtzIHdoaWxlIGN5Y2xpbmcgdGhyb3VnaCBtb250aHMgd2l0aCB1cCBvciBkb3duIGtleXMgKG5vdCBmb3IgcHJldiBhbmQgbmV4dCBtb250aCBidXR0b25zKVxuICAgICAgICAvLyBwcmV2ZW50IGZvY3VzIGZvciB0aGVzZSBhY3RpdmVFbGVtZW50IGNhc2VzIHNvIHdlIGRvbid0IHB1bGwgZm9jdXMgZnJvbSB0aGUgaW5wdXQgYXMgdGhlIGNhbGVuZGFyIG9wZW5zXG4gICAgICAgIF90aGlzLmhhbmRsZUZvY3VzV2Vla051bWJlciA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICAgICAgICAgIHZhciBzaG91bGRGb2N1c1dlZWtOdW1iZXIgPSBmYWxzZTtcbiAgICAgICAgICAgIC8vIG9ubHkgZG8gdGhpcyB3aGlsZSB0aGUgaW5wdXQgaXNuJ3QgZm9jdXNlZFxuICAgICAgICAgICAgLy8gb3RoZXJ3aXNlLCB0eXBpbmcvYmFja3NwYWNpbmcgdGhlIGRhdGUgbWFudWFsbHkgbWF5IHN0ZWFsIGZvY3VzIGF3YXkgZnJvbSB0aGUgaW5wdXRcbiAgICAgICAgICAgIGlmIChfdGhpcy5nZXRUYWJJbmRleCgpID09PSAwICYmXG4gICAgICAgICAgICAgICAgIShwcmV2UHJvcHMgPT09IG51bGwgfHwgcHJldlByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcmV2UHJvcHMuaXNJbnB1dEZvY3VzZWQpICYmXG4gICAgICAgICAgICAgICAgaXNTYW1lRGF5KF90aGlzLnByb3BzLmRhdGUsIF90aGlzLnByb3BzLnByZVNlbGVjdGlvbikpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGVyZSBpcyBjdXJyZW50bHkgbm8gYWN0aXZlRWxlbWVudCBhbmQgbm90IGlubGluZVxuICAgICAgICAgICAgICAgIGlmICghZG9jdW1lbnQuYWN0aXZlRWxlbWVudCB8fCBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZEZvY3VzV2Vla051bWJlciA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGlubGluZSB2ZXJzaW9uOlxuICAgICAgICAgICAgICAgIC8vIGRvIG5vdCBmb2N1cyBvbiBpbml0aWFsIHJlbmRlciB0byBwcmV2ZW50IGF1dG9Gb2N1cyBpc3N1ZVxuICAgICAgICAgICAgICAgIC8vIGZvY3VzIGFmdGVyIG1vbnRoIGhhcyBjaGFuZ2VkIHZpYSBrZXlib2FyZFxuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5pbmxpbmUgJiYgIV90aGlzLnByb3BzLnNob3VsZEZvY3VzRGF5SW5saW5lKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZEZvY3VzV2Vla051bWJlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyB0aGUgYWN0aXZlRWxlbWVudCBpcyBpbiB0aGUgY29udGFpbmVyLCBhbmQgaXQgaXMgYW5vdGhlciBpbnN0YW5jZSBvZiBXZWVrTnVtYmVyXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmNvbnRhaW5lclJlZiAmJlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5jb250YWluZXJSZWYuY3VycmVudCAmJlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5jb250YWluZXJSZWYuY3VycmVudC5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSAmJlxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicmVhY3QtZGF0ZXBpY2tlcl9fd2Vlay1udW1iZXJcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkRm9jdXNXZWVrTnVtYmVyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaG91bGRGb2N1c1dlZWtOdW1iZXIgJiZcbiAgICAgICAgICAgICAgICBfdGhpcy53ZWVrTnVtYmVyRWwuY3VycmVudCAmJlxuICAgICAgICAgICAgICAgIF90aGlzLndlZWtOdW1iZXJFbC5jdXJyZW50LmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoV2Vla051bWJlciwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYXJpYUxhYmVsUHJlZml4OiBcIndlZWsgXCIsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgV2Vla051bWJlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlRm9jdXNXZWVrTnVtYmVyKCk7XG4gICAgfTtcbiAgICBXZWVrTnVtYmVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlRm9jdXNXZWVrTnVtYmVyKHByZXZQcm9wcyk7XG4gICAgfTtcbiAgICBXZWVrTnVtYmVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIHdlZWtOdW1iZXIgPSBfYS53ZWVrTnVtYmVyLCBpc1dlZWtEaXNhYmxlZCA9IF9hLmlzV2Vla0Rpc2FibGVkLCBfYiA9IF9hLmFyaWFMYWJlbFByZWZpeCwgYXJpYUxhYmVsUHJlZml4ID0gX2IgPT09IHZvaWQgMCA/IFdlZWtOdW1iZXIuZGVmYXVsdFByb3BzLmFyaWFMYWJlbFByZWZpeCA6IF9iLCBvbkNsaWNrID0gX2Eub25DbGljaztcbiAgICAgICAgdmFyIHdlZWtOdW1iZXJDbGFzc2VzID0ge1xuICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX193ZWVrLW51bWJlclwiOiB0cnVlLFxuICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX193ZWVrLW51bWJlci0tY2xpY2thYmxlXCI6ICEhb25DbGljayAmJiAhaXNXZWVrRGlzYWJsZWQsXG4gICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3dlZWstbnVtYmVyLS1zZWxlY3RlZFwiOiAhIW9uQ2xpY2sgJiYgaXNTYW1lRGF5KHRoaXMucHJvcHMuZGF0ZSwgdGhpcy5wcm9wcy5zZWxlY3RlZCksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogdGhpcy53ZWVrTnVtYmVyRWwsIGNsYXNzTmFtZTogY2xzeCh3ZWVrTnVtYmVyQ2xhc3NlcyksIFwiYXJpYS1sYWJlbFwiOiBcIlwiLmNvbmNhdChhcmlhTGFiZWxQcmVmaXgsIFwiIFwiKS5jb25jYXQodGhpcy5wcm9wcy53ZWVrTnVtYmVyKSwgb25DbGljazogdGhpcy5oYW5kbGVDbGljaywgb25LZXlEb3duOiB0aGlzLmhhbmRsZU9uS2V5RG93biwgdGFiSW5kZXg6IHRoaXMuZ2V0VGFiSW5kZXgoKSB9LCB3ZWVrTnVtYmVyKSk7XG4gICAgfTtcbiAgICByZXR1cm4gV2Vla051bWJlcjtcbn0oQ29tcG9uZW50KSk7XG5cbnZhciBXZWVrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhXZWVrLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFdlZWsoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5pc0Rpc2FibGVkID0gZnVuY3Rpb24gKGRheSkge1xuICAgICAgICAgICAgcmV0dXJuIGlzRGF5RGlzYWJsZWQoZGF5LCB7XG4gICAgICAgICAgICAgICAgbWluRGF0ZTogX3RoaXMucHJvcHMubWluRGF0ZSxcbiAgICAgICAgICAgICAgICBtYXhEYXRlOiBfdGhpcy5wcm9wcy5tYXhEYXRlLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlczogX3RoaXMucHJvcHMuZXhjbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlSW50ZXJ2YWxzOiBfdGhpcy5wcm9wcy5leGNsdWRlRGF0ZUludGVydmFscyxcbiAgICAgICAgICAgICAgICBpbmNsdWRlRGF0ZUludGVydmFsczogX3RoaXMucHJvcHMuaW5jbHVkZURhdGVJbnRlcnZhbHMsXG4gICAgICAgICAgICAgICAgaW5jbHVkZURhdGVzOiBfdGhpcy5wcm9wcy5pbmNsdWRlRGF0ZXMsXG4gICAgICAgICAgICAgICAgZmlsdGVyRGF0ZTogX3RoaXMucHJvcHMuZmlsdGVyRGF0ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVEYXlDbGljayA9IGZ1bmN0aW9uIChkYXksIGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMub25EYXlDbGljaykge1xuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLm9uRGF5Q2xpY2soZGF5LCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZURheU1vdXNlRW50ZXIgPSBmdW5jdGlvbiAoZGF5KSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMub25EYXlNb3VzZUVudGVyKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25EYXlNb3VzZUVudGVyKGRheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZVdlZWtDbGljayA9IGZ1bmN0aW9uIChkYXksIHdlZWtOdW1iZXIsIGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIHZhciBlbmFibGVkV2Vla0RheSA9IG5ldyBEYXRlKGRheSk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDc7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzaW5nRGF5ID0gbmV3IERhdGUoZGF5KTtcbiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nRGF5LnNldERhdGUocHJvY2Vzc2luZ0RheS5nZXREYXRlKCkgKyBpKTtcbiAgICAgICAgICAgICAgICB2YXIgaXNFbmFibGVkID0gIV90aGlzLmlzRGlzYWJsZWQocHJvY2Vzc2luZ0RheSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVkV2Vla0RheSA9IHByb2Nlc3NpbmdEYXk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgX3RoaXMucHJvcHMub25XZWVrU2VsZWN0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vbldlZWtTZWxlY3QoZW5hYmxlZFdlZWtEYXksIHdlZWtOdW1iZXIsIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlcikge1xuICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZURheUNsaWNrKGVuYWJsZWRXZWVrRGF5LCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKF9hID0gX3RoaXMucHJvcHMuc2hvdWxkQ2xvc2VPblNlbGVjdCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogV2Vlay5kZWZhdWx0UHJvcHMuc2hvdWxkQ2xvc2VPblNlbGVjdCkge1xuICAgICAgICAgICAgICAgIChfYyA9IChfYiA9IF90aGlzLnByb3BzKS5zZXRPcGVuKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5mb3JtYXRXZWVrTnVtYmVyID0gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5mb3JtYXRXZWVrTnVtYmVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnByb3BzLmZvcm1hdFdlZWtOdW1iZXIoZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZ2V0V2VlayhkYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNXZWVrRGlzYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnRPZldlZWsgPSBfdGhpcy5zdGFydE9mV2VlaygpO1xuICAgICAgICAgICAgdmFyIGVuZE9mV2VlayA9IGFkZERheXMoc3RhcnRPZldlZWssIDYpO1xuICAgICAgICAgICAgdmFyIHByb2Nlc3NpbmdEYXRlID0gbmV3IERhdGUoc3RhcnRPZldlZWspO1xuICAgICAgICAgICAgd2hpbGUgKHByb2Nlc3NpbmdEYXRlIDw9IGVuZE9mV2Vlaykge1xuICAgICAgICAgICAgICAgIGlmICghX3RoaXMuaXNEaXNhYmxlZChwcm9jZXNzaW5nRGF0ZSkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nRGF0ZSA9IGFkZERheXMocHJvY2Vzc2luZ0RhdGUsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlckRheXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnRPZldlZWsgPSBfdGhpcy5zdGFydE9mV2VlaygpO1xuICAgICAgICAgICAgdmFyIGRheXMgPSBbXTtcbiAgICAgICAgICAgIHZhciB3ZWVrTnVtYmVyID0gX3RoaXMuZm9ybWF0V2Vla051bWJlcihzdGFydE9mV2Vlayk7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd1dlZWtOdW1iZXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgb25DbGlja0FjdGlvbiA9IF90aGlzLnByb3BzLm9uV2Vla1NlbGVjdCB8fCBfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlclxuICAgICAgICAgICAgICAgICAgICA/IF90aGlzLmhhbmRsZVdlZWtDbGljay5iaW5kKF90aGlzLCBzdGFydE9mV2Vlaywgd2Vla051bWJlcilcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgZGF5cy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2Vla051bWJlciwgX2Fzc2lnbih7IGtleTogXCJXXCIgfSwgV2Vlay5kZWZhdWx0UHJvcHMsIF90aGlzLnByb3BzLCB7IHdlZWtOdW1iZXI6IHdlZWtOdW1iZXIsIGlzV2Vla0Rpc2FibGVkOiBfdGhpcy5pc1dlZWtEaXNhYmxlZCgpLCBkYXRlOiBzdGFydE9mV2Vlaywgb25DbGljazogb25DbGlja0FjdGlvbiB9KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRheXMuY29uY2F0KFswLCAxLCAyLCAzLCA0LCA1LCA2XS5tYXAoZnVuY3Rpb24gKG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXkgPSBhZGREYXlzKHN0YXJ0T2ZXZWVrLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChEYXksIF9hc3NpZ24oe30sIFdlZWsuZGVmYXVsdFByb3BzLCBfdGhpcy5wcm9wcywgeyBhcmlhTGFiZWxQcmVmaXhXaGVuRW5hYmxlZDogX3RoaXMucHJvcHMuY2hvb3NlRGF5QXJpYUxhYmVsUHJlZml4LCBhcmlhTGFiZWxQcmVmaXhXaGVuRGlzYWJsZWQ6IF90aGlzLnByb3BzLmRpc2FibGVkRGF5QXJpYUxhYmVsUHJlZml4LCBrZXk6IGRheS52YWx1ZU9mKCksIGRheTogZGF5LCBvbkNsaWNrOiBfdGhpcy5oYW5kbGVEYXlDbGljay5iaW5kKF90aGlzLCBkYXkpLCBvbk1vdXNlRW50ZXI6IF90aGlzLmhhbmRsZURheU1vdXNlRW50ZXIuYmluZChfdGhpcywgZGF5KSB9KSkpO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zdGFydE9mV2VlayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRTdGFydE9mV2VlayhfdGhpcy5wcm9wcy5kYXksIF90aGlzLnByb3BzLmxvY2FsZSwgX3RoaXMucHJvcHMuY2FsZW5kYXJTdGFydERheSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzS2V5Ym9hcmRTZWxlY3RlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAhX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gJiZcbiAgICAgICAgICAgICAgICAhaXNTYW1lRGF5KF90aGlzLnN0YXJ0T2ZXZWVrKCksIF90aGlzLnByb3BzLnNlbGVjdGVkKSAmJlxuICAgICAgICAgICAgICAgIGlzU2FtZURheShfdGhpcy5zdGFydE9mV2VlaygpLCBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24pO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWVrLCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzaG91bGRDbG9zZU9uU2VsZWN0OiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFdlZWsucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHdlZWtOdW1iZXJDbGFzc2VzID0ge1xuICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX193ZWVrXCI6IHRydWUsXG4gICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3dlZWstLXNlbGVjdGVkXCI6IGlzU2FtZURheSh0aGlzLnN0YXJ0T2ZXZWVrKCksIHRoaXMucHJvcHMuc2VsZWN0ZWQpLFxuICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX193ZWVrLS1rZXlib2FyZC1zZWxlY3RlZFwiOiB0aGlzLmlzS2V5Ym9hcmRTZWxlY3RlZCgpLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xzeCh3ZWVrTnVtYmVyQ2xhc3NlcykgfSwgdGhpcy5yZW5kZXJEYXlzKCkpO1xuICAgIH07XG4gICAgcmV0dXJuIFdlZWs7XG59KENvbXBvbmVudCkpO1xuXG52YXIgX2E7XG52YXIgRklYRURfSEVJR0hUX1NUQU5EQVJEX1dFRUtfQ09VTlQgPSA2O1xudmFyIE1PTlRIX0NPTFVNTlNfTEFZT1VUID0ge1xuICAgIFRXT19DT0xVTU5TOiBcInR3b19jb2x1bW5zXCIsXG4gICAgVEhSRUVfQ09MVU1OUzogXCJ0aHJlZV9jb2x1bW5zXCIsXG4gICAgRk9VUl9DT0xVTU5TOiBcImZvdXJfY29sdW1uc1wiLFxufTtcbnZhciBNT05USF9DT0xVTU5TID0gKF9hID0ge30sXG4gICAgX2FbTU9OVEhfQ09MVU1OU19MQVlPVVQuVFdPX0NPTFVNTlNdID0ge1xuICAgICAgICBncmlkOiBbXG4gICAgICAgICAgICBbMCwgMV0sXG4gICAgICAgICAgICBbMiwgM10sXG4gICAgICAgICAgICBbNCwgNV0sXG4gICAgICAgICAgICBbNiwgN10sXG4gICAgICAgICAgICBbOCwgOV0sXG4gICAgICAgICAgICBbMTAsIDExXSxcbiAgICAgICAgXSxcbiAgICAgICAgdmVydGljYWxOYXZpZ2F0aW9uT2Zmc2V0OiAyLFxuICAgIH0sXG4gICAgX2FbTU9OVEhfQ09MVU1OU19MQVlPVVQuVEhSRUVfQ09MVU1OU10gPSB7XG4gICAgICAgIGdyaWQ6IFtcbiAgICAgICAgICAgIFswLCAxLCAyXSxcbiAgICAgICAgICAgIFszLCA0LCA1XSxcbiAgICAgICAgICAgIFs2LCA3LCA4XSxcbiAgICAgICAgICAgIFs5LCAxMCwgMTFdLFxuICAgICAgICBdLFxuICAgICAgICB2ZXJ0aWNhbE5hdmlnYXRpb25PZmZzZXQ6IDMsXG4gICAgfSxcbiAgICBfYVtNT05USF9DT0xVTU5TX0xBWU9VVC5GT1VSX0NPTFVNTlNdID0ge1xuICAgICAgICBncmlkOiBbXG4gICAgICAgICAgICBbMCwgMSwgMiwgM10sXG4gICAgICAgICAgICBbNCwgNSwgNiwgN10sXG4gICAgICAgICAgICBbOCwgOSwgMTAsIDExXSxcbiAgICAgICAgXSxcbiAgICAgICAgdmVydGljYWxOYXZpZ2F0aW9uT2Zmc2V0OiA0LFxuICAgIH0sXG4gICAgX2EpO1xudmFyIE1PTlRIX05BVklHQVRJT05fSE9SSVpPTlRBTF9PRkZTRVQgPSAxO1xuZnVuY3Rpb24gZ2V0TW9udGhDb2x1bW5zTGF5b3V0KHNob3dGb3VyQ29sdW1uTW9udGhZZWFyUGlja2VyLCBzaG93VHdvQ29sdW1uTW9udGhZZWFyUGlja2VyKSB7XG4gICAgaWYgKHNob3dGb3VyQ29sdW1uTW9udGhZZWFyUGlja2VyKSB7XG4gICAgICAgIHJldHVybiBNT05USF9DT0xVTU5TX0xBWU9VVC5GT1VSX0NPTFVNTlM7XG4gICAgfVxuICAgIGlmIChzaG93VHdvQ29sdW1uTW9udGhZZWFyUGlja2VyKSB7XG4gICAgICAgIHJldHVybiBNT05USF9DT0xVTU5TX0xBWU9VVC5UV09fQ09MVU1OUztcbiAgICB9XG4gICAgcmV0dXJuIE1PTlRIX0NPTFVNTlNfTEFZT1VULlRIUkVFX0NPTFVNTlM7XG59XG4vKipcbiAqIGBNb250aGAgaXMgYSBSZWFjdCBjb21wb25lbnQgdGhhdCByZXByZXNlbnRzIGEgbW9udGggaW4gYSBjYWxlbmRhci5cbiAqIEl0IGFjY2VwdHMgYSBgTW9udGhQcm9wc2Agb2JqZWN0IGFzIHByb3BzIHdoaWNoIHByb3ZpZGVzIHZhcmlvdXMgY29uZmlndXJhdGlvbnMgYW5kIGV2ZW50IGhhbmRsZXJzLlxuICpcbiAqIEBwcm9wIGRheUNsYXNzTmFtZSAtIEZ1bmN0aW9uIHRvIGRldGVybWluZSB0aGUgY2xhc3MgbmFtZSBmb3IgYSBkYXkuXG4gKiBAcHJvcCBtb250aENsYXNzTmFtZSAtIEZ1bmN0aW9uIHRvIGRldGVybWluZSB0aGUgY2xhc3MgbmFtZSBmb3IgYSBtb250aC5cbiAqIEBwcm9wIGZpbHRlckRhdGUgLSBGdW5jdGlvbiB0byBmaWx0ZXIgZGF0ZXMuXG4gKiBAcHJvcCBmb3JtYXRXZWVrTnVtYmVyIC0gRnVuY3Rpb24gdG8gZm9ybWF0IHRoZSB3ZWVrIG51bWJlci5cbiAqIEBwcm9wIG9uRGF5Q2xpY2sgLSBGdW5jdGlvbiB0byBoYW5kbGUgZGF5IGNsaWNrIGV2ZW50cy5cbiAqIEBwcm9wIG9uRGF5TW91c2VFbnRlciAtIEZ1bmN0aW9uIHRvIGhhbmRsZSBtb3VzZSBlbnRlciBldmVudHMgb24gYSBkYXkuXG4gKiBAcHJvcCBvbk1vdXNlTGVhdmUgLSBGdW5jdGlvbiB0byBoYW5kbGUgbW91c2UgbGVhdmUgZXZlbnRzLlxuICogQHByb3Agb25XZWVrU2VsZWN0IC0gRnVuY3Rpb24gdG8gaGFuZGxlIHdlZWsgc2VsZWN0aW9uLlxuICogQHByb3Agc2V0UHJlU2VsZWN0aW9uIC0gRnVuY3Rpb24gdG8gc2V0IHByZS1zZWxlY3Rpb24uXG4gKiBAcHJvcCBzZXRPcGVuIC0gRnVuY3Rpb24gdG8gc2V0IG9wZW4gc3RhdGUuXG4gKiBAcHJvcCByZW5kZXJEYXlDb250ZW50cyAtIEZ1bmN0aW9uIHRvIHJlbmRlciBkYXkgY29udGVudHMuXG4gKiBAcHJvcCByZW5kZXJNb250aENvbnRlbnQgLSBGdW5jdGlvbiB0byByZW5kZXIgbW9udGggY29udGVudC5cbiAqIEBwcm9wIHJlbmRlclF1YXJ0ZXJDb250ZW50IC0gRnVuY3Rpb24gdG8gcmVuZGVyIHF1YXJ0ZXIgY29udGVudC5cbiAqIEBwcm9wIGhhbmRsZU9uS2V5RG93biAtIEZ1bmN0aW9uIHRvIGhhbmRsZSBrZXkgZG93biBldmVudHMuXG4gKiBAcHJvcCBoYW5kbGVPbk1vbnRoS2V5RG93biAtIEZ1bmN0aW9uIHRvIGhhbmRsZSBrZXkgZG93biBldmVudHMgb24gYSBtb250aC5cbiAqIEBwcm9wIGFyaWFMYWJlbFByZWZpeCAtIEFyaWEgbGFiZWwgcHJlZml4LlxuICogQHByb3AgY2hvb3NlRGF5QXJpYUxhYmVsUHJlZml4IC0gQXJpYSBsYWJlbCBwcmVmaXggZm9yIGNob29zaW5nIGEgZGF5LlxuICogQHByb3AgZGlzYWJsZWREYXlBcmlhTGFiZWxQcmVmaXggLSBBcmlhIGxhYmVsIHByZWZpeCBmb3IgZGlzYWJsZWQgZGF5LlxuICogQHByb3AgZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gLSBGbGFnIHRvIGRpc2FibGUga2V5Ym9hcmQgbmF2aWdhdGlvbi5cbiAqIEBwcm9wIGRheSAtIFRoZSBkYXkuXG4gKiBAcHJvcCBlbmREYXRlIC0gVGhlIGVuZCBkYXRlLlxuICogQHByb3Agb3JkZXJJbkRpc3BsYXkgLSBUaGUgb3JkZXIgaW4gZGlzcGxheS5cbiAqIEBwcm9wIGV4Y2x1ZGVEYXRlcyAtIERhdGVzIHRvIGV4Y2x1ZGUuXG4gKiBAcHJvcCBleGNsdWRlRGF0ZUludGVydmFscyAtIERhdGUgaW50ZXJ2YWxzIHRvIGV4Y2x1ZGUuXG4gKiBAcHJvcCBmaXhlZEhlaWdodCAtIEZsYWcgdG8gc2V0IGZpeGVkIGhlaWdodC5cbiAqIEBwcm9wIGhpZ2hsaWdodERhdGVzIC0gRGF0ZXMgdG8gaGlnaGxpZ2h0LlxuICogQHByb3AgaG9saWRheXMgLSBIb2xpZGF5cy5cbiAqIEBwcm9wIGluY2x1ZGVEYXRlcyAtIERhdGVzIHRvIGluY2x1ZGUuXG4gKiBAcHJvcCBpbmNsdWRlRGF0ZUludGVydmFscyAtIERhdGUgaW50ZXJ2YWxzIHRvIGluY2x1ZGUuXG4gKiBAcHJvcCBpbmxpbmUgLSBGbGFnIHRvIHNldCBpbmxpbmUuXG4gKiBAcHJvcCBzaG91bGRGb2N1c0RheUlubGluZSAtIEZsYWcgdG8gc2V0IGZvY3VzIG9uIGRheSBpbmxpbmUuXG4gKiBAcHJvcCBsb2NhbGUgLSBUaGUgbG9jYWxlLlxuICogQHByb3AgbWF4RGF0ZSAtIFRoZSBtYXhpbXVtIGRhdGUuXG4gKiBAcHJvcCBtaW5EYXRlIC0gVGhlIG1pbmltdW0gZGF0ZS5cbiAqIEBwcm9wIHVzZVBvaW50ZXJFdmVudCAtIEZsYWcgdG8gdXNlIHBvaW50ZXIgZXZlbnQuXG4gKiBAcHJvcCBwZWVrTmV4dE1vbnRoIC0gRmxhZyB0byBwZWVrIG5leHQgbW9udGguXG4gKiBAcHJvcCBwcmVTZWxlY3Rpb24gLSBUaGUgcHJlLXNlbGVjdGlvbi5cbiAqIEBwcm9wIHNlbGVjdGVkIC0gVGhlIHNlbGVjdGVkIGRhdGUuXG4gKiBAcHJvcCBzZWxlY3RpbmdEYXRlIC0gVGhlIHNlbGVjdGluZyBkYXRlLlxuICogQHByb3AgY2FsZW5kYXJTdGFydERheSAtIFRoZSBjYWxlbmRhciBzdGFydCBkYXkuXG4gKiBAcHJvcCBzZWxlY3RzRW5kIC0gRmxhZyB0byBzZWxlY3QgZW5kLlxuICogQHByb3Agc2VsZWN0c1N0YXJ0IC0gRmxhZyB0byBzZWxlY3Qgc3RhcnQuXG4gKiBAcHJvcCBzZWxlY3RzUmFuZ2UgLSBGbGFnIHRvIHNlbGVjdCByYW5nZS5cbiAqIEBwcm9wIHNlbGVjdHNEaXNhYmxlZERheXNJblJhbmdlIC0gRmxhZyB0byBzZWxlY3QgZGlzYWJsZWQgZGF5cyBpbiByYW5nZS5cbiAqIEBwcm9wIHNlbGVjdHNNdWx0aXBsZSAtIEZsYWcgdG8gc2VsZWN0IG11bHRpcGxlLlxuICogQHByb3Agc2VsZWN0ZWREYXRlcyAtIFRoZSBzZWxlY3RlZCBkYXRlcy5cbiAqIEBwcm9wIHNob3dXZWVrTnVtYmVycyAtIEZsYWcgdG8gc2hvdyB3ZWVrIG51bWJlcnMuXG4gKiBAcHJvcCBzdGFydERhdGUgLSBUaGUgc3RhcnQgZGF0ZS5cbiAqIEBwcm9wIHNob3VsZENsb3NlT25TZWxlY3QgLSBGbGFnIHRvIGNsb3NlIG9uIHNlbGVjdC5cbiAqIEBwcm9wIHNob3dNb250aFllYXJQaWNrZXIgLSBGbGFnIHRvIHNob3cgbW9udGggeWVhciBwaWNrZXIuXG4gKiBAcHJvcCBzaG93RnVsbE1vbnRoWWVhclBpY2tlciAtIEZsYWcgdG8gc2hvdyBmdWxsIG1vbnRoIHllYXIgcGlja2VyLlxuICogQHByb3Agc2hvd1R3b0NvbHVtbk1vbnRoWWVhclBpY2tlciAtIEZsYWcgdG8gc2hvdyB0d28gY29sdW1uIG1vbnRoIHllYXIgcGlja2VyLlxuICogQHByb3Agc2hvd0ZvdXJDb2x1bW5Nb250aFllYXJQaWNrZXIgLSBGbGFnIHRvIHNob3cgZm91ciBjb2x1bW4gbW9udGggeWVhciBwaWNrZXIuXG4gKiBAcHJvcCBzaG93UXVhcnRlclllYXJQaWNrZXIgLSBGbGFnIHRvIHNob3cgcXVhcnRlciB5ZWFyIHBpY2tlci5cbiAqIEBwcm9wIHNob3dXZWVrUGlja2VyIC0gRmxhZyB0byBzaG93IHdlZWsgcGlja2VyLlxuICogQHByb3AgaXNJbnB1dEZvY3VzZWQgLSBGbGFnIHRvIHNldCBpbnB1dCBmb2N1cy5cbiAqIEBwcm9wIHdlZWtBcmlhTGFiZWxQcmVmaXggLSBBcmlhIGxhYmVsIHByZWZpeCBmb3Igd2Vlay5cbiAqIEBwcm9wIGNvbnRhaW5lclJlZiAtIFRoZSBjb250YWluZXIgcmVmZXJlbmNlLlxuICogQHByb3AgbW9udGhTaG93c0R1cGxpY2F0ZURheXNFbmQgLSBGbGFnIHRvIHNob3cgZHVwbGljYXRlIGRheXMgYXQgdGhlIGVuZCBvZiB0aGUgbW9udGguXG4gKiBAcHJvcCBtb250aFNob3dzRHVwbGljYXRlRGF5c1N0YXJ0IC0gRmxhZyB0byBzaG93IGR1cGxpY2F0ZSBkYXlzIGF0IHRoZSBzdGFydCBvZiB0aGUgbW9udGguXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzeFxuICogZnVuY3Rpb24gQXBwKCkge1xuICogIGNvbnN0IGhhbmRsZURheUNsaWNrID0gKGRhdGUpID0+IHtcbiAqICAgICBjb25zb2xlLmxvZygnRGF5IGNsaWNrZWQ6ICcsIGRhdGUpO1xuICogICB9O1xuICpcbiAqICAgY29uc3QgaGFuZGxlRGF5TW91c2VFbnRlciA9IChkYXRlKSA9PiB7XG4gKiAgICAgY29uc29sZS5sb2coJ01vdXNlIGVudGVyZWQgb24gZGF5OiAnLCBkYXRlKTtcbiAqICAgfTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPGRpdj5cbiAqICAgICAgIDxNb250aFxuICogICAgICAgICBkYXk9e25ldyBEYXRlKCl9XG4gKiAgICAgICAgIGVuZERhdGU9e25ldyBEYXRlKCl9XG4gKiAgICAgICAgIG9uRGF5Q2xpY2s9e2hhbmRsZURheUNsaWNrfVxuICogICAgICAgICBvbkRheU1vdXNlRW50ZXI9e2hhbmRsZURheU1vdXNlRW50ZXJ9XG4gKiAgICAgICAgIGRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uPXtmYWxzZX1cbiAqICAgICAgICAgc2hvd1dlZWtOdW1iZXJzPXt0cnVlfVxuICogICAgICAgICBzaG93TW9udGhZZWFyUGlja2VyPXtmYWxzZX1cbiAqICAgICAgIC8+XG4gKiAgICAgPC9kaXY+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqL1xudmFyIE1vbnRoID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNb250aCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNb250aCgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLk1PTlRIX1JFRlMgPSBfX3NwcmVhZEFycmF5KFtdLCBBcnJheSgxMiksIHRydWUpLm1hcChmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVSZWYoKTsgfSk7XG4gICAgICAgIF90aGlzLlFVQVJURVJfUkVGUyA9IF9fc3ByZWFkQXJyYXkoW10sIEFycmF5KDQpLCB0cnVlKS5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gY3JlYXRlUmVmKCk7IH0pO1xuICAgICAgICBfdGhpcy5pc0Rpc2FibGVkID0gZnVuY3Rpb24gKGRheSkge1xuICAgICAgICAgICAgLy8gQWxtb3N0IGFsbCBwcm9wcyBwcmV2aW91c2x5IHdlcmUgcGFzc2VkIGFzIHRoaXMucHJvcHMgdy9vIHByb3BlciB0eXBpbmcgd2l0aCBwcm9wLXR5cGVzXG4gICAgICAgICAgICAvLyBhZnRlciB0aGUgbWlncmF0aW9uIHRvIFRTIGkgbWFkZSBpdCBleHBsaWNpdFxuICAgICAgICAgICAgcmV0dXJuIGlzRGF5RGlzYWJsZWQoZGF5LCB7XG4gICAgICAgICAgICAgICAgbWluRGF0ZTogX3RoaXMucHJvcHMubWluRGF0ZSxcbiAgICAgICAgICAgICAgICBtYXhEYXRlOiBfdGhpcy5wcm9wcy5tYXhEYXRlLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlczogX3RoaXMucHJvcHMuZXhjbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlSW50ZXJ2YWxzOiBfdGhpcy5wcm9wcy5leGNsdWRlRGF0ZUludGVydmFscyxcbiAgICAgICAgICAgICAgICBpbmNsdWRlRGF0ZUludGVydmFsczogX3RoaXMucHJvcHMuaW5jbHVkZURhdGVJbnRlcnZhbHMsXG4gICAgICAgICAgICAgICAgaW5jbHVkZURhdGVzOiBfdGhpcy5wcm9wcy5pbmNsdWRlRGF0ZXMsXG4gICAgICAgICAgICAgICAgZmlsdGVyRGF0ZTogX3RoaXMucHJvcHMuZmlsdGVyRGF0ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0V4Y2x1ZGVkID0gZnVuY3Rpb24gKGRheSkge1xuICAgICAgICAgICAgLy8gQWxtb3N0IGFsbCBwcm9wcyBwcmV2aW91c2x5IHdlcmUgcGFzc2VkIGFzIHRoaXMucHJvcHMgdy9vIHByb3BlciB0eXBpbmcgd2l0aCBwcm9wLXR5cGVzXG4gICAgICAgICAgICAvLyBhZnRlciB0aGUgbWlncmF0aW9uIHRvIFRTIGkgbWFkZSBpdCBleHBsaWNpdFxuICAgICAgICAgICAgcmV0dXJuIGlzRGF5RXhjbHVkZWQoZGF5LCB7XG4gICAgICAgICAgICAgICAgZXhjbHVkZURhdGVzOiBfdGhpcy5wcm9wcy5leGNsdWRlRGF0ZXMsXG4gICAgICAgICAgICAgICAgZXhjbHVkZURhdGVJbnRlcnZhbHM6IF90aGlzLnByb3BzLmV4Y2x1ZGVEYXRlSW50ZXJ2YWxzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZURheUNsaWNrID0gZnVuY3Rpb24gKGRheSwgZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25EYXlDbGljaykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGRheSwgZXZlbnQsIF90aGlzLnByb3BzLm9yZGVySW5EaXNwbGF5KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlRGF5TW91c2VFbnRlciA9IGZ1bmN0aW9uIChkYXkpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25EYXlNb3VzZUVudGVyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZGF5KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlTW91c2VMZWF2ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25Nb3VzZUxlYXZlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzUmFuZ2VTdGFydE1vbnRoID0gZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGU7XG4gICAgICAgICAgICBpZiAoIXN0YXJ0RGF0ZSB8fCAhZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVNb250aChzZXRNb250aChkYXksIG0pLCBzdGFydERhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1JhbmdlU3RhcnRRdWFydGVyID0gZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGU7XG4gICAgICAgICAgICBpZiAoIXN0YXJ0RGF0ZSB8fCAhZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVRdWFydGVyKHNldFF1YXJ0ZXIoZGF5LCBxKSwgc3RhcnREYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNSYW5nZUVuZE1vbnRoID0gZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGU7XG4gICAgICAgICAgICBpZiAoIXN0YXJ0RGF0ZSB8fCAhZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVNb250aChzZXRNb250aChkYXksIG0pLCBlbmREYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNSYW5nZUVuZFF1YXJ0ZXIgPSBmdW5jdGlvbiAocSkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRheSA9IF9hLmRheSwgc3RhcnREYXRlID0gX2Euc3RhcnREYXRlLCBlbmREYXRlID0gX2EuZW5kRGF0ZTtcbiAgICAgICAgICAgIGlmICghc3RhcnREYXRlIHx8ICFlbmREYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZVF1YXJ0ZXIoc2V0UXVhcnRlcihkYXksIHEpLCBlbmREYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlTW9udGggPSBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIGRheSA9IF9iLmRheSwgc2VsZWN0c1N0YXJ0ID0gX2Iuc2VsZWN0c1N0YXJ0LCBzZWxlY3RzRW5kID0gX2Iuc2VsZWN0c0VuZCwgc2VsZWN0c1JhbmdlID0gX2Iuc2VsZWN0c1JhbmdlLCBzdGFydERhdGUgPSBfYi5zdGFydERhdGUsIGVuZERhdGUgPSBfYi5lbmREYXRlO1xuICAgICAgICAgICAgdmFyIHNlbGVjdGluZ0RhdGUgPSAoX2EgPSBfdGhpcy5wcm9wcy5zZWxlY3RpbmdEYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb247XG4gICAgICAgICAgICBpZiAoIShzZWxlY3RzU3RhcnQgfHwgc2VsZWN0c0VuZCB8fCBzZWxlY3RzUmFuZ2UpIHx8ICFzZWxlY3RpbmdEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdHNTdGFydCAmJiBlbmREYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzTW9udGhJblJhbmdlKHNlbGVjdGluZ0RhdGUsIGVuZERhdGUsIG0sIGRheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c0VuZCAmJiBzdGFydERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNNb250aEluUmFuZ2Uoc3RhcnREYXRlLCBzZWxlY3RpbmdEYXRlLCBtLCBkYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdHNSYW5nZSAmJiBzdGFydERhdGUgJiYgIWVuZERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNNb250aEluUmFuZ2Uoc3RhcnREYXRlLCBzZWxlY3RpbmdEYXRlLCBtLCBkYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1NlbGVjdGluZ01vbnRoUmFuZ2VTdGFydCA9IGZ1bmN0aW9uIChtKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIV90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZU1vbnRoKG0pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIGRheSA9IF9iLmRheSwgc3RhcnREYXRlID0gX2Iuc3RhcnREYXRlLCBzZWxlY3RzU3RhcnQgPSBfYi5zZWxlY3RzU3RhcnQ7XG4gICAgICAgICAgICB2YXIgX21vbnRoID0gc2V0TW9udGgoZGF5LCBtKTtcbiAgICAgICAgICAgIHZhciBzZWxlY3RpbmdEYXRlID0gKF9hID0gX3RoaXMucHJvcHMuc2VsZWN0aW5nRGF0ZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uO1xuICAgICAgICAgICAgaWYgKHNlbGVjdHNTdGFydCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVNb250aChfbW9udGgsIHNlbGVjdGluZ0RhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZU1vbnRoKF9tb250aCwgc3RhcnREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RpbmdNb250aFJhbmdlRW5kID0gZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICghX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlTW9udGgobSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgX2IgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2IuZGF5LCBlbmREYXRlID0gX2IuZW5kRGF0ZSwgc2VsZWN0c0VuZCA9IF9iLnNlbGVjdHNFbmQsIHNlbGVjdHNSYW5nZSA9IF9iLnNlbGVjdHNSYW5nZTtcbiAgICAgICAgICAgIHZhciBfbW9udGggPSBzZXRNb250aChkYXksIG0pO1xuICAgICAgICAgICAgdmFyIHNlbGVjdGluZ0RhdGUgPSAoX2EgPSBfdGhpcy5wcm9wcy5zZWxlY3RpbmdEYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb247XG4gICAgICAgICAgICBpZiAoc2VsZWN0c0VuZCB8fCBzZWxlY3RzUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNTYW1lTW9udGgoX21vbnRoLCBzZWxlY3RpbmdEYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVNb250aChfbW9udGgsIGVuZERhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0luU2VsZWN0aW5nUmFuZ2VRdWFydGVyID0gZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBkYXkgPSBfYi5kYXksIHNlbGVjdHNTdGFydCA9IF9iLnNlbGVjdHNTdGFydCwgc2VsZWN0c0VuZCA9IF9iLnNlbGVjdHNFbmQsIHNlbGVjdHNSYW5nZSA9IF9iLnNlbGVjdHNSYW5nZSwgc3RhcnREYXRlID0gX2Iuc3RhcnREYXRlLCBlbmREYXRlID0gX2IuZW5kRGF0ZTtcbiAgICAgICAgICAgIHZhciBzZWxlY3RpbmdEYXRlID0gKF9hID0gX3RoaXMucHJvcHMuc2VsZWN0aW5nRGF0ZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uO1xuICAgICAgICAgICAgaWYgKCEoc2VsZWN0c1N0YXJ0IHx8IHNlbGVjdHNFbmQgfHwgc2VsZWN0c1JhbmdlKSB8fCAhc2VsZWN0aW5nRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxlY3RzU3RhcnQgJiYgZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1F1YXJ0ZXJJblJhbmdlKHNlbGVjdGluZ0RhdGUsIGVuZERhdGUsIHEsIGRheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c0VuZCAmJiBzdGFydERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNRdWFydGVySW5SYW5nZShzdGFydERhdGUsIHNlbGVjdGluZ0RhdGUsIHEsIGRheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c1JhbmdlICYmIHN0YXJ0RGF0ZSAmJiAhZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1F1YXJ0ZXJJblJhbmdlKHN0YXJ0RGF0ZSwgc2VsZWN0aW5nRGF0ZSwgcSwgZGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNXZWVrSW5Nb250aCA9IGZ1bmN0aW9uIChzdGFydE9mV2Vlaykge1xuICAgICAgICAgICAgdmFyIGRheSA9IF90aGlzLnByb3BzLmRheTtcbiAgICAgICAgICAgIHZhciBlbmRPZldlZWsgPSBhZGREYXlzKHN0YXJ0T2ZXZWVrLCA2KTtcbiAgICAgICAgICAgIHJldHVybiBpc1NhbWVNb250aChzdGFydE9mV2VlaywgZGF5KSB8fCBpc1NhbWVNb250aChlbmRPZldlZWssIGRheSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzQ3VycmVudE1vbnRoID0gZnVuY3Rpb24gKGRheSwgbSkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFllYXIoZGF5KSA9PT0gZ2V0WWVhcihuZXdEYXRlKCkpICYmIG0gPT09IGdldE1vbnRoKG5ld0RhdGUoKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzQ3VycmVudFF1YXJ0ZXIgPSBmdW5jdGlvbiAoZGF5LCBxKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0WWVhcihkYXkpID09PSBnZXRZZWFyKG5ld0RhdGUoKSkgJiYgcSA9PT0gZ2V0UXVhcnRlcihuZXdEYXRlKCkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1NlbGVjdGVkTW9udGggPSBmdW5jdGlvbiAoZGF5LCBtLCBzZWxlY3RlZCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldE1vbnRoKHNlbGVjdGVkKSA9PT0gbSAmJiBnZXRZZWFyKGRheSkgPT09IGdldFllYXIoc2VsZWN0ZWQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1NlbGVjdE1vbnRoSW5MaXN0ID0gZnVuY3Rpb24gKGRheSwgbSwgc2VsZWN0ZWREYXRlcykge1xuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkRGF0ZXMuc29tZShmdW5jdGlvbiAoc2VsZWN0ZWREYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmlzU2VsZWN0ZWRNb250aChkYXksIG0sIHNlbGVjdGVkRGF0ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RlZFF1YXJ0ZXIgPSBmdW5jdGlvbiAoZGF5LCBxLCBzZWxlY3RlZCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFF1YXJ0ZXIoZGF5KSA9PT0gcSAmJiBnZXRZZWFyKGRheSkgPT09IGdldFllYXIoc2VsZWN0ZWQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc01vbnRoU2VsZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2EuZGF5LCBzZWxlY3RlZCA9IF9hLnNlbGVjdGVkLCBzZWxlY3RlZERhdGVzID0gX2Euc2VsZWN0ZWREYXRlcywgc2VsZWN0c011bHRpcGxlID0gX2Euc2VsZWN0c011bHRpcGxlO1xuICAgICAgICAgICAgdmFyIG1vbnRoSWR4ID0gZ2V0TW9udGgoZGF5KTtcbiAgICAgICAgICAgIGlmIChzZWxlY3RzTXVsdGlwbGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWREYXRlcyA9PT0gbnVsbCB8fCBzZWxlY3RlZERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3RlZERhdGVzLnNvbWUoZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmlzU2VsZWN0ZWRNb250aChkYXksIG1vbnRoSWR4LCBkYXRlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhIXNlbGVjdGVkICYmIF90aGlzLmlzU2VsZWN0ZWRNb250aChkYXksIG1vbnRoSWR4LCBzZWxlY3RlZCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlcldlZWtzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHdlZWtzID0gW107XG4gICAgICAgICAgICB2YXIgaXNGaXhlZEhlaWdodCA9IF90aGlzLnByb3BzLmZpeGVkSGVpZ2h0O1xuICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgdmFyIGJyZWFrQWZ0ZXJOZXh0UHVzaCA9IGZhbHNlO1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRXZWVrU3RhcnQgPSBnZXRTdGFydE9mV2VlayhnZXRTdGFydE9mTW9udGgoX3RoaXMucHJvcHMuZGF5KSwgX3RoaXMucHJvcHMubG9jYWxlLCBfdGhpcy5wcm9wcy5jYWxlbmRhclN0YXJ0RGF5KTtcbiAgICAgICAgICAgIHZhciBpc1ByZVNlbGVjdGVkID0gZnVuY3Rpb24gKHByZVNlbGVjdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlclxuICAgICAgICAgICAgICAgICAgICA/IGdldFN0YXJ0T2ZXZWVrKHByZVNlbGVjdGlvbiwgX3RoaXMucHJvcHMubG9jYWxlLCBfdGhpcy5wcm9wcy5jYWxlbmRhclN0YXJ0RGF5KVxuICAgICAgICAgICAgICAgICAgICA6IF90aGlzLnByb3BzLnByZVNlbGVjdGlvbjtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgaXNTZWxlY3RlZCA9IGZ1bmN0aW9uIChzZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlclxuICAgICAgICAgICAgICAgICAgICA/IGdldFN0YXJ0T2ZXZWVrKHNlbGVjdGVkLCBfdGhpcy5wcm9wcy5sb2NhbGUsIF90aGlzLnByb3BzLmNhbGVuZGFyU3RhcnREYXkpXG4gICAgICAgICAgICAgICAgICAgIDogX3RoaXMucHJvcHMuc2VsZWN0ZWQ7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkID0gX3RoaXMucHJvcHMuc2VsZWN0ZWRcbiAgICAgICAgICAgICAgICA/IGlzU2VsZWN0ZWQoX3RoaXMucHJvcHMuc2VsZWN0ZWQpXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB2YXIgcHJlU2VsZWN0aW9uID0gX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uXG4gICAgICAgICAgICAgICAgPyBpc1ByZVNlbGVjdGVkKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbilcbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgd2Vla3MucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KFdlZWssIF9hc3NpZ24oe30sIF90aGlzLnByb3BzLCB7IGFyaWFMYWJlbFByZWZpeDogX3RoaXMucHJvcHMud2Vla0FyaWFMYWJlbFByZWZpeCwga2V5OiBpLCBkYXk6IGN1cnJlbnRXZWVrU3RhcnQsIG1vbnRoOiBnZXRNb250aChfdGhpcy5wcm9wcy5kYXkpLCBvbkRheUNsaWNrOiBfdGhpcy5oYW5kbGVEYXlDbGljaywgb25EYXlNb3VzZUVudGVyOiBfdGhpcy5oYW5kbGVEYXlNb3VzZUVudGVyLCBzZWxlY3RlZDogc2VsZWN0ZWQsIHByZVNlbGVjdGlvbjogcHJlU2VsZWN0aW9uLCBzaG93V2Vla051bWJlcjogX3RoaXMucHJvcHMuc2hvd1dlZWtOdW1iZXJzIH0pKSk7XG4gICAgICAgICAgICAgICAgaWYgKGJyZWFrQWZ0ZXJOZXh0UHVzaClcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRXZWVrU3RhcnQgPSBhZGRXZWVrcyhjdXJyZW50V2Vla1N0YXJ0LCAxKTtcbiAgICAgICAgICAgICAgICAvLyBJZiBvbmUgb2YgdGhlc2UgY29uZGl0aW9ucyBpcyB0cnVlLCB3ZSB3aWxsIGVpdGhlciBicmVhayBvbiB0aGlzIHdlZWtcbiAgICAgICAgICAgICAgICAvLyBvciBicmVhayBvbiB0aGUgbmV4dCB3ZWVrXG4gICAgICAgICAgICAgICAgdmFyIGlzRml4ZWRBbmRGaW5hbFdlZWsgPSBpc0ZpeGVkSGVpZ2h0ICYmIGkgPj0gRklYRURfSEVJR0hUX1NUQU5EQVJEX1dFRUtfQ09VTlQ7XG4gICAgICAgICAgICAgICAgdmFyIGlzTm9uRml4ZWRBbmRPdXRPZk1vbnRoID0gIWlzRml4ZWRIZWlnaHQgJiYgIV90aGlzLmlzV2Vla0luTW9udGgoY3VycmVudFdlZWtTdGFydCk7XG4gICAgICAgICAgICAgICAgaWYgKGlzRml4ZWRBbmRGaW5hbFdlZWsgfHwgaXNOb25GaXhlZEFuZE91dE9mTW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnBlZWtOZXh0TW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrQWZ0ZXJOZXh0UHVzaCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB3ZWVrcztcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25Nb250aENsaWNrID0gZnVuY3Rpb24gKGV2ZW50LCBtKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5pc01vbnRoRGlzYWJsZWRGb3JMYWJlbERhdGUobSksIGlzRGlzYWJsZWQgPSBfYS5pc0Rpc2FibGVkLCBsYWJlbERhdGUgPSBfYS5sYWJlbERhdGU7XG4gICAgICAgICAgICBpZiAoaXNEaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLmhhbmRsZURheUNsaWNrKGdldFN0YXJ0T2ZNb250aChsYWJlbERhdGUpLCBldmVudCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uTW9udGhNb3VzZUVudGVyID0gZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLmlzTW9udGhEaXNhYmxlZEZvckxhYmVsRGF0ZShtKSwgaXNEaXNhYmxlZCA9IF9hLmlzRGlzYWJsZWQsIGxhYmVsRGF0ZSA9IF9hLmxhYmVsRGF0ZTtcbiAgICAgICAgICAgIGlmIChpc0Rpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuaGFuZGxlRGF5TW91c2VFbnRlcihnZXRTdGFydE9mTW9udGgobGFiZWxEYXRlKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZU1vbnRoTmF2aWdhdGlvbiA9IGZ1bmN0aW9uIChuZXdNb250aCwgbmV3RGF0ZSkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnNldFByZVNlbGVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIG5ld0RhdGUpO1xuICAgICAgICAgICAgKF9kID0gKF9jID0gX3RoaXMuTU9OVEhfUkVGU1tuZXdNb250aF0pID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jdXJyZW50KSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuZm9jdXMoKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlS2V5Ym9hcmROYXZpZ2F0aW9uID0gZnVuY3Rpb24gKGV2ZW50LCBldmVudEtleSwgbW9udGgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBzZWxlY3RlZCA9IF9iLnNlbGVjdGVkLCBwcmVTZWxlY3Rpb24gPSBfYi5wcmVTZWxlY3Rpb24sIHNldFByZVNlbGVjdGlvbiA9IF9iLnNldFByZVNlbGVjdGlvbiwgbWluRGF0ZSA9IF9iLm1pbkRhdGUsIG1heERhdGUgPSBfYi5tYXhEYXRlLCBzaG93Rm91ckNvbHVtbk1vbnRoWWVhclBpY2tlciA9IF9iLnNob3dGb3VyQ29sdW1uTW9udGhZZWFyUGlja2VyLCBzaG93VHdvQ29sdW1uTW9udGhZZWFyUGlja2VyID0gX2Iuc2hvd1R3b0NvbHVtbk1vbnRoWWVhclBpY2tlcjtcbiAgICAgICAgICAgIGlmICghcHJlU2VsZWN0aW9uKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHZhciBtb250aENvbHVtbnNMYXlvdXQgPSBnZXRNb250aENvbHVtbnNMYXlvdXQoc2hvd0ZvdXJDb2x1bW5Nb250aFllYXJQaWNrZXIsIHNob3dUd29Db2x1bW5Nb250aFllYXJQaWNrZXIpO1xuICAgICAgICAgICAgdmFyIHZlcnRpY2FsT2Zmc2V0ID0gX3RoaXMuZ2V0VmVydGljYWxPZmZzZXQobW9udGhDb2x1bW5zTGF5b3V0KTtcbiAgICAgICAgICAgIHZhciBtb250aHNHcmlkID0gKF9hID0gTU9OVEhfQ09MVU1OU1ttb250aENvbHVtbnNMYXlvdXRdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ3JpZDtcbiAgICAgICAgICAgIHZhciBjYWxjdWxhdGVOZXdEYXRlQW5kTW9udGggPSBmdW5jdGlvbiAoZXZlbnRLZXksIGRhdGUsIG1vbnRoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICB2YXIgbmV3Q2FsY3VsYXRlZERhdGUgPSBkYXRlO1xuICAgICAgICAgICAgICAgIHZhciBuZXdDYWxjdWxhdGVkTW9udGggPSBtb250aDtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGV2ZW50S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5BcnJvd1JpZ2h0OlxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZERhdGUgPSBhZGRNb250aHMoZGF0ZSwgTU9OVEhfTkFWSUdBVElPTl9IT1JJWk9OVEFMX09GRlNFVCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkTW9udGggPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoID09PSAxMSA/IDAgOiBtb250aCArIE1PTlRIX05BVklHQVRJT05fSE9SSVpPTlRBTF9PRkZTRVQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93TGVmdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gc3ViTW9udGhzKGRhdGUsIE1PTlRIX05BVklHQVRJT05fSE9SSVpPTlRBTF9PRkZTRVQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZE1vbnRoID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb250aCA9PT0gMCA/IDExIDogbW9udGggLSBNT05USF9OQVZJR0FUSU9OX0hPUklaT05UQUxfT0ZGU0VUO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5BcnJvd1VwOlxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZERhdGUgPSBzdWJNb250aHMoZGF0ZSwgdmVydGljYWxPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZE1vbnRoID0gKChfYSA9IG1vbnRoc0dyaWQgPT09IG51bGwgfHwgbW9udGhzR3JpZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbW9udGhzR3JpZFswXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmluY2x1ZGVzKG1vbnRoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG1vbnRoICsgMTIgLSB2ZXJ0aWNhbE9mZnNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbW9udGggLSB2ZXJ0aWNhbE9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dEb3duOlxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZERhdGUgPSBhZGRNb250aHMoZGF0ZSwgdmVydGljYWxPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZE1vbnRoID0gKChfYiA9IG1vbnRoc0dyaWQgPT09IG51bGwgfHwgbW9udGhzR3JpZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbW9udGhzR3JpZFttb250aHNHcmlkLmxlbmd0aCAtIDFdKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaW5jbHVkZXMobW9udGgpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gbW9udGggLSAxMiArIHZlcnRpY2FsT2Zmc2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBtb250aCArIHZlcnRpY2FsT2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7IG5ld0NhbGN1bGF0ZWREYXRlOiBuZXdDYWxjdWxhdGVkRGF0ZSwgbmV3Q2FsY3VsYXRlZE1vbnRoOiBuZXdDYWxjdWxhdGVkTW9udGggfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgZ2V0TmV3RGF0ZUFuZE1vbnRoID0gZnVuY3Rpb24gKGV2ZW50S2V5LCBzZWxlY3RlZERhdGUsIG1vbnRoKSB7XG4gICAgICAgICAgICAgICAgdmFyIE1BWF9JVEVSQVRJT05TID0gNDA7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50S2V5Q29weSA9IGV2ZW50S2V5O1xuICAgICAgICAgICAgICAgIHZhciB2YWxpZERhdGVGb3VuZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhciBpdGVyYXRpb25zID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgX2EgPSBjYWxjdWxhdGVOZXdEYXRlQW5kTW9udGgoZXZlbnRLZXlDb3B5LCBzZWxlY3RlZERhdGUsIG1vbnRoKSwgbmV3Q2FsY3VsYXRlZERhdGUgPSBfYS5uZXdDYWxjdWxhdGVkRGF0ZSwgbmV3Q2FsY3VsYXRlZE1vbnRoID0gX2EubmV3Q2FsY3VsYXRlZE1vbnRoO1xuICAgICAgICAgICAgICAgIHdoaWxlICghdmFsaWREYXRlRm91bmQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZXJhdGlvbnMgPj0gTUFYX0lURVJBVElPTlMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gc2VsZWN0ZWREYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZE1vbnRoID0gbW9udGg7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiBtaW5EYXRlIGV4aXN0cyBhbmQgdGhlIG5ldyBtb250aCBpcyBiZWZvcmUgdGhlIG1pbmltdW0gbW9udGgsIGl0IHdpbGwgdHJ5IHRvIGZpbmQgdGhlIG5leHQgYXZhaWxhYmxlIG1vbnRoIGFmdGVyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtaW5EYXRlICYmIG5ld0NhbGN1bGF0ZWREYXRlIDwgbWluRGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRLZXlDb3B5ID0gS2V5VHlwZS5BcnJvd1JpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9iaiA9IGNhbGN1bGF0ZU5ld0RhdGVBbmRNb250aChldmVudEtleUNvcHksIG5ld0NhbGN1bGF0ZWREYXRlLCBuZXdDYWxjdWxhdGVkTW9udGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZERhdGUgPSBvYmoubmV3Q2FsY3VsYXRlZERhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkTW9udGggPSBvYmoubmV3Q2FsY3VsYXRlZE1vbnRoO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIG1heERhdGUgZXhpc3RzIGFuZCB0aGUgbmV3IG1vbnRoIGlzIGFmdGVyIHRoZSBtYXhpbXVtIG1vbnRoLCBpdCB3aWxsIHRyeSB0byBmaW5kIHRoZSBuZXh0IGF2YWlsYWJsZSBtb250aCBiZWZvcmVcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1heERhdGUgJiYgbmV3Q2FsY3VsYXRlZERhdGUgPiBtYXhEYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudEtleUNvcHkgPSBLZXlUeXBlLkFycm93TGVmdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvYmogPSBjYWxjdWxhdGVOZXdEYXRlQW5kTW9udGgoZXZlbnRLZXlDb3B5LCBuZXdDYWxjdWxhdGVkRGF0ZSwgbmV3Q2FsY3VsYXRlZE1vbnRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gb2JqLm5ld0NhbGN1bGF0ZWREYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZE1vbnRoID0gb2JqLm5ld0NhbGN1bGF0ZWRNb250aDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNNb250aFllYXJEaXNhYmxlZChuZXdDYWxjdWxhdGVkRGF0ZSwgX3RoaXMucHJvcHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2JqID0gY2FsY3VsYXRlTmV3RGF0ZUFuZE1vbnRoKGV2ZW50S2V5Q29weSwgbmV3Q2FsY3VsYXRlZERhdGUsIG5ld0NhbGN1bGF0ZWRNb250aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkRGF0ZSA9IG9iai5uZXdDYWxjdWxhdGVkRGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWRNb250aCA9IG9iai5uZXdDYWxjdWxhdGVkTW9udGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZERhdGVGb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaXRlcmF0aW9ucysrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4geyBuZXdDYWxjdWxhdGVkRGF0ZTogbmV3Q2FsY3VsYXRlZERhdGUsIG5ld0NhbGN1bGF0ZWRNb250aDogbmV3Q2FsY3VsYXRlZE1vbnRoIH07XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLkVudGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pc01vbnRoRGlzYWJsZWQobW9udGgpKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLm9uTW9udGhDbGljayhldmVudCwgbW9udGgpO1xuICAgICAgICAgICAgICAgICAgICBzZXRQcmVTZWxlY3Rpb24gPT09IG51bGwgfHwgc2V0UHJlU2VsZWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZXRQcmVTZWxlY3Rpb24oc2VsZWN0ZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgX2MgPSBnZXROZXdEYXRlQW5kTW9udGgoZXZlbnRLZXksIHByZVNlbGVjdGlvbiwgbW9udGgpLCBuZXdDYWxjdWxhdGVkRGF0ZSA9IF9jLm5ld0NhbGN1bGF0ZWREYXRlLCBuZXdDYWxjdWxhdGVkTW9udGggPSBfYy5uZXdDYWxjdWxhdGVkTW9udGg7XG4gICAgICAgICAgICBzd2l0Y2ggKGV2ZW50S2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93UmlnaHQ6XG4gICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93TGVmdDpcbiAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dVcDpcbiAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dEb3duOlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVNb250aE5hdmlnYXRpb24obmV3Q2FsY3VsYXRlZE1vbnRoLCBuZXdDYWxjdWxhdGVkRGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRWZXJ0aWNhbE9mZnNldCA9IGZ1bmN0aW9uIChtb250aENvbHVtbnNMYXlvdXQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICByZXR1cm4gKF9iID0gKF9hID0gTU9OVEhfQ09MVU1OU1ttb250aENvbHVtbnNMYXlvdXRdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudmVydGljYWxOYXZpZ2F0aW9uT2Zmc2V0KSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAwO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbk1vbnRoS2V5RG93biA9IGZ1bmN0aW9uIChldmVudCwgbW9udGgpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbiA9IF9hLmRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uLCBoYW5kbGVPbk1vbnRoS2V5RG93biA9IF9hLmhhbmRsZU9uTW9udGhLZXlEb3duO1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ICE9PSBLZXlUeXBlLlRhYikge1xuICAgICAgICAgICAgICAgIC8vIHByZXZlbnREZWZhdWx0IG9uIHRhYiBldmVudCBibG9ja3MgZm9jdXMgY2hhbmdlXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVLZXlib2FyZE5hdmlnYXRpb24oZXZlbnQsIGV2ZW50S2V5LCBtb250aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVPbk1vbnRoS2V5RG93biAmJiBoYW5kbGVPbk1vbnRoS2V5RG93bihldmVudCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uUXVhcnRlckNsaWNrID0gZnVuY3Rpb24gKGV2ZW50LCBxKSB7XG4gICAgICAgICAgICB2YXIgbGFiZWxEYXRlID0gc2V0UXVhcnRlcihfdGhpcy5wcm9wcy5kYXksIHEpO1xuICAgICAgICAgICAgaWYgKGlzUXVhcnRlckRpc2FibGVkKGxhYmVsRGF0ZSwgX3RoaXMucHJvcHMpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuaGFuZGxlRGF5Q2xpY2soZ2V0U3RhcnRPZlF1YXJ0ZXIobGFiZWxEYXRlKSwgZXZlbnQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vblF1YXJ0ZXJNb3VzZUVudGVyID0gZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgICAgIHZhciBsYWJlbERhdGUgPSBzZXRRdWFydGVyKF90aGlzLnByb3BzLmRheSwgcSk7XG4gICAgICAgICAgICBpZiAoaXNRdWFydGVyRGlzYWJsZWQobGFiZWxEYXRlLCBfdGhpcy5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5oYW5kbGVEYXlNb3VzZUVudGVyKGdldFN0YXJ0T2ZRdWFydGVyKGxhYmVsRGF0ZSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVRdWFydGVyTmF2aWdhdGlvbiA9IGZ1bmN0aW9uIChuZXdRdWFydGVyLCBuZXdEYXRlKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgICAgICBpZiAoX3RoaXMuaXNEaXNhYmxlZChuZXdEYXRlKSB8fCBfdGhpcy5pc0V4Y2x1ZGVkKG5ld0RhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnNldFByZVNlbGVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIG5ld0RhdGUpO1xuICAgICAgICAgICAgKF9kID0gKF9jID0gX3RoaXMuUVVBUlRFUl9SRUZTW25ld1F1YXJ0ZXIgLSAxXSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmN1cnJlbnQpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5mb2N1cygpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vblF1YXJ0ZXJLZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50LCBxdWFydGVyKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5kaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbikge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoZXZlbnRLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkVudGVyOlxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMub25RdWFydGVyQ2xpY2soZXZlbnQsIHF1YXJ0ZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnNldFByZVNlbGVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIF90aGlzLnByb3BzLnNlbGVjdGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dSaWdodDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVRdWFydGVyTmF2aWdhdGlvbihxdWFydGVyID09PSA0ID8gMSA6IHF1YXJ0ZXIgKyAxLCBhZGRRdWFydGVycyhfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24sIDEpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dMZWZ0OlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVF1YXJ0ZXJOYXZpZ2F0aW9uKHF1YXJ0ZXIgPT09IDEgPyA0IDogcXVhcnRlciAtIDEsIHN1YlF1YXJ0ZXJzKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiwgMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc01vbnRoRGlzYWJsZWRGb3JMYWJlbERhdGUgPSBmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBkYXkgPSBfYi5kYXksIG1pbkRhdGUgPSBfYi5taW5EYXRlLCBtYXhEYXRlID0gX2IubWF4RGF0ZSwgZXhjbHVkZURhdGVzID0gX2IuZXhjbHVkZURhdGVzLCBpbmNsdWRlRGF0ZXMgPSBfYi5pbmNsdWRlRGF0ZXM7XG4gICAgICAgICAgICB2YXIgbGFiZWxEYXRlID0gc2V0TW9udGgoZGF5LCBtb250aCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlzRGlzYWJsZWQ6IChfYSA9ICgobWluRGF0ZSB8fCBtYXhEYXRlIHx8IGV4Y2x1ZGVEYXRlcyB8fCBpbmNsdWRlRGF0ZXMpICYmXG4gICAgICAgICAgICAgICAgICAgIGlzTW9udGhEaXNhYmxlZChsYWJlbERhdGUsIF90aGlzLnByb3BzKSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGxhYmVsRGF0ZTogbGFiZWxEYXRlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNNb250aERpc2FibGVkID0gZnVuY3Rpb24gKG1vbnRoKSB7XG4gICAgICAgICAgICB2YXIgaXNEaXNhYmxlZCA9IF90aGlzLmlzTW9udGhEaXNhYmxlZEZvckxhYmVsRGF0ZShtb250aCkuaXNEaXNhYmxlZDtcbiAgICAgICAgICAgIHJldHVybiBpc0Rpc2FibGVkO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRNb250aENsYXNzTmFtZXMgPSBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRheSA9IF9hLmRheSwgc3RhcnREYXRlID0gX2Euc3RhcnREYXRlLCBlbmREYXRlID0gX2EuZW5kRGF0ZSwgcHJlU2VsZWN0aW9uID0gX2EucHJlU2VsZWN0aW9uLCBtb250aENsYXNzTmFtZSA9IF9hLm1vbnRoQ2xhc3NOYW1lO1xuICAgICAgICAgICAgdmFyIF9tb250aENsYXNzTmFtZSA9IG1vbnRoQ2xhc3NOYW1lXG4gICAgICAgICAgICAgICAgPyBtb250aENsYXNzTmFtZShzZXRNb250aChkYXksIG0pKVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgdmFyIHNlbGVjdGlvbiA9IF90aGlzLmdldFNlbGVjdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuIGNsc3goXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC10ZXh0XCIsIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtXCIuY29uY2F0KG0pLCBfbW9udGhDbGFzc05hbWUsIHtcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXRleHQtLWRpc2FibGVkXCI6IF90aGlzLmlzTW9udGhEaXNhYmxlZChtKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXRleHQtLXNlbGVjdGVkXCI6IHNlbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICA/IF90aGlzLmlzU2VsZWN0TW9udGhJbkxpc3QoZGF5LCBtLCBzZWxlY3Rpb24pXG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtdGV4dC0ta2V5Ym9hcmQtc2VsZWN0ZWRcIjogIV90aGlzLnByb3BzLmRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uICYmXG4gICAgICAgICAgICAgICAgICAgIHByZVNlbGVjdGlvbiAmJlxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5pc1NlbGVjdGVkTW9udGgoZGF5LCBtLCBwcmVTZWxlY3Rpb24pICYmXG4gICAgICAgICAgICAgICAgICAgICFfdGhpcy5pc01vbnRoU2VsZWN0ZWQoKSAmJlxuICAgICAgICAgICAgICAgICAgICAhX3RoaXMuaXNNb250aERpc2FibGVkKG0pLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtdGV4dC0taW4tc2VsZWN0aW5nLXJhbmdlXCI6IF90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZU1vbnRoKG0pLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtdGV4dC0taW4tcmFuZ2VcIjogc3RhcnREYXRlICYmIGVuZERhdGVcbiAgICAgICAgICAgICAgICAgICAgPyBpc01vbnRoSW5SYW5nZShzdGFydERhdGUsIGVuZERhdGUsIG0sIGRheSlcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC10ZXh0LS1yYW5nZS1zdGFydFwiOiBfdGhpcy5pc1JhbmdlU3RhcnRNb250aChtKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXRleHQtLXJhbmdlLWVuZFwiOiBfdGhpcy5pc1JhbmdlRW5kTW9udGgobSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC10ZXh0LS1zZWxlY3RpbmctcmFuZ2Utc3RhcnRcIjogX3RoaXMuaXNTZWxlY3RpbmdNb250aFJhbmdlU3RhcnQobSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC10ZXh0LS1zZWxlY3RpbmctcmFuZ2UtZW5kXCI6IF90aGlzLmlzU2VsZWN0aW5nTW9udGhSYW5nZUVuZChtKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXRleHQtLXRvZGF5XCI6IF90aGlzLmlzQ3VycmVudE1vbnRoKGRheSwgbSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZ2V0VGFiSW5kZXggPSBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiLTFcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBwcmVTZWxlY3RlZE1vbnRoID0gZ2V0TW9udGgoX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uKTtcbiAgICAgICAgICAgIHZhciBpc1ByZVNlbGVjdGVkTW9udGhEaXNhYmxlZCA9IF90aGlzLmlzTW9udGhEaXNhYmxlZEZvckxhYmVsRGF0ZShwcmVTZWxlY3RlZE1vbnRoKS5pc0Rpc2FibGVkO1xuICAgICAgICAgICAgdmFyIHRhYkluZGV4ID0gbSA9PT0gcHJlU2VsZWN0ZWRNb250aCAmJlxuICAgICAgICAgICAgICAgICEoaXNQcmVTZWxlY3RlZE1vbnRoRGlzYWJsZWQgfHwgX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24pXG4gICAgICAgICAgICAgICAgPyBcIjBcIlxuICAgICAgICAgICAgICAgIDogXCItMVwiO1xuICAgICAgICAgICAgcmV0dXJuIHRhYkluZGV4O1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRRdWFydGVyVGFiSW5kZXggPSBmdW5jdGlvbiAocSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiLTFcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBwcmVTZWxlY3RlZFF1YXJ0ZXIgPSBnZXRRdWFydGVyKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbik7XG4gICAgICAgICAgICB2YXIgaXNDdXJyZW50UXVhcnRlckRpc2FibGVkID0gaXNRdWFydGVyRGlzYWJsZWQoX3RoaXMucHJvcHMuZGF5LCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICB2YXIgdGFiSW5kZXggPSBxID09PSBwcmVTZWxlY3RlZFF1YXJ0ZXIgJiZcbiAgICAgICAgICAgICAgICAhKGlzQ3VycmVudFF1YXJ0ZXJEaXNhYmxlZCB8fCBfdGhpcy5wcm9wcy5kaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbilcbiAgICAgICAgICAgICAgICA/IFwiMFwiXG4gICAgICAgICAgICAgICAgOiBcIi0xXCI7XG4gICAgICAgICAgICByZXR1cm4gdGFiSW5kZXg7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldEFyaWFMYWJlbCA9IGZ1bmN0aW9uIChtb250aCkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIF9iID0gX2EuY2hvb3NlRGF5QXJpYUxhYmVsUHJlZml4LCBjaG9vc2VEYXlBcmlhTGFiZWxQcmVmaXggPSBfYiA9PT0gdm9pZCAwID8gXCJDaG9vc2VcIiA6IF9iLCBfYyA9IF9hLmRpc2FibGVkRGF5QXJpYUxhYmVsUHJlZml4LCBkaXNhYmxlZERheUFyaWFMYWJlbFByZWZpeCA9IF9jID09PSB2b2lkIDAgPyBcIk5vdCBhdmFpbGFibGVcIiA6IF9jLCBkYXkgPSBfYS5kYXksIGxvY2FsZSA9IF9hLmxvY2FsZTtcbiAgICAgICAgICAgIHZhciBsYWJlbERhdGUgPSBzZXRNb250aChkYXksIG1vbnRoKTtcbiAgICAgICAgICAgIHZhciBwcmVmaXggPSBfdGhpcy5pc0Rpc2FibGVkKGxhYmVsRGF0ZSkgfHwgX3RoaXMuaXNFeGNsdWRlZChsYWJlbERhdGUpXG4gICAgICAgICAgICAgICAgPyBkaXNhYmxlZERheUFyaWFMYWJlbFByZWZpeFxuICAgICAgICAgICAgICAgIDogY2hvb3NlRGF5QXJpYUxhYmVsUHJlZml4O1xuICAgICAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHByZWZpeCwgXCIgXCIpLmNvbmNhdChmb3JtYXREYXRlKGxhYmVsRGF0ZSwgXCJNTU1NIHl5eXlcIiwgbG9jYWxlKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldFF1YXJ0ZXJDbGFzc05hbWVzID0gZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBkYXkgPSBfYS5kYXksIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGUsIHNlbGVjdGVkID0gX2Euc2VsZWN0ZWQsIG1pbkRhdGUgPSBfYS5taW5EYXRlLCBtYXhEYXRlID0gX2EubWF4RGF0ZSwgZXhjbHVkZURhdGVzID0gX2EuZXhjbHVkZURhdGVzLCBpbmNsdWRlRGF0ZXMgPSBfYS5pbmNsdWRlRGF0ZXMsIGZpbHRlckRhdGUgPSBfYS5maWx0ZXJEYXRlLCBwcmVTZWxlY3Rpb24gPSBfYS5wcmVTZWxlY3Rpb24sIGRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uID0gX2EuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb247XG4gICAgICAgICAgICB2YXIgaXNEaXNhYmxlZCA9IChtaW5EYXRlIHx8IG1heERhdGUgfHwgZXhjbHVkZURhdGVzIHx8IGluY2x1ZGVEYXRlcyB8fCBmaWx0ZXJEYXRlKSAmJlxuICAgICAgICAgICAgICAgIGlzUXVhcnRlckRpc2FibGVkKHNldFF1YXJ0ZXIoZGF5LCBxKSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgcmV0dXJuIGNsc3goXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyLXRleHRcIiwgXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyLVwiLmNvbmNhdChxKSwge1xuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fcXVhcnRlci10ZXh0LS1kaXNhYmxlZFwiOiBpc0Rpc2FibGVkLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fcXVhcnRlci10ZXh0LS1zZWxlY3RlZFwiOiBzZWxlY3RlZFxuICAgICAgICAgICAgICAgICAgICA/IF90aGlzLmlzU2VsZWN0ZWRRdWFydGVyKGRheSwgcSwgc2VsZWN0ZWQpXG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fcXVhcnRlci10ZXh0LS1rZXlib2FyZC1zZWxlY3RlZFwiOiAhZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gJiZcbiAgICAgICAgICAgICAgICAgICAgcHJlU2VsZWN0aW9uICYmXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmlzU2VsZWN0ZWRRdWFydGVyKGRheSwgcSwgcHJlU2VsZWN0aW9uKSAmJlxuICAgICAgICAgICAgICAgICAgICAhaXNEaXNhYmxlZCxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3F1YXJ0ZXItdGV4dC0taW4tc2VsZWN0aW5nLXJhbmdlXCI6IF90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZVF1YXJ0ZXIocSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyLXRleHQtLWluLXJhbmdlXCI6IHN0YXJ0RGF0ZSAmJiBlbmREYXRlXG4gICAgICAgICAgICAgICAgICAgID8gaXNRdWFydGVySW5SYW5nZShzdGFydERhdGUsIGVuZERhdGUsIHEsIGRheSlcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyLXRleHQtLXJhbmdlLXN0YXJ0XCI6IF90aGlzLmlzUmFuZ2VTdGFydFF1YXJ0ZXIocSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyLXRleHQtLXJhbmdlLWVuZFwiOiBfdGhpcy5pc1JhbmdlRW5kUXVhcnRlcihxKSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3F1YXJ0ZXItdGV4dC0tdG9kYXlcIjogX3RoaXMuaXNDdXJyZW50UXVhcnRlcihkYXksIHEpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldE1vbnRoQ29udGVudCA9IGZ1bmN0aW9uIChtKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgc2hvd0Z1bGxNb250aFllYXJQaWNrZXIgPSBfYS5zaG93RnVsbE1vbnRoWWVhclBpY2tlciwgcmVuZGVyTW9udGhDb250ZW50ID0gX2EucmVuZGVyTW9udGhDb250ZW50LCBsb2NhbGUgPSBfYS5sb2NhbGUsIGRheSA9IF9hLmRheTtcbiAgICAgICAgICAgIHZhciBzaG9ydE1vbnRoVGV4dCA9IGdldE1vbnRoU2hvcnRJbkxvY2FsZShtLCBsb2NhbGUpO1xuICAgICAgICAgICAgdmFyIGZ1bGxNb250aFRleHQgPSBnZXRNb250aEluTG9jYWxlKG0sIGxvY2FsZSk7XG4gICAgICAgICAgICBpZiAocmVuZGVyTW9udGhDb250ZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlck1vbnRoQ29udGVudChtLCBzaG9ydE1vbnRoVGV4dCwgZnVsbE1vbnRoVGV4dCwgZGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzaG93RnVsbE1vbnRoWWVhclBpY2tlciA/IGZ1bGxNb250aFRleHQgOiBzaG9ydE1vbnRoVGV4dDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZ2V0UXVhcnRlckNvbnRlbnQgPSBmdW5jdGlvbiAocSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIHJlbmRlclF1YXJ0ZXJDb250ZW50ID0gX2IucmVuZGVyUXVhcnRlckNvbnRlbnQsIGxvY2FsZSA9IF9iLmxvY2FsZTtcbiAgICAgICAgICAgIHZhciBzaG9ydFF1YXJ0ZXIgPSBnZXRRdWFydGVyU2hvcnRJbkxvY2FsZShxLCBsb2NhbGUpO1xuICAgICAgICAgICAgcmV0dXJuIChfYSA9IHJlbmRlclF1YXJ0ZXJDb250ZW50ID09PSBudWxsIHx8IHJlbmRlclF1YXJ0ZXJDb250ZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZW5kZXJRdWFydGVyQ29udGVudChxLCBzaG9ydFF1YXJ0ZXIpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzaG9ydFF1YXJ0ZXI7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlck1vbnRocyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBzaG93VHdvQ29sdW1uTW9udGhZZWFyUGlja2VyID0gX2Iuc2hvd1R3b0NvbHVtbk1vbnRoWWVhclBpY2tlciwgc2hvd0ZvdXJDb2x1bW5Nb250aFllYXJQaWNrZXIgPSBfYi5zaG93Rm91ckNvbHVtbk1vbnRoWWVhclBpY2tlciwgZGF5ID0gX2IuZGF5LCBzZWxlY3RlZCA9IF9iLnNlbGVjdGVkO1xuICAgICAgICAgICAgdmFyIG1vbnRoQ29sdW1ucyA9IChfYSA9IE1PTlRIX0NPTFVNTlNbZ2V0TW9udGhDb2x1bW5zTGF5b3V0KHNob3dGb3VyQ29sdW1uTW9udGhZZWFyUGlja2VyLCBzaG93VHdvQ29sdW1uTW9udGhZZWFyUGlja2VyKV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5ncmlkO1xuICAgICAgICAgICAgcmV0dXJuIG1vbnRoQ29sdW1ucyA9PT0gbnVsbCB8fCBtb250aENvbHVtbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1vbnRoQ29sdW1ucy5tYXAoZnVuY3Rpb24gKG1vbnRoLCBpKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC13cmFwcGVyXCIsIGtleTogaSB9LCBtb250aC5tYXAoZnVuY3Rpb24gKG0sIGopIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBfdGhpcy5NT05USF9SRUZTW21dLCBrZXk6IGosIG9uQ2xpY2s6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5vbk1vbnRoQ2xpY2soZXZlbnQsIG0pO1xuICAgICAgICAgICAgICAgIH0sIG9uS2V5RG93bjogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1NwYWNlS2V5RG93bihldmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5rZXkgPSBLZXlUeXBlLkVudGVyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLm9uTW9udGhLZXlEb3duKGV2ZW50LCBtKTtcbiAgICAgICAgICAgICAgICB9LCBvbk1vdXNlRW50ZXI6ICFfdGhpcy5wcm9wcy51c2VQb2ludGVyRXZlbnRcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5vbk1vbnRoTW91c2VFbnRlcihtKTsgfVxuICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCwgb25Qb2ludGVyRW50ZXI6IF90aGlzLnByb3BzLnVzZVBvaW50ZXJFdmVudFxuICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLm9uTW9udGhNb3VzZUVudGVyKG0pOyB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLCB0YWJJbmRleDogTnVtYmVyKF90aGlzLmdldFRhYkluZGV4KG0pKSwgY2xhc3NOYW1lOiBfdGhpcy5nZXRNb250aENsYXNzTmFtZXMobSksIFwiYXJpYS1kaXNhYmxlZFwiOiBfdGhpcy5pc01vbnRoRGlzYWJsZWQobSksIHJvbGU6IFwib3B0aW9uXCIsIFwiYXJpYS1sYWJlbFwiOiBfdGhpcy5nZXRBcmlhTGFiZWwobSksIFwiYXJpYS1jdXJyZW50XCI6IF90aGlzLmlzQ3VycmVudE1vbnRoKGRheSwgbSkgPyBcImRhdGVcIiA6IHVuZGVmaW5lZCwgXCJhcmlhLXNlbGVjdGVkXCI6IHNlbGVjdGVkID8gX3RoaXMuaXNTZWxlY3RlZE1vbnRoKGRheSwgbSwgc2VsZWN0ZWQpIDogdW5kZWZpbmVkIH0sIF90aGlzLmdldE1vbnRoQ29udGVudChtKSkpOyB9KSkpOyB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyUXVhcnRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgZGF5ID0gX2EuZGF5LCBzZWxlY3RlZCA9IF9hLnNlbGVjdGVkO1xuICAgICAgICAgICAgdmFyIHF1YXJ0ZXJzID0gWzEsIDIsIDMsIDRdO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3F1YXJ0ZXItd3JhcHBlclwiIH0sIHF1YXJ0ZXJzLm1hcChmdW5jdGlvbiAocSwgaikgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBrZXk6IGosIHJlZjogX3RoaXMuUVVBUlRFUl9SRUZTW2pdLCByb2xlOiBcIm9wdGlvblwiLCBvbkNsaWNrOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMub25RdWFydGVyQ2xpY2soZXZlbnQsIHEpO1xuICAgICAgICAgICAgICAgIH0sIG9uS2V5RG93bjogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLm9uUXVhcnRlcktleURvd24oZXZlbnQsIHEpO1xuICAgICAgICAgICAgICAgIH0sIG9uTW91c2VFbnRlcjogIV90aGlzLnByb3BzLnVzZVBvaW50ZXJFdmVudFxuICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLm9uUXVhcnRlck1vdXNlRW50ZXIocSk7IH1cbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsIG9uUG9pbnRlckVudGVyOiBfdGhpcy5wcm9wcy51c2VQb2ludGVyRXZlbnRcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5vblF1YXJ0ZXJNb3VzZUVudGVyKHEpOyB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLCBjbGFzc05hbWU6IF90aGlzLmdldFF1YXJ0ZXJDbGFzc05hbWVzKHEpLCBcImFyaWEtc2VsZWN0ZWRcIjogc2VsZWN0ZWQgPyBfdGhpcy5pc1NlbGVjdGVkUXVhcnRlcihkYXksIHEsIHNlbGVjdGVkKSA6IHVuZGVmaW5lZCwgdGFiSW5kZXg6IE51bWJlcihfdGhpcy5nZXRRdWFydGVyVGFiSW5kZXgocSkpLCBcImFyaWEtY3VycmVudFwiOiBfdGhpcy5pc0N1cnJlbnRRdWFydGVyKGRheSwgcSkgPyBcImRhdGVcIiA6IHVuZGVmaW5lZCB9LCBfdGhpcy5nZXRRdWFydGVyQ29udGVudChxKSkpOyB9KSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRDbGFzc05hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIHNlbGVjdGluZ0RhdGUgPSBfYS5zZWxlY3RpbmdEYXRlLCBzZWxlY3RzU3RhcnQgPSBfYS5zZWxlY3RzU3RhcnQsIHNlbGVjdHNFbmQgPSBfYS5zZWxlY3RzRW5kLCBzaG93TW9udGhZZWFyUGlja2VyID0gX2Euc2hvd01vbnRoWWVhclBpY2tlciwgc2hvd1F1YXJ0ZXJZZWFyUGlja2VyID0gX2Euc2hvd1F1YXJ0ZXJZZWFyUGlja2VyLCBzaG93V2Vla1BpY2tlciA9IF9hLnNob3dXZWVrUGlja2VyO1xuICAgICAgICAgICAgcmV0dXJuIGNsc3goXCJyZWFjdC1kYXRlcGlja2VyX19tb250aFwiLCB7XG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC0tc2VsZWN0aW5nLXJhbmdlXCI6IHNlbGVjdGluZ0RhdGUgJiYgKHNlbGVjdHNTdGFydCB8fCBzZWxlY3RzRW5kKSxcbiAgICAgICAgICAgIH0sIHsgXCJyZWFjdC1kYXRlcGlja2VyX19tb250aFBpY2tlclwiOiBzaG93TW9udGhZZWFyUGlja2VyIH0sIHsgXCJyZWFjdC1kYXRlcGlja2VyX19xdWFydGVyUGlja2VyXCI6IHNob3dRdWFydGVyWWVhclBpY2tlciB9LCB7IFwicmVhY3QtZGF0ZXBpY2tlcl9fd2Vla1BpY2tlclwiOiBzaG93V2Vla1BpY2tlciB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBNb250aC5wcm90b3R5cGUuZ2V0U2VsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBzZWxlY3RlZCA9IF9hLnNlbGVjdGVkLCBzZWxlY3RlZERhdGVzID0gX2Euc2VsZWN0ZWREYXRlcywgc2VsZWN0c011bHRpcGxlID0gX2Euc2VsZWN0c011bHRpcGxlO1xuICAgICAgICBpZiAoc2VsZWN0c011bHRpcGxlKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWREYXRlcztcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBbc2VsZWN0ZWRdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBNb250aC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBzaG93TW9udGhZZWFyUGlja2VyID0gX2Euc2hvd01vbnRoWWVhclBpY2tlciwgc2hvd1F1YXJ0ZXJZZWFyUGlja2VyID0gX2Euc2hvd1F1YXJ0ZXJZZWFyUGlja2VyLCBkYXkgPSBfYS5kYXksIF9iID0gX2EuYXJpYUxhYmVsUHJlZml4LCBhcmlhTGFiZWxQcmVmaXggPSBfYiA9PT0gdm9pZCAwID8gXCJNb250aCBcIiA6IF9iO1xuICAgICAgICB2YXIgZm9ybWF0dGVkQXJpYUxhYmVsUHJlZml4ID0gYXJpYUxhYmVsUHJlZml4XG4gICAgICAgICAgICA/IGFyaWFMYWJlbFByZWZpeC50cmltKCkgKyBcIiBcIlxuICAgICAgICAgICAgOiBcIlwiO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHRoaXMuZ2V0Q2xhc3NOYW1lcygpLCBvbk1vdXNlTGVhdmU6ICF0aGlzLnByb3BzLnVzZVBvaW50ZXJFdmVudCA/IHRoaXMuaGFuZGxlTW91c2VMZWF2ZSA6IHVuZGVmaW5lZCwgb25Qb2ludGVyTGVhdmU6IHRoaXMucHJvcHMudXNlUG9pbnRlckV2ZW50ID8gdGhpcy5oYW5kbGVNb3VzZUxlYXZlIDogdW5kZWZpbmVkLCBcImFyaWEtbGFiZWxcIjogXCJcIi5jb25jYXQoZm9ybWF0dGVkQXJpYUxhYmVsUHJlZml4KS5jb25jYXQoZm9ybWF0RGF0ZShkYXksIFwiTU1NTSwgeXl5eVwiLCB0aGlzLnByb3BzLmxvY2FsZSkpLCByb2xlOiBcImxpc3Rib3hcIiB9LCBzaG93TW9udGhZZWFyUGlja2VyXG4gICAgICAgICAgICA/IHRoaXMucmVuZGVyTW9udGhzKClcbiAgICAgICAgICAgIDogc2hvd1F1YXJ0ZXJZZWFyUGlja2VyXG4gICAgICAgICAgICAgICAgPyB0aGlzLnJlbmRlclF1YXJ0ZXJzKClcbiAgICAgICAgICAgICAgICA6IHRoaXMucmVuZGVyV2Vla3MoKSkpO1xuICAgIH07XG4gICAgcmV0dXJuIE1vbnRoO1xufShDb21wb25lbnQpKTtcblxudmFyIE1vbnRoRHJvcGRvd25PcHRpb25zID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNb250aERyb3Bkb3duT3B0aW9ucywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNb250aERyb3Bkb3duT3B0aW9ucygpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmlzU2VsZWN0ZWRNb250aCA9IGZ1bmN0aW9uIChpKSB7IHJldHVybiBfdGhpcy5wcm9wcy5tb250aCA9PT0gaTsgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5tb250aE5hbWVzLm1hcChmdW5jdGlvbiAobW9udGgsIGkpIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBfdGhpcy5pc1NlbGVjdGVkTW9udGgoaSlcbiAgICAgICAgICAgICAgICAgICAgPyBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLW9wdGlvbiByZWFjdC1kYXRlcGlja2VyX19tb250aC1vcHRpb24tLXNlbGVjdGVkX21vbnRoXCJcbiAgICAgICAgICAgICAgICAgICAgOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLW9wdGlvblwiLCBrZXk6IG1vbnRoLCBvbkNsaWNrOiBfdGhpcy5vbkNoYW5nZS5iaW5kKF90aGlzLCBpKSwgXCJhcmlhLXNlbGVjdGVkXCI6IF90aGlzLmlzU2VsZWN0ZWRNb250aChpKSA/IFwidHJ1ZVwiIDogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgICAgX3RoaXMuaXNTZWxlY3RlZE1vbnRoKGkpID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLW9wdGlvbi0tc2VsZWN0ZWRcIiB9LCBcIlxcdTI3MTNcIikpIDogKFwiXCIpLFxuICAgICAgICAgICAgICAgIG1vbnRoKSk7IH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uIChtb250aCkgeyByZXR1cm4gX3RoaXMucHJvcHMub25DaGFuZ2UobW9udGgpOyB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVDbGlja091dHNpZGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5wcm9wcy5vbkNhbmNlbCgpOyB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE1vbnRoRHJvcGRvd25PcHRpb25zLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChDbGlja091dHNpZGVXcmFwcGVyLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC1kcm9wZG93blwiLCBvbkNsaWNrT3V0c2lkZTogdGhpcy5oYW5kbGVDbGlja091dHNpZGUgfSwgdGhpcy5yZW5kZXJPcHRpb25zKCkpKTtcbiAgICB9O1xuICAgIHJldHVybiBNb250aERyb3Bkb3duT3B0aW9ucztcbn0oQ29tcG9uZW50KSk7XG5cbnZhciBNb250aERyb3Bkb3duID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNb250aERyb3Bkb3duLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE1vbnRoRHJvcGRvd24oKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRyb3Bkb3duVmlzaWJsZTogZmFsc2UsXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlclNlbGVjdE9wdGlvbnMgPSBmdW5jdGlvbiAobW9udGhOYW1lcykge1xuICAgICAgICAgICAgcmV0dXJuIG1vbnRoTmFtZXMubWFwKGZ1bmN0aW9uIChtLCBpKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IGtleTogbSwgdmFsdWU6IGkgfSwgbSkpOyB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyU2VsZWN0TW9kZSA9IGZ1bmN0aW9uIChtb250aE5hbWVzKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiLCB7IHZhbHVlOiBfdGhpcy5wcm9wcy5tb250aCwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXNlbGVjdFwiLCBvbkNoYW5nZTogZnVuY3Rpb24gKGUpIHsgcmV0dXJuIF90aGlzLm9uQ2hhbmdlKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSk7IH0gfSwgX3RoaXMucmVuZGVyU2VsZWN0T3B0aW9ucyhtb250aE5hbWVzKSkpOyB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJSZWFkVmlldyA9IGZ1bmN0aW9uICh2aXNpYmxlLCBtb250aE5hbWVzKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGtleTogXCJyZWFkXCIsIHN0eWxlOiB7IHZpc2liaWxpdHk6IHZpc2libGUgPyBcInZpc2libGVcIiA6IFwiaGlkZGVuXCIgfSwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXJlYWQtdmlld1wiLCBvbkNsaWNrOiBfdGhpcy50b2dnbGVEcm9wZG93biB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtcmVhZC12aWV3LS1kb3duLWFycm93XCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC1yZWFkLXZpZXctLXNlbGVjdGVkLW1vbnRoXCIgfSwgbW9udGhOYW1lc1tfdGhpcy5wcm9wcy5tb250aF0pKSk7IH07XG4gICAgICAgIF90aGlzLnJlbmRlckRyb3Bkb3duID0gZnVuY3Rpb24gKG1vbnRoTmFtZXMpIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE1vbnRoRHJvcGRvd25PcHRpb25zLCBfYXNzaWduKHsga2V5OiBcImRyb3Bkb3duXCIgfSwgX3RoaXMucHJvcHMsIHsgbW9udGhOYW1lczogbW9udGhOYW1lcywgb25DaGFuZ2U6IF90aGlzLm9uQ2hhbmdlLCBvbkNhbmNlbDogX3RoaXMudG9nZ2xlRHJvcGRvd24gfSkpKTsgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyU2Nyb2xsTW9kZSA9IGZ1bmN0aW9uIChtb250aE5hbWVzKSB7XG4gICAgICAgICAgICB2YXIgZHJvcGRvd25WaXNpYmxlID0gX3RoaXMuc3RhdGUuZHJvcGRvd25WaXNpYmxlO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtfdGhpcy5yZW5kZXJSZWFkVmlldyghZHJvcGRvd25WaXNpYmxlLCBtb250aE5hbWVzKV07XG4gICAgICAgICAgICBpZiAoZHJvcGRvd25WaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnVuc2hpZnQoX3RoaXMucmVuZGVyRHJvcGRvd24obW9udGhOYW1lcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25DaGFuZ2UgPSBmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgICAgIF90aGlzLnRvZ2dsZURyb3Bkb3duKCk7XG4gICAgICAgICAgICBpZiAobW9udGggIT09IF90aGlzLnByb3BzLm1vbnRoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2UobW9udGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy50b2dnbGVEcm9wZG93biA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZHJvcGRvd25WaXNpYmxlOiAhX3RoaXMuc3RhdGUuZHJvcGRvd25WaXNpYmxlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTW9udGhEcm9wZG93bi5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgbW9udGhOYW1lcyA9IFswLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMCwgMTFdLm1hcCh0aGlzLnByb3BzLnVzZVNob3J0TW9udGhJbkRyb3Bkb3duXG4gICAgICAgICAgICA/IGZ1bmN0aW9uIChtKSB7IHJldHVybiBnZXRNb250aFNob3J0SW5Mb2NhbGUobSwgX3RoaXMucHJvcHMubG9jYWxlKTsgfVxuICAgICAgICAgICAgOiBmdW5jdGlvbiAobSkgeyByZXR1cm4gZ2V0TW9udGhJbkxvY2FsZShtLCBfdGhpcy5wcm9wcy5sb2NhbGUpOyB9KTtcbiAgICAgICAgdmFyIHJlbmRlcmVkRHJvcGRvd247XG4gICAgICAgIHN3aXRjaCAodGhpcy5wcm9wcy5kcm9wZG93bk1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJzY3JvbGxcIjpcbiAgICAgICAgICAgICAgICByZW5kZXJlZERyb3Bkb3duID0gdGhpcy5yZW5kZXJTY3JvbGxNb2RlKG1vbnRoTmFtZXMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInNlbGVjdFwiOlxuICAgICAgICAgICAgICAgIHJlbmRlcmVkRHJvcGRvd24gPSB0aGlzLnJlbmRlclNlbGVjdE1vZGUobW9udGhOYW1lcyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLWRyb3Bkb3duLWNvbnRhaW5lciByZWFjdC1kYXRlcGlja2VyX19tb250aC1kcm9wZG93bi1jb250YWluZXItLVwiLmNvbmNhdCh0aGlzLnByb3BzLmRyb3Bkb3duTW9kZSkgfSwgcmVuZGVyZWREcm9wZG93bikpO1xuICAgIH07XG4gICAgcmV0dXJuIE1vbnRoRHJvcGRvd247XG59KENvbXBvbmVudCkpO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZU1vbnRoWWVhcnMobWluRGF0ZSwgbWF4RGF0ZSkge1xuICAgIHZhciBsaXN0ID0gW107XG4gICAgdmFyIGN1cnJEYXRlID0gZ2V0U3RhcnRPZk1vbnRoKG1pbkRhdGUpO1xuICAgIHZhciBsYXN0RGF0ZSA9IGdldFN0YXJ0T2ZNb250aChtYXhEYXRlKTtcbiAgICB3aGlsZSAoIWlzQWZ0ZXIoY3VyckRhdGUsIGxhc3REYXRlKSkge1xuICAgICAgICBsaXN0LnB1c2gobmV3RGF0ZShjdXJyRGF0ZSkpO1xuICAgICAgICBjdXJyRGF0ZSA9IGFkZE1vbnRocyhjdXJyRGF0ZSwgMSk7XG4gICAgfVxuICAgIHJldHVybiBsaXN0O1xufVxudmFyIE1vbnRoWWVhckRyb3Bkb3duT3B0aW9ucyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTW9udGhZZWFyRHJvcGRvd25PcHRpb25zLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE1vbnRoWWVhckRyb3Bkb3duT3B0aW9ucyhwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMucmVuZGVyT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zdGF0ZS5tb250aFllYXJzTGlzdC5tYXAoZnVuY3Rpb24gKG1vbnRoWWVhcikge1xuICAgICAgICAgICAgICAgIHZhciBtb250aFllYXJQb2ludCA9IGdldFRpbWUobW9udGhZZWFyKTtcbiAgICAgICAgICAgICAgICB2YXIgaXNTYW1lTW9udGhZZWFyID0gaXNTYW1lWWVhcihfdGhpcy5wcm9wcy5kYXRlLCBtb250aFllYXIpICYmXG4gICAgICAgICAgICAgICAgICAgIGlzU2FtZU1vbnRoKF90aGlzLnByb3BzLmRhdGUsIG1vbnRoWWVhcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBpc1NhbWVNb250aFllYXJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC15ZWFyLW9wdGlvbi0tc2VsZWN0ZWRfbW9udGgteWVhclwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6IFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgteWVhci1vcHRpb25cIiwga2V5OiBtb250aFllYXJQb2ludCwgb25DbGljazogX3RoaXMub25DaGFuZ2UuYmluZChfdGhpcywgbW9udGhZZWFyUG9pbnQpLCBcImFyaWEtc2VsZWN0ZWRcIjogaXNTYW1lTW9udGhZZWFyID8gXCJ0cnVlXCIgOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgICAgICAgaXNTYW1lTW9udGhZZWFyID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXllYXItb3B0aW9uLS1zZWxlY3RlZFwiIH0sIFwiXFx1MjcxM1wiKSkgOiAoXCJcIiksXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdERhdGUobW9udGhZZWFyLCBfdGhpcy5wcm9wcy5kYXRlRm9ybWF0LCBfdGhpcy5wcm9wcy5sb2NhbGUpKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25DaGFuZ2UgPSBmdW5jdGlvbiAobW9udGhZZWFyKSB7IHJldHVybiBfdGhpcy5wcm9wcy5vbkNoYW5nZShtb250aFllYXIpOyB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVDbGlja091dHNpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkNhbmNlbCgpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG1vbnRoWWVhcnNMaXN0OiBnZW5lcmF0ZU1vbnRoWWVhcnMoX3RoaXMucHJvcHMubWluRGF0ZSwgX3RoaXMucHJvcHMubWF4RGF0ZSksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTW9udGhZZWFyRHJvcGRvd25PcHRpb25zLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkcm9wZG93bkNsYXNzID0gY2xzeCh7XG4gICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXllYXItZHJvcGRvd25cIjogdHJ1ZSxcbiAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgteWVhci1kcm9wZG93bi0tc2Nyb2xsYWJsZVwiOiB0aGlzLnByb3BzLnNjcm9sbGFibGVNb250aFllYXJEcm9wZG93bixcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChDbGlja091dHNpZGVXcmFwcGVyLCB7IGNsYXNzTmFtZTogZHJvcGRvd25DbGFzcywgb25DbGlja091dHNpZGU6IHRoaXMuaGFuZGxlQ2xpY2tPdXRzaWRlIH0sIHRoaXMucmVuZGVyT3B0aW9ucygpKSk7XG4gICAgfTtcbiAgICByZXR1cm4gTW9udGhZZWFyRHJvcGRvd25PcHRpb25zO1xufShDb21wb25lbnQpKTtcblxudmFyIE1vbnRoWWVhckRyb3Bkb3duID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNb250aFllYXJEcm9wZG93biwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNb250aFllYXJEcm9wZG93bigpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZHJvcGRvd25WaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyU2VsZWN0T3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBjdXJyRGF0ZSA9IGdldFN0YXJ0T2ZNb250aChfdGhpcy5wcm9wcy5taW5EYXRlKTtcbiAgICAgICAgICAgIHZhciBsYXN0RGF0ZSA9IGdldFN0YXJ0T2ZNb250aChfdGhpcy5wcm9wcy5tYXhEYXRlKTtcbiAgICAgICAgICAgIHZhciBvcHRpb25zID0gW107XG4gICAgICAgICAgICB3aGlsZSAoIWlzQWZ0ZXIoY3VyckRhdGUsIGxhc3REYXRlKSkge1xuICAgICAgICAgICAgICAgIHZhciB0aW1lUG9pbnQgPSBnZXRUaW1lKGN1cnJEYXRlKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IGtleTogdGltZVBvaW50LCB2YWx1ZTogdGltZVBvaW50IH0sIGZvcm1hdERhdGUoY3VyckRhdGUsIF90aGlzLnByb3BzLmRhdGVGb3JtYXQsIF90aGlzLnByb3BzLmxvY2FsZSkpKTtcbiAgICAgICAgICAgICAgICBjdXJyRGF0ZSA9IGFkZE1vbnRocyhjdXJyRGF0ZSwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25TZWxlY3RDaGFuZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIF90aGlzLm9uQ2hhbmdlKHBhcnNlSW50KGV2ZW50LnRhcmdldC52YWx1ZSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJTZWxlY3RNb2RlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIiwgeyB2YWx1ZTogZ2V0VGltZShnZXRTdGFydE9mTW9udGgoX3RoaXMucHJvcHMuZGF0ZSkpLCBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgteWVhci1zZWxlY3RcIiwgb25DaGFuZ2U6IF90aGlzLm9uU2VsZWN0Q2hhbmdlIH0sIF90aGlzLnJlbmRlclNlbGVjdE9wdGlvbnMoKSkpOyB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJSZWFkVmlldyA9IGZ1bmN0aW9uICh2aXNpYmxlKSB7XG4gICAgICAgICAgICB2YXIgeWVhck1vbnRoID0gZm9ybWF0RGF0ZShfdGhpcy5wcm9wcy5kYXRlLCBfdGhpcy5wcm9wcy5kYXRlRm9ybWF0LCBfdGhpcy5wcm9wcy5sb2NhbGUpO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsga2V5OiBcInJlYWRcIiwgc3R5bGU6IHsgdmlzaWJpbGl0eTogdmlzaWJsZSA/IFwidmlzaWJsZVwiIDogXCJoaWRkZW5cIiB9LCBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgteWVhci1yZWFkLXZpZXdcIiwgb25DbGljazogX3RoaXMudG9nZ2xlRHJvcGRvd24gfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC15ZWFyLXJlYWQtdmlldy0tZG93bi1hcnJvd1wiIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXllYXItcmVhZC12aWV3LS1zZWxlY3RlZC1tb250aC15ZWFyXCIgfSwgeWVhck1vbnRoKSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJEcm9wZG93biA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE1vbnRoWWVhckRyb3Bkb3duT3B0aW9ucywgX2Fzc2lnbih7IGtleTogXCJkcm9wZG93blwiIH0sIF90aGlzLnByb3BzLCB7IG9uQ2hhbmdlOiBfdGhpcy5vbkNoYW5nZSwgb25DYW5jZWw6IF90aGlzLnRvZ2dsZURyb3Bkb3duIH0pKSk7IH07XG4gICAgICAgIF90aGlzLnJlbmRlclNjcm9sbE1vZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZHJvcGRvd25WaXNpYmxlID0gX3RoaXMuc3RhdGUuZHJvcGRvd25WaXNpYmxlO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtfdGhpcy5yZW5kZXJSZWFkVmlldyghZHJvcGRvd25WaXNpYmxlKV07XG4gICAgICAgICAgICBpZiAoZHJvcGRvd25WaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnVuc2hpZnQoX3RoaXMucmVuZGVyRHJvcGRvd24oKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uIChtb250aFllYXJQb2ludCkge1xuICAgICAgICAgICAgX3RoaXMudG9nZ2xlRHJvcGRvd24oKTtcbiAgICAgICAgICAgIHZhciBjaGFuZ2VkRGF0ZSA9IG5ld0RhdGUobW9udGhZZWFyUG9pbnQpO1xuICAgICAgICAgICAgaWYgKGlzU2FtZVllYXIoX3RoaXMucHJvcHMuZGF0ZSwgY2hhbmdlZERhdGUpICYmXG4gICAgICAgICAgICAgICAgaXNTYW1lTW9udGgoX3RoaXMucHJvcHMuZGF0ZSwgY2hhbmdlZERhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2UoY2hhbmdlZERhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy50b2dnbGVEcm9wZG93biA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZHJvcGRvd25WaXNpYmxlOiAhX3RoaXMuc3RhdGUuZHJvcGRvd25WaXNpYmxlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgTW9udGhZZWFyRHJvcGRvd24ucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHJlbmRlcmVkRHJvcGRvd247XG4gICAgICAgIHN3aXRjaCAodGhpcy5wcm9wcy5kcm9wZG93bk1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJzY3JvbGxcIjpcbiAgICAgICAgICAgICAgICByZW5kZXJlZERyb3Bkb3duID0gdGhpcy5yZW5kZXJTY3JvbGxNb2RlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgICAgICAgICAgICAgcmVuZGVyZWREcm9wZG93biA9IHRoaXMucmVuZGVyU2VsZWN0TW9kZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19tb250aC15ZWFyLWRyb3Bkb3duLWNvbnRhaW5lciByZWFjdC1kYXRlcGlja2VyX19tb250aC15ZWFyLWRyb3Bkb3duLWNvbnRhaW5lci0tXCIuY29uY2F0KHRoaXMucHJvcHMuZHJvcGRvd25Nb2RlKSB9LCByZW5kZXJlZERyb3Bkb3duKSk7XG4gICAgfTtcbiAgICByZXR1cm4gTW9udGhZZWFyRHJvcGRvd247XG59KENvbXBvbmVudCkpO1xuXG52YXIgVGltZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVGltZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUaW1lKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBoZWlnaHQ6IG51bGwsXG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnNjcm9sbFRvVGhlU2VsZWN0ZWRUaW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLmxpc3QpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBfdGhpcy5saXN0LnNjcm9sbFRvcCA9XG4gICAgICAgICAgICAgICAgICAgIChfYyA9IChfdGhpcy5jZW50ZXJMaSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgVGltZS5jYWxjQ2VudGVyUG9zaXRpb24oX3RoaXMucHJvcHMubW9udGhSZWZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF90aGlzLnByb3BzLm1vbnRoUmVmLmNsaWVudEhlaWdodCAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgoX2IgPSAoX2EgPSBfdGhpcy5oZWFkZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbGllbnRIZWlnaHQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdGhpcy5saXN0LmNsaWVudEhlaWdodCwgX3RoaXMuY2VudGVyTGkpKSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogMDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVDbGljayA9IGZ1bmN0aW9uICh0aW1lKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgaWYgKCgoX3RoaXMucHJvcHMubWluVGltZSB8fCBfdGhpcy5wcm9wcy5tYXhUaW1lKSAmJlxuICAgICAgICAgICAgICAgIGlzVGltZUluRGlzYWJsZWRSYW5nZSh0aW1lLCBfdGhpcy5wcm9wcykpIHx8XG4gICAgICAgICAgICAgICAgKChfdGhpcy5wcm9wcy5leGNsdWRlVGltZXMgfHxcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuaW5jbHVkZVRpbWVzIHx8XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLmZpbHRlclRpbWUpICYmXG4gICAgICAgICAgICAgICAgICAgIGlzVGltZURpc2FibGVkKHRpbWUsIF90aGlzLnByb3BzKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25DaGFuZ2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCB0aW1lKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RlZFRpbWUgPSBmdW5jdGlvbiAodGltZSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnByb3BzLnNlbGVjdGVkICYmIGlzU2FtZU1pbnV0ZShfdGhpcy5wcm9wcy5zZWxlY3RlZCwgdGltZSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzRGlzYWJsZWRUaW1lID0gZnVuY3Rpb24gKHRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiAoKF90aGlzLnByb3BzLm1pblRpbWUgfHwgX3RoaXMucHJvcHMubWF4VGltZSkgJiZcbiAgICAgICAgICAgICAgICBpc1RpbWVJbkRpc2FibGVkUmFuZ2UodGltZSwgX3RoaXMucHJvcHMpKSB8fFxuICAgICAgICAgICAgICAgICgoX3RoaXMucHJvcHMuZXhjbHVkZVRpbWVzIHx8XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLmluY2x1ZGVUaW1lcyB8fFxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5maWx0ZXJUaW1lKSAmJlxuICAgICAgICAgICAgICAgICAgICBpc1RpbWVEaXNhYmxlZCh0aW1lLCBfdGhpcy5wcm9wcykpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5saUNsYXNzZXMgPSBmdW5jdGlvbiAodGltZSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIGNsYXNzZXMgPSBbXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX190aW1lLWxpc3QtaXRlbVwiLFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnRpbWVDbGFzc05hbWUgPyBfdGhpcy5wcm9wcy50aW1lQ2xhc3NOYW1lKHRpbWUpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5pc1NlbGVjdGVkVGltZSh0aW1lKSkge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtbGlzdC1pdGVtLS1zZWxlY3RlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5pc0Rpc2FibGVkVGltZSh0aW1lKSkge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtbGlzdC1pdGVtLS1kaXNhYmxlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vY29udmVydCB0aGlzLnByb3BzLmludGVydmFscyBhbmQgdGhlIHJlbGV2YW50IHRpbWUgdG8gc2Vjb25kcyBhbmQgY2hlY2sgaWYgaXQgaXQncyBhIGNsZWFuIG11bHRpcGxlIG9mIHRoZSBpbnRlcnZhbFxuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmluamVjdFRpbWVzICYmXG4gICAgICAgICAgICAgICAgKGdldEhvdXJzKHRpbWUpICogMzYwMCArIGdldE1pbnV0ZXModGltZSkgKiA2MCArIGdldFNlY29uZHModGltZSkpICVcbiAgICAgICAgICAgICAgICAgICAgKCgoX2EgPSBfdGhpcy5wcm9wcy5pbnRlcnZhbHMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFRpbWUuZGVmYXVsdFByb3BzLmludGVydmFscykgKiA2MCkgIT09XG4gICAgICAgICAgICAgICAgICAgIDApIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goXCJyZWFjdC1kYXRlcGlja2VyX190aW1lLWxpc3QtaXRlbS0taW5qZWN0ZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2xhc3Nlcy5qb2luKFwiIFwiKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlT25LZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50LCB0aW1lKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gS2V5VHlwZS5TcGFjZSkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZXZlbnQua2V5ID0gS2V5VHlwZS5FbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoZXZlbnQua2V5ID09PSBLZXlUeXBlLkFycm93VXAgfHwgZXZlbnQua2V5ID09PSBLZXlUeXBlLkFycm93TGVmdCkgJiZcbiAgICAgICAgICAgICAgICBldmVudC50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC5wcmV2aW91c1NpYmxpbmcpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC5wcmV2aW91c1NpYmxpbmcgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgICAgICBldmVudC50YXJnZXQucHJldmlvdXNTaWJsaW5nLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKGV2ZW50LmtleSA9PT0gS2V5VHlwZS5BcnJvd0Rvd24gfHwgZXZlbnQua2V5ID09PSBLZXlUeXBlLkFycm93UmlnaHQpICYmXG4gICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICBldmVudC50YXJnZXQubmV4dFNpYmxpbmcpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC5uZXh0U2libGluZyBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC5uZXh0U2libGluZy5mb2N1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gS2V5VHlwZS5FbnRlcikge1xuICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZUNsaWNrKHRpbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLmhhbmRsZU9uS2V5RG93bikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyVGltZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICB2YXIgdGltZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBmb3JtYXQgPSB0eXBlb2YgX3RoaXMucHJvcHMuZm9ybWF0ID09PSBcInN0cmluZ1wiID8gX3RoaXMucHJvcHMuZm9ybWF0IDogXCJwXCI7XG4gICAgICAgICAgICB2YXIgaW50ZXJ2YWxzID0gKF9hID0gX3RoaXMucHJvcHMuaW50ZXJ2YWxzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBUaW1lLmRlZmF1bHRQcm9wcy5pbnRlcnZhbHM7XG4gICAgICAgICAgICB2YXIgYWN0aXZlRGF0ZSA9IF90aGlzLnByb3BzLnNlbGVjdGVkIHx8IF90aGlzLnByb3BzLm9wZW5Ub0RhdGUgfHwgbmV3RGF0ZSgpO1xuICAgICAgICAgICAgdmFyIGJhc2UgPSBnZXRTdGFydE9mRGF5KGFjdGl2ZURhdGUpO1xuICAgICAgICAgICAgdmFyIHNvcnRlZEluamVjdFRpbWVzID0gX3RoaXMucHJvcHMuaW5qZWN0VGltZXMgJiZcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5pbmplY3RUaW1lcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhLmdldFRpbWUoKSAtIGIuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIG1pbnV0ZXNJbkRheSA9IDYwICogZ2V0SG91cnNJbkRheShhY3RpdmVEYXRlKTtcbiAgICAgICAgICAgIHZhciBtdWx0aXBsaWVyID0gbWludXRlc0luRGF5IC8gaW50ZXJ2YWxzO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtdWx0aXBsaWVyOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFRpbWUgPSBhZGRNaW51dGVzKGJhc2UsIGkgKiBpbnRlcnZhbHMpO1xuICAgICAgICAgICAgICAgIHRpbWVzLnB1c2goY3VycmVudFRpbWUpO1xuICAgICAgICAgICAgICAgIGlmIChzb3J0ZWRJbmplY3RUaW1lcykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGltZXNUb0luamVjdCA9IHRpbWVzVG9JbmplY3RBZnRlcihiYXNlLCBjdXJyZW50VGltZSwgaSwgaW50ZXJ2YWxzLCBzb3J0ZWRJbmplY3RUaW1lcyk7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVzID0gdGltZXMuY29uY2F0KHRpbWVzVG9JbmplY3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIERldGVybWluZSB3aGljaCB0aW1lIHRvIGZvY3VzIGFuZCBzY3JvbGwgaW50byB2aWV3IHdoZW4gY29tcG9uZW50IG1vdW50c1xuICAgICAgICAgICAgdmFyIHRpbWVUb0ZvY3VzID0gdGltZXMucmVkdWNlKGZ1bmN0aW9uIChwcmV2LCB0aW1lKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWUuZ2V0VGltZSgpIDw9IGFjdGl2ZURhdGUuZ2V0VGltZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aW1lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcHJldjtcbiAgICAgICAgICAgIH0sIHRpbWVzWzBdKTtcbiAgICAgICAgICAgIHJldHVybiB0aW1lcy5tYXAoZnVuY3Rpb24gKHRpbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogdGltZS52YWx1ZU9mKCksIG9uQ2xpY2s6IF90aGlzLmhhbmRsZUNsaWNrLmJpbmQoX3RoaXMsIHRpbWUpLCBjbGFzc05hbWU6IF90aGlzLmxpQ2xhc3Nlcyh0aW1lKSwgcmVmOiBmdW5jdGlvbiAobGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lID09PSB0aW1lVG9Gb2N1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmNlbnRlckxpID0gbGk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sIG9uS2V5RG93bjogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVPbktleURvd24oZXZlbnQsIHRpbWUpO1xuICAgICAgICAgICAgICAgICAgICB9LCB0YWJJbmRleDogdGltZSA9PT0gdGltZVRvRm9jdXMgPyAwIDogLTEsIHJvbGU6IFwib3B0aW9uXCIsIFwiYXJpYS1zZWxlY3RlZFwiOiBfdGhpcy5pc1NlbGVjdGVkVGltZSh0aW1lKSA/IFwidHJ1ZVwiIDogdW5kZWZpbmVkLCBcImFyaWEtZGlzYWJsZWRcIjogX3RoaXMuaXNEaXNhYmxlZFRpbWUodGltZSkgPyBcInRydWVcIiA6IHVuZGVmaW5lZCB9LCBmb3JtYXREYXRlKHRpbWUsIGZvcm1hdCwgX3RoaXMucHJvcHMubG9jYWxlKSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlclRpbWVDYXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dUaW1lQ2FwdGlvbiA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9faGVhZGVyIHJlYWN0LWRhdGVwaWNrZXJfX2hlYWRlci0tdGltZSBcIi5jb25jYXQoX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5XG4gICAgICAgICAgICAgICAgICAgID8gXCJyZWFjdC1kYXRlcGlja2VyX19oZWFkZXItLXRpbWUtLW9ubHlcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiXCIpLCByZWY6IGZ1bmN0aW9uIChoZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGVhZGVyID0gaGVhZGVyO1xuICAgICAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXItdGltZV9faGVhZGVyXCIgfSwgX3RoaXMucHJvcHMudGltZUNhcHRpb24pKSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRpbWUsIFwiZGVmYXVsdFByb3BzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGludGVydmFsczogMzAsXG4gICAgICAgICAgICAgICAgdG9kYXlCdXR0b246IG51bGwsXG4gICAgICAgICAgICAgICAgdGltZUNhcHRpb246IFwiVGltZVwiLFxuICAgICAgICAgICAgICAgIHNob3dUaW1lQ2FwdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBUaW1lLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gY29kZSB0byBlbnN1cmUgc2VsZWN0ZWQgdGltZSB3aWxsIGFsd2F5cyBiZSBpbiBmb2N1cyB3aXRoaW4gdGltZSB3aW5kb3cgd2hlbiBpdCBmaXJzdCBhcHBlYXJzXG4gICAgICAgIHRoaXMuc2Nyb2xsVG9UaGVTZWxlY3RlZFRpbWUoKTtcbiAgICAgICAgdGhpcy5vYnNlcnZlRGF0ZVBpY2tlckhlaWdodENoYW5nZXMoKTtcbiAgICB9O1xuICAgIFRpbWUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIChfYSA9IHRoaXMucmVzaXplT2JzZXJ2ZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5kaXNjb25uZWN0KCk7XG4gICAgfTtcbiAgICBUaW1lLnByb3RvdHlwZS5vYnNlcnZlRGF0ZVBpY2tlckhlaWdodENoYW5nZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBtb250aFJlZiA9IHRoaXMucHJvcHMubW9udGhSZWY7XG4gICAgICAgIHRoaXMudXBkYXRlQ29udGFpbmVySGVpZ2h0KCk7XG4gICAgICAgIGlmIChtb250aFJlZikge1xuICAgICAgICAgICAgdGhpcy5yZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMudXBkYXRlQ29udGFpbmVySGVpZ2h0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMucmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZShtb250aFJlZik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRpbWUucHJvdG90eXBlLnVwZGF0ZUNvbnRhaW5lckhlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMubW9udGhSZWYgJiYgdGhpcy5oZWFkZXIpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGhlaWdodDogdGhpcy5wcm9wcy5tb250aFJlZi5jbGllbnRIZWlnaHQgLSB0aGlzLmhlYWRlci5jbGllbnRIZWlnaHQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVGltZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBoZWlnaHQgPSB0aGlzLnN0YXRlLmhlaWdodDtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtY29udGFpbmVyIFwiLmNvbmNhdCgoKF9hID0gdGhpcy5wcm9wcy50b2RheUJ1dHRvbikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogVGltZS5kZWZhdWx0UHJvcHMudG9kYXlCdXR0b24pXG4gICAgICAgICAgICAgICAgPyBcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtY29udGFpbmVyLS13aXRoLXRvZGF5LWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgOiBcIlwiKSB9LFxuICAgICAgICAgICAgdGhpcy5yZW5kZXJUaW1lQ2FwdGlvbigpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX190aW1lXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtYm94XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtbGlzdFwiLCByZWY6IGZ1bmN0aW9uIChsaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMubGlzdCA9IGxpc3Q7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBzdHlsZTogaGVpZ2h0ID8geyBoZWlnaHQ6IGhlaWdodCB9IDoge30sIHJvbGU6IFwibGlzdGJveFwiLCBcImFyaWEtbGFiZWxcIjogdGhpcy5wcm9wcy50aW1lQ2FwdGlvbiB9LCB0aGlzLnJlbmRlclRpbWVzKCkpKSkpKTtcbiAgICB9O1xuICAgIFRpbWUuY2FsY0NlbnRlclBvc2l0aW9uID0gZnVuY3Rpb24gKGxpc3RIZWlnaHQsIGNlbnRlckxpUmVmKSB7XG4gICAgICAgIHJldHVybiAoY2VudGVyTGlSZWYub2Zmc2V0VG9wIC0gKGxpc3RIZWlnaHQgLyAyIC0gY2VudGVyTGlSZWYuY2xpZW50SGVpZ2h0IC8gMikpO1xuICAgIH07XG4gICAgcmV0dXJuIFRpbWU7XG59KENvbXBvbmVudCkpO1xuXG52YXIgVkVSVElDQUxfTkFWSUdBVElPTl9PRkZTRVQgPSAzO1xuLyoqXG4gKiBgWWVhcmAgaXMgYSBjb21wb25lbnQgdGhhdCByZXByZXNlbnRzIGEgeWVhciBpbiBhIGRhdGUgcGlja2VyLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtZZWFyUHJvcHN9IHByb3BzIC0gVGhlIHByb3BlcnRpZXMgdGhhdCBkZWZpbmUgdGhlIGBZZWFyYCBjb21wb25lbnQuXG4gKiBAcHJvcGVydHkge1ZvaWRGdW5jdGlvbn0gW3Byb3BzLmNsZWFyU2VsZWN0aW5nRGF0ZV0gLSBGdW5jdGlvbiB0byBjbGVhciB0aGUgc2VsZWN0ZWQgZGF0ZS5cbiAqIEBwcm9wZXJ0eSB7RGF0ZX0gW3Byb3BzLmRhdGVdIC0gVGhlIGN1cnJlbnRseSBzZWxlY3RlZCBkYXRlLlxuICogQHByb3BlcnR5IHtib29sZWFufSBbcHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb25dIC0gSWYgdHJ1ZSwga2V5Ym9hcmQgbmF2aWdhdGlvbiBpcyBkaXNhYmxlZC5cbiAqIEBwcm9wZXJ0eSB7RGF0ZX0gW3Byb3BzLmVuZERhdGVdIC0gVGhlIGVuZCBkYXRlIGluIGEgcmFuZ2Ugc2VsZWN0aW9uLlxuICogQHByb3BlcnR5IHsoZGF0ZTogRGF0ZSkgPT4gdm9pZH0gcHJvcHMub25EYXlDbGljayAtIEZ1bmN0aW9uIHRvIGhhbmRsZSBkYXkgY2xpY2sgZXZlbnRzLlxuICogQHByb3BlcnR5IHtEYXRlfSBwcm9wcy5wcmVTZWxlY3Rpb24gLSBUaGUgZGF0ZSB0aGF0IGlzIGN1cnJlbnRseSBpbiBmb2N1cy5cbiAqIEBwcm9wZXJ0eSB7KGRhdGU6IERhdGUpID0+IHZvaWR9IHByb3BzLnNldFByZVNlbGVjdGlvbiAtIEZ1bmN0aW9uIHRvIHNldCB0aGUgcHJlLXNlbGVjdGVkIGRhdGUuXG4gKiBAcHJvcGVydHkge3sgW2tleTogc3RyaW5nXTogYW55IH19IHByb3BzLnNlbGVjdGVkIC0gVGhlIHNlbGVjdGVkIGRhdGUocykuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IHByb3BzLmlubGluZSAtIElmIHRydWUsIHRoZSBkYXRlIHBpY2tlciBpcyBkaXNwbGF5ZWQgaW5saW5lLlxuICogQHByb3BlcnR5IHtEYXRlfSBwcm9wcy5tYXhEYXRlIC0gVGhlIG1heGltdW0gc2VsZWN0YWJsZSBkYXRlLlxuICogQHByb3BlcnR5IHtEYXRlfSBwcm9wcy5taW5EYXRlIC0gVGhlIG1pbmltdW0gc2VsZWN0YWJsZSBkYXRlLlxuICogQHByb3BlcnR5IHtib29sZWFufSBwcm9wcy51c2VQb2ludGVyRXZlbnQgLSBJZiB0cnVlLCBwb2ludGVyIGV2ZW50cyBhcmUgdXNlZCBpbnN0ZWFkIG9mIG1vdXNlIGV2ZW50cy5cbiAqIEBwcm9wZXJ0eSB7KGRhdGU6IERhdGUpID0+IHZvaWR9IHByb3BzLm9uWWVhck1vdXNlRW50ZXIgLSBGdW5jdGlvbiB0byBoYW5kbGUgbW91c2UgZW50ZXIgZXZlbnRzIG9uIGEgeWVhci5cbiAqIEBwcm9wZXJ0eSB7KGRhdGU6IERhdGUpID0+IHZvaWR9IHByb3BzLm9uWWVhck1vdXNlTGVhdmUgLSBGdW5jdGlvbiB0byBoYW5kbGUgbW91c2UgbGVhdmUgZXZlbnRzIG9uIGEgeWVhci5cbiAqL1xudmFyIFllYXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFllYXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gWWVhcihwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuWUVBUl9SRUZTID0gX19zcHJlYWRBcnJheShbXSwgQXJyYXkoX3RoaXMucHJvcHMueWVhckl0ZW1OdW1iZXIpLCB0cnVlKS5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVJlZigpO1xuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXMuaXNEaXNhYmxlZCA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNEYXlEaXNhYmxlZChkYXRlLCB7XG4gICAgICAgICAgICAgICAgbWluRGF0ZTogX3RoaXMucHJvcHMubWluRGF0ZSxcbiAgICAgICAgICAgICAgICBtYXhEYXRlOiBfdGhpcy5wcm9wcy5tYXhEYXRlLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGVEYXRlczogX3RoaXMucHJvcHMuZXhjbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGluY2x1ZGVEYXRlczogX3RoaXMucHJvcHMuaW5jbHVkZURhdGVzLFxuICAgICAgICAgICAgICAgIGZpbHRlckRhdGU6IF90aGlzLnByb3BzLmZpbHRlckRhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNFeGNsdWRlZCA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNEYXlFeGNsdWRlZChkYXRlLCB7XG4gICAgICAgICAgICAgICAgZXhjbHVkZURhdGVzOiBfdGhpcy5wcm9wcy5leGNsdWRlRGF0ZXMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuc2VsZWN0aW5nRGF0ZSA9IGZ1bmN0aW9uICgpIHsgdmFyIF9hOyByZXR1cm4gKF9hID0gX3RoaXMucHJvcHMuc2VsZWN0aW5nRGF0ZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uOyB9O1xuICAgICAgICBfdGhpcy51cGRhdGVGb2N1c09uUGFnaW5hdGUgPSBmdW5jdGlvbiAocmVmSW5kZXgpIHtcbiAgICAgICAgICAgIHZhciB3YWl0Rm9yUmVSZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5ZRUFSX1JFRlNbcmVmSW5kZXhdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY3VycmVudCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZvY3VzKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh3YWl0Rm9yUmVSZW5kZXIpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVZZWFyQ2xpY2sgPSBmdW5jdGlvbiAoZGF5LCBldmVudCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm9uRGF5Q2xpY2spIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkRheUNsaWNrKGRheSwgZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVZZWFyTmF2aWdhdGlvbiA9IGZ1bmN0aW9uIChuZXdZZWFyLCBuZXdEYXRlKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgICAgICB2YXIgX2UgPSBfdGhpcy5wcm9wcywgZGF0ZSA9IF9lLmRhdGUsIHllYXJJdGVtTnVtYmVyID0gX2UueWVhckl0ZW1OdW1iZXI7XG4gICAgICAgICAgICBpZiAoZGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHllYXJJdGVtTnVtYmVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgc3RhcnRQZXJpb2QgPSBnZXRZZWFyc1BlcmlvZChkYXRlLCB5ZWFySXRlbU51bWJlcikuc3RhcnRQZXJpb2Q7XG4gICAgICAgICAgICBpZiAoX3RoaXMuaXNEaXNhYmxlZChuZXdEYXRlKSB8fCBfdGhpcy5pc0V4Y2x1ZGVkKG5ld0RhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnNldFByZVNlbGVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIG5ld0RhdGUpO1xuICAgICAgICAgICAgaWYgKG5ld1llYXIgLSBzdGFydFBlcmlvZCA8IDApIHtcbiAgICAgICAgICAgICAgICBfdGhpcy51cGRhdGVGb2N1c09uUGFnaW5hdGUoeWVhckl0ZW1OdW1iZXIgLSAoc3RhcnRQZXJpb2QgLSBuZXdZZWFyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChuZXdZZWFyIC0gc3RhcnRQZXJpb2QgPj0geWVhckl0ZW1OdW1iZXIpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy51cGRhdGVGb2N1c09uUGFnaW5hdGUoTWF0aC5hYnMoeWVhckl0ZW1OdW1iZXIgLSAobmV3WWVhciAtIHN0YXJ0UGVyaW9kKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IF90aGlzLllFQVJfUkVGU1tuZXdZZWFyIC0gc3RhcnRQZXJpb2RdKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY3VycmVudCkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmZvY3VzKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzU2FtZURheSA9IGZ1bmN0aW9uICh5LCBvdGhlcikgeyByZXR1cm4gaXNTYW1lRGF5KHksIG90aGVyKTsgfTtcbiAgICAgICAgX3RoaXMuaXNDdXJyZW50WWVhciA9IGZ1bmN0aW9uICh5KSB7IHJldHVybiB5ID09PSBnZXRZZWFyKG5ld0RhdGUoKSk7IH07XG4gICAgICAgIF90aGlzLmlzUmFuZ2VTdGFydCA9IGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMucHJvcHMuc3RhcnREYXRlICYmXG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuZW5kRGF0ZSAmJlxuICAgICAgICAgICAgICAgIGlzU2FtZVllYXIoc2V0WWVhcihuZXdEYXRlKCksIHkpLCBfdGhpcy5wcm9wcy5zdGFydERhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1JhbmdlRW5kID0gZnVuY3Rpb24gKHkpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5zdGFydERhdGUgJiZcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5lbmREYXRlICYmXG4gICAgICAgICAgICAgICAgaXNTYW1lWWVhcihzZXRZZWFyKG5ld0RhdGUoKSwgeSksIF90aGlzLnByb3BzLmVuZERhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc0luUmFuZ2UgPSBmdW5jdGlvbiAoeSkge1xuICAgICAgICAgICAgcmV0dXJuIGlzWWVhckluUmFuZ2UoeSwgX3RoaXMucHJvcHMuc3RhcnREYXRlLCBfdGhpcy5wcm9wcy5lbmREYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlID0gZnVuY3Rpb24gKHkpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBzZWxlY3RzU3RhcnQgPSBfYS5zZWxlY3RzU3RhcnQsIHNlbGVjdHNFbmQgPSBfYS5zZWxlY3RzRW5kLCBzZWxlY3RzUmFuZ2UgPSBfYS5zZWxlY3RzUmFuZ2UsIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGU7XG4gICAgICAgICAgICBpZiAoIShzZWxlY3RzU3RhcnQgfHwgc2VsZWN0c0VuZCB8fCBzZWxlY3RzUmFuZ2UpIHx8XG4gICAgICAgICAgICAgICAgIV90aGlzLnNlbGVjdGluZ0RhdGUoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxlY3RzU3RhcnQgJiYgZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1llYXJJblJhbmdlKHksIF90aGlzLnNlbGVjdGluZ0RhdGUoKSwgZW5kRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c0VuZCAmJiBzdGFydERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNZZWFySW5SYW5nZSh5LCBzdGFydERhdGUsIF90aGlzLnNlbGVjdGluZ0RhdGUoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZWN0c1JhbmdlICYmIHN0YXJ0RGF0ZSAmJiAhZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1llYXJJblJhbmdlKHksIHN0YXJ0RGF0ZSwgX3RoaXMuc2VsZWN0aW5nRGF0ZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaXNTZWxlY3RpbmdSYW5nZVN0YXJ0ID0gZnVuY3Rpb24gKHkpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICghX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlKHkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIHN0YXJ0RGF0ZSA9IF9iLnN0YXJ0RGF0ZSwgc2VsZWN0c1N0YXJ0ID0gX2Iuc2VsZWN0c1N0YXJ0O1xuICAgICAgICAgICAgdmFyIF95ZWFyID0gc2V0WWVhcihuZXdEYXRlKCksIHkpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdHNTdGFydCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWVZZWFyKF95ZWFyLCAoX2EgPSBfdGhpcy5zZWxlY3RpbmdEYXRlKCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZVllYXIoX3llYXIsIHN0YXJ0RGF0ZSAhPT0gbnVsbCAmJiBzdGFydERhdGUgIT09IHZvaWQgMCA/IHN0YXJ0RGF0ZSA6IG51bGwpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1NlbGVjdGluZ1JhbmdlRW5kID0gZnVuY3Rpb24gKHkpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICghX3RoaXMuaXNJblNlbGVjdGluZ1JhbmdlKHkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9iID0gX3RoaXMucHJvcHMsIGVuZERhdGUgPSBfYi5lbmREYXRlLCBzZWxlY3RzRW5kID0gX2Iuc2VsZWN0c0VuZCwgc2VsZWN0c1JhbmdlID0gX2Iuc2VsZWN0c1JhbmdlO1xuICAgICAgICAgICAgdmFyIF95ZWFyID0gc2V0WWVhcihuZXdEYXRlKCksIHkpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdHNFbmQgfHwgc2VsZWN0c1JhbmdlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU2FtZVllYXIoX3llYXIsIChfYSA9IF90aGlzLnNlbGVjdGluZ0RhdGUoKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXNTYW1lWWVhcihfeWVhciwgZW5kRGF0ZSAhPT0gbnVsbCAmJiBlbmREYXRlICE9PSB2b2lkIDAgPyBlbmREYXRlIDogbnVsbCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmlzS2V5Ym9hcmRTZWxlY3RlZCA9IGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZGF0ZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2VsZWN0ZWQgPT0gbnVsbCB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIG1pbkRhdGUgPSBfYS5taW5EYXRlLCBtYXhEYXRlID0gX2EubWF4RGF0ZSwgZXhjbHVkZURhdGVzID0gX2EuZXhjbHVkZURhdGVzLCBpbmNsdWRlRGF0ZXMgPSBfYS5pbmNsdWRlRGF0ZXMsIGZpbHRlckRhdGUgPSBfYS5maWx0ZXJEYXRlO1xuICAgICAgICAgICAgdmFyIGRhdGUgPSBnZXRTdGFydE9mWWVhcihzZXRZZWFyKF90aGlzLnByb3BzLmRhdGUsIHkpKTtcbiAgICAgICAgICAgIHZhciBpc0Rpc2FibGVkID0gKG1pbkRhdGUgfHwgbWF4RGF0ZSB8fCBleGNsdWRlRGF0ZXMgfHwgaW5jbHVkZURhdGVzIHx8IGZpbHRlckRhdGUpICYmXG4gICAgICAgICAgICAgICAgaXNZZWFyRGlzYWJsZWQoeSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgcmV0dXJuICghX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gJiZcbiAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMuaW5saW5lICYmXG4gICAgICAgICAgICAgICAgIWlzU2FtZURheShkYXRlLCBnZXRTdGFydE9mWWVhcihfdGhpcy5wcm9wcy5zZWxlY3RlZCkpICYmXG4gICAgICAgICAgICAgICAgaXNTYW1lRGF5KGRhdGUsIGdldFN0YXJ0T2ZZZWFyKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbikpICYmXG4gICAgICAgICAgICAgICAgIWlzRGlzYWJsZWQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5pc1NlbGVjdGVkWWVhciA9IGZ1bmN0aW9uICh5ZWFyKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgc2VsZWN0c011bHRpcGxlID0gX2Euc2VsZWN0c011bHRpcGxlLCBzZWxlY3RlZCA9IF9hLnNlbGVjdGVkLCBzZWxlY3RlZERhdGVzID0gX2Euc2VsZWN0ZWREYXRlcztcbiAgICAgICAgICAgIGlmIChzZWxlY3RzTXVsdGlwbGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWREYXRlcyA9PT0gbnVsbCB8fCBzZWxlY3RlZERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3RlZERhdGVzLnNvbWUoZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHllYXIgPT09IGdldFllYXIoZGF0ZSk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICEhc2VsZWN0ZWQgJiYgeWVhciA9PT0gZ2V0WWVhcihzZWxlY3RlZCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uWWVhckNsaWNrID0gZnVuY3Rpb24gKGV2ZW50LCB5KSB7XG4gICAgICAgICAgICB2YXIgZGF0ZSA9IF90aGlzLnByb3BzLmRhdGU7XG4gICAgICAgICAgICBpZiAoZGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuaGFuZGxlWWVhckNsaWNrKGdldFN0YXJ0T2ZZZWFyKHNldFllYXIoZGF0ZSwgeSkpLCBldmVudCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uWWVhcktleURvd24gPSBmdW5jdGlvbiAoZXZlbnQsIHkpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICB2YXIga2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgdmFyIF9jID0gX3RoaXMucHJvcHMsIGRhdGUgPSBfYy5kYXRlLCB5ZWFySXRlbU51bWJlciA9IF9jLnllYXJJdGVtTnVtYmVyLCBoYW5kbGVPbktleURvd24gPSBfYy5oYW5kbGVPbktleURvd247XG4gICAgICAgICAgICBpZiAoa2V5ICE9PSBLZXlUeXBlLlRhYikge1xuICAgICAgICAgICAgICAgIC8vIHByZXZlbnREZWZhdWx0IG9uIHRhYiBldmVudCBibG9ja3MgZm9jdXMgY2hhbmdlXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24pIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuRW50ZXI6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2VsZWN0ZWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMub25ZZWFyQ2xpY2soZXZlbnQsIHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnNldFByZVNlbGVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIF90aGlzLnByb3BzLnNlbGVjdGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dSaWdodDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGFuZGxlWWVhck5hdmlnYXRpb24oeSArIDEsIGFkZFllYXJzKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiwgMSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5BcnJvd0xlZnQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMucHJlU2VsZWN0aW9uID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVllYXJOYXZpZ2F0aW9uKHkgLSAxLCBzdWJZZWFycyhfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24sIDEpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dVcDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGUgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllYXJJdGVtTnVtYmVyID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0UGVyaW9kID0gZ2V0WWVhcnNQZXJpb2QoZGF0ZSwgeWVhckl0ZW1OdW1iZXIpLnN0YXJ0UGVyaW9kO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9mZnNldCA9IFZFUlRJQ0FMX05BVklHQVRJT05fT0ZGU0VUO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1llYXIgPSB5IC0gb2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1llYXIgPCBzdGFydFBlcmlvZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsZWZ0T3Zlck9mZnNldCA9IHllYXJJdGVtTnVtYmVyICUgb2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh5ID49IHN0YXJ0UGVyaW9kICYmIHkgPCBzdGFydFBlcmlvZCArIGxlZnRPdmVyT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IGxlZnRPdmVyT2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGxlZnRPdmVyT2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdZZWFyID0geSAtIG9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVllYXJOYXZpZ2F0aW9uKG5ld1llYXIsIHN1YlllYXJzKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiwgb2Zmc2V0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dEb3duOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeWVhckl0ZW1OdW1iZXIgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnByZVNlbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZW5kUGVyaW9kID0gZ2V0WWVhcnNQZXJpb2QoZGF0ZSwgeWVhckl0ZW1OdW1iZXIpLmVuZFBlcmlvZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvZmZzZXQgPSBWRVJUSUNBTF9OQVZJR0FUSU9OX09GRlNFVDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdZZWFyID0geSArIG9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdZZWFyID4gZW5kUGVyaW9kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxlZnRPdmVyT2Zmc2V0ID0geWVhckl0ZW1OdW1iZXIgJSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHkgPD0gZW5kUGVyaW9kICYmIHkgPiBlbmRQZXJpb2QgLSBsZWZ0T3Zlck9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSBsZWZ0T3Zlck9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCArPSBsZWZ0T3Zlck9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3WWVhciA9IHkgKyBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVZZWFyTmF2aWdhdGlvbihuZXdZZWFyLCBhZGRZZWFycyhfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24sIG9mZnNldCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVPbktleURvd24gJiYgaGFuZGxlT25LZXlEb3duKGV2ZW50KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZ2V0WWVhckNsYXNzTmFtZXMgPSBmdW5jdGlvbiAoeSkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGRhdGUgPSBfYS5kYXRlLCBtaW5EYXRlID0gX2EubWluRGF0ZSwgbWF4RGF0ZSA9IF9hLm1heERhdGUsIGV4Y2x1ZGVEYXRlcyA9IF9hLmV4Y2x1ZGVEYXRlcywgaW5jbHVkZURhdGVzID0gX2EuaW5jbHVkZURhdGVzLCBmaWx0ZXJEYXRlID0gX2EuZmlsdGVyRGF0ZSwgeWVhckNsYXNzTmFtZSA9IF9hLnllYXJDbGFzc05hbWU7XG4gICAgICAgICAgICByZXR1cm4gY2xzeChcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItdGV4dFwiLCBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItXCIuY29uY2F0KHkpLCBkYXRlID8geWVhckNsYXNzTmFtZSA9PT0gbnVsbCB8fCB5ZWFyQ2xhc3NOYW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB5ZWFyQ2xhc3NOYW1lKHNldFllYXIoZGF0ZSwgeSkpIDogdW5kZWZpbmVkLCB7XG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLXRleHQtLXNlbGVjdGVkXCI6IF90aGlzLmlzU2VsZWN0ZWRZZWFyKHkpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci10ZXh0LS1kaXNhYmxlZFwiOiAobWluRGF0ZSB8fCBtYXhEYXRlIHx8IGV4Y2x1ZGVEYXRlcyB8fCBpbmNsdWRlRGF0ZXMgfHwgZmlsdGVyRGF0ZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgaXNZZWFyRGlzYWJsZWQoeSwgX3RoaXMucHJvcHMpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci10ZXh0LS1rZXlib2FyZC1zZWxlY3RlZFwiOiBfdGhpcy5pc0tleWJvYXJkU2VsZWN0ZWQoeSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLXRleHQtLXJhbmdlLXN0YXJ0XCI6IF90aGlzLmlzUmFuZ2VTdGFydCh5KSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItdGV4dC0tcmFuZ2UtZW5kXCI6IF90aGlzLmlzUmFuZ2VFbmQoeSksXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLXRleHQtLWluLXJhbmdlXCI6IF90aGlzLmlzSW5SYW5nZSh5KSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItdGV4dC0taW4tc2VsZWN0aW5nLXJhbmdlXCI6IF90aGlzLmlzSW5TZWxlY3RpbmdSYW5nZSh5KSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItdGV4dC0tc2VsZWN0aW5nLXJhbmdlLXN0YXJ0XCI6IF90aGlzLmlzU2VsZWN0aW5nUmFuZ2VTdGFydCh5KSxcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItdGV4dC0tc2VsZWN0aW5nLXJhbmdlLWVuZFwiOiBfdGhpcy5pc1NlbGVjdGluZ1JhbmdlRW5kKHkpLFxuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci10ZXh0LS10b2RheVwiOiBfdGhpcy5pc0N1cnJlbnRZZWFyKHkpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmdldFllYXJUYWJJbmRleCA9IGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5wcmVTZWxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIi0xXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcHJlU2VsZWN0ZWQgPSBnZXRZZWFyKF90aGlzLnByb3BzLnByZVNlbGVjdGlvbik7XG4gICAgICAgICAgICB2YXIgaXNQcmVTZWxlY3RlZFllYXJEaXNhYmxlZCA9IGlzWWVhckRpc2FibGVkKHksIF90aGlzLnByb3BzKTtcbiAgICAgICAgICAgIHJldHVybiB5ID09PSBwcmVTZWxlY3RlZCAmJiAhaXNQcmVTZWxlY3RlZFllYXJEaXNhYmxlZCA/IFwiMFwiIDogXCItMVwiO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRZZWFyQ29udGVudCA9IGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMucHJvcHMucmVuZGVyWWVhckNvbnRlbnQgPyBfdGhpcy5wcm9wcy5yZW5kZXJZZWFyQ29udGVudCh5KSA6IHk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgWWVhci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgeWVhcnNMaXN0ID0gW107XG4gICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIGRhdGUgPSBfYS5kYXRlLCB5ZWFySXRlbU51bWJlciA9IF9hLnllYXJJdGVtTnVtYmVyLCBvblllYXJNb3VzZUVudGVyID0gX2Eub25ZZWFyTW91c2VFbnRlciwgb25ZZWFyTW91c2VMZWF2ZSA9IF9hLm9uWWVhck1vdXNlTGVhdmU7XG4gICAgICAgIGlmIChkYXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfYiA9IGdldFllYXJzUGVyaW9kKGRhdGUsIHllYXJJdGVtTnVtYmVyKSwgc3RhcnRQZXJpb2QgPSBfYi5zdGFydFBlcmlvZCwgZW5kUGVyaW9kID0gX2IuZW5kUGVyaW9kO1xuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uICh5KSB7XG4gICAgICAgICAgICB5ZWFyc0xpc3QucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiB0aGlzXzEuWUVBUl9SRUZTW3kgLSBzdGFydFBlcmlvZF0sIG9uQ2xpY2s6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5vblllYXJDbGljayhldmVudCwgeSk7XG4gICAgICAgICAgICAgICAgfSwgb25LZXlEb3duOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3BhY2VLZXlEb3duKGV2ZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmtleSA9IEtleVR5cGUuRW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX3RoaXMub25ZZWFyS2V5RG93bihldmVudCwgeSk7XG4gICAgICAgICAgICAgICAgfSwgdGFiSW5kZXg6IE51bWJlcih0aGlzXzEuZ2V0WWVhclRhYkluZGV4KHkpKSwgY2xhc3NOYW1lOiB0aGlzXzEuZ2V0WWVhckNsYXNzTmFtZXMoeSksIG9uTW91c2VFbnRlcjogIXRoaXNfMS5wcm9wcy51c2VQb2ludGVyRXZlbnRcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIG9uWWVhck1vdXNlRW50ZXIoZXZlbnQsIHkpOyB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLCBvblBvaW50ZXJFbnRlcjogdGhpc18xLnByb3BzLnVzZVBvaW50ZXJFdmVudFxuICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uIChldmVudCkgeyByZXR1cm4gb25ZZWFyTW91c2VFbnRlcihldmVudCwgeSk7IH1cbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsIG9uTW91c2VMZWF2ZTogIXRoaXNfMS5wcm9wcy51c2VQb2ludGVyRXZlbnRcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIG9uWWVhck1vdXNlTGVhdmUoZXZlbnQsIHkpOyB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLCBvblBvaW50ZXJMZWF2ZTogdGhpc18xLnByb3BzLnVzZVBvaW50ZXJFdmVudFxuICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uIChldmVudCkgeyByZXR1cm4gb25ZZWFyTW91c2VMZWF2ZShldmVudCwgeSk7IH1cbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsIGtleTogeSwgXCJhcmlhLWN1cnJlbnRcIjogdGhpc18xLmlzQ3VycmVudFllYXIoeSkgPyBcImRhdGVcIiA6IHVuZGVmaW5lZCB9LCB0aGlzXzEuZ2V0WWVhckNvbnRlbnQoeSkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHRoaXNfMSA9IHRoaXM7XG4gICAgICAgIGZvciAodmFyIHkgPSBzdGFydFBlcmlvZDsgeSA8PSBlbmRQZXJpb2Q7IHkrKykge1xuICAgICAgICAgICAgX2xvb3BfMSh5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhclwiIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItd3JhcHBlclwiLCBvbk1vdXNlTGVhdmU6ICF0aGlzLnByb3BzLnVzZVBvaW50ZXJFdmVudFxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMucHJvcHMuY2xlYXJTZWxlY3RpbmdEYXRlXG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLCBvblBvaW50ZXJMZWF2ZTogdGhpcy5wcm9wcy51c2VQb2ludGVyRXZlbnRcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnByb3BzLmNsZWFyU2VsZWN0aW5nRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCB9LCB5ZWFyc0xpc3QpKSk7XG4gICAgfTtcbiAgICByZXR1cm4gWWVhcjtcbn0oQ29tcG9uZW50KSk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlWWVhcnMoeWVhciwgbm9PZlllYXIsIG1pbkRhdGUsIG1heERhdGUpIHtcbiAgICB2YXIgbGlzdCA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMiAqIG5vT2ZZZWFyICsgMTsgaSsrKSB7XG4gICAgICAgIHZhciBuZXdZZWFyID0geWVhciArIG5vT2ZZZWFyIC0gaTtcbiAgICAgICAgdmFyIGlzSW5SYW5nZSA9IHRydWU7XG4gICAgICAgIGlmIChtaW5EYXRlKSB7XG4gICAgICAgICAgICBpc0luUmFuZ2UgPSBnZXRZZWFyKG1pbkRhdGUpIDw9IG5ld1llYXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1heERhdGUgJiYgaXNJblJhbmdlKSB7XG4gICAgICAgICAgICBpc0luUmFuZ2UgPSBnZXRZZWFyKG1heERhdGUpID49IG5ld1llYXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzSW5SYW5nZSkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKG5ld1llYXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsaXN0O1xufVxudmFyIFllYXJEcm9wZG93bk9wdGlvbnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFllYXJEcm9wZG93bk9wdGlvbnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gWWVhckRyb3Bkb3duT3B0aW9ucyhwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMucmVuZGVyT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZFllYXIgPSBfdGhpcy5wcm9wcy55ZWFyO1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBfdGhpcy5zdGF0ZS55ZWFyc0xpc3QubWFwKGZ1bmN0aW9uICh5ZWFyKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogc2VsZWN0ZWRZZWFyID09PSB5ZWFyXG4gICAgICAgICAgICAgICAgICAgID8gXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLW9wdGlvbiByZWFjdC1kYXRlcGlja2VyX195ZWFyLW9wdGlvbi0tc2VsZWN0ZWRfeWVhclwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLW9wdGlvblwiLCBrZXk6IHllYXIsIG9uQ2xpY2s6IF90aGlzLm9uQ2hhbmdlLmJpbmQoX3RoaXMsIHllYXIpLCBcImFyaWEtc2VsZWN0ZWRcIjogc2VsZWN0ZWRZZWFyID09PSB5ZWFyID8gXCJ0cnVlXCIgOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFllYXIgPT09IHllYXIgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci1vcHRpb24tLXNlbGVjdGVkXCIgfSwgXCJcXHUyNzEzXCIpKSA6IChcIlwiKSxcbiAgICAgICAgICAgICAgICB5ZWFyKSk7IH0pO1xuICAgICAgICAgICAgdmFyIG1pblllYXIgPSBfdGhpcy5wcm9wcy5taW5EYXRlID8gZ2V0WWVhcihfdGhpcy5wcm9wcy5taW5EYXRlKSA6IG51bGw7XG4gICAgICAgICAgICB2YXIgbWF4WWVhciA9IF90aGlzLnByb3BzLm1heERhdGUgPyBnZXRZZWFyKF90aGlzLnByb3BzLm1heERhdGUpIDogbnVsbDtcbiAgICAgICAgICAgIGlmICghbWF4WWVhciB8fCAhX3RoaXMuc3RhdGUueWVhcnNMaXN0LmZpbmQoZnVuY3Rpb24gKHllYXIpIHsgcmV0dXJuIHllYXIgPT09IG1heFllYXI7IH0pKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy51bnNoaWZ0KFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci1vcHRpb25cIiwga2V5OiBcInVwY29taW5nXCIsIG9uQ2xpY2s6IF90aGlzLmluY3JlbWVudFllYXJzIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24gcmVhY3QtZGF0ZXBpY2tlcl9fbmF2aWdhdGlvbi0teWVhcnMgcmVhY3QtZGF0ZXBpY2tlcl9fbmF2aWdhdGlvbi0teWVhcnMtdXBjb21pbmdcIiB9KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFtaW5ZZWFyIHx8ICFfdGhpcy5zdGF0ZS55ZWFyc0xpc3QuZmluZChmdW5jdGlvbiAoeWVhcikgeyByZXR1cm4geWVhciA9PT0gbWluWWVhcjsgfSkpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLW9wdGlvblwiLCBrZXk6IFwicHJldmlvdXNcIiwgb25DbGljazogX3RoaXMuZGVjcmVtZW50WWVhcnMgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fbmF2aWdhdGlvbiByZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uLS15ZWFycyByZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uLS15ZWFycy1wcmV2aW91c1wiIH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25DaGFuZ2UgPSBmdW5jdGlvbiAoeWVhcikge1xuICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2UoeWVhcik7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZUNsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnByb3BzLm9uQ2FuY2VsKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnNoaWZ0WWVhcnMgPSBmdW5jdGlvbiAoYW1vdW50KSB7XG4gICAgICAgICAgICB2YXIgeWVhcnMgPSBfdGhpcy5zdGF0ZS55ZWFyc0xpc3QubWFwKGZ1bmN0aW9uICh5ZWFyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHllYXIgKyBhbW91bnQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICB5ZWFyc0xpc3Q6IHllYXJzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmluY3JlbWVudFllYXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNoaWZ0WWVhcnMoMSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmRlY3JlbWVudFllYXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNoaWZ0WWVhcnMoLTEpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgeWVhckRyb3Bkb3duSXRlbU51bWJlciA9IHByb3BzLnllYXJEcm9wZG93bkl0ZW1OdW1iZXIsIHNjcm9sbGFibGVZZWFyRHJvcGRvd24gPSBwcm9wcy5zY3JvbGxhYmxlWWVhckRyb3Bkb3duO1xuICAgICAgICB2YXIgbm9PZlllYXIgPSB5ZWFyRHJvcGRvd25JdGVtTnVtYmVyIHx8IChzY3JvbGxhYmxlWWVhckRyb3Bkb3duID8gMTAgOiA1KTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB5ZWFyc0xpc3Q6IGdlbmVyYXRlWWVhcnMoX3RoaXMucHJvcHMueWVhciwgbm9PZlllYXIsIF90aGlzLnByb3BzLm1pbkRhdGUsIF90aGlzLnByb3BzLm1heERhdGUpLFxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5kcm9wZG93blJlZiA9IGNyZWF0ZVJlZigpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFllYXJEcm9wZG93bk9wdGlvbnMucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZHJvcGRvd25DdXJyZW50ID0gdGhpcy5kcm9wZG93blJlZi5jdXJyZW50O1xuICAgICAgICBpZiAoZHJvcGRvd25DdXJyZW50KSB7XG4gICAgICAgICAgICAvLyBHZXQgYXJyYXkgZnJvbSBIVE1MQ29sbGVjdGlvblxuICAgICAgICAgICAgdmFyIGRyb3Bkb3duQ3VycmVudENoaWxkcmVuID0gZHJvcGRvd25DdXJyZW50LmNoaWxkcmVuXG4gICAgICAgICAgICAgICAgPyBBcnJheS5mcm9tKGRyb3Bkb3duQ3VycmVudC5jaGlsZHJlbilcbiAgICAgICAgICAgICAgICA6IG51bGw7XG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWRZZWFyT3B0aW9uRWwgPSBkcm9wZG93bkN1cnJlbnRDaGlsZHJlblxuICAgICAgICAgICAgICAgID8gZHJvcGRvd25DdXJyZW50Q2hpbGRyZW4uZmluZChmdW5jdGlvbiAoY2hpbGRFbCkgeyByZXR1cm4gY2hpbGRFbC5hcmlhU2VsZWN0ZWQ7IH0pXG4gICAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgICAgZHJvcGRvd25DdXJyZW50LnNjcm9sbFRvcCA9XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRZZWFyT3B0aW9uRWwgJiYgc2VsZWN0ZWRZZWFyT3B0aW9uRWwgaW5zdGFuY2VvZiBIVE1MRWxlbWVudFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGVjdGVkWWVhck9wdGlvbkVsLm9mZnNldFRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VsZWN0ZWRZZWFyT3B0aW9uRWwuY2xpZW50SGVpZ2h0IC0gZHJvcGRvd25DdXJyZW50LmNsaWVudEhlaWdodCkgL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICAgICAgICAgOiAoZHJvcGRvd25DdXJyZW50LnNjcm9sbEhlaWdodCAtIGRyb3Bkb3duQ3VycmVudC5jbGllbnRIZWlnaHQpIC8gMjtcbiAgICAgICAgfVxuICAgIH07XG4gICAgWWVhckRyb3Bkb3duT3B0aW9ucy5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZHJvcGRvd25DbGFzcyA9IGNsc3goe1xuICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLWRyb3Bkb3duXCI6IHRydWUsXG4gICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItZHJvcGRvd24tLXNjcm9sbGFibGVcIjogdGhpcy5wcm9wcy5zY3JvbGxhYmxlWWVhckRyb3Bkb3duLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KENsaWNrT3V0c2lkZVdyYXBwZXIsIHsgY2xhc3NOYW1lOiBkcm9wZG93bkNsYXNzLCBjb250YWluZXJSZWY6IHRoaXMuZHJvcGRvd25SZWYsIG9uQ2xpY2tPdXRzaWRlOiB0aGlzLmhhbmRsZUNsaWNrT3V0c2lkZSB9LCB0aGlzLnJlbmRlck9wdGlvbnMoKSkpO1xuICAgIH07XG4gICAgcmV0dXJuIFllYXJEcm9wZG93bk9wdGlvbnM7XG59KENvbXBvbmVudCkpO1xuXG52YXIgWWVhckRyb3Bkb3duID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhZZWFyRHJvcGRvd24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gWWVhckRyb3Bkb3duKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBkcm9wZG93blZpc2libGU6IGZhbHNlLFxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJTZWxlY3RPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1pblllYXIgPSBfdGhpcy5wcm9wcy5taW5EYXRlXG4gICAgICAgICAgICAgICAgPyBnZXRZZWFyKF90aGlzLnByb3BzLm1pbkRhdGUpXG4gICAgICAgICAgICAgICAgOiAxOTAwO1xuICAgICAgICAgICAgdmFyIG1heFllYXIgPSBfdGhpcy5wcm9wcy5tYXhEYXRlXG4gICAgICAgICAgICAgICAgPyBnZXRZZWFyKF90aGlzLnByb3BzLm1heERhdGUpXG4gICAgICAgICAgICAgICAgOiAyMTAwO1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBtaW5ZZWFyOyBpIDw9IG1heFllYXI7IGkrKykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsga2V5OiBpLCB2YWx1ZTogaSB9LCBpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMub25TZWxlY3RDaGFuZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIF90aGlzLm9uQ2hhbmdlKHBhcnNlSW50KGV2ZW50LnRhcmdldC52YWx1ZSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJTZWxlY3RNb2RlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIiwgeyB2YWx1ZTogX3RoaXMucHJvcHMueWVhciwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItc2VsZWN0XCIsIG9uQ2hhbmdlOiBfdGhpcy5vblNlbGVjdENoYW5nZSB9LCBfdGhpcy5yZW5kZXJTZWxlY3RPcHRpb25zKCkpKTsgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyUmVhZFZpZXcgPSBmdW5jdGlvbiAodmlzaWJsZSkgeyByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBrZXk6IFwicmVhZFwiLCBzdHlsZTogeyB2aXNpYmlsaXR5OiB2aXNpYmxlID8gXCJ2aXNpYmxlXCIgOiBcImhpZGRlblwiIH0sIGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX195ZWFyLXJlYWQtdmlld1wiLCBvbkNsaWNrOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudG9nZ2xlRHJvcGRvd24oZXZlbnQpO1xuICAgICAgICAgICAgfSB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci1yZWFkLXZpZXctLWRvd24tYXJyb3dcIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItcmVhZC12aWV3LS1zZWxlY3RlZC15ZWFyXCIgfSwgX3RoaXMucHJvcHMueWVhcikpKTsgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyRHJvcGRvd24gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChZZWFyRHJvcGRvd25PcHRpb25zLCBfYXNzaWduKHsga2V5OiBcImRyb3Bkb3duXCIgfSwgX3RoaXMucHJvcHMsIHsgb25DaGFuZ2U6IF90aGlzLm9uQ2hhbmdlLCBvbkNhbmNlbDogX3RoaXMudG9nZ2xlRHJvcGRvd24gfSkpKTsgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyU2Nyb2xsTW9kZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBkcm9wZG93blZpc2libGUgPSBfdGhpcy5zdGF0ZS5kcm9wZG93blZpc2libGU7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gW190aGlzLnJlbmRlclJlYWRWaWV3KCFkcm9wZG93blZpc2libGUpXTtcbiAgICAgICAgICAgIGlmIChkcm9wZG93blZpc2libGUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQudW5zaGlmdChfdGhpcy5yZW5kZXJEcm9wZG93bigpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uQ2hhbmdlID0gZnVuY3Rpb24gKHllYXIpIHtcbiAgICAgICAgICAgIF90aGlzLnRvZ2dsZURyb3Bkb3duKCk7XG4gICAgICAgICAgICBpZiAoeWVhciA9PT0gX3RoaXMucHJvcHMueWVhcilcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkNoYW5nZSh5ZWFyKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMudG9nZ2xlRHJvcGRvd24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBkcm9wZG93blZpc2libGU6ICFfdGhpcy5zdGF0ZS5kcm9wZG93blZpc2libGUsXG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmFkanVzdERhdGVPbkNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVZZWFyQ2hhbmdlKF90aGlzLnByb3BzLmRhdGUsIGV2ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlWWVhckNoYW5nZSA9IGZ1bmN0aW9uIChkYXRlLCBldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgKF9hID0gX3RoaXMub25TZWxlY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKF90aGlzLCBkYXRlLCBldmVudCk7XG4gICAgICAgICAgICBfdGhpcy5zZXRPcGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uU2VsZWN0ID0gZnVuY3Rpb24gKGRhdGUsIGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uU2VsZWN0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZGF0ZSwgZXZlbnQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zZXRPcGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIChfYiA9IChfYSA9IF90aGlzLnByb3BzKS5zZXRPcGVuKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgdHJ1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgWWVhckRyb3Bkb3duLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZW5kZXJlZERyb3Bkb3duO1xuICAgICAgICBzd2l0Y2ggKHRoaXMucHJvcHMuZHJvcGRvd25Nb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFwic2Nyb2xsXCI6XG4gICAgICAgICAgICAgICAgcmVuZGVyZWREcm9wZG93biA9IHRoaXMucmVuZGVyU2Nyb2xsTW9kZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInNlbGVjdFwiOlxuICAgICAgICAgICAgICAgIHJlbmRlcmVkRHJvcGRvd24gPSB0aGlzLnJlbmRlclNlbGVjdE1vZGUoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci1kcm9wZG93bi1jb250YWluZXIgcmVhY3QtZGF0ZXBpY2tlcl9feWVhci1kcm9wZG93bi1jb250YWluZXItLVwiLmNvbmNhdCh0aGlzLnByb3BzLmRyb3Bkb3duTW9kZSkgfSwgcmVuZGVyZWREcm9wZG93bikpO1xuICAgIH07XG4gICAgcmV0dXJuIFllYXJEcm9wZG93bjtcbn0oQ29tcG9uZW50KSk7XG5cbnZhciBEUk9QRE9XTl9GT0NVU19DTEFTU05BTUVTID0gW1xuICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9feWVhci1zZWxlY3RcIixcbiAgICBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLXNlbGVjdFwiLFxuICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgteWVhci1zZWxlY3RcIixcbl07XG52YXIgaXNEcm9wZG93blNlbGVjdCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgdmFyIGNsYXNzTmFtZXMgPSAoZWxlbWVudC5jbGFzc05hbWUgfHwgXCJcIikuc3BsaXQoL1xccysvKTtcbiAgICByZXR1cm4gRFJPUERPV05fRk9DVVNfQ0xBU1NOQU1FUy5zb21lKGZ1bmN0aW9uICh0ZXN0Q2xhc3NuYW1lKSB7IHJldHVybiBjbGFzc05hbWVzLmluZGV4T2YodGVzdENsYXNzbmFtZSkgPj0gMDsgfSk7XG59O1xudmFyIENhbGVuZGFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDYWxlbmRhciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDYWxlbmRhcihwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubW9udGhDb250YWluZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIF90aGlzLmhhbmRsZUNsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgX3RoaXMucHJvcHMub25DbGlja091dHNpZGUoZXZlbnQpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zZXRDbGlja091dHNpZGVSZWYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuY29udGFpbmVyUmVmLmN1cnJlbnQ7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZURyb3Bkb3duRm9jdXMgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBpZiAoaXNEcm9wZG93blNlbGVjdChldmVudC50YXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uRHJvcGRvd25Gb2N1cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZ2V0RGF0ZUluVmlldyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IF90aGlzLnByb3BzLCBwcmVTZWxlY3Rpb24gPSBfYS5wcmVTZWxlY3Rpb24sIHNlbGVjdGVkID0gX2Euc2VsZWN0ZWQsIG9wZW5Ub0RhdGUgPSBfYS5vcGVuVG9EYXRlO1xuICAgICAgICAgICAgdmFyIG1pbkRhdGUgPSBnZXRFZmZlY3RpdmVNaW5EYXRlKF90aGlzLnByb3BzKTtcbiAgICAgICAgICAgIHZhciBtYXhEYXRlID0gZ2V0RWZmZWN0aXZlTWF4RGF0ZShfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICB2YXIgY3VycmVudCA9IG5ld0RhdGUoKTtcbiAgICAgICAgICAgIHZhciBpbml0aWFsRGF0ZSA9IG9wZW5Ub0RhdGUgfHwgc2VsZWN0ZWQgfHwgcHJlU2VsZWN0aW9uO1xuICAgICAgICAgICAgaWYgKGluaXRpYWxEYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxEYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKG1pbkRhdGUgJiYgaXNCZWZvcmUoY3VycmVudCwgbWluRGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbkRhdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKG1heERhdGUgJiYgaXNBZnRlcihjdXJyZW50LCBtYXhEYXRlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF4RGF0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaW5jcmVhc2VNb250aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBkYXRlID0gX2EuZGF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZTogYWRkTW9udGhzKGRhdGUsIDEpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuaGFuZGxlTW9udGhDaGFuZ2UoX3RoaXMuc3RhdGUuZGF0ZSk7IH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5kZWNyZWFzZU1vbnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBfYS5kYXRlO1xuICAgICAgICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgICAgICAgICBkYXRlOiBzdWJNb250aHMoZGF0ZSwgMSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5oYW5kbGVNb250aENoYW5nZShfdGhpcy5zdGF0ZS5kYXRlKTsgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZURheUNsaWNrID0gZnVuY3Rpb24gKGRheSwgZXZlbnQsIG1vbnRoU2VsZWN0ZWRJbikge1xuICAgICAgICAgICAgX3RoaXMucHJvcHMub25TZWxlY3QoZGF5LCBldmVudCwgbW9udGhTZWxlY3RlZEluKTtcbiAgICAgICAgICAgIF90aGlzLnByb3BzLnNldFByZVNlbGVjdGlvbiAmJiBfdGhpcy5wcm9wcy5zZXRQcmVTZWxlY3Rpb24oZGF5KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlRGF5TW91c2VFbnRlciA9IGZ1bmN0aW9uIChkYXkpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgc2VsZWN0aW5nRGF0ZTogZGF5IH0pO1xuICAgICAgICAgICAgX3RoaXMucHJvcHMub25EYXlNb3VzZUVudGVyICYmIF90aGlzLnByb3BzLm9uRGF5TW91c2VFbnRlcihkYXkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVNb250aE1vdXNlTGVhdmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGluZ0RhdGU6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgICAgIF90aGlzLnByb3BzLm9uTW9udGhNb3VzZUxlYXZlICYmIF90aGlzLnByb3BzLm9uTW9udGhNb3VzZUxlYXZlKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZVllYXJNb3VzZUVudGVyID0gZnVuY3Rpb24gKGV2ZW50LCB5ZWFyKSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGluZ0RhdGU6IHNldFllYXIobmV3RGF0ZSgpLCB5ZWFyKSB9KTtcbiAgICAgICAgICAgICEhX3RoaXMucHJvcHMub25ZZWFyTW91c2VFbnRlciAmJiBfdGhpcy5wcm9wcy5vblllYXJNb3VzZUVudGVyKGV2ZW50LCB5ZWFyKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlWWVhck1vdXNlTGVhdmUgPSBmdW5jdGlvbiAoZXZlbnQsIHllYXIpIHtcbiAgICAgICAgICAgICEhX3RoaXMucHJvcHMub25ZZWFyTW91c2VMZWF2ZSAmJiBfdGhpcy5wcm9wcy5vblllYXJNb3VzZUxlYXZlKGV2ZW50LCB5ZWFyKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlWWVhckNoYW5nZSA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25ZZWFyQ2hhbmdlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZGF0ZSk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzUmVuZGVyQXJpYUxpdmVNZXNzYWdlOiB0cnVlIH0pO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmFkanVzdERhdGVPbkNoYW5nZSkge1xuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLm9uU2VsZWN0KGRhdGUpO1xuICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IF90aGlzLnByb3BzKS5zZXRPcGVuKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuY2FsbChfYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5wcm9wcy5zZXRQcmVTZWxlY3Rpb24gJiYgX3RoaXMucHJvcHMuc2V0UHJlU2VsZWN0aW9uKGRhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5nZXRFbmFibGVkUHJlU2VsZWN0aW9uRGF0ZUZvck1vbnRoID0gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgIGlmICghaXNEYXlEaXNhYmxlZChkYXRlLCBfdGhpcy5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBzdGFydE9mTW9udGggPSBnZXRTdGFydE9mTW9udGgoZGF0ZSk7XG4gICAgICAgICAgICB2YXIgZW5kT2ZNb250aCA9IGdldEVuZE9mTW9udGgoZGF0ZSk7XG4gICAgICAgICAgICB2YXIgdG90YWxEYXlzID0gZGlmZmVyZW5jZUluRGF5cyhlbmRPZk1vbnRoLCBzdGFydE9mTW9udGgpO1xuICAgICAgICAgICAgdmFyIHByZVNlbGVjdGVkRGF0ZSA9IG51bGw7XG4gICAgICAgICAgICBmb3IgKHZhciBkYXlJZHggPSAwOyBkYXlJZHggPD0gdG90YWxEYXlzOyBkYXlJZHgrKykge1xuICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzaW5nRGF0ZSA9IGFkZERheXMoc3RhcnRPZk1vbnRoLCBkYXlJZHgpO1xuICAgICAgICAgICAgICAgIGlmICghaXNEYXlEaXNhYmxlZChwcm9jZXNzaW5nRGF0ZSwgX3RoaXMucHJvcHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZVNlbGVjdGVkRGF0ZSA9IHByb2Nlc3NpbmdEYXRlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcHJlU2VsZWN0ZWREYXRlO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVNb250aENoYW5nZSA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIHZhciBlbmFibGVkUHJlU2VsZWN0aW9uRGF0ZSA9IChfYSA9IF90aGlzLmdldEVuYWJsZWRQcmVTZWxlY3Rpb25EYXRlRm9yTW9udGgoZGF0ZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGRhdGU7XG4gICAgICAgICAgICBfdGhpcy5oYW5kbGVDdXN0b21Nb250aENoYW5nZShlbmFibGVkUHJlU2VsZWN0aW9uRGF0ZSk7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuYWRqdXN0RGF0ZU9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25TZWxlY3QoZW5hYmxlZFByZVNlbGVjdGlvbkRhdGUpO1xuICAgICAgICAgICAgICAgIChfYyA9IChfYiA9IF90aGlzLnByb3BzKS5zZXRPcGVuKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5wcm9wcy5zZXRQcmVTZWxlY3Rpb24gJiZcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zZXRQcmVTZWxlY3Rpb24oZW5hYmxlZFByZVNlbGVjdGlvbkRhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVDdXN0b21Nb250aENoYW5nZSA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uTW9udGhDaGFuZ2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBkYXRlKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgaXNSZW5kZXJBcmlhTGl2ZU1lc3NhZ2U6IHRydWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZU1vbnRoWWVhckNoYW5nZSA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICBfdGhpcy5oYW5kbGVZZWFyQ2hhbmdlKGRhdGUpO1xuICAgICAgICAgICAgX3RoaXMuaGFuZGxlTW9udGhDaGFuZ2UoZGF0ZSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmNoYW5nZVllYXIgPSBmdW5jdGlvbiAoeWVhcikge1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBfYS5kYXRlO1xuICAgICAgICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgICAgICAgICBkYXRlOiBzZXRZZWFyKGRhdGUsIE51bWJlcih5ZWFyKSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5oYW5kbGVZZWFyQ2hhbmdlKF90aGlzLnN0YXRlLmRhdGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuY2hhbmdlTW9udGggPSBmdW5jdGlvbiAobW9udGgpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBkYXRlID0gX2EuZGF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZTogc2V0TW9udGgoZGF0ZSwgTnVtYmVyKG1vbnRoKSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5oYW5kbGVNb250aENoYW5nZShfdGhpcy5zdGF0ZS5kYXRlKTsgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmNoYW5nZU1vbnRoWWVhciA9IGZ1bmN0aW9uIChtb250aFllYXIpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBkYXRlID0gX2EuZGF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZTogc2V0WWVhcihzZXRNb250aChkYXRlLCBnZXRNb250aChtb250aFllYXIpKSwgZ2V0WWVhcihtb250aFllYXIpKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmhhbmRsZU1vbnRoWWVhckNoYW5nZShfdGhpcy5zdGF0ZS5kYXRlKTsgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhlYWRlciA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICBpZiAoZGF0ZSA9PT0gdm9pZCAwKSB7IGRhdGUgPSBfdGhpcy5zdGF0ZS5kYXRlOyB9XG4gICAgICAgICAgICB2YXIgc3RhcnRPZldlZWsgPSBnZXRTdGFydE9mV2VlayhkYXRlLCBfdGhpcy5wcm9wcy5sb2NhbGUsIF90aGlzLnByb3BzLmNhbGVuZGFyU3RhcnREYXkpO1xuICAgICAgICAgICAgdmFyIGRheU5hbWVzID0gW107XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd1dlZWtOdW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgZGF5TmFtZXMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsga2V5OiBcIldcIiwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS1uYW1lXCIgfSwgX3RoaXMucHJvcHMud2Vla0xhYmVsIHx8IFwiI1wiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF5TmFtZXMuY29uY2F0KFswLCAxLCAyLCAzLCA0LCA1LCA2XS5tYXAoZnVuY3Rpb24gKG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXkgPSBhZGREYXlzKHN0YXJ0T2ZXZWVrLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgIHZhciB3ZWVrRGF5TmFtZSA9IF90aGlzLmZvcm1hdFdlZWtkYXkoZGF5LCBfdGhpcy5wcm9wcy5sb2NhbGUpO1xuICAgICAgICAgICAgICAgIHZhciB3ZWVrRGF5Q2xhc3NOYW1lID0gX3RoaXMucHJvcHMud2Vla0RheUNsYXNzTmFtZVxuICAgICAgICAgICAgICAgICAgICA/IF90aGlzLnByb3BzLndlZWtEYXlDbGFzc05hbWUoZGF5KVxuICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBrZXk6IG9mZnNldCwgXCJhcmlhLWxhYmVsXCI6IGZvcm1hdERhdGUoZGF5LCBcIkVFRUVcIiwgX3RoaXMucHJvcHMubG9jYWxlKSwgY2xhc3NOYW1lOiBjbHN4KFwicmVhY3QtZGF0ZXBpY2tlcl9fZGF5LW5hbWVcIiwgd2Vla0RheUNsYXNzTmFtZSkgfSwgd2Vla0RheU5hbWUpKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuZm9ybWF0V2Vla2RheSA9IGZ1bmN0aW9uIChkYXksIGxvY2FsZSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmZvcm1hdFdlZWtEYXkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0Rm9ybWF0dGVkV2Vla2RheUluTG9jYWxlKGRheSwgX3RoaXMucHJvcHMuZm9ybWF0V2Vla0RheSwgbG9jYWxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy51c2VXZWVrZGF5c1Nob3J0XG4gICAgICAgICAgICAgICAgPyBnZXRXZWVrZGF5U2hvcnRJbkxvY2FsZShkYXksIGxvY2FsZSlcbiAgICAgICAgICAgICAgICA6IGdldFdlZWtkYXlNaW5JbkxvY2FsZShkYXksIGxvY2FsZSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmRlY3JlYXNlWWVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHZhciBfYjtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IF9hLmRhdGU7XG4gICAgICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGU6IHN1YlllYXJzKGRhdGUsIF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICgoX2IgPSBfdGhpcy5wcm9wcy55ZWFySXRlbU51bWJlcikgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogQ2FsZW5kYXIuZGVmYXVsdFByb3BzLnllYXJJdGVtTnVtYmVyKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAxKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmhhbmRsZVllYXJDaGFuZ2UoX3RoaXMuc3RhdGUuZGF0ZSk7IH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5jbGVhclNlbGVjdGluZ0RhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGluZ0RhdGU6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyUHJldmlvdXNCdXR0b24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5yZW5kZXJDdXN0b21IZWFkZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbW9udGhzU2hvd24gPSAoX2EgPSBfdGhpcy5wcm9wcy5tb250aHNTaG93bikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogQ2FsZW5kYXIuZGVmYXVsdFByb3BzLm1vbnRoc1Nob3duO1xuICAgICAgICAgICAgdmFyIG1vbnRoc1RvU3VidHJhY3QgPSBfdGhpcy5wcm9wcy5zaG93UHJldmlvdXNNb250aHNcbiAgICAgICAgICAgICAgICA/IG1vbnRoc1Nob3duIC0gMVxuICAgICAgICAgICAgICAgIDogMDtcbiAgICAgICAgICAgIHZhciBtb250aFNlbGVjdGVkSW4gPSAoX2IgPSBfdGhpcy5wcm9wcy5tb250aFNlbGVjdGVkSW4pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG1vbnRoc1RvU3VidHJhY3Q7XG4gICAgICAgICAgICB2YXIgZnJvbU1vbnRoRGF0ZSA9IHN1Yk1vbnRocyhfdGhpcy5zdGF0ZS5kYXRlLCBtb250aFNlbGVjdGVkSW4pO1xuICAgICAgICAgICAgdmFyIGFsbFByZXZEYXlzRGlzYWJsZWQ7XG4gICAgICAgICAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIF90aGlzLnByb3BzLnNob3dNb250aFllYXJQaWNrZXI6XG4gICAgICAgICAgICAgICAgICAgIGFsbFByZXZEYXlzRGlzYWJsZWQgPSB5ZWFyRGlzYWJsZWRCZWZvcmUoX3RoaXMuc3RhdGUuZGF0ZSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyOlxuICAgICAgICAgICAgICAgICAgICBhbGxQcmV2RGF5c0Rpc2FibGVkID0geWVhcnNEaXNhYmxlZEJlZm9yZShfdGhpcy5zdGF0ZS5kYXRlLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgX3RoaXMucHJvcHMuc2hvd1F1YXJ0ZXJZZWFyUGlja2VyOlxuICAgICAgICAgICAgICAgICAgICBhbGxQcmV2RGF5c0Rpc2FibGVkID0gcXVhcnRlckRpc2FibGVkQmVmb3JlKF90aGlzLnN0YXRlLmRhdGUsIF90aGlzLnByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYWxsUHJldkRheXNEaXNhYmxlZCA9IG1vbnRoRGlzYWJsZWRCZWZvcmUoZnJvbU1vbnRoRGF0ZSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoISgoX2MgPSBfdGhpcy5wcm9wcy5mb3JjZVNob3dNb250aE5hdmlnYXRpb24pICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IENhbGVuZGFyLmRlZmF1bHRQcm9wcy5mb3JjZVNob3dNb250aE5hdmlnYXRpb24pICYmXG4gICAgICAgICAgICAgICAgIV90aGlzLnByb3BzLnNob3dEaXNhYmxlZE1vbnRoTmF2aWdhdGlvbiAmJlxuICAgICAgICAgICAgICAgIGFsbFByZXZEYXlzRGlzYWJsZWQpIHx8XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGljb25DbGFzc2VzID0gW1xuICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlcl9fbmF2aWdhdGlvbi1pY29uXCIsXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uLWljb24tLXByZXZpb3VzXCIsXG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgdmFyIGNsYXNzZXMgPSBbXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uXCIsXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uLS1wcmV2aW91c1wiLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIHZhciBjbGlja0hhbmRsZXIgPSBfdGhpcy5kZWNyZWFzZU1vbnRoO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dNb250aFllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93UXVhcnRlclllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93WWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgIGNsaWNrSGFuZGxlciA9IF90aGlzLmRlY3JlYXNlWWVhcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhbGxQcmV2RGF5c0Rpc2FibGVkICYmIF90aGlzLnByb3BzLnNob3dEaXNhYmxlZE1vbnRoTmF2aWdhdGlvbikge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24tLXByZXZpb3VzLS1kaXNhYmxlZFwiKTtcbiAgICAgICAgICAgICAgICBjbGlja0hhbmRsZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaXNGb3JZZWFyID0gX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyO1xuICAgICAgICAgICAgdmFyIF9kID0gX3RoaXMucHJvcHMsIF9lID0gX2QucHJldmlvdXNNb250aEJ1dHRvbkxhYmVsLCBwcmV2aW91c01vbnRoQnV0dG9uTGFiZWwgPSBfZSA9PT0gdm9pZCAwID8gQ2FsZW5kYXIuZGVmYXVsdFByb3BzLnByZXZpb3VzTW9udGhCdXR0b25MYWJlbCA6IF9lLCBfZiA9IF9kLnByZXZpb3VzWWVhckJ1dHRvbkxhYmVsLCBwcmV2aW91c1llYXJCdXR0b25MYWJlbCA9IF9mID09PSB2b2lkIDAgPyBDYWxlbmRhci5kZWZhdWx0UHJvcHMucHJldmlvdXNZZWFyQnV0dG9uTGFiZWwgOiBfZjtcbiAgICAgICAgICAgIHZhciBfZyA9IF90aGlzLnByb3BzLCBfaCA9IF9nLnByZXZpb3VzTW9udGhBcmlhTGFiZWwsIHByZXZpb3VzTW9udGhBcmlhTGFiZWwgPSBfaCA9PT0gdm9pZCAwID8gdHlwZW9mIHByZXZpb3VzTW9udGhCdXR0b25MYWJlbCA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgICAgID8gcHJldmlvdXNNb250aEJ1dHRvbkxhYmVsXG4gICAgICAgICAgICAgICAgOiBcIlByZXZpb3VzIE1vbnRoXCIgOiBfaCwgX2ogPSBfZy5wcmV2aW91c1llYXJBcmlhTGFiZWwsIHByZXZpb3VzWWVhckFyaWFMYWJlbCA9IF9qID09PSB2b2lkIDAgPyB0eXBlb2YgcHJldmlvdXNZZWFyQnV0dG9uTGFiZWwgPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IHByZXZpb3VzWWVhckJ1dHRvbkxhYmVsXG4gICAgICAgICAgICAgICAgOiBcIlByZXZpb3VzIFllYXJcIiA6IF9qO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHsgdHlwZTogXCJidXR0b25cIiwgY2xhc3NOYW1lOiBjbGFzc2VzLmpvaW4oXCIgXCIpLCBvbkNsaWNrOiBjbGlja0hhbmRsZXIsIG9uS2V5RG93bjogX3RoaXMucHJvcHMuaGFuZGxlT25LZXlEb3duLCBcImFyaWEtbGFiZWxcIjogaXNGb3JZZWFyID8gcHJldmlvdXNZZWFyQXJpYUxhYmVsIDogcHJldmlvdXNNb250aEFyaWFMYWJlbCB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBpY29uQ2xhc3Nlcy5qb2luKFwiIFwiKSB9LCBpc0ZvclllYXIgPyBwcmV2aW91c1llYXJCdXR0b25MYWJlbCA6IHByZXZpb3VzTW9udGhCdXR0b25MYWJlbCkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaW5jcmVhc2VZZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9iO1xuICAgICAgICAgICAgICAgIHZhciBkYXRlID0gX2EuZGF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZTogYWRkWWVhcnMoZGF0ZSwgX3RoaXMucHJvcHMuc2hvd1llYXJQaWNrZXJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKChfYiA9IF90aGlzLnByb3BzLnllYXJJdGVtTnVtYmVyKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBDYWxlbmRhci5kZWZhdWx0UHJvcHMueWVhckl0ZW1OdW1iZXIpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IDEpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuaGFuZGxlWWVhckNoYW5nZShfdGhpcy5zdGF0ZS5kYXRlKTsgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlck5leHRCdXR0b24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMucmVuZGVyQ3VzdG9tSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGFsbE5leHREYXlzRGlzYWJsZWQ7XG4gICAgICAgICAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIF90aGlzLnByb3BzLnNob3dNb250aFllYXJQaWNrZXI6XG4gICAgICAgICAgICAgICAgICAgIGFsbE5leHREYXlzRGlzYWJsZWQgPSB5ZWFyRGlzYWJsZWRBZnRlcihfdGhpcy5zdGF0ZS5kYXRlLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgX3RoaXMucHJvcHMuc2hvd1llYXJQaWNrZXI6XG4gICAgICAgICAgICAgICAgICAgIGFsbE5leHREYXlzRGlzYWJsZWQgPSB5ZWFyc0Rpc2FibGVkQWZ0ZXIoX3RoaXMuc3RhdGUuZGF0ZSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlcjpcbiAgICAgICAgICAgICAgICAgICAgYWxsTmV4dERheXNEaXNhYmxlZCA9IHF1YXJ0ZXJEaXNhYmxlZEFmdGVyKF90aGlzLnN0YXRlLmRhdGUsIF90aGlzLnByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYWxsTmV4dERheXNEaXNhYmxlZCA9IG1vbnRoRGlzYWJsZWRBZnRlcihfdGhpcy5zdGF0ZS5kYXRlLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCghKChfYSA9IF90aGlzLnByb3BzLmZvcmNlU2hvd01vbnRoTmF2aWdhdGlvbikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogQ2FsZW5kYXIuZGVmYXVsdFByb3BzLmZvcmNlU2hvd01vbnRoTmF2aWdhdGlvbikgJiZcbiAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMuc2hvd0Rpc2FibGVkTW9udGhOYXZpZ2F0aW9uICYmXG4gICAgICAgICAgICAgICAgYWxsTmV4dERheXNEaXNhYmxlZCkgfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdE9ubHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY2xhc3NlcyA9IFtcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb25cIixcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24tLW5leHRcIixcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICB2YXIgaWNvbkNsYXNzZXMgPSBbXG4gICAgICAgICAgICAgICAgXCJyZWFjdC1kYXRlcGlja2VyX19uYXZpZ2F0aW9uLWljb25cIixcbiAgICAgICAgICAgICAgICBcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24taWNvbi0tbmV4dFwiLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdCkge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24tLW5leHQtLXdpdGgtdGltZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy50b2RheUJ1dHRvbikge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX25hdmlnYXRpb24tLW5leHQtLXdpdGgtdG9kYXktYnV0dG9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGNsaWNrSGFuZGxlciA9IF90aGlzLmluY3JlYXNlTW9udGg7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyKSB7XG4gICAgICAgICAgICAgICAgY2xpY2tIYW5kbGVyID0gX3RoaXMuaW5jcmVhc2VZZWFyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFsbE5leHREYXlzRGlzYWJsZWQgJiYgX3RoaXMucHJvcHMuc2hvd0Rpc2FibGVkTW9udGhOYXZpZ2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwicmVhY3QtZGF0ZXBpY2tlcl9fbmF2aWdhdGlvbi0tbmV4dC0tZGlzYWJsZWRcIik7XG4gICAgICAgICAgICAgICAgY2xpY2tIYW5kbGVyID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGlzRm9yWWVhciA9IF90aGlzLnByb3BzLnNob3dNb250aFllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93UXVhcnRlclllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93WWVhclBpY2tlcjtcbiAgICAgICAgICAgIHZhciBfYiA9IF90aGlzLnByb3BzLCBfYyA9IF9iLm5leHRNb250aEJ1dHRvbkxhYmVsLCBuZXh0TW9udGhCdXR0b25MYWJlbCA9IF9jID09PSB2b2lkIDAgPyBDYWxlbmRhci5kZWZhdWx0UHJvcHMubmV4dE1vbnRoQnV0dG9uTGFiZWwgOiBfYywgX2QgPSBfYi5uZXh0WWVhckJ1dHRvbkxhYmVsLCBuZXh0WWVhckJ1dHRvbkxhYmVsID0gX2QgPT09IHZvaWQgMCA/IENhbGVuZGFyLmRlZmF1bHRQcm9wcy5uZXh0WWVhckJ1dHRvbkxhYmVsIDogX2Q7XG4gICAgICAgICAgICB2YXIgX2UgPSBfdGhpcy5wcm9wcywgX2YgPSBfZS5uZXh0TW9udGhBcmlhTGFiZWwsIG5leHRNb250aEFyaWFMYWJlbCA9IF9mID09PSB2b2lkIDAgPyB0eXBlb2YgbmV4dE1vbnRoQnV0dG9uTGFiZWwgPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IG5leHRNb250aEJ1dHRvbkxhYmVsXG4gICAgICAgICAgICAgICAgOiBcIk5leHQgTW9udGhcIiA6IF9mLCBfZyA9IF9lLm5leHRZZWFyQXJpYUxhYmVsLCBuZXh0WWVhckFyaWFMYWJlbCA9IF9nID09PSB2b2lkIDAgPyB0eXBlb2YgbmV4dFllYXJCdXR0b25MYWJlbCA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgICAgID8gbmV4dFllYXJCdXR0b25MYWJlbFxuICAgICAgICAgICAgICAgIDogXCJOZXh0IFllYXJcIiA6IF9nO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHsgdHlwZTogXCJidXR0b25cIiwgY2xhc3NOYW1lOiBjbGFzc2VzLmpvaW4oXCIgXCIpLCBvbkNsaWNrOiBjbGlja0hhbmRsZXIsIG9uS2V5RG93bjogX3RoaXMucHJvcHMuaGFuZGxlT25LZXlEb3duLCBcImFyaWEtbGFiZWxcIjogaXNGb3JZZWFyID8gbmV4dFllYXJBcmlhTGFiZWwgOiBuZXh0TW9udGhBcmlhTGFiZWwgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogaWNvbkNsYXNzZXMuam9pbihcIiBcIikgfSwgaXNGb3JZZWFyID8gbmV4dFllYXJCdXR0b25MYWJlbCA6IG5leHRNb250aEJ1dHRvbkxhYmVsKSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJDdXJyZW50TW9udGggPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICAgICAgaWYgKGRhdGUgPT09IHZvaWQgMCkgeyBkYXRlID0gX3RoaXMuc3RhdGUuZGF0ZTsgfVxuICAgICAgICAgICAgdmFyIGNsYXNzZXMgPSBbXCJyZWFjdC1kYXRlcGlja2VyX19jdXJyZW50LW1vbnRoXCJdO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dZZWFyRHJvcGRvd24pIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goXCJyZWFjdC1kYXRlcGlja2VyX19jdXJyZW50LW1vbnRoLS1oYXNZZWFyRHJvcGRvd25cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd01vbnRoRHJvcGRvd24pIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goXCJyZWFjdC1kYXRlcGlja2VyX19jdXJyZW50LW1vbnRoLS1oYXNNb250aERyb3Bkb3duXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dNb250aFllYXJEcm9wZG93bikge1xuICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaChcInJlYWN0LWRhdGVwaWNrZXJfX2N1cnJlbnQtbW9udGgtLWhhc01vbnRoWWVhckRyb3Bkb3duXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgeyBjbGFzc05hbWU6IGNsYXNzZXMuam9pbihcIiBcIikgfSwgZm9ybWF0RGF0ZShkYXRlLCBfdGhpcy5wcm9wcy5kYXRlRm9ybWF0LCBfdGhpcy5wcm9wcy5sb2NhbGUpKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlclllYXJEcm9wZG93biA9IGZ1bmN0aW9uIChvdmVycmlkZUhpZGUpIHtcbiAgICAgICAgICAgIGlmIChvdmVycmlkZUhpZGUgPT09IHZvaWQgMCkgeyBvdmVycmlkZUhpZGUgPSBmYWxzZTsgfVxuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5zaG93WWVhckRyb3Bkb3duIHx8IG92ZXJyaWRlSGlkZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChZZWFyRHJvcGRvd24sIF9hc3NpZ24oe30sIENhbGVuZGFyLmRlZmF1bHRQcm9wcywgX3RoaXMucHJvcHMsIHsgZGF0ZTogX3RoaXMuc3RhdGUuZGF0ZSwgb25DaGFuZ2U6IF90aGlzLmNoYW5nZVllYXIsIHllYXI6IGdldFllYXIoX3RoaXMuc3RhdGUuZGF0ZSkgfSkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyTW9udGhEcm9wZG93biA9IGZ1bmN0aW9uIChvdmVycmlkZUhpZGUpIHtcbiAgICAgICAgICAgIGlmIChvdmVycmlkZUhpZGUgPT09IHZvaWQgMCkgeyBvdmVycmlkZUhpZGUgPSBmYWxzZTsgfVxuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5zaG93TW9udGhEcm9wZG93biB8fCBvdmVycmlkZUhpZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9udGhEcm9wZG93biwgX2Fzc2lnbih7fSwgQ2FsZW5kYXIuZGVmYXVsdFByb3BzLCBfdGhpcy5wcm9wcywgeyBtb250aDogZ2V0TW9udGgoX3RoaXMuc3RhdGUuZGF0ZSksIG9uQ2hhbmdlOiBfdGhpcy5jaGFuZ2VNb250aCB9KSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJNb250aFllYXJEcm9wZG93biA9IGZ1bmN0aW9uIChvdmVycmlkZUhpZGUpIHtcbiAgICAgICAgICAgIGlmIChvdmVycmlkZUhpZGUgPT09IHZvaWQgMCkgeyBvdmVycmlkZUhpZGUgPSBmYWxzZTsgfVxuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5zaG93TW9udGhZZWFyRHJvcGRvd24gfHwgb3ZlcnJpZGVIaWRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE1vbnRoWWVhckRyb3Bkb3duLCBfYXNzaWduKHt9LCBDYWxlbmRhci5kZWZhdWx0UHJvcHMsIF90aGlzLnByb3BzLCB7IGRhdGU6IF90aGlzLnN0YXRlLmRhdGUsIG9uQ2hhbmdlOiBfdGhpcy5jaGFuZ2VNb250aFllYXIgfSkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlVG9kYXlCdXR0b25DbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgX3RoaXMucHJvcHMub25TZWxlY3QoZ2V0U3RhcnRPZlRvZGF5KCksIGV2ZW50KTtcbiAgICAgICAgICAgIF90aGlzLnByb3BzLnNldFByZVNlbGVjdGlvbiAmJiBfdGhpcy5wcm9wcy5zZXRQcmVTZWxlY3Rpb24oZ2V0U3RhcnRPZlRvZGF5KCkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJUb2RheUJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghX3RoaXMucHJvcHMudG9kYXlCdXR0b24gfHwgX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RvZGF5LWJ1dHRvblwiLCBvbkNsaWNrOiBfdGhpcy5oYW5kbGVUb2RheUJ1dHRvbkNsaWNrIH0sIF90aGlzLnByb3BzLnRvZGF5QnV0dG9uKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlckRlZmF1bHRIZWFkZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBtb250aERhdGUgPSBfYS5tb250aERhdGUsIGkgPSBfYS5pO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2hlYWRlciBcIi5jb25jYXQoX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgPyBcInJlYWN0LWRhdGVwaWNrZXJfX2hlYWRlci0taGFzLXRpbWUtc2VsZWN0XCJcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiKSB9LFxuICAgICAgICAgICAgICAgIF90aGlzLnJlbmRlckN1cnJlbnRNb250aChtb250aERhdGUpLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9faGVhZGVyX19kcm9wZG93biByZWFjdC1kYXRlcGlja2VyX19oZWFkZXJfX2Ryb3Bkb3duLS1cIi5jb25jYXQoX3RoaXMucHJvcHMuZHJvcGRvd25Nb2RlKSwgb25Gb2N1czogX3RoaXMuaGFuZGxlRHJvcGRvd25Gb2N1cyB9LFxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZW5kZXJNb250aERyb3Bkb3duKGkgIT09IDApLFxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZW5kZXJNb250aFllYXJEcm9wZG93bihpICE9PSAwKSxcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVuZGVyWWVhckRyb3Bkb3duKGkgIT09IDApKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2RheS1uYW1lc1wiIH0sIF90aGlzLmhlYWRlcihtb250aERhdGUpKSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJDdXN0b21IZWFkZXIgPSBmdW5jdGlvbiAoaGVhZGVyQXJncykge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIHZhciBtb250aERhdGUgPSBoZWFkZXJBcmdzLm1vbnRoRGF0ZSwgaSA9IGhlYWRlckFyZ3MuaTtcbiAgICAgICAgICAgIGlmICgoX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3QgJiYgIV90aGlzLnN0YXRlLm1vbnRoQ29udGFpbmVyKSB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dUaW1lU2VsZWN0T25seSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHByZXZNb250aEJ1dHRvbkRpc2FibGVkID0gbW9udGhEaXNhYmxlZEJlZm9yZShfdGhpcy5zdGF0ZS5kYXRlLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICB2YXIgbmV4dE1vbnRoQnV0dG9uRGlzYWJsZWQgPSBtb250aERpc2FibGVkQWZ0ZXIoX3RoaXMuc3RhdGUuZGF0ZSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgdmFyIHByZXZZZWFyQnV0dG9uRGlzYWJsZWQgPSB5ZWFyRGlzYWJsZWRCZWZvcmUoX3RoaXMuc3RhdGUuZGF0ZSwgX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgdmFyIG5leHRZZWFyQnV0dG9uRGlzYWJsZWQgPSB5ZWFyRGlzYWJsZWRBZnRlcihfdGhpcy5zdGF0ZS5kYXRlLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICB2YXIgc2hvd0RheU5hbWVzID0gIV90aGlzLnByb3BzLnNob3dNb250aFllYXJQaWNrZXIgJiZcbiAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMuc2hvd1F1YXJ0ZXJZZWFyUGlja2VyICYmXG4gICAgICAgICAgICAgICAgIV90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2hlYWRlciByZWFjdC1kYXRlcGlja2VyX19oZWFkZXItLWN1c3RvbVwiLCBvbkZvY3VzOiBfdGhpcy5wcm9wcy5vbkRyb3Bkb3duRm9jdXMgfSwgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLnJlbmRlckN1c3RvbUhlYWRlcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6XG4gICAgICAgICAgICAgICAgX2IuY2FsbChfYSwgX2Fzc2lnbihfYXNzaWduKHt9LCBfdGhpcy5zdGF0ZSksIHsgY3VzdG9tSGVhZGVyQ291bnQ6IGksIG1vbnRoRGF0ZTogbW9udGhEYXRlLCBjaGFuZ2VNb250aDogX3RoaXMuY2hhbmdlTW9udGgsIGNoYW5nZVllYXI6IF90aGlzLmNoYW5nZVllYXIsIGRlY3JlYXNlTW9udGg6IF90aGlzLmRlY3JlYXNlTW9udGgsIGluY3JlYXNlTW9udGg6IF90aGlzLmluY3JlYXNlTW9udGgsIGRlY3JlYXNlWWVhcjogX3RoaXMuZGVjcmVhc2VZZWFyLCBpbmNyZWFzZVllYXI6IF90aGlzLmluY3JlYXNlWWVhciwgcHJldk1vbnRoQnV0dG9uRGlzYWJsZWQ6IHByZXZNb250aEJ1dHRvbkRpc2FibGVkLCBuZXh0TW9udGhCdXR0b25EaXNhYmxlZDogbmV4dE1vbnRoQnV0dG9uRGlzYWJsZWQsIHByZXZZZWFyQnV0dG9uRGlzYWJsZWQ6IHByZXZZZWFyQnV0dG9uRGlzYWJsZWQsIG5leHRZZWFyQnV0dG9uRGlzYWJsZWQ6IG5leHRZZWFyQnV0dG9uRGlzYWJsZWQgfSkpLFxuICAgICAgICAgICAgICAgIHNob3dEYXlOYW1lcyAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19kYXktbmFtZXNcIiB9LCBfdGhpcy5oZWFkZXIobW9udGhEYXRlKSkpKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlclllYXJIZWFkZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBtb250aERhdGUgPSBfYS5tb250aERhdGU7XG4gICAgICAgICAgICB2YXIgX2IgPSBfdGhpcy5wcm9wcywgc2hvd1llYXJQaWNrZXIgPSBfYi5zaG93WWVhclBpY2tlciwgX2MgPSBfYi55ZWFySXRlbU51bWJlciwgeWVhckl0ZW1OdW1iZXIgPSBfYyA9PT0gdm9pZCAwID8gQ2FsZW5kYXIuZGVmYXVsdFByb3BzLnllYXJJdGVtTnVtYmVyIDogX2M7XG4gICAgICAgICAgICB2YXIgX2QgPSBnZXRZZWFyc1BlcmlvZChtb250aERhdGUsIHllYXJJdGVtTnVtYmVyKSwgc3RhcnRQZXJpb2QgPSBfZC5zdGFydFBlcmlvZCwgZW5kUGVyaW9kID0gX2QuZW5kUGVyaW9kO1xuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2hlYWRlciByZWFjdC1kYXRlcGlja2VyLXllYXItaGVhZGVyXCIgfSwgc2hvd1llYXJQaWNrZXIgPyBcIlwiLmNvbmNhdChzdGFydFBlcmlvZCwgXCIgLSBcIikuY29uY2F0KGVuZFBlcmlvZCkgOiBnZXRZZWFyKG1vbnRoRGF0ZSkpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVySGVhZGVyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICB2YXIgbW9udGhEYXRlID0gX2EubW9udGhEYXRlLCBfYiA9IF9hLmksIGkgPSBfYiA9PT0gdm9pZCAwID8gMCA6IF9iO1xuICAgICAgICAgICAgdmFyIGhlYWRlckFyZ3MgPSB7IG1vbnRoRGF0ZTogbW9udGhEYXRlLCBpOiBpIH07XG4gICAgICAgICAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIF90aGlzLnByb3BzLnJlbmRlckN1c3RvbUhlYWRlciAhPT0gdW5kZWZpbmVkOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMucmVuZGVyQ3VzdG9tSGVhZGVyKGhlYWRlckFyZ3MpO1xuICAgICAgICAgICAgICAgIGNhc2UgX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9wcy5zaG93UXVhcnRlclllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2hvd1llYXJQaWNrZXI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5yZW5kZXJZZWFySGVhZGVyKGhlYWRlckFyZ3MpO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5yZW5kZXJEZWZhdWx0SGVhZGVyKGhlYWRlckFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJNb250aHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dUaW1lU2VsZWN0T25seSB8fCBfdGhpcy5wcm9wcy5zaG93WWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBtb250aExpc3QgPSBbXTtcbiAgICAgICAgICAgIHZhciBtb250aHNTaG93biA9IChfYSA9IF90aGlzLnByb3BzLm1vbnRoc1Nob3duKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBDYWxlbmRhci5kZWZhdWx0UHJvcHMubW9udGhzU2hvd247XG4gICAgICAgICAgICB2YXIgbW9udGhzVG9TdWJ0cmFjdCA9IF90aGlzLnByb3BzLnNob3dQcmV2aW91c01vbnRoc1xuICAgICAgICAgICAgICAgID8gbW9udGhzU2hvd24gLSAxXG4gICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgdmFyIGZyb21Nb250aERhdGUgPSBfdGhpcy5wcm9wcy5zaG93TW9udGhZZWFyUGlja2VyIHx8IF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlclxuICAgICAgICAgICAgICAgID8gYWRkWWVhcnMoX3RoaXMuc3RhdGUuZGF0ZSwgbW9udGhzVG9TdWJ0cmFjdClcbiAgICAgICAgICAgICAgICA6IHN1Yk1vbnRocyhfdGhpcy5zdGF0ZS5kYXRlLCBtb250aHNUb1N1YnRyYWN0KTtcbiAgICAgICAgICAgIHZhciBtb250aFNlbGVjdGVkSW4gPSAoX2IgPSBfdGhpcy5wcm9wcy5tb250aFNlbGVjdGVkSW4pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG1vbnRoc1RvU3VidHJhY3Q7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1vbnRoc1Nob3duOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgbW9udGhzVG9BZGQgPSBpIC0gbW9udGhTZWxlY3RlZEluICsgbW9udGhzVG9TdWJ0cmFjdDtcbiAgICAgICAgICAgICAgICB2YXIgbW9udGhEYXRlID0gX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlciB8fCBfdGhpcy5wcm9wcy5zaG93UXVhcnRlclllYXJQaWNrZXJcbiAgICAgICAgICAgICAgICAgICAgPyBhZGRZZWFycyhmcm9tTW9udGhEYXRlLCBtb250aHNUb0FkZClcbiAgICAgICAgICAgICAgICAgICAgOiBhZGRNb250aHMoZnJvbU1vbnRoRGF0ZSwgbW9udGhzVG9BZGQpO1xuICAgICAgICAgICAgICAgIHZhciBtb250aEtleSA9IFwibW9udGgtXCIuY29uY2F0KGkpO1xuICAgICAgICAgICAgICAgIHZhciBtb250aFNob3dzRHVwbGljYXRlRGF5c0VuZCA9IGkgPCBtb250aHNTaG93biAtIDE7XG4gICAgICAgICAgICAgICAgdmFyIG1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzU3RhcnQgPSBpID4gMDtcbiAgICAgICAgICAgICAgICBtb250aExpc3QucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsga2V5OiBtb250aEtleSwgcmVmOiBmdW5jdGlvbiAoZGl2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5tb250aENvbnRhaW5lciA9IGRpdiAhPT0gbnVsbCAmJiBkaXYgIT09IHZvaWQgMCA/IGRpdiA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgfSwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX21vbnRoLWNvbnRhaW5lclwiIH0sXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnJlbmRlckhlYWRlcih7IG1vbnRoRGF0ZTogbW9udGhEYXRlLCBpOiBpIH0pLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE1vbnRoLCBfYXNzaWduKHt9LCBDYWxlbmRhci5kZWZhdWx0UHJvcHMsIF90aGlzLnByb3BzLCB7IGNvbnRhaW5lclJlZjogX3RoaXMuY29udGFpbmVyUmVmLCBhcmlhTGFiZWxQcmVmaXg6IF90aGlzLnByb3BzLm1vbnRoQXJpYUxhYmVsUHJlZml4LCBkYXk6IG1vbnRoRGF0ZSwgb25EYXlDbGljazogX3RoaXMuaGFuZGxlRGF5Q2xpY2ssIGhhbmRsZU9uS2V5RG93bjogX3RoaXMucHJvcHMuaGFuZGxlT25EYXlLZXlEb3duLCBoYW5kbGVPbk1vbnRoS2V5RG93bjogX3RoaXMucHJvcHMuaGFuZGxlT25LZXlEb3duLCBvbkRheU1vdXNlRW50ZXI6IF90aGlzLmhhbmRsZURheU1vdXNlRW50ZXIsIG9uTW91c2VMZWF2ZTogX3RoaXMuaGFuZGxlTW9udGhNb3VzZUxlYXZlLCBvcmRlckluRGlzcGxheTogaSwgc2VsZWN0aW5nRGF0ZTogX3RoaXMuc3RhdGUuc2VsZWN0aW5nRGF0ZSwgbW9udGhTaG93c0R1cGxpY2F0ZURheXNFbmQ6IG1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzRW5kLCBtb250aFNob3dzRHVwbGljYXRlRGF5c1N0YXJ0OiBtb250aFNob3dzRHVwbGljYXRlRGF5c1N0YXJ0IH0pKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG1vbnRoTGlzdDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyWWVhcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3llYXItLWNvbnRhaW5lclwiIH0sXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnJlbmRlckhlYWRlcih7IG1vbnRoRGF0ZTogX3RoaXMuc3RhdGUuZGF0ZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChZZWFyLCBfYXNzaWduKHt9LCBDYWxlbmRhci5kZWZhdWx0UHJvcHMsIF90aGlzLnByb3BzLCB7IHNlbGVjdGluZ0RhdGU6IF90aGlzLnN0YXRlLnNlbGVjdGluZ0RhdGUsIGRhdGU6IF90aGlzLnN0YXRlLmRhdGUsIG9uRGF5Q2xpY2s6IF90aGlzLmhhbmRsZURheUNsaWNrLCBjbGVhclNlbGVjdGluZ0RhdGU6IF90aGlzLmNsZWFyU2VsZWN0aW5nRGF0ZSwgb25ZZWFyTW91c2VFbnRlcjogX3RoaXMuaGFuZGxlWWVhck1vdXNlRW50ZXIsIG9uWWVhck1vdXNlTGVhdmU6IF90aGlzLmhhbmRsZVllYXJNb3VzZUxlYXZlIH0pKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJUaW1lU2VjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdCAmJlxuICAgICAgICAgICAgICAgIChfdGhpcy5zdGF0ZS5tb250aENvbnRhaW5lciB8fCBfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdE9ubHkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFRpbWUsIF9hc3NpZ24oe30sIENhbGVuZGFyLmRlZmF1bHRQcm9wcywgX3RoaXMucHJvcHMsIHsgb25DaGFuZ2U6IF90aGlzLnByb3BzLm9uVGltZUNoYW5nZSwgZm9ybWF0OiBfdGhpcy5wcm9wcy50aW1lRm9ybWF0LCBpbnRlcnZhbHM6IF90aGlzLnByb3BzLnRpbWVJbnRlcnZhbHMsIG1vbnRoUmVmOiBfdGhpcy5zdGF0ZS5tb250aENvbnRhaW5lciB9KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJJbnB1dFRpbWVTZWN0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHRpbWUgPSBfdGhpcy5wcm9wcy5zZWxlY3RlZFxuICAgICAgICAgICAgICAgID8gbmV3IERhdGUoX3RoaXMucHJvcHMuc2VsZWN0ZWQpXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB2YXIgdGltZVZhbGlkID0gdGltZSAmJiBpc1ZhbGlkKHRpbWUpICYmIEJvb2xlYW4oX3RoaXMucHJvcHMuc2VsZWN0ZWQpO1xuICAgICAgICAgICAgdmFyIHRpbWVTdHJpbmcgPSB0aW1lVmFsaWRcbiAgICAgICAgICAgICAgICA/IFwiXCIuY29uY2F0KGFkZFplcm8odGltZS5nZXRIb3VycygpKSwgXCI6XCIpLmNvbmNhdChhZGRaZXJvKHRpbWUuZ2V0TWludXRlcygpKSlcbiAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd1RpbWVJbnB1dCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dFRpbWUsIF9hc3NpZ24oe30sIENhbGVuZGFyLmRlZmF1bHRQcm9wcywgX3RoaXMucHJvcHMsIHsgZGF0ZTogdGltZSwgdGltZVN0cmluZzogdGltZVN0cmluZywgb25DaGFuZ2U6IF90aGlzLnByb3BzLm9uVGltZUNoYW5nZSB9KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJBcmlhTGl2ZVJlZ2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHZhciBfYiA9IGdldFllYXJzUGVyaW9kKF90aGlzLnN0YXRlLmRhdGUsIChfYSA9IF90aGlzLnByb3BzLnllYXJJdGVtTnVtYmVyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBDYWxlbmRhci5kZWZhdWx0UHJvcHMueWVhckl0ZW1OdW1iZXIpLCBzdGFydFBlcmlvZCA9IF9iLnN0YXJ0UGVyaW9kLCBlbmRQZXJpb2QgPSBfYi5lbmRQZXJpb2Q7XG4gICAgICAgICAgICB2YXIgYXJpYUxpdmVNZXNzYWdlO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dZZWFyUGlja2VyKSB7XG4gICAgICAgICAgICAgICAgYXJpYUxpdmVNZXNzYWdlID0gXCJcIi5jb25jYXQoc3RhcnRQZXJpb2QsIFwiIC0gXCIpLmNvbmNhdChlbmRQZXJpb2QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlciB8fFxuICAgICAgICAgICAgICAgIF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgIGFyaWFMaXZlTWVzc2FnZSA9IGdldFllYXIoX3RoaXMuc3RhdGUuZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhcmlhTGl2ZU1lc3NhZ2UgPSBcIlwiLmNvbmNhdChnZXRNb250aEluTG9jYWxlKGdldE1vbnRoKF90aGlzLnN0YXRlLmRhdGUpLCBfdGhpcy5wcm9wcy5sb2NhbGUpLCBcIiBcIikuY29uY2F0KGdldFllYXIoX3RoaXMuc3RhdGUuZGF0ZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IHJvbGU6IFwiYWxlcnRcIiwgXCJhcmlhLWxpdmVcIjogXCJwb2xpdGVcIiwgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX2FyaWEtbGl2ZVwiIH0sIF90aGlzLnN0YXRlLmlzUmVuZGVyQXJpYUxpdmVNZXNzYWdlICYmIGFyaWFMaXZlTWVzc2FnZSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZW5kZXJDaGlsZHJlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19jaGlsZHJlbi1jb250YWluZXJcIiB9LCBfdGhpcy5wcm9wcy5jaGlsZHJlbikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5jb250YWluZXJSZWYgPSBjcmVhdGVSZWYoKTtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBkYXRlOiBfdGhpcy5nZXREYXRlSW5WaWV3KCksXG4gICAgICAgICAgICBzZWxlY3RpbmdEYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtb250aENvbnRhaW5lcjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaXNSZW5kZXJBcmlhTGl2ZU1lc3NhZ2U6IGZhbHNlLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDYWxlbmRhciwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbW9udGhzU2hvd246IDEsXG4gICAgICAgICAgICAgICAgZm9yY2VTaG93TW9udGhOYXZpZ2F0aW9uOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB0aW1lQ2FwdGlvbjogXCJUaW1lXCIsXG4gICAgICAgICAgICAgICAgcHJldmlvdXNZZWFyQnV0dG9uTGFiZWw6IFwiUHJldmlvdXMgWWVhclwiLFxuICAgICAgICAgICAgICAgIG5leHRZZWFyQnV0dG9uTGFiZWw6IFwiTmV4dCBZZWFyXCIsXG4gICAgICAgICAgICAgICAgcHJldmlvdXNNb250aEJ1dHRvbkxhYmVsOiBcIlByZXZpb3VzIE1vbnRoXCIsXG4gICAgICAgICAgICAgICAgbmV4dE1vbnRoQnV0dG9uTGFiZWw6IFwiTmV4dCBNb250aFwiLFxuICAgICAgICAgICAgICAgIHllYXJJdGVtTnVtYmVyOiBERUZBVUxUX1lFQVJfSVRFTV9OVU1CRVIsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQ2FsZW5kYXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAvLyBtb250aENvbnRhaW5lciBoZWlnaHQgaXMgbmVlZGVkIGluIHRpbWUgY29tcG9uZW50XG4gICAgICAgIC8vIHRvIGRldGVybWluZSB0aGUgaGVpZ2h0IGZvciB0aGUgdWwgaW4gdGhlIHRpbWUgY29tcG9uZW50XG4gICAgICAgIC8vIHNldFN0YXRlIGhlcmUgc28gaGVpZ2h0IGlzIGdpdmVuIGFmdGVyIGZpbmFsIGNvbXBvbmVudFxuICAgICAgICAvLyBsYXlvdXQgaXMgcmVuZGVyZWRcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3QpIHtcbiAgICAgICAgICAgIHRoaXMuYXNzaWduTW9udGhDb250YWluZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbW9udGhDb250YWluZXI6IF90aGlzLm1vbnRoQ29udGFpbmVyIH0pO1xuICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2FsZW5kYXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMucHJvcHMucHJlU2VsZWN0aW9uICYmXG4gICAgICAgICAgICAoIWlzU2FtZURheSh0aGlzLnByb3BzLnByZVNlbGVjdGlvbiwgcHJldlByb3BzLnByZVNlbGVjdGlvbikgfHxcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm1vbnRoU2VsZWN0ZWRJbiAhPT0gcHJldlByb3BzLm1vbnRoU2VsZWN0ZWRJbikpIHtcbiAgICAgICAgICAgIHZhciBoYXNNb250aENoYW5nZWRfMSA9ICFpc1NhbWVNb250aCh0aGlzLnN0YXRlLmRhdGUsIHRoaXMucHJvcHMucHJlU2VsZWN0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGU6IHRoaXMucHJvcHMucHJlU2VsZWN0aW9uLFxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gaGFzTW9udGhDaGFuZ2VkXzEgJiYgX3RoaXMuaGFuZGxlQ3VzdG9tTW9udGhDaGFuZ2UoX3RoaXMuc3RhdGUuZGF0ZSk7IH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMucHJvcHMub3BlblRvRGF0ZSAmJlxuICAgICAgICAgICAgIWlzU2FtZURheSh0aGlzLnByb3BzLm9wZW5Ub0RhdGUsIHByZXZQcm9wcy5vcGVuVG9EYXRlKSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0ZTogdGhpcy5wcm9wcy5vcGVuVG9EYXRlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENhbGVuZGFyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBDb250YWluZXIgPSB0aGlzLnByb3BzLmNvbnRhaW5lciB8fCBDYWxlbmRhckNvbnRhaW5lcjtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KENsaWNrT3V0c2lkZVdyYXBwZXIsIHsgb25DbGlja091dHNpZGU6IHRoaXMuaGFuZGxlQ2xpY2tPdXRzaWRlLCBzdHlsZTogeyBkaXNwbGF5OiBcImNvbnRlbnRzXCIgfSwgaWdub3JlQ2xhc3M6IHRoaXMucHJvcHMub3V0c2lkZUNsaWNrSWdub3JlQ2xhc3MgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogeyBkaXNwbGF5OiBcImNvbnRlbnRzXCIgfSwgcmVmOiB0aGlzLmNvbnRhaW5lclJlZiB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGNsYXNzTmFtZTogY2xzeChcInJlYWN0LWRhdGVwaWNrZXJcIiwgdGhpcy5wcm9wcy5jbGFzc05hbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicmVhY3QtZGF0ZXBpY2tlci0tdGltZS1vbmx5XCI6IHRoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5LFxuICAgICAgICAgICAgICAgICAgICB9KSwgc2hvd1RpbWU6IHRoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3QgfHwgdGhpcy5wcm9wcy5zaG93VGltZUlucHV0LCBzaG93VGltZVNlbGVjdE9ubHk6IHRoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5IH0sXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQXJpYUxpdmVSZWdpb24oKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJQcmV2aW91c0J1dHRvbigpLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlck5leHRCdXR0b24oKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJNb250aHMoKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJZZWFycygpLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlclRvZGF5QnV0dG9uKCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyVGltZVNlY3Rpb24oKSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJJbnB1dFRpbWVTZWN0aW9uKCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQ2hpbGRyZW4oKSkpKSk7XG4gICAgfTtcbiAgICByZXR1cm4gQ2FsZW5kYXI7XG59KENvbXBvbmVudCkpO1xuXG4vKipcbiAqIGBDYWxlbmRhckljb25gIGlzIGEgUmVhY3QgY29tcG9uZW50IHRoYXQgcmVuZGVycyBhbiBpY29uIGZvciBhIGNhbGVuZGFyLlxuICogVGhlIGljb24gY2FuIGJlIGEgc3RyaW5nIHJlcHJlc2VudGluZyBhIENTUyBjbGFzcywgYSBSZWFjdCBub2RlLCBvciBhIGRlZmF1bHQgU1ZHIGljb24uXG4gKlxuICogQGNvbXBvbmVudFxuICogQHByb3AgIGljb24gLSBUaGUgaWNvbiB0byBiZSBkaXNwbGF5ZWQuIFRoaXMgY2FuIGJlIGEgc3RyaW5nIHJlcHJlc2VudGluZyBhIENTUyBjbGFzcyBvciBhIFJlYWN0IG5vZGUuXG4gKiBAcHJvcCAgY2xhc3NOYW1lIC0gQW4gb3B0aW9uYWwgc3RyaW5nIHJlcHJlc2VudGluZyBhZGRpdGlvbmFsIENTUyBjbGFzc2VzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGljb24uXG4gKiBAcHJvcCAgb25DbGljayAtIEFuIG9wdGlvbmFsIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBpY29uIGlzIGNsaWNrZWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRvIHVzZSBhIENTUyBjbGFzcyBhcyB0aGUgaWNvblxuICogPENhbGVuZGFySWNvbiBpY29uPVwibXktaWNvbi1jbGFzc1wiIG9uQ2xpY2s9e215Q2xpY2tIYW5kbGVyfSAvPlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUbyB1c2UgYSBSZWFjdCBub2RlIGFzIHRoZSBpY29uXG4gKiA8Q2FsZW5kYXJJY29uIGljb249ezxNeUljb25Db21wb25lbnQgLz59IG9uQ2xpY2s9e215Q2xpY2tIYW5kbGVyfSAvPlxuICpcbiAqIEByZXR1cm5zICBUaGUgYENhbGVuZGFySWNvbmAgY29tcG9uZW50LlxuICovXG52YXIgQ2FsZW5kYXJJY29uID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGljb24gPSBfYS5pY29uLCBfYiA9IF9hLmNsYXNzTmFtZSwgY2xhc3NOYW1lID0gX2IgPT09IHZvaWQgMCA/IFwiXCIgOiBfYiwgb25DbGljayA9IF9hLm9uQ2xpY2s7XG4gICAgdmFyIGRlZmF1bHRDbGFzcyA9IFwicmVhY3QtZGF0ZXBpY2tlcl9fY2FsZW5kYXItaWNvblwiO1xuICAgIGlmICh0eXBlb2YgaWNvbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpXCIsIHsgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChkZWZhdWx0Q2xhc3MsIFwiIFwiKS5jb25jYXQoaWNvbiwgXCIgXCIpLmNvbmNhdChjbGFzc05hbWUpLCBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiLCBvbkNsaWNrOiBvbkNsaWNrIH0pKTtcbiAgICB9XG4gICAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGljb24pKSB7XG4gICAgICAgIC8vIEJlY2F1c2Ugd2UgYXJlIGNoZWNraW5nIHRoYXQgdHlwZW9mIGljb24gaXMgc3RyaW5nIGZpcnN0LCB3ZSBjYW4gc2FmZWx5IGNhc3QgaWNvbiBhcyBSZWFjdC5SZWFjdEVsZW1lbnQgb24gdHlwZXMgbGV2ZWwgYW5kIGNvZGUgbGV2ZWxcbiAgICAgICAgdmFyIGljb25FbGVtZW50XzEgPSBpY29uO1xuICAgICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGljb25FbGVtZW50XzEsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQoaWNvbkVsZW1lbnRfMS5wcm9wcy5jbGFzc05hbWUgfHwgXCJcIiwgXCIgXCIpLmNvbmNhdChkZWZhdWx0Q2xhc3MsIFwiIFwiKS5jb25jYXQoY2xhc3NOYW1lKSxcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaWNvbkVsZW1lbnRfMS5wcm9wcy5vbkNsaWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbkVsZW1lbnRfMS5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvbkNsaWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgb25DbGljayhldmVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIERlZmF1bHQgU1ZHIEljb25cbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgeyBjbGFzc05hbWU6IFwiXCIuY29uY2F0KGRlZmF1bHRDbGFzcywgXCIgXCIpLmNvbmNhdChjbGFzc05hbWUpLCB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCB2aWV3Qm94OiBcIjAgMCA0NDggNTEyXCIsIG9uQ2xpY2s6IG9uQ2xpY2sgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBkOiBcIk05NiAzMlY2NEg0OEMyMS41IDY0IDAgODUuNSAwIDExMnY0OEg0NDhWMTEyYzAtMjYuNS0yMS41LTQ4LTQ4LTQ4SDM1MlYzMmMwLTE3LjctMTQuMy0zMi0zMi0zMnMtMzIgMTQuMy0zMiAzMlY2NEgxNjBWMzJjMC0xNy43LTE0LjMtMzItMzItMzJTOTYgMTQuMyA5NiAzMnpNNDQ4IDE5MkgwVjQ2NGMwIDI2LjUgMjEuNSA0OCA0OCA0OEg0MDBjMjYuNSAwIDQ4LTIxLjUgNDgtNDhWMTkyelwiIH0pKSk7XG59O1xuXG4vKipcbiAqIGBQb3J0YWxgIGlzIGEgUmVhY3QgY29tcG9uZW50IHRoYXQgYWxsb3dzIHlvdSB0byByZW5kZXIgY2hpbGRyZW4gaW50byBhIERPTSBub2RlXG4gKiB0aGF0IGV4aXN0cyBvdXRzaWRlIHRoZSBET00gaGllcmFyY2h5IG9mIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtQb3J0YWxQcm9wc30gcHJvcHMgLSBUaGUgcHJvcGVydGllcyB0aGF0IGRlZmluZSB0aGUgYFBvcnRhbGAgY29tcG9uZW50LlxuICogQHByb3BlcnR5IHtSZWFjdC5SZWFjdE5vZGV9IHByb3BzLmNoaWxkcmVuIC0gVGhlIGNoaWxkcmVuIHRvIGJlIHJlbmRlcmVkIGludG8gdGhlIGBQb3J0YWxgLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHByb3BzLnBvcnRhbElkIC0gVGhlIGlkIG9mIHRoZSBET00gbm9kZSBpbnRvIHdoaWNoIHRoZSBgUG9ydGFsYCB3aWxsIHJlbmRlci5cbiAqIEBwcm9wZXJ0eSB7U2hhZG93Um9vdH0gW3Byb3BzLnBvcnRhbEhvc3RdIC0gVGhlIERPTSBub2RlIHRvIGhvc3QgdGhlIGBQb3J0YWxgLlxuICovXG52YXIgUG9ydGFsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhQb3J0YWwsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUG9ydGFsKHByb3BzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5wb3J0YWxSb290ID0gbnVsbDtcbiAgICAgICAgX3RoaXMuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFBvcnRhbC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMucG9ydGFsUm9vdCA9ICh0aGlzLnByb3BzLnBvcnRhbEhvc3QgfHwgZG9jdW1lbnQpLmdldEVsZW1lbnRCeUlkKHRoaXMucHJvcHMucG9ydGFsSWQpO1xuICAgICAgICBpZiAoIXRoaXMucG9ydGFsUm9vdCkge1xuICAgICAgICAgICAgdGhpcy5wb3J0YWxSb290ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIHRoaXMucG9ydGFsUm9vdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCB0aGlzLnByb3BzLnBvcnRhbElkKTtcbiAgICAgICAgICAgICh0aGlzLnByb3BzLnBvcnRhbEhvc3QgfHwgZG9jdW1lbnQuYm9keSkuYXBwZW5kQ2hpbGQodGhpcy5wb3J0YWxSb290KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvcnRhbFJvb3QuYXBwZW5kQ2hpbGQodGhpcy5lbCk7XG4gICAgfTtcbiAgICBQb3J0YWwucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5wb3J0YWxSb290KSB7XG4gICAgICAgICAgICB0aGlzLnBvcnRhbFJvb3QucmVtb3ZlQ2hpbGQodGhpcy5lbCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFBvcnRhbC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUmVhY3RET00uY3JlYXRlUG9ydGFsKHRoaXMucHJvcHMuY2hpbGRyZW4sIHRoaXMuZWwpO1xuICAgIH07XG4gICAgcmV0dXJuIFBvcnRhbDtcbn0oQ29tcG9uZW50KSk7XG5cbnZhciBmb2N1c2FibGVFbGVtZW50c1NlbGVjdG9yID0gXCJbdGFiaW5kZXhdLCBhLCBidXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhXCI7XG52YXIgZm9jdXNhYmxlRmlsdGVyID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEhUTUxBbmNob3JFbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBub2RlLnRhYkluZGV4ICE9PSAtMTtcbiAgICB9XG4gICAgcmV0dXJuICFub2RlLmRpc2FibGVkICYmIG5vZGUudGFiSW5kZXggIT09IC0xO1xufTtcbi8qKlxuICogYFRhYkxvb3BgIGlzIGEgUmVhY3QgY29tcG9uZW50IHRoYXQgbWFuYWdlcyB0YWJiaW5nIGJlaGF2aW9yIGZvciBpdHMgY2hpbGRyZW4uXG4gKlxuICogVGFiTG9vcCBwcmV2ZW50cyB0aGUgdXNlciBmcm9tIHRhYmJpbmcgb3V0c2lkZSBvZiB0aGUgcG9wcGVyXG4gKiBJdCBjcmVhdGVzIGEgdGFiaW5kZXggbG9vcCBzbyB0aGF0IFwiVGFiXCIgb24gdGhlIGxhc3QgZWxlbWVudCB3aWxsIGZvY3VzIHRoZSBmaXJzdCBlbGVtZW50XG4gKiBhbmQgXCJTaGlmdCBUYWJcIiBvbiB0aGUgZmlyc3QgZWxlbWVudCB3aWxsIGZvY3VzIHRoZSBsYXN0IGVsZW1lbnRcbiAqXG4gKiBAY29tcG9uZW50XG4gKiBAZXhhbXBsZVxuICogPFRhYkxvb3AgZW5hYmxlVGFiTG9vcD17dHJ1ZX0+XG4gKiAgIDxDaGlsZENvbXBvbmVudCAvPlxuICogPC9UYWJMb29wPlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBwcm9wZXJ0aWVzIHRoYXQgZGVmaW5lIHRoZSBgVGFiTG9vcGAgY29tcG9uZW50LlxuICogQHBhcmFtIHByb3BzLmNoaWxkcmVuIC0gVGhlIGNoaWxkIGNvbXBvbmVudHMuXG4gKiBAcGFyYW0gcHJvcHMuZW5hYmxlVGFiTG9vcCAtIFdoZXRoZXIgdG8gZW5hYmxlIHRoZSB0YWIgbG9vcC5cbiAqXG4gKiBAcmV0dXJucyBUaGUgYFRhYkxvb3BgIGNvbXBvbmVudC5cbiAqL1xudmFyIFRhYkxvb3AgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFRhYkxvb3AsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gVGFiTG9vcChwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGBnZXRUYWJDaGlsZHJlbmAgaXMgYSBtZXRob2Qgb2YgdGhlIGBUYWJMb29wYCBjbGFzcyB0aGF0IHJldHJpZXZlcyBhbGwgdGFiYmFibGUgY2hpbGRyZW4gb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgICAgICpcbiAgICAgICAgICogVGhpcyBtZXRob2QgdXNlcyB0aGUgYHRhYmJhYmxlYCBsaWJyYXJ5IHRvIGZpbmQgYWxsIHRhYmJhYmxlIGVsZW1lbnRzIHdpdGhpbiB0aGUgYFRhYkxvb3BgIGNvbXBvbmVudC5cbiAgICAgICAgICogSXQgdGhlbiBmaWx0ZXJzIG91dCBhbnkgZWxlbWVudHMgdGhhdCBhcmUgbm90IHZpc2libGUuXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIEFuIGFycmF5IG9mIGFsbCB0YWJiYWJsZSBhbmQgdmlzaWJsZSBjaGlsZHJlbiBvZiB0aGUgYFRhYkxvb3BgIGNvbXBvbmVudC5cbiAgICAgICAgICovXG4gICAgICAgIF90aGlzLmdldFRhYkNoaWxkcmVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZVxuICAgICAgICAgICAgICAgIC5jYWxsKChfYSA9IF90aGlzLnRhYkxvb3BSZWYuY3VycmVudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnF1ZXJ5U2VsZWN0b3JBbGwoZm9jdXNhYmxlRWxlbWVudHNTZWxlY3RvciksIDEsIC0xKVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoZm9jdXNhYmxlRmlsdGVyKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlRm9jdXNTdGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0YWJDaGlsZHJlbiA9IF90aGlzLmdldFRhYkNoaWxkcmVuKCk7XG4gICAgICAgICAgICB0YWJDaGlsZHJlbiAmJlxuICAgICAgICAgICAgICAgIHRhYkNoaWxkcmVuLmxlbmd0aCA+IDEgJiZcbiAgICAgICAgICAgICAgICB0YWJDaGlsZHJlblt0YWJDaGlsZHJlbi5sZW5ndGggLSAxXS5mb2N1cygpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVGb2N1c0VuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0YWJDaGlsZHJlbiA9IF90aGlzLmdldFRhYkNoaWxkcmVuKCk7XG4gICAgICAgICAgICB0YWJDaGlsZHJlbiAmJiB0YWJDaGlsZHJlbi5sZW5ndGggPiAxICYmIHRhYkNoaWxkcmVuWzBdLmZvY3VzKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnRhYkxvb3BSZWYgPSBjcmVhdGVSZWYoKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBUYWJMb29wLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCEoKF9hID0gdGhpcy5wcm9wcy5lbmFibGVUYWJMb29wKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBUYWJMb29wLmRlZmF1bHRQcm9wcy5lbmFibGVUYWJMb29wKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RhYi1sb29wXCIsIHJlZjogdGhpcy50YWJMb29wUmVmIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LWRhdGVwaWNrZXJfX3RhYi1sb29wX19zdGFydFwiLCB0YWJJbmRleDogMCwgb25Gb2N1czogdGhpcy5oYW5kbGVGb2N1c1N0YXJ0IH0pLFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fdGFiLWxvb3BfX2VuZFwiLCB0YWJJbmRleDogMCwgb25Gb2N1czogdGhpcy5oYW5kbGVGb2N1c0VuZCB9KSkpO1xuICAgIH07XG4gICAgVGFiTG9vcC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgICAgIGVuYWJsZVRhYkxvb3A6IHRydWUsXG4gICAgfTtcbiAgICByZXR1cm4gVGFiTG9vcDtcbn0oQ29tcG9uZW50KSk7XG5cbi8qKlxuICogYHdpdGhGbG9hdGluZ2AgaXMgYSBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRoYXQgYWRkcyBmbG9hdGluZyBiZWhhdmlvciB0byBhIGNvbXBvbmVudC5cbiAqXG4gKiBAcGFyYW0gQ29tcG9uZW50IC0gVGhlIGNvbXBvbmVudCB0byBlbmhhbmNlLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBGbG9hdGluZ0NvbXBvbmVudCA9IHdpdGhGbG9hdGluZyhNeUNvbXBvbmVudCk7XG4gKiA8RmxvYXRpbmdDb21wb25lbnQgcG9wcGVyTW9kaWZpZXJzPXtbXX0gcG9wcGVyUHJvcHM9e3t9fSBoaWRlUG9wcGVyPXt0cnVlfSAvPlxuICpcbiAqIEBwYXJhbSBwb3BwZXJNb2RpZmllcnMgLSBUaGUgbW9kaWZpZXJzIHRvIHVzZSBmb3IgdGhlIHBvcHBlci5cbiAqIEBwYXJhbSBwb3BwZXJQcm9wcyAtIFRoZSBwcm9wcyB0byBwYXNzIHRvIHRoZSBwb3BwZXIuXG4gKiBAcGFyYW0gaGlkZVBvcHBlciAtIFdoZXRoZXIgdG8gaGlkZSB0aGUgcG9wcGVyLlxuICogQHBhcmFtIHBvcHBlclBsYWNlbWVudCAtIFRoZSBwbGFjZW1lbnQgb2YgdGhlIHBvcHBlci5cbiAqXG4gKiBAcmV0dXJucyBBIG5ldyBjb21wb25lbnQgd2l0aCBmbG9hdGluZyBiZWhhdmlvci5cbiAqL1xuZnVuY3Rpb24gd2l0aEZsb2F0aW5nKENvbXBvbmVudCkge1xuICAgIHZhciBXaXRoRmxvYXRpbmcgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB2YXIgaGlkZVBvcHBlciA9IHR5cGVvZiBwcm9wcy5oaWRlUG9wcGVyID09PSBcImJvb2xlYW5cIiA/IHByb3BzLmhpZGVQb3BwZXIgOiB0cnVlO1xuICAgICAgICB2YXIgYXJyb3dSZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgICAgIHZhciBmbG9hdGluZ1Byb3BzID0gdXNlRmxvYXRpbmcoX2Fzc2lnbih7IG9wZW46ICFoaWRlUG9wcGVyLCB3aGlsZUVsZW1lbnRzTW91bnRlZDogYXV0b1VwZGF0ZSwgcGxhY2VtZW50OiBwcm9wcy5wb3BwZXJQbGFjZW1lbnQsIG1pZGRsZXdhcmU6IF9fc3ByZWFkQXJyYXkoW1xuICAgICAgICAgICAgICAgIGZsaXAoeyBwYWRkaW5nOiAxNSB9KSxcbiAgICAgICAgICAgICAgICBvZmZzZXQoMTApLFxuICAgICAgICAgICAgICAgIGFycm93KHsgZWxlbWVudDogYXJyb3dSZWYgfSlcbiAgICAgICAgICAgIF0sICgoX2EgPSBwcm9wcy5wb3BwZXJNb2RpZmllcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdKSwgdHJ1ZSkgfSwgcHJvcHMucG9wcGVyUHJvcHMpKTtcbiAgICAgICAgdmFyIGNvbXBvbmVudFByb3BzID0gX2Fzc2lnbihfYXNzaWduKHt9LCBwcm9wcyksIHsgaGlkZVBvcHBlcjogaGlkZVBvcHBlciwgcG9wcGVyUHJvcHM6IF9hc3NpZ24oX2Fzc2lnbih7fSwgZmxvYXRpbmdQcm9wcyksIHsgYXJyb3dSZWY6IGFycm93UmVmIH0pIH0pO1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9hc3NpZ24oe30sIGNvbXBvbmVudFByb3BzKSk7XG4gICAgfTtcbiAgICByZXR1cm4gV2l0aEZsb2F0aW5nO1xufVxuXG4vLyBFeHBvcnRlZCBmb3IgdGVzdGluZyBwdXJwb3Nlc1xudmFyIFBvcHBlckNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUG9wcGVyQ29tcG9uZW50LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFBvcHBlckNvbXBvbmVudCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUG9wcGVyQ29tcG9uZW50LCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBoaWRlUG9wcGVyOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFBvcHBlckNvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2EgPSB0aGlzLnByb3BzLCBjbGFzc05hbWUgPSBfYS5jbGFzc05hbWUsIHdyYXBwZXJDbGFzc05hbWUgPSBfYS53cmFwcGVyQ2xhc3NOYW1lLCBfYiA9IF9hLmhpZGVQb3BwZXIsIGhpZGVQb3BwZXIgPSBfYiA9PT0gdm9pZCAwID8gUG9wcGVyQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5oaWRlUG9wcGVyIDogX2IsIHBvcHBlckNvbXBvbmVudCA9IF9hLnBvcHBlckNvbXBvbmVudCwgdGFyZ2V0Q29tcG9uZW50ID0gX2EudGFyZ2V0Q29tcG9uZW50LCBlbmFibGVUYWJMb29wID0gX2EuZW5hYmxlVGFiTG9vcCwgcG9wcGVyT25LZXlEb3duID0gX2EucG9wcGVyT25LZXlEb3duLCBwb3J0YWxJZCA9IF9hLnBvcnRhbElkLCBwb3J0YWxIb3N0ID0gX2EucG9ydGFsSG9zdCwgcG9wcGVyUHJvcHMgPSBfYS5wb3BwZXJQcm9wcywgc2hvd0Fycm93ID0gX2Euc2hvd0Fycm93O1xuICAgICAgICB2YXIgcG9wcGVyID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoIWhpZGVQb3BwZXIpIHtcbiAgICAgICAgICAgIHZhciBjbGFzc2VzID0gY2xzeChcInJlYWN0LWRhdGVwaWNrZXItcG9wcGVyXCIsIGNsYXNzTmFtZSk7XG4gICAgICAgICAgICBwb3BwZXIgPSAoUmVhY3QuY3JlYXRlRWxlbWVudChUYWJMb29wLCB7IGVuYWJsZVRhYkxvb3A6IGVuYWJsZVRhYkxvb3AgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBwb3BwZXJQcm9wcy5yZWZzLnNldEZsb2F0aW5nLCBzdHlsZTogcG9wcGVyUHJvcHMuZmxvYXRpbmdTdHlsZXMsIGNsYXNzTmFtZTogY2xhc3NlcywgXCJkYXRhLXBsYWNlbWVudFwiOiBwb3BwZXJQcm9wcy5wbGFjZW1lbnQsIG9uS2V5RG93bjogcG9wcGVyT25LZXlEb3duIH0sXG4gICAgICAgICAgICAgICAgICAgIHBvcHBlckNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICAgICAgc2hvd0Fycm93ICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KEZsb2F0aW5nQXJyb3csIHsgcmVmOiBwb3BwZXJQcm9wcy5hcnJvd1JlZiwgY29udGV4dDogcG9wcGVyUHJvcHMuY29udGV4dCwgZmlsbDogXCJjdXJyZW50Q29sb3JcIiwgc3Ryb2tlV2lkdGg6IDEsIGhlaWdodDogOCwgd2lkdGg6IDE2LCBzdHlsZTogeyB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtMXB4KVwiIH0sIGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX190cmlhbmdsZVwiIH0pKSkpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy5wb3BwZXJDb250YWluZXIpIHtcbiAgICAgICAgICAgIHBvcHBlciA9IGNyZWF0ZUVsZW1lbnQodGhpcy5wcm9wcy5wb3BwZXJDb250YWluZXIsIHt9LCBwb3BwZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3J0YWxJZCAmJiAhaGlkZVBvcHBlcikge1xuICAgICAgICAgICAgcG9wcGVyID0gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUG9ydGFsLCB7IHBvcnRhbElkOiBwb3J0YWxJZCwgcG9ydGFsSG9zdDogcG9ydGFsSG9zdCB9LCBwb3BwZXIpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgd3JhcHBlckNsYXNzZXMgPSBjbHN4KFwicmVhY3QtZGF0ZXBpY2tlci13cmFwcGVyXCIsIHdyYXBwZXJDbGFzc05hbWUpO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBwb3BwZXJQcm9wcy5yZWZzLnNldFJlZmVyZW5jZSwgY2xhc3NOYW1lOiB3cmFwcGVyQ2xhc3NlcyB9LCB0YXJnZXRDb21wb25lbnQpLFxuICAgICAgICAgICAgcG9wcGVyKSk7XG4gICAgfTtcbiAgICByZXR1cm4gUG9wcGVyQ29tcG9uZW50O1xufShDb21wb25lbnQpKTtcbnZhciBQb3BwZXJDb21wb25lbnQkMSA9IHdpdGhGbG9hdGluZyhQb3BwZXJDb21wb25lbnQpO1xuXG52YXIgb3V0c2lkZUNsaWNrSWdub3JlQ2xhc3MgPSBcInJlYWN0LWRhdGVwaWNrZXItaWdub3JlLW9uY2xpY2tvdXRzaWRlXCI7XG4vLyBDb21wYXJlcyBkYXRlcyB5ZWFyK21vbnRoIGNvbWJpbmF0aW9uc1xuZnVuY3Rpb24gaGFzUHJlU2VsZWN0aW9uQ2hhbmdlZChkYXRlMSwgZGF0ZTIpIHtcbiAgICBpZiAoZGF0ZTEgJiYgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIChnZXRNb250aChkYXRlMSkgIT09IGdldE1vbnRoKGRhdGUyKSB8fCBnZXRZZWFyKGRhdGUxKSAhPT0gZ2V0WWVhcihkYXRlMikpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0ZTEgIT09IGRhdGUyO1xufVxuLyoqXG4gKiBHZW5lcmFsIGRhdGVwaWNrZXIgY29tcG9uZW50LlxuICovXG52YXIgSU5QVVRfRVJSXzEgPSBcIkRhdGUgaW5wdXQgbm90IHZhbGlkLlwiO1xudmFyIERhdGVQaWNrZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKERhdGVQaWNrZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRGF0ZVBpY2tlcihwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuY2FsZW5kYXIgPSBudWxsO1xuICAgICAgICBfdGhpcy5pbnB1dCA9IG51bGw7XG4gICAgICAgIF90aGlzLmdldFByZVNlbGVjdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5vcGVuVG9EYXRlXG4gICAgICAgICAgICAgICAgPyBfdGhpcy5wcm9wcy5vcGVuVG9EYXRlXG4gICAgICAgICAgICAgICAgOiBfdGhpcy5wcm9wcy5zZWxlY3RzRW5kICYmIF90aGlzLnByb3BzLnN0YXJ0RGF0ZVxuICAgICAgICAgICAgICAgICAgICA/IF90aGlzLnByb3BzLnN0YXJ0RGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IF90aGlzLnByb3BzLnNlbGVjdHNTdGFydCAmJiBfdGhpcy5wcm9wcy5lbmREYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IF90aGlzLnByb3BzLmVuZERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogbmV3RGF0ZSgpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBDb252ZXJ0IHRoZSBkYXRlIGZyb20gc3RyaW5nIGZvcm1hdCB0byBzdGFuZGFyZCBEYXRlIGZvcm1hdFxuICAgICAgICBfdGhpcy5tb2RpZnlIb2xpZGF5cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSBfdGhpcy5wcm9wcy5ob2xpZGF5cykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlZHVjZShmdW5jdGlvbiAoYWNjdW11bGF0b3IsIGhvbGlkYXkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGhvbGlkYXkuZGF0ZSk7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1ZhbGlkKGRhdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgYWNjdW11bGF0b3IsIHRydWUpLCBbX2Fzc2lnbihfYXNzaWduKHt9LCBob2xpZGF5KSwgeyBkYXRlOiBkYXRlIH0pXSwgZmFsc2UpO1xuICAgICAgICAgICAgfSwgW10pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5jYWxjSW5pdGlhbFN0YXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRQcmVTZWxlY3Rpb24gPSBfdGhpcy5nZXRQcmVTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgIHZhciBtaW5EYXRlID0gZ2V0RWZmZWN0aXZlTWluRGF0ZShfdGhpcy5wcm9wcyk7XG4gICAgICAgICAgICB2YXIgbWF4RGF0ZSA9IGdldEVmZmVjdGl2ZU1heERhdGUoX3RoaXMucHJvcHMpO1xuICAgICAgICAgICAgdmFyIGJvdW5kZWRQcmVTZWxlY3Rpb24gPSBtaW5EYXRlICYmIGlzQmVmb3JlKGRlZmF1bHRQcmVTZWxlY3Rpb24sIGdldFN0YXJ0T2ZEYXkobWluRGF0ZSkpXG4gICAgICAgICAgICAgICAgPyBtaW5EYXRlXG4gICAgICAgICAgICAgICAgOiBtYXhEYXRlICYmIGlzQWZ0ZXIoZGVmYXVsdFByZVNlbGVjdGlvbiwgZ2V0RW5kT2ZEYXkobWF4RGF0ZSkpXG4gICAgICAgICAgICAgICAgICAgID8gbWF4RGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IGRlZmF1bHRQcmVTZWxlY3Rpb247XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG9wZW46IF90aGlzLnByb3BzLnN0YXJ0T3BlbiB8fCBmYWxzZSxcbiAgICAgICAgICAgICAgICBwcmV2ZW50Rm9jdXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlucHV0VmFsdWU6IG51bGwsXG4gICAgICAgICAgICAgICAgcHJlU2VsZWN0aW9uOiAoX2EgPSAoX3RoaXMucHJvcHMuc2VsZWN0c1JhbmdlXG4gICAgICAgICAgICAgICAgICAgID8gX3RoaXMucHJvcHMuc3RhcnREYXRlXG4gICAgICAgICAgICAgICAgICAgIDogX3RoaXMucHJvcHMuc2VsZWN0ZWQpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBib3VuZGVkUHJlU2VsZWN0aW9uLFxuICAgICAgICAgICAgICAgIC8vIHRyYW5zZm9ybWluZyBoaWdobGlnaHRlZCBkYXlzIChwZXJoYXBzIG5lc3RlZCBhcnJheSlcbiAgICAgICAgICAgICAgICAvLyB0byBmbGF0IE1hcCBmb3IgZmFzdGVyIGFjY2VzcyBpbiBkYXkuanN4XG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0RGF0ZXM6IGdldEhpZ2hMaWdodERheXNNYXAoX3RoaXMucHJvcHMuaGlnaGxpZ2h0RGF0ZXMpLFxuICAgICAgICAgICAgICAgIGZvY3VzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIC8vIHVzZWQgdG8gZm9jdXMgZGF5IGluIGlubGluZSB2ZXJzaW9uIGFmdGVyIG1vbnRoIGhhcyBjaGFuZ2VkLCBidXQgbm90IG9uXG4gICAgICAgICAgICAgICAgLy8gaW5pdGlhbCByZW5kZXJcbiAgICAgICAgICAgICAgICBzaG91bGRGb2N1c0RheUlubGluZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNSZW5kZXJBcmlhTGl2ZU1lc3NhZ2U6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdhc0hpZGRlbjogZmFsc2UsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5yZXNldEhpZGRlblN0YXR1cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKF9hc3NpZ24oX2Fzc2lnbih7fSwgX3RoaXMuc3RhdGUpLCB7IHdhc0hpZGRlbjogZmFsc2UgfSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zZXRIaWRkZW5TdGF0dXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZShfYXNzaWduKF9hc3NpZ24oe30sIF90aGlzLnN0YXRlKSwgeyB3YXNIaWRkZW46IHRydWUgfSkpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zZXRIaWRkZW5TdGF0ZU9uVmlzaWJpbGl0eUhpZGRlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgIT09IFwiaGlkZGVuXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5zZXRIaWRkZW5TdGF0dXMoKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuY2xlYXJQcmV2ZW50Rm9jdXNUaW1lb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByZXZlbnRGb2N1c1RpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoX3RoaXMucHJldmVudEZvY3VzVGltZW91dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnNldEZvY3VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIChfYiA9IChfYSA9IF90aGlzLmlucHV0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZm9jdXMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCB7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnNldEJsdXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMuaW5wdXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5ibHVyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgICAgICAgICBfdGhpcy5jYW5jZWxGb2N1c0lucHV0KCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmRlZmVyQmx1ciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0Qmx1cigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnNldE9wZW4gPSBmdW5jdGlvbiAob3Blbiwgc2tpcFNldEJsdXIpIHtcbiAgICAgICAgICAgIGlmIChza2lwU2V0Qmx1ciA9PT0gdm9pZCAwKSB7IHNraXBTZXRCbHVyID0gZmFsc2U7IH1cbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBvcGVuOiBvcGVuLFxuICAgICAgICAgICAgICAgIHByZVNlbGVjdGlvbjogb3BlbiAmJiBfdGhpcy5zdGF0ZS5vcGVuXG4gICAgICAgICAgICAgICAgICAgID8gX3RoaXMuc3RhdGUucHJlU2VsZWN0aW9uXG4gICAgICAgICAgICAgICAgICAgIDogX3RoaXMuY2FsY0luaXRpYWxTdGF0ZSgpLnByZVNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICBsYXN0UHJlU2VsZWN0Q2hhbmdlOiBQUkVTRUxFQ1RfQ0hBTkdFX1ZJQV9OQVZJR0FURSxcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIW9wZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKHByZXYpIHsgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb2N1c2VkOiBza2lwU2V0Qmx1ciA/IHByZXYuZm9jdXNlZCA6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB9KTsgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgIXNraXBTZXRCbHVyICYmIF90aGlzLmRlZmVyQmx1cigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpbnB1dFZhbHVlOiBudWxsIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaW5wdXRPayA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGlzRGF0ZShfdGhpcy5zdGF0ZS5wcmVTZWxlY3Rpb24pOyB9O1xuICAgICAgICBfdGhpcy5pc0NhbGVuZGFyT3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5vcGVuID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IF90aGlzLnN0YXRlLm9wZW4gJiYgIV90aGlzLnByb3BzLmRpc2FibGVkICYmICFfdGhpcy5wcm9wcy5yZWFkT25seVxuICAgICAgICAgICAgICAgIDogX3RoaXMucHJvcHMub3BlbjtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuaGFuZGxlRm9jdXMgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICB2YXIgaXNBdXRvUmVGb2N1cyA9IF90aGlzLnN0YXRlLndhc0hpZGRlbjtcbiAgICAgICAgICAgIHZhciBpc09wZW5BbGxvd2VkID0gaXNBdXRvUmVGb2N1cyA/IF90aGlzLnN0YXRlLm9wZW4gOiB0cnVlO1xuICAgICAgICAgICAgaWYgKGlzQXV0b1JlRm9jdXMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5yZXNldEhpZGRlblN0YXR1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFfdGhpcy5zdGF0ZS5wcmV2ZW50Rm9jdXMpIHtcbiAgICAgICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25Gb2N1cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoaXNPcGVuQWxsb3dlZCAmJlxuICAgICAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMucHJldmVudE9wZW5PbkZvY3VzICYmXG4gICAgICAgICAgICAgICAgICAgICFfdGhpcy5wcm9wcy5yZWFkT25seSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgZm9jdXNlZDogdHJ1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuc2VuZEZvY3VzQmFja1RvSW5wdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBDbGVhciBwcmV2aW91cyB0aW1lb3V0IGlmIGl0IGV4aXN0c1xuICAgICAgICAgICAgaWYgKF90aGlzLnByZXZlbnRGb2N1c1RpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5jbGVhclByZXZlbnRGb2N1c1RpbWVvdXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGNsb3NlIHRoZSBwb3BwZXIgYW5kIHJlZm9jdXMgdGhlIGlucHV0XG4gICAgICAgICAgICAvLyBzdG9wIHRoZSBpbnB1dCBmcm9tIGF1dG8gb3BlbmluZyBvbkZvY3VzXG4gICAgICAgICAgICAvLyBzZXRGb2N1cyB0byB0aGUgaW5wdXRcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcHJldmVudEZvY3VzOiB0cnVlIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5wcmV2ZW50Rm9jdXNUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNldEZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgcHJldmVudEZvY3VzOiBmYWxzZSB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5jYW5jZWxGb2N1c0lucHV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KF90aGlzLmlucHV0Rm9jdXNUaW1lb3V0KTtcbiAgICAgICAgICAgIF90aGlzLmlucHV0Rm9jdXNUaW1lb3V0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5kZWZlckZvY3VzSW5wdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5jYW5jZWxGb2N1c0lucHV0KCk7XG4gICAgICAgICAgICBfdGhpcy5pbnB1dEZvY3VzVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuc2V0Rm9jdXMoKTsgfSwgMSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZURyb3Bkb3duRm9jdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5jYW5jZWxGb2N1c0lucHV0KCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmhhbmRsZUJsdXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBpZiAoIV90aGlzLnN0YXRlLm9wZW4gfHwgX3RoaXMucHJvcHMud2l0aFBvcnRhbCB8fCBfdGhpcy5wcm9wcy5zaG93VGltZUlucHV0KSB7XG4gICAgICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uQmx1cikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5zdGF0ZS5vcGVuICYmIF90aGlzLnByb3BzLm9wZW4gPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0T3BlbihmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGZvY3VzZWQ6IGZhbHNlIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVDYWxlbmRhckNsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGlmICghX3RoaXMucHJvcHMuaW5saW5lKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0T3BlbihmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25DbGlja091dHNpZGUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBldmVudCk7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMud2l0aFBvcnRhbCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vIGhhbmRsZUNoYW5nZSBpcyBjYWxsZWQgd2hlbiB1c2VyIHR5cGVzIGluIHRoZSB0ZXh0Ym94XG4gICAgICAgIF90aGlzLmhhbmRsZUNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgICAgICAgICB2YXIgYWxsQXJncyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICBhbGxBcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgZXZlbnQgPSBhbGxBcmdzWzBdO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2hhbmdlUmF3KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2VSYXcuYXBwbHkoX3RoaXMsIGFsbEFyZ3MpO1xuICAgICAgICAgICAgICAgIGlmICghZXZlbnQgfHxcbiAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCAhPT0gXCJmdW5jdGlvblwiIHx8XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgaW5wdXRWYWx1ZTogKGV2ZW50ID09PSBudWxsIHx8IGV2ZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldmVudC50YXJnZXQpIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCA/IGV2ZW50LnRhcmdldC52YWx1ZSA6IG51bGwsXG4gICAgICAgICAgICAgICAgbGFzdFByZVNlbGVjdENoYW5nZTogUFJFU0VMRUNUX0NIQU5HRV9WSUFfSU5QVVQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciBfZiA9IF90aGlzLnByb3BzLCBzZWxlY3RzUmFuZ2UgPSBfZi5zZWxlY3RzUmFuZ2UsIHN0YXJ0RGF0ZSA9IF9mLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9mLmVuZERhdGU7XG4gICAgICAgICAgICB2YXIgZGF0ZUZvcm1hdCA9IChfYSA9IF90aGlzLnByb3BzLmRhdGVGb3JtYXQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERhdGVQaWNrZXIuZGVmYXVsdFByb3BzLmRhdGVGb3JtYXQ7XG4gICAgICAgICAgICB2YXIgc3RyaWN0UGFyc2luZyA9IChfYiA9IF90aGlzLnByb3BzLnN0cmljdFBhcnNpbmcpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IERhdGVQaWNrZXIuZGVmYXVsdFByb3BzLnN0cmljdFBhcnNpbmc7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSAoZXZlbnQgPT09IG51bGwgfHwgZXZlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGV2ZW50LnRhcmdldCkgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50ID8gZXZlbnQudGFyZ2V0LnZhbHVlIDogXCJcIjtcbiAgICAgICAgICAgIGlmIChzZWxlY3RzUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2cgPSB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAuc3BsaXQoZGF0ZUZvcm1hdC5pbmNsdWRlcyhcIi1cIikgPyBEQVRFX1JBTkdFX1NFUEFSQVRPUiA6IFwiLVwiLCAyKVxuICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIHZhbC50cmltKCk7IH0pLCB2YWx1ZVN0YXJ0ID0gX2dbMF0sIHZhbHVlRW5kID0gX2dbMV07XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0RGF0ZU5ldyA9IHBhcnNlRGF0ZSh2YWx1ZVN0YXJ0ICE9PSBudWxsICYmIHZhbHVlU3RhcnQgIT09IHZvaWQgMCA/IHZhbHVlU3RhcnQgOiBcIlwiLCBkYXRlRm9ybWF0LCBfdGhpcy5wcm9wcy5sb2NhbGUsIHN0cmljdFBhcnNpbmcpO1xuICAgICAgICAgICAgICAgIHZhciBlbmREYXRlTmV3ID0gcGFyc2VEYXRlKHZhbHVlRW5kICE9PSBudWxsICYmIHZhbHVlRW5kICE9PSB2b2lkIDAgPyB2YWx1ZUVuZCA6IFwiXCIsIGRhdGVGb3JtYXQsIF90aGlzLnByb3BzLmxvY2FsZSwgc3RyaWN0UGFyc2luZyk7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0Q2hhbmdlZCA9IChzdGFydERhdGUgPT09IG51bGwgfHwgc3RhcnREYXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdGFydERhdGUuZ2V0VGltZSgpKSAhPT0gKHN0YXJ0RGF0ZU5ldyA9PT0gbnVsbCB8fCBzdGFydERhdGVOZXcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0YXJ0RGF0ZU5ldy5nZXRUaW1lKCkpO1xuICAgICAgICAgICAgICAgIHZhciBlbmRDaGFuZ2VkID0gKGVuZERhdGUgPT09IG51bGwgfHwgZW5kRGF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZW5kRGF0ZS5nZXRUaW1lKCkpICE9PSAoZW5kRGF0ZU5ldyA9PT0gbnVsbCB8fCBlbmREYXRlTmV3ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlbmREYXRlTmV3LmdldFRpbWUoKSk7XG4gICAgICAgICAgICAgICAgaWYgKCFzdGFydENoYW5nZWQgJiYgIWVuZENoYW5nZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3RhcnREYXRlTmV3ICYmIGlzRGF5RGlzYWJsZWQoc3RhcnREYXRlTmV3LCBfdGhpcy5wcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZW5kRGF0ZU5ldyAmJiBpc0RheURpc2FibGVkKGVuZERhdGVOZXcsIF90aGlzLnByb3BzKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IF90aGlzLnByb3BzKS5vbkNoYW5nZSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MsIFtzdGFydERhdGVOZXcsIGVuZERhdGVOZXddLCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBub3Qgc2VsZWN0c1JhbmdlXG4gICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBwYXJzZURhdGUodmFsdWUsIGRhdGVGb3JtYXQsIF90aGlzLnByb3BzLmxvY2FsZSwgc3RyaWN0UGFyc2luZywgKF9lID0gX3RoaXMucHJvcHMuc2VsZWN0ZWQpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHNlbGVjdGlvbiBpZiBlaXRoZXIgKDEpIGRhdGUgd2FzIHN1Y2Nlc3NmdWxseSBwYXJzZWQsIG9yICgyKSBpbnB1dCBmaWVsZCBpcyBlbXB0eVxuICAgICAgICAgICAgICAgIGlmIChkYXRlIHx8ICF2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTZWxlY3RlZChkYXRlLCBldmVudCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVTZWxlY3QgPSBmdW5jdGlvbiAoZGF0ZSwgZXZlbnQsIG1vbnRoU2VsZWN0ZWRJbikge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnJlYWRPbmx5KVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG91bGRDbG9zZU9uU2VsZWN0ICYmICFfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdCkge1xuICAgICAgICAgICAgICAgIC8vIFByZXZlbnRpbmcgb25Gb2N1cyBldmVudCB0byBmaXggaXNzdWVcbiAgICAgICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vSGFja2VyMHgwMS9yZWFjdC1kYXRlcGlja2VyL2lzc3Vlcy82MjhcbiAgICAgICAgICAgICAgICBfdGhpcy5zZW5kRm9jdXNCYWNrVG9JbnB1dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2hhbmdlUmF3KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2VSYXcoZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuc2V0U2VsZWN0ZWQoZGF0ZSwgZXZlbnQsIGZhbHNlLCBtb250aFNlbGVjdGVkSW4pO1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNob3dEYXRlU2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpc1JlbmRlckFyaWFMaXZlTWVzc2FnZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghX3RoaXMucHJvcHMuc2hvdWxkQ2xvc2VPblNlbGVjdCB8fCBfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFByZVNlbGVjdGlvbihkYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCFfdGhpcy5wcm9wcy5pbmxpbmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLnByb3BzLnNlbGVjdHNSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGU7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0RGF0ZSAmJlxuICAgICAgICAgICAgICAgICAgICAhZW5kRGF0ZSAmJlxuICAgICAgICAgICAgICAgICAgICAoX3RoaXMucHJvcHMuc3dhcFJhbmdlIHx8ICFpc0RhdGVCZWZvcmUoZGF0ZSwgc3RhcnREYXRlKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0T3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvLyBzZXRTZWxlY3RlZCBpcyBjYWxsZWQgZWl0aGVyIGZyb20gaGFuZGxlQ2hhbmdlICh1c2VyIHR5cGVkIGRhdGUgaW50byB0ZXh0Ym94IGFuZCBpdCB3YXMgcGFyc2VkKSBvciBoYW5kbGVTZWxlY3QgKHVzZXIgc2VsZWN0ZWQgZGF0ZSBmcm9tIGNhbGVuZGFyIHVzaW5nIG1vdXNlIG9yIGtleWJvYXJkKVxuICAgICAgICBfdGhpcy5zZXRTZWxlY3RlZCA9IGZ1bmN0aW9uIChkYXRlLCBldmVudCwga2VlcElucHV0LCBtb250aFNlbGVjdGVkSW4pIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICB2YXIgY2hhbmdlZERhdGUgPSBkYXRlO1xuICAgICAgICAgICAgLy8gRWFybHkgcmV0dXJuIGlmIHNlbGVjdGVkIHllYXIvbW9udGgvZGF5IGlzIGRpc2FibGVkXG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2hvd1llYXJQaWNrZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2hhbmdlZERhdGUgIT09IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgICAgaXNZZWFyRGlzYWJsZWQoZ2V0WWVhcihjaGFuZ2VkRGF0ZSksIF90aGlzLnByb3BzKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VkRGF0ZSAhPT0gbnVsbCAmJiBpc01vbnRoRGlzYWJsZWQoY2hhbmdlZERhdGUsIF90aGlzLnByb3BzKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoYW5nZWREYXRlICE9PSBudWxsICYmIGlzRGF5RGlzYWJsZWQoY2hhbmdlZERhdGUsIF90aGlzLnByb3BzKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIF9jID0gX3RoaXMucHJvcHMsIG9uQ2hhbmdlID0gX2Mub25DaGFuZ2UsIHNlbGVjdHNSYW5nZSA9IF9jLnNlbGVjdHNSYW5nZSwgc3RhcnREYXRlID0gX2Muc3RhcnREYXRlLCBlbmREYXRlID0gX2MuZW5kRGF0ZSwgc2VsZWN0c011bHRpcGxlID0gX2Muc2VsZWN0c011bHRpcGxlLCBzZWxlY3RlZERhdGVzID0gX2Muc2VsZWN0ZWREYXRlcywgbWluVGltZSA9IF9jLm1pblRpbWUsIHN3YXBSYW5nZSA9IF9jLnN3YXBSYW5nZTtcbiAgICAgICAgICAgIGlmICghaXNFcXVhbChfdGhpcy5wcm9wcy5zZWxlY3RlZCwgY2hhbmdlZERhdGUpIHx8XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuYWxsb3dTYW1lRGF5IHx8XG4gICAgICAgICAgICAgICAgc2VsZWN0c1JhbmdlIHx8XG4gICAgICAgICAgICAgICAgc2VsZWN0c011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoYW5nZWREYXRlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFByZXNlcnZlIHByZXZpb3VzbHkgc2VsZWN0ZWQgdGltZSBpZiBvbmx5IGRhdGUgaXMgY3VycmVudGx5IGJlaW5nIGNoYW5nZWRcbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnNlbGVjdGVkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAoIWtlZXBJbnB1dCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICghX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3QgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIV90aGlzLnByb3BzLnNob3dUaW1lU2VsZWN0T25seSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMuc2hvd1RpbWVJbnB1dCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VkRGF0ZSA9IHNldFRpbWUoY2hhbmdlZERhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyOiBnZXRIb3VycyhfdGhpcy5wcm9wcy5zZWxlY3RlZCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlOiBnZXRNaW51dGVzKF90aGlzLnByb3BzLnNlbGVjdGVkKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmQ6IGdldFNlY29uZHMoX3RoaXMucHJvcHMuc2VsZWN0ZWQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgbWluVGltZSBpcyBwcmVzZW50IHRoZW4gc2V0IHRoZSB0aW1lIHRvIG1pblRpbWVcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFrZWVwSW5wdXQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdCB8fCBfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdE9ubHkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWluVGltZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZWREYXRlID0gc2V0VGltZShjaGFuZ2VkRGF0ZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyOiBtaW5UaW1lLmdldEhvdXJzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZTogbWluVGltZS5nZXRNaW51dGVzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZDogbWluVGltZS5nZXRTZWNvbmRzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5pbmxpbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVTZWxlY3Rpb246IGNoYW5nZWREYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5mb2N1c1NlbGVjdGVkTW9udGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbW9udGhTZWxlY3RlZEluOiBtb250aFNlbGVjdGVkSW4gfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlbGVjdHNSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbm9SYW5nZXMgPSAhc3RhcnREYXRlICYmICFlbmREYXRlO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGFzU3RhcnRSYW5nZSA9IHN0YXJ0RGF0ZSAmJiAhZW5kRGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzUmFuZ2VGaWxsZWQgPSBzdGFydERhdGUgJiYgZW5kRGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vUmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZSA9PT0gbnVsbCB8fCBvbkNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25DaGFuZ2UoW2NoYW5nZWREYXRlLCBudWxsXSwgZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGhhc1N0YXJ0UmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VkRGF0ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShbbnVsbCwgbnVsbF0sIGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzRGF0ZUJlZm9yZShjaGFuZ2VkRGF0ZSwgc3RhcnREYXRlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzd2FwUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2UgPT09IG51bGwgfHwgb25DaGFuZ2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9uQ2hhbmdlKFtjaGFuZ2VkRGF0ZSwgc3RhcnREYXRlXSwgZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2UgPT09IG51bGwgfHwgb25DaGFuZ2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9uQ2hhbmdlKFtjaGFuZ2VkRGF0ZSwgbnVsbF0sIGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZSA9PT0gbnVsbCB8fCBvbkNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25DaGFuZ2UoW3N0YXJ0RGF0ZSwgY2hhbmdlZERhdGVdLCBldmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzUmFuZ2VGaWxsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShbY2hhbmdlZERhdGUsIG51bGxdLCBldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZWN0c011bHRpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VkRGF0ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEoc2VsZWN0ZWREYXRlcyA9PT0gbnVsbCB8fCBzZWxlY3RlZERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3RlZERhdGVzLmxlbmd0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZSA9PT0gbnVsbCB8fCBvbkNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25DaGFuZ2UoW2NoYW5nZWREYXRlXSwgZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzQ2hhbmdlZERhdGVBbHJlYWR5U2VsZWN0ZWQgPSBzZWxlY3RlZERhdGVzLnNvbWUoZnVuY3Rpb24gKHNlbGVjdGVkRGF0ZSkgeyByZXR1cm4gaXNTYW1lRGF5KHNlbGVjdGVkRGF0ZSwgY2hhbmdlZERhdGUpOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNDaGFuZ2VkRGF0ZUFscmVhZHlTZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dERhdGVzID0gc2VsZWN0ZWREYXRlcy5maWx0ZXIoZnVuY3Rpb24gKHNlbGVjdGVkRGF0ZSkgeyByZXR1cm4gIWlzU2FtZURheShzZWxlY3RlZERhdGUsIGNoYW5nZWREYXRlKTsgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShuZXh0RGF0ZXMsIGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShfX3NwcmVhZEFycmF5KF9fc3ByZWFkQXJyYXkoW10sIHNlbGVjdGVkRGF0ZXMsIHRydWUpLCBbY2hhbmdlZERhdGVdLCBmYWxzZSksIGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShjaGFuZ2VkRGF0ZSwgZXZlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgha2VlcElucHV0KSB7XG4gICAgICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uU2VsZWN0KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgY2hhbmdlZERhdGUsIGV2ZW50KTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlucHV0VmFsdWU6IG51bGwgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vIFdoZW4gY2hlY2tpbmcgcHJlU2VsZWN0aW9uIHZpYSBtaW4vbWF4RGF0ZSwgdGltZXMgbmVlZCB0byBiZSBtYW5pcHVsYXRlZCB2aWEgZ2V0U3RhcnRPZkRheS9nZXRFbmRPZkRheVxuICAgICAgICBfdGhpcy5zZXRQcmVTZWxlY3Rpb24gPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLnJlYWRPbmx5KVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIHZhciBoYXNNaW5EYXRlID0gaXNEYXRlKF90aGlzLnByb3BzLm1pbkRhdGUpO1xuICAgICAgICAgICAgdmFyIGhhc01heERhdGUgPSBpc0RhdGUoX3RoaXMucHJvcHMubWF4RGF0ZSk7XG4gICAgICAgICAgICB2YXIgaXNWYWxpZERhdGVTZWxlY3Rpb24gPSB0cnVlO1xuICAgICAgICAgICAgaWYgKGRhdGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZVN0YXJ0T2ZEYXkgPSBnZXRTdGFydE9mRGF5KGRhdGUpO1xuICAgICAgICAgICAgICAgIGlmIChoYXNNaW5EYXRlICYmIGhhc01heERhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaXNEYXlJblJhbmdlIHVzZXMgZ2V0U3RhcnRPZkRheSBpbnRlcm5hbGx5LCBzbyBub3QgbmVjZXNzYXJ5IHRvIG1hbmlwdWxhdGUgdGltZXMgaGVyZVxuICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkRGF0ZVNlbGVjdGlvbiA9IGlzRGF5SW5SYW5nZShkYXRlLCBfdGhpcy5wcm9wcy5taW5EYXRlLCBfdGhpcy5wcm9wcy5tYXhEYXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaGFzTWluRGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWluRGF0ZVN0YXJ0T2ZEYXkgPSBnZXRTdGFydE9mRGF5KF90aGlzLnByb3BzLm1pbkRhdGUpO1xuICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkRGF0ZVNlbGVjdGlvbiA9XG4gICAgICAgICAgICAgICAgICAgICAgICBpc0FmdGVyKGRhdGUsIG1pbkRhdGVTdGFydE9mRGF5KSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzRXF1YWwoZGF0ZVN0YXJ0T2ZEYXksIG1pbkRhdGVTdGFydE9mRGF5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaGFzTWF4RGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWF4RGF0ZUVuZE9mRGF5ID0gZ2V0RW5kT2ZEYXkoX3RoaXMucHJvcHMubWF4RGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlzVmFsaWREYXRlU2VsZWN0aW9uID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQmVmb3JlKGRhdGUsIG1heERhdGVFbmRPZkRheSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0VxdWFsKGRhdGVTdGFydE9mRGF5LCBtYXhEYXRlRW5kT2ZEYXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1ZhbGlkRGF0ZVNlbGVjdGlvbikge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgcHJlU2VsZWN0aW9uOiBkYXRlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy50b2dnbGVDYWxlbmRhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnNldE9wZW4oIV90aGlzLnN0YXRlLm9wZW4pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYW5kbGVUaW1lQ2hhbmdlID0gZnVuY3Rpb24gKHRpbWUpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuc2VsZWN0c1JhbmdlIHx8IF90aGlzLnByb3BzLnNlbGVjdHNNdWx0aXBsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBzZWxlY3RlZCA9IF90aGlzLnByb3BzLnNlbGVjdGVkXG4gICAgICAgICAgICAgICAgPyBfdGhpcy5wcm9wcy5zZWxlY3RlZFxuICAgICAgICAgICAgICAgIDogX3RoaXMuZ2V0UHJlU2VsZWN0aW9uKCk7XG4gICAgICAgICAgICB2YXIgY2hhbmdlZERhdGUgPSBfdGhpcy5wcm9wcy5zZWxlY3RlZFxuICAgICAgICAgICAgICAgID8gdGltZVxuICAgICAgICAgICAgICAgIDogc2V0VGltZShzZWxlY3RlZCwge1xuICAgICAgICAgICAgICAgICAgICBob3VyOiBnZXRIb3Vycyh0aW1lKSxcbiAgICAgICAgICAgICAgICAgICAgbWludXRlOiBnZXRNaW51dGVzKHRpbWUpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHByZVNlbGVjdGlvbjogY2hhbmdlZERhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIChfYiA9IChfYSA9IF90aGlzLnByb3BzKS5vbkNoYW5nZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGNoYW5nZWREYXRlKTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG91bGRDbG9zZU9uU2VsZWN0ICYmICFfdGhpcy5wcm9wcy5zaG93VGltZUlucHV0KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2VuZEZvY3VzQmFja1RvSW5wdXQoKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93VGltZUlucHV0KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0T3Blbih0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdE9ubHkgfHwgX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3QpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzUmVuZGVyQXJpYUxpdmVNZXNzYWdlOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBpbnB1dFZhbHVlOiBudWxsIH0pO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbklucHV0Q2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5kaXNhYmxlZCAmJiAhX3RoaXMucHJvcHMucmVhZE9ubHkpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uSW5wdXRDbGljaykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EpO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbklucHV0S2V5RG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2Y7XG4gICAgICAgICAgICAoX2IgPSAoX2EgPSBfdGhpcy5wcm9wcykub25LZXlEb3duKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSwgZXZlbnQpO1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5zdGF0ZS5vcGVuICYmXG4gICAgICAgICAgICAgICAgIV90aGlzLnByb3BzLmlubGluZSAmJlxuICAgICAgICAgICAgICAgICFfdGhpcy5wcm9wcy5wcmV2ZW50T3Blbk9uRm9jdXMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRLZXkgPT09IEtleVR5cGUuQXJyb3dEb3duIHx8XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50S2V5ID09PSBLZXlUeXBlLkFycm93VXAgfHxcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRLZXkgPT09IEtleVR5cGUuRW50ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9jID0gX3RoaXMub25JbnB1dENsaWNrKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfdGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIGNhbGVuZGFyIGlzIG9wZW4sIHRoZXNlIGtleXMgd2lsbCBmb2N1cyB0aGUgc2VsZWN0ZWQgaXRlbVxuICAgICAgICAgICAgaWYgKF90aGlzLnN0YXRlLm9wZW4pIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRLZXkgPT09IEtleVR5cGUuQXJyb3dEb3duIHx8IGV2ZW50S2V5ID09PSBLZXlUeXBlLkFycm93VXApIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdG9yU3RyaW5nID0gX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3RPbmx5XG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiLnJlYWN0LWRhdGVwaWNrZXJfX3RpbWUtbGlzdC1pdGVtW3RhYmluZGV4PScwJ11cIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBfdGhpcy5wcm9wcy5zaG93V2Vla1BpY2tlciAmJiBfdGhpcy5wcm9wcy5zaG93V2Vla051bWJlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICcucmVhY3QtZGF0ZXBpY2tlcl9fd2Vlay1udW1iZXJbdGFiaW5kZXg9XCIwXCJdJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3RoaXMucHJvcHMuc2hvd0Z1bGxNb250aFllYXJQaWNrZXIgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2hvd01vbnRoWWVhclBpY2tlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICcucmVhY3QtZGF0ZXBpY2tlcl9fbW9udGgtdGV4dFt0YWJpbmRleD1cIjBcIl0nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJy5yZWFjdC1kYXRlcGlja2VyX19kYXlbdGFiaW5kZXg9XCIwXCJdJztcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkSXRlbSA9ICgoX2QgPSBfdGhpcy5jYWxlbmRhcikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNvbnRhaW5lclJlZi5jdXJyZW50KSBpbnN0YW5jZW9mIEVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmNhbGVuZGFyLmNvbnRhaW5lclJlZi5jdXJyZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JTdHJpbmcpO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZEl0ZW0gaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJdGVtLmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgY29weSA9IG5ld0RhdGUoX3RoaXMuc3RhdGUucHJlU2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRLZXkgPT09IEtleVR5cGUuRW50ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmJsdXIoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmlucHV0T2soKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc3RhdGUubGFzdFByZVNlbGVjdENoYW5nZSA9PT0gUFJFU0VMRUNUX0NIQU5HRV9WSUFfTkFWSUdBVEUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmhhbmRsZVNlbGVjdChjb3B5LCBldmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAhX3RoaXMucHJvcHMuc2hvdWxkQ2xvc2VPblNlbGVjdCAmJiBfdGhpcy5zZXRQcmVTZWxlY3Rpb24oY29weSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChldmVudEtleSA9PT0gS2V5VHlwZS5Fc2NhcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmJsdXIoKTtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2VuZEZvY3VzQmFja1RvSW5wdXQoKTtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0T3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLlRhYikge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pbnB1dE9rKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9mID0gKF9lID0gX3RoaXMucHJvcHMpLm9uSW5wdXRFcnJvcikgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmNhbGwoX2UsIHsgY29kZTogMSwgbXNnOiBJTlBVVF9FUlJfMSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uUG9ydGFsS2V5RG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgdmFyIGV2ZW50S2V5ID0gZXZlbnQua2V5O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLkVzY2FwZSkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50Rm9jdXM6IHRydWUsXG4gICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRGb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBwcmV2ZW50Rm9jdXM6IGZhbHNlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy8ga2V5RG93biBldmVudHMgcGFzc2VkIGRvd24gdG8gZGF5LmpzeFxuICAgICAgICBfdGhpcy5vbkRheUtleURvd24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mO1xuICAgICAgICAgICAgdmFyIF9nID0gX3RoaXMucHJvcHMsIG1pbkRhdGUgPSBfZy5taW5EYXRlLCBtYXhEYXRlID0gX2cubWF4RGF0ZSwgZGlzYWJsZWRLZXlib2FyZE5hdmlnYXRpb24gPSBfZy5kaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbiwgc2hvd1dlZWtQaWNrZXIgPSBfZy5zaG93V2Vla1BpY2tlciwgc2hvdWxkQ2xvc2VPblNlbGVjdCA9IF9nLnNob3VsZENsb3NlT25TZWxlY3QsIGxvY2FsZSA9IF9nLmxvY2FsZSwgY2FsZW5kYXJTdGFydERheSA9IF9nLmNhbGVuZGFyU3RhcnREYXksIGFkanVzdERhdGVPbkNoYW5nZSA9IF9nLmFkanVzdERhdGVPbkNoYW5nZSwgaW5saW5lID0gX2cuaW5saW5lO1xuICAgICAgICAgICAgKF9iID0gKF9hID0gX3RoaXMucHJvcHMpLm9uS2V5RG93bikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EsIGV2ZW50KTtcbiAgICAgICAgICAgIGlmIChkaXNhYmxlZEtleWJvYXJkTmF2aWdhdGlvbilcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB2YXIgZXZlbnRLZXkgPSBldmVudC5rZXk7XG4gICAgICAgICAgICB2YXIgaXNTaGlmdEtleUFjdGl2ZSA9IGV2ZW50LnNoaWZ0S2V5O1xuICAgICAgICAgICAgdmFyIGNvcHkgPSBuZXdEYXRlKF90aGlzLnN0YXRlLnByZVNlbGVjdGlvbik7XG4gICAgICAgICAgICB2YXIgY2FsY3VsYXRlTmV3RGF0ZSA9IGZ1bmN0aW9uIChldmVudEtleSwgZGF0ZSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdDYWxjdWxhdGVkRGF0ZSA9IGRhdGU7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChldmVudEtleSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dSaWdodDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gc2hvd1dlZWtQaWNrZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGFkZFdlZWtzKGRhdGUsIDEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBhZGREYXlzKGRhdGUsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5BcnJvd0xlZnQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkRGF0ZSA9IHNob3dXZWVrUGlja2VyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBzdWJXZWVrcyhkYXRlLCAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogc3ViRGF5cyhkYXRlLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuQXJyb3dVcDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gc3ViV2Vla3MoZGF0ZSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93RG93bjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gYWRkV2Vla3MoZGF0ZSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLlBhZ2VVcDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gaXNTaGlmdEtleUFjdGl2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc3ViWWVhcnMoZGF0ZSwgMSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHN1Yk1vbnRocyhkYXRlLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuUGFnZURvd246XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkRGF0ZSA9IGlzU2hpZnRLZXlBY3RpdmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGFkZFllYXJzKGRhdGUsIDEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBhZGRNb250aHMoZGF0ZSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkhvbWU6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxjdWxhdGVkRGF0ZSA9IGdldFN0YXJ0T2ZXZWVrKGRhdGUsIGxvY2FsZSwgY2FsZW5kYXJTdGFydERheSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkVuZDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhbGN1bGF0ZWREYXRlID0gZ2V0RW5kT2ZXZWVrKGRhdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXdDYWxjdWxhdGVkRGF0ZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgZ2V0TmV3RGF0ZSA9IGZ1bmN0aW9uIChldmVudEtleSwgZGF0ZSkge1xuICAgICAgICAgICAgICAgIHZhciBNQVhfSVRFUkFUSU9OUyA9IDQwO1xuICAgICAgICAgICAgICAgIHZhciBldmVudEtleUNvcHkgPSBldmVudEtleTtcbiAgICAgICAgICAgICAgICB2YXIgdmFsaWREYXRlRm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB2YXIgaXRlcmF0aW9ucyA9IDA7XG4gICAgICAgICAgICAgICAgdmFyIG5ld1NlbGVjdGlvbiA9IGNhbGN1bGF0ZU5ld0RhdGUoZXZlbnRLZXksIGRhdGUpO1xuICAgICAgICAgICAgICAgIHdoaWxlICghdmFsaWREYXRlRm91bmQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZXJhdGlvbnMgPj0gTUFYX0lURVJBVElPTlMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbiA9IGRhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiBtaW5EYXRlIGV4aXN0cyBhbmQgdGhlIG5ldyBzZWxlY3Rpb24gaXMgYmVmb3JlIHRoZSBtaW4gZGF0ZSwgZ2V0IHRoZSBuZWFyZXN0IGRhdGUgdGhhdCBpc24ndCBkaXNhYmxlZFxuICAgICAgICAgICAgICAgICAgICBpZiAobWluRGF0ZSAmJiBuZXdTZWxlY3Rpb24gPCBtaW5EYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudEtleUNvcHkgPSBLZXlUeXBlLkFycm93UmlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb24gPSBpc0RheURpc2FibGVkKG1pbkRhdGUsIF90aGlzLnByb3BzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gY2FsY3VsYXRlTmV3RGF0ZShldmVudEtleUNvcHksIG5ld1NlbGVjdGlvbilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG1pbkRhdGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgbWF4RGF0ZSBleGlzdHMgYW5kIHRoZSBuZXcgc2VsZWN0aW9uIGlzIGFmdGVyIHRoZSBtYXggZGF0ZSwgZ2V0IHRoZSBuZWFyZXN0IGRhdGUgdGhhdCBpc24ndCBkaXNhYmxlZFxuICAgICAgICAgICAgICAgICAgICBpZiAobWF4RGF0ZSAmJiBuZXdTZWxlY3Rpb24gPiBtYXhEYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudEtleUNvcHkgPSBLZXlUeXBlLkFycm93TGVmdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbiA9IGlzRGF5RGlzYWJsZWQobWF4RGF0ZSwgX3RoaXMucHJvcHMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBjYWxjdWxhdGVOZXdEYXRlKGV2ZW50S2V5Q29weSwgbmV3U2VsZWN0aW9uKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbWF4RGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNEYXlEaXNhYmxlZChuZXdTZWxlY3Rpb24sIF90aGlzLnByb3BzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgUGFnZVVwIGFuZCBIb21lIGlzIHByZXNzZWQgdG8gYSBkaXNhYmxlZCBkYXRlLCBpdCB3aWxsIHRyeSB0byBmaW5kIHRoZSBuZXh0IGF2YWlsYWJsZSBkYXRlIGFmdGVyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnRLZXlDb3B5ID09PSBLZXlUeXBlLlBhZ2VVcCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50S2V5Q29weSA9PT0gS2V5VHlwZS5Ib21lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRLZXlDb3B5ID0gS2V5VHlwZS5BcnJvd1JpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgUGFnZURvd24gYW5kIEVuZCBpcyBwcmVzc2VkIHRvIGEgZGlzYWJsZWQgZGF0ZSwgaXQgd2lsbCB0cnkgdG8gZmluZCB0aGUgbmV4dCBhdmFpbGFibGUgZGF0ZSBiZWZvcmVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldmVudEtleUNvcHkgPT09IEtleVR5cGUuUGFnZURvd24gfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudEtleUNvcHkgPT09IEtleVR5cGUuRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRLZXlDb3B5ID0gS2V5VHlwZS5BcnJvd0xlZnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb24gPSBjYWxjdWxhdGVOZXdEYXRlKGV2ZW50S2V5Q29weSwgbmV3U2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkRGF0ZUZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpdGVyYXRpb25zKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXdTZWxlY3Rpb247XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGV2ZW50S2V5ID09PSBLZXlUeXBlLkVudGVyKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5oYW5kbGVTZWxlY3QoY29weSwgZXZlbnQpO1xuICAgICAgICAgICAgICAgICFzaG91bGRDbG9zZU9uU2VsZWN0ICYmIF90aGlzLnNldFByZVNlbGVjdGlvbihjb3B5KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChldmVudEtleSA9PT0gS2V5VHlwZS5Fc2NhcGUpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIF90aGlzLnNldE9wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgIGlmICghX3RoaXMuaW5wdXRPaygpKSB7XG4gICAgICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IF90aGlzLnByb3BzKS5vbklucHV0RXJyb3IpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5jYWxsKF9jLCB7IGNvZGU6IDEsIG1zZzogSU5QVVRfRVJSXzEgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBuZXdTZWxlY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgc3dpdGNoIChldmVudEtleSkge1xuICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5BcnJvd0xlZnQ6XG4gICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93UmlnaHQ6XG4gICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93VXA6XG4gICAgICAgICAgICAgICAgY2FzZSBLZXlUeXBlLkFycm93RG93bjpcbiAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuUGFnZVVwOlxuICAgICAgICAgICAgICAgIGNhc2UgS2V5VHlwZS5QYWdlRG93bjpcbiAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuSG9tZTpcbiAgICAgICAgICAgICAgICBjYXNlIEtleVR5cGUuRW5kOlxuICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb24gPSBnZXROZXdEYXRlKGV2ZW50S2V5LCBjb3B5KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW5ld1NlbGVjdGlvbikge1xuICAgICAgICAgICAgICAgIChfZiA9IChfZSA9IF90aGlzLnByb3BzKS5vbklucHV0RXJyb3IpID09PSBudWxsIHx8IF9mID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZi5jYWxsKF9lLCB7IGNvZGU6IDEsIG1zZzogSU5QVVRfRVJSXzEgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbGFzdFByZVNlbGVjdENoYW5nZTogUFJFU0VMRUNUX0NIQU5HRV9WSUFfTkFWSUdBVEUgfSk7XG4gICAgICAgICAgICBpZiAoYWRqdXN0RGF0ZU9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U2VsZWN0ZWQobmV3U2VsZWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnNldFByZVNlbGVjdGlvbihuZXdTZWxlY3Rpb24pO1xuICAgICAgICAgICAgLy8gbmVlZCB0byBmaWd1cmUgb3V0IHdoZXRoZXIgbW9udGggaGFzIGNoYW5nZWQgdG8gZm9jdXMgZGF5IGluIGlubGluZSB2ZXJzaW9uXG4gICAgICAgICAgICBpZiAoaW5saW5lKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByZXZNb250aCA9IGdldE1vbnRoKGNvcHkpO1xuICAgICAgICAgICAgICAgIHZhciBuZXdNb250aCA9IGdldE1vbnRoKG5ld1NlbGVjdGlvbik7XG4gICAgICAgICAgICAgICAgdmFyIHByZXZZZWFyID0gZ2V0WWVhcihjb3B5KTtcbiAgICAgICAgICAgICAgICB2YXIgbmV3WWVhciA9IGdldFllYXIobmV3U2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICBpZiAocHJldk1vbnRoICE9PSBuZXdNb250aCB8fCBwcmV2WWVhciAhPT0gbmV3WWVhcikge1xuICAgICAgICAgICAgICAgICAgICAvLyBtb250aCBoYXMgY2hhbmdlZFxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IHNob3VsZEZvY3VzRGF5SW5saW5lOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gbW9udGggaGFzbid0IGNoYW5nZWRcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBzaG91bGRGb2N1c0RheUlubGluZTogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvLyBoYW5kbGUgZ2VuZXJpYyBrZXkgZG93biBldmVudHMgaW4gdGhlIHBvcHBlciB0aGF0IGRvIG5vdCBhZGp1c3Qgb3Igc2VsZWN0IGRhdGVzXG4gICAgICAgIC8vIGV4OiB3aGlsZSBmb2N1c2luZyBwcmV2IGFuZCBuZXh0IG1vbnRoIGJ1dHRvbnNcbiAgICAgICAgX3RoaXMub25Qb3BwZXJLZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgZXZlbnRLZXkgPSBldmVudC5rZXk7XG4gICAgICAgICAgICBpZiAoZXZlbnRLZXkgPT09IEtleVR5cGUuRXNjYXBlKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZW5kRm9jdXNCYWNrVG9JbnB1dCgpO1xuICAgICAgICAgICAgICAgIF90aGlzLnNldE9wZW4oZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5vbkNsZWFyQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5wcmV2ZW50RGVmYXVsdCkge1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnNlbmRGb2N1c0JhY2tUb0lucHV0KCk7XG4gICAgICAgICAgICB2YXIgX2EgPSBfdGhpcy5wcm9wcywgc2VsZWN0c1JhbmdlID0gX2Euc2VsZWN0c1JhbmdlLCBvbkNoYW5nZSA9IF9hLm9uQ2hhbmdlO1xuICAgICAgICAgICAgaWYgKHNlbGVjdHNSYW5nZSkge1xuICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShbbnVsbCwgbnVsbF0sIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9uQ2hhbmdlID09PSBudWxsIHx8IG9uQ2hhbmdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkNoYW5nZShudWxsLCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlucHV0VmFsdWU6IG51bGwgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMub25DbGVhckNsaWNrKCk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLm9uU2Nyb2xsID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIF90aGlzLnByb3BzLmNsb3NlT25TY3JvbGwgPT09IFwiYm9vbGVhblwiICYmXG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuY2xvc2VPblNjcm9sbCkge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgPT09IGRvY3VtZW50IHx8XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldCA9PT0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50IHx8XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldCA9PT0gZG9jdW1lbnQuYm9keSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgX3RoaXMucHJvcHMuY2xvc2VPblNjcm9sbCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmNsb3NlT25TY3JvbGwoZXZlbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNldE9wZW4oZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyQ2FsZW5kYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy5pbmxpbmUgJiYgIV90aGlzLmlzQ2FsZW5kYXJPcGVuKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChDYWxlbmRhciwgX2Fzc2lnbih7IHNob3dNb250aFllYXJEcm9wZG93bjogdW5kZWZpbmVkLCByZWY6IGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmNhbGVuZGFyID0gZWxlbTtcbiAgICAgICAgICAgICAgICB9IH0sIF90aGlzLnByb3BzLCBfdGhpcy5zdGF0ZSwgeyBzZXRPcGVuOiBfdGhpcy5zZXRPcGVuLCBkYXRlRm9ybWF0OiAoX2EgPSBfdGhpcy5wcm9wcy5kYXRlRm9ybWF0Q2FsZW5kYXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERhdGVQaWNrZXIuZGVmYXVsdFByb3BzLmRhdGVGb3JtYXRDYWxlbmRhciwgb25TZWxlY3Q6IF90aGlzLmhhbmRsZVNlbGVjdCwgb25DbGlja091dHNpZGU6IF90aGlzLmhhbmRsZUNhbGVuZGFyQ2xpY2tPdXRzaWRlLCBob2xpZGF5czogZ2V0SG9saWRheXNNYXAoX3RoaXMubW9kaWZ5SG9saWRheXMoKSksIG91dHNpZGVDbGlja0lnbm9yZUNsYXNzOiBvdXRzaWRlQ2xpY2tJZ25vcmVDbGFzcywgb25Ecm9wZG93bkZvY3VzOiBfdGhpcy5oYW5kbGVEcm9wZG93bkZvY3VzLCBvblRpbWVDaGFuZ2U6IF90aGlzLmhhbmRsZVRpbWVDaGFuZ2UsIGNsYXNzTmFtZTogX3RoaXMucHJvcHMuY2FsZW5kYXJDbGFzc05hbWUsIGNvbnRhaW5lcjogX3RoaXMucHJvcHMuY2FsZW5kYXJDb250YWluZXIsIGhhbmRsZU9uS2V5RG93bjogX3RoaXMucHJvcHMub25LZXlEb3duLCBoYW5kbGVPbkRheUtleURvd246IF90aGlzLm9uRGF5S2V5RG93biwgc2V0UHJlU2VsZWN0aW9uOiBfdGhpcy5zZXRQcmVTZWxlY3Rpb24sIGRyb3Bkb3duTW9kZTogKF9iID0gX3RoaXMucHJvcHMuZHJvcGRvd25Nb2RlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBEYXRlUGlja2VyLmRlZmF1bHRQcm9wcy5kcm9wZG93bk1vZGUgfSksIF90aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlckFyaWFMaXZlUmVnaW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIF9iID0gX2EuZGF0ZUZvcm1hdCwgZGF0ZUZvcm1hdCA9IF9iID09PSB2b2lkIDAgPyBEYXRlUGlja2VyLmRlZmF1bHRQcm9wcy5kYXRlRm9ybWF0IDogX2IsIGxvY2FsZSA9IF9hLmxvY2FsZTtcbiAgICAgICAgICAgIHZhciBpc0NvbnRhaW5zVGltZSA9IF90aGlzLnByb3BzLnNob3dUaW1lSW5wdXQgfHwgX3RoaXMucHJvcHMuc2hvd1RpbWVTZWxlY3Q7XG4gICAgICAgICAgICB2YXIgbG9uZ0RhdGVGb3JtYXQgPSBpc0NvbnRhaW5zVGltZSA/IFwiUFBQUHBcIiA6IFwiUFBQUFwiO1xuICAgICAgICAgICAgdmFyIGFyaWFMaXZlTWVzc2FnZTtcbiAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zZWxlY3RzUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICBhcmlhTGl2ZU1lc3NhZ2UgPSBcIlNlbGVjdGVkIHN0YXJ0IGRhdGU6IFwiLmNvbmNhdChzYWZlRGF0ZUZvcm1hdChfdGhpcy5wcm9wcy5zdGFydERhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogbG9uZ0RhdGVGb3JtYXQsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgIH0pLCBcIi4gXCIpLmNvbmNhdChfdGhpcy5wcm9wcy5lbmREYXRlXG4gICAgICAgICAgICAgICAgICAgID8gXCJFbmQgZGF0ZTogXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgc2FmZURhdGVGb3JtYXQoX3RoaXMucHJvcHMuZW5kRGF0ZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVGb3JtYXQ6IGxvbmdEYXRlRm9ybWF0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG93VGltZVNlbGVjdE9ubHkpIHtcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxpdmVNZXNzYWdlID0gXCJTZWxlY3RlZCB0aW1lOiBcIi5jb25jYXQoc2FmZURhdGVGb3JtYXQoX3RoaXMucHJvcHMuc2VsZWN0ZWQsIHsgZGF0ZUZvcm1hdDogZGF0ZUZvcm1hdCwgbG9jYWxlOiBsb2NhbGUgfSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChfdGhpcy5wcm9wcy5zaG93WWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgICAgICBhcmlhTGl2ZU1lc3NhZ2UgPSBcIlNlbGVjdGVkIHllYXI6IFwiLmNvbmNhdChzYWZlRGF0ZUZvcm1hdChfdGhpcy5wcm9wcy5zZWxlY3RlZCwgeyBkYXRlRm9ybWF0OiBcInl5eXlcIiwgbG9jYWxlOiBsb2NhbGUgfSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChfdGhpcy5wcm9wcy5zaG93TW9udGhZZWFyUGlja2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyaWFMaXZlTWVzc2FnZSA9IFwiU2VsZWN0ZWQgbW9udGg6IFwiLmNvbmNhdChzYWZlRGF0ZUZvcm1hdChfdGhpcy5wcm9wcy5zZWxlY3RlZCwgeyBkYXRlRm9ybWF0OiBcIk1NTU0geXl5eVwiLCBsb2NhbGU6IGxvY2FsZSB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKF90aGlzLnByb3BzLnNob3dRdWFydGVyWWVhclBpY2tlcikge1xuICAgICAgICAgICAgICAgICAgICBhcmlhTGl2ZU1lc3NhZ2UgPSBcIlNlbGVjdGVkIHF1YXJ0ZXI6IFwiLmNvbmNhdChzYWZlRGF0ZUZvcm1hdChfdGhpcy5wcm9wcy5zZWxlY3RlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJ5eXl5LCBRUVFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhcmlhTGl2ZU1lc3NhZ2UgPSBcIlNlbGVjdGVkIGRhdGU6IFwiLmNvbmNhdChzYWZlRGF0ZUZvcm1hdChfdGhpcy5wcm9wcy5zZWxlY3RlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogbG9uZ0RhdGVGb3JtYXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IGxvY2FsZSxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyByb2xlOiBcImFsZXJ0XCIsIFwiYXJpYS1saXZlXCI6IFwicG9saXRlXCIsIGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19hcmlhLWxpdmVcIiB9LCBhcmlhTGl2ZU1lc3NhZ2UpKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMucmVuZGVyRGF0ZUlucHV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIHZhciBfYztcbiAgICAgICAgICAgIHZhciBjbGFzc05hbWUgPSBjbHN4KF90aGlzLnByb3BzLmNsYXNzTmFtZSwgKF9hID0ge30sXG4gICAgICAgICAgICAgICAgX2Fbb3V0c2lkZUNsaWNrSWdub3JlQ2xhc3NdID0gX3RoaXMuc3RhdGUub3BlbixcbiAgICAgICAgICAgICAgICBfYSkpO1xuICAgICAgICAgICAgdmFyIGN1c3RvbUlucHV0ID0gX3RoaXMucHJvcHMuY3VzdG9tSW5wdXQgfHwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgdHlwZTogXCJ0ZXh0XCIgfSk7XG4gICAgICAgICAgICB2YXIgY3VzdG9tSW5wdXRSZWYgPSBfdGhpcy5wcm9wcy5jdXN0b21JbnB1dFJlZiB8fCBcInJlZlwiO1xuICAgICAgICAgICAgdmFyIF9kID0gX3RoaXMucHJvcHMsIF9lID0gX2QuZGF0ZUZvcm1hdCwgZGF0ZUZvcm1hdCA9IF9lID09PSB2b2lkIDAgPyBEYXRlUGlja2VyLmRlZmF1bHRQcm9wcy5kYXRlRm9ybWF0IDogX2UsIGxvY2FsZSA9IF9kLmxvY2FsZTtcbiAgICAgICAgICAgIHZhciBpbnB1dFZhbHVlID0gdHlwZW9mIF90aGlzLnByb3BzLnZhbHVlID09PSBcInN0cmluZ1wiXG4gICAgICAgICAgICAgICAgPyBfdGhpcy5wcm9wcy52YWx1ZVxuICAgICAgICAgICAgICAgIDogdHlwZW9mIF90aGlzLnN0YXRlLmlucHV0VmFsdWUgPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgPyBfdGhpcy5zdGF0ZS5pbnB1dFZhbHVlXG4gICAgICAgICAgICAgICAgICAgIDogX3RoaXMucHJvcHMuc2VsZWN0c1JhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNhZmVEYXRlUmFuZ2VGb3JtYXQoX3RoaXMucHJvcHMuc3RhcnREYXRlLCBfdGhpcy5wcm9wcy5lbmREYXRlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogZGF0ZUZvcm1hdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IGxvY2FsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF90aGlzLnByb3BzLnNlbGVjdHNNdWx0aXBsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc2FmZU11bHRpcGxlRGF0ZXNGb3JtYXQoKF9jID0gX3RoaXMucHJvcHMuc2VsZWN0ZWREYXRlcykgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogW10sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogZGF0ZUZvcm1hdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlOiBsb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHNhZmVEYXRlRm9ybWF0KF90aGlzLnByb3BzLnNlbGVjdGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVGb3JtYXQ6IGRhdGVGb3JtYXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGNsb25lRWxlbWVudChjdXN0b21JbnB1dCwgKF9iID0ge30sXG4gICAgICAgICAgICAgICAgX2JbY3VzdG9tSW5wdXRSZWZdID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmlucHV0ID0gaW5wdXQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBfYi52YWx1ZSA9IGlucHV0VmFsdWUsXG4gICAgICAgICAgICAgICAgX2Iub25CbHVyID0gX3RoaXMuaGFuZGxlQmx1cixcbiAgICAgICAgICAgICAgICBfYi5vbkNoYW5nZSA9IF90aGlzLmhhbmRsZUNoYW5nZSxcbiAgICAgICAgICAgICAgICBfYi5vbkNsaWNrID0gX3RoaXMub25JbnB1dENsaWNrLFxuICAgICAgICAgICAgICAgIF9iLm9uRm9jdXMgPSBfdGhpcy5oYW5kbGVGb2N1cyxcbiAgICAgICAgICAgICAgICBfYi5vbktleURvd24gPSBfdGhpcy5vbklucHV0S2V5RG93bixcbiAgICAgICAgICAgICAgICBfYi5pZCA9IF90aGlzLnByb3BzLmlkLFxuICAgICAgICAgICAgICAgIF9iLm5hbWUgPSBfdGhpcy5wcm9wcy5uYW1lLFxuICAgICAgICAgICAgICAgIF9iLmZvcm0gPSBfdGhpcy5wcm9wcy5mb3JtLFxuICAgICAgICAgICAgICAgIF9iLmF1dG9Gb2N1cyA9IF90aGlzLnByb3BzLmF1dG9Gb2N1cyxcbiAgICAgICAgICAgICAgICBfYi5wbGFjZWhvbGRlciA9IF90aGlzLnByb3BzLnBsYWNlaG9sZGVyVGV4dCxcbiAgICAgICAgICAgICAgICBfYi5kaXNhYmxlZCA9IF90aGlzLnByb3BzLmRpc2FibGVkLFxuICAgICAgICAgICAgICAgIF9iLmF1dG9Db21wbGV0ZSA9IF90aGlzLnByb3BzLmF1dG9Db21wbGV0ZSxcbiAgICAgICAgICAgICAgICBfYi5jbGFzc05hbWUgPSBjbHN4KGN1c3RvbUlucHV0LnByb3BzLmNsYXNzTmFtZSwgY2xhc3NOYW1lKSxcbiAgICAgICAgICAgICAgICBfYi50aXRsZSA9IF90aGlzLnByb3BzLnRpdGxlLFxuICAgICAgICAgICAgICAgIF9iLnJlYWRPbmx5ID0gX3RoaXMucHJvcHMucmVhZE9ubHksXG4gICAgICAgICAgICAgICAgX2IucmVxdWlyZWQgPSBfdGhpcy5wcm9wcy5yZXF1aXJlZCxcbiAgICAgICAgICAgICAgICBfYi50YWJJbmRleCA9IF90aGlzLnByb3BzLnRhYkluZGV4LFxuICAgICAgICAgICAgICAgIF9iW1wiYXJpYS1kZXNjcmliZWRieVwiXSA9IF90aGlzLnByb3BzLmFyaWFEZXNjcmliZWRCeSxcbiAgICAgICAgICAgICAgICBfYltcImFyaWEtaW52YWxpZFwiXSA9IF90aGlzLnByb3BzLmFyaWFJbnZhbGlkLFxuICAgICAgICAgICAgICAgIF9iW1wiYXJpYS1sYWJlbGxlZGJ5XCJdID0gX3RoaXMucHJvcHMuYXJpYUxhYmVsbGVkQnksXG4gICAgICAgICAgICAgICAgX2JbXCJhcmlhLXJlcXVpcmVkXCJdID0gX3RoaXMucHJvcHMuYXJpYVJlcXVpcmVkLFxuICAgICAgICAgICAgICAgIF9iKSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLnJlbmRlckNsZWFyQnV0dG9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsIGlzQ2xlYXJhYmxlID0gX2EuaXNDbGVhcmFibGUsIGRpc2FibGVkID0gX2EuZGlzYWJsZWQsIHNlbGVjdGVkID0gX2Euc2VsZWN0ZWQsIHN0YXJ0RGF0ZSA9IF9hLnN0YXJ0RGF0ZSwgZW5kRGF0ZSA9IF9hLmVuZERhdGUsIGNsZWFyQnV0dG9uVGl0bGUgPSBfYS5jbGVhckJ1dHRvblRpdGxlLCBfYiA9IF9hLmNsZWFyQnV0dG9uQ2xhc3NOYW1lLCBjbGVhckJ1dHRvbkNsYXNzTmFtZSA9IF9iID09PSB2b2lkIDAgPyBcIlwiIDogX2IsIF9jID0gX2EuYXJpYUxhYmVsQ2xvc2UsIGFyaWFMYWJlbENsb3NlID0gX2MgPT09IHZvaWQgMCA/IFwiQ2xvc2VcIiA6IF9jLCBzZWxlY3RlZERhdGVzID0gX2Euc2VsZWN0ZWREYXRlcywgcmVhZE9ubHkgPSBfYS5yZWFkT25seTtcbiAgICAgICAgICAgIGlmIChpc0NsZWFyYWJsZSAmJlxuICAgICAgICAgICAgICAgICFyZWFkT25seSAmJlxuICAgICAgICAgICAgICAgIChzZWxlY3RlZCAhPSBudWxsIHx8XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZSAhPSBudWxsIHx8XG4gICAgICAgICAgICAgICAgICAgIGVuZERhdGUgIT0gbnVsbCB8fFxuICAgICAgICAgICAgICAgICAgICAoc2VsZWN0ZWREYXRlcyA9PT0gbnVsbCB8fCBzZWxlY3RlZERhdGVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxlY3RlZERhdGVzLmxlbmd0aCkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHsgdHlwZTogXCJidXR0b25cIiwgY2xhc3NOYW1lOiBjbHN4KFwicmVhY3QtZGF0ZXBpY2tlcl9fY2xvc2UtaWNvblwiLCBjbGVhckJ1dHRvbkNsYXNzTmFtZSwgeyBcInJlYWN0LWRhdGVwaWNrZXJfX2Nsb3NlLWljb24tLWRpc2FibGVkXCI6IGRpc2FibGVkIH0pLCBkaXNhYmxlZDogZGlzYWJsZWQsIFwiYXJpYS1sYWJlbFwiOiBhcmlhTGFiZWxDbG9zZSwgb25DbGljazogX3RoaXMub25DbGVhckNsaWNrLCB0aXRsZTogY2xlYXJCdXR0b25UaXRsZSwgdGFiSW5kZXg6IC0xIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5zdGF0ZSA9IF90aGlzLmNhbGNJbml0aWFsU3RhdGUoKTtcbiAgICAgICAgX3RoaXMucHJldmVudEZvY3VzVGltZW91dCA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZVBpY2tlciwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWxsb3dTYW1lRGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkYXRlRm9ybWF0OiBcIk1NL2RkL3l5eXlcIixcbiAgICAgICAgICAgICAgICBkYXRlRm9ybWF0Q2FsZW5kYXI6IFwiTExMTCB5eXl5XCIsXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkcm9wZG93bk1vZGU6IFwic2Nyb2xsXCIsXG4gICAgICAgICAgICAgICAgcHJldmVudE9wZW5PbkZvY3VzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtb250aHNTaG93bjogMSxcbiAgICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UsXG4gICAgICAgICAgICAgICAgd2l0aFBvcnRhbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2VsZWN0c0Rpc2FibGVkRGF5c0luUmFuZ2U6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3VsZENsb3NlT25TZWxlY3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgc2hvd1RpbWVTZWxlY3Q6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dUaW1lSW5wdXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dQcmV2aW91c01vbnRoczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd01vbnRoWWVhclBpY2tlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd0Z1bGxNb250aFllYXJQaWNrZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dUd29Db2x1bW5Nb250aFllYXJQaWNrZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dGb3VyQ29sdW1uTW9udGhZZWFyUGlja2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93WWVhclBpY2tlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd1F1YXJ0ZXJZZWFyUGlja2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93V2Vla1BpY2tlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3RyaWN0UGFyc2luZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3dhcFJhbmdlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB0aW1lSW50ZXJ2YWxzOiAzMCxcbiAgICAgICAgICAgICAgICB0aW1lQ2FwdGlvbjogXCJUaW1lXCIsXG4gICAgICAgICAgICAgICAgcHJldmlvdXNNb250aEFyaWFMYWJlbDogXCJQcmV2aW91cyBNb250aFwiLFxuICAgICAgICAgICAgICAgIHByZXZpb3VzTW9udGhCdXR0b25MYWJlbDogXCJQcmV2aW91cyBNb250aFwiLFxuICAgICAgICAgICAgICAgIG5leHRNb250aEFyaWFMYWJlbDogXCJOZXh0IE1vbnRoXCIsXG4gICAgICAgICAgICAgICAgbmV4dE1vbnRoQnV0dG9uTGFiZWw6IFwiTmV4dCBNb250aFwiLFxuICAgICAgICAgICAgICAgIHByZXZpb3VzWWVhckFyaWFMYWJlbDogXCJQcmV2aW91cyBZZWFyXCIsXG4gICAgICAgICAgICAgICAgcHJldmlvdXNZZWFyQnV0dG9uTGFiZWw6IFwiUHJldmlvdXMgWWVhclwiLFxuICAgICAgICAgICAgICAgIG5leHRZZWFyQXJpYUxhYmVsOiBcIk5leHQgWWVhclwiLFxuICAgICAgICAgICAgICAgIG5leHRZZWFyQnV0dG9uTGFiZWw6IFwiTmV4dCBZZWFyXCIsXG4gICAgICAgICAgICAgICAgdGltZUlucHV0TGFiZWw6IFwiVGltZVwiLFxuICAgICAgICAgICAgICAgIGVuYWJsZVRhYkxvb3A6IHRydWUsXG4gICAgICAgICAgICAgICAgeWVhckl0ZW1OdW1iZXI6IERFRkFVTFRfWUVBUl9JVEVNX05VTUJFUixcbiAgICAgICAgICAgICAgICBmb2N1c1NlbGVjdGVkTW9udGg6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dQb3BwZXJBcnJvdzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBleGNsdWRlU2Nyb2xsYmFyOiB0cnVlLFxuICAgICAgICAgICAgICAgIGN1c3RvbVRpbWVJbnB1dDogbnVsbCxcbiAgICAgICAgICAgICAgICBjYWxlbmRhclN0YXJ0RGF5OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgdG9nZ2xlQ2FsZW5kYXJPbkljb25DbGljazogZmFsc2UsXG4gICAgICAgICAgICAgICAgdXNlUG9pbnRlckV2ZW50OiBmYWxzZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBEYXRlUGlja2VyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5vblNjcm9sbCwgdHJ1ZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHRoaXMuc2V0SGlkZGVuU3RhdGVPblZpc2liaWxpdHlIaWRkZW4pO1xuICAgIH07XG4gICAgRGF0ZVBpY2tlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5pbmxpbmUgJiZcbiAgICAgICAgICAgIGhhc1ByZVNlbGVjdGlvbkNoYW5nZWQocHJldlByb3BzLnNlbGVjdGVkLCB0aGlzLnByb3BzLnNlbGVjdGVkKSkge1xuICAgICAgICAgICAgdGhpcy5zZXRQcmVTZWxlY3Rpb24odGhpcy5wcm9wcy5zZWxlY3RlZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUubW9udGhTZWxlY3RlZEluICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHByZXZQcm9wcy5tb250aHNTaG93biAhPT0gdGhpcy5wcm9wcy5tb250aHNTaG93bikge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IG1vbnRoU2VsZWN0ZWRJbjogMCB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJldlByb3BzLmhpZ2hsaWdodERhdGVzICE9PSB0aGlzLnByb3BzLmhpZ2hsaWdodERhdGVzKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBoaWdobGlnaHREYXRlczogZ2V0SGlnaExpZ2h0RGF5c01hcCh0aGlzLnByb3BzLmhpZ2hsaWdodERhdGVzKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcHJldlN0YXRlLmZvY3VzZWQgJiZcbiAgICAgICAgICAgICFpc0VxdWFsKHByZXZQcm9wcy5zZWxlY3RlZCwgdGhpcy5wcm9wcy5zZWxlY3RlZCkpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpbnB1dFZhbHVlOiBudWxsIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmV2U3RhdGUub3BlbiAhPT0gdGhpcy5zdGF0ZS5vcGVuKSB7XG4gICAgICAgICAgICBpZiAocHJldlN0YXRlLm9wZW4gPT09IGZhbHNlICYmIHRoaXMuc3RhdGUub3BlbiA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIChfYiA9IChfYSA9IHRoaXMucHJvcHMpLm9uQ2FsZW5kYXJPcGVuKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocHJldlN0YXRlLm9wZW4gPT09IHRydWUgJiYgdGhpcy5zdGF0ZS5vcGVuID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIChfZCA9IChfYyA9IHRoaXMucHJvcHMpLm9uQ2FsZW5kYXJDbG9zZSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBEYXRlUGlja2VyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jbGVhclByZXZlbnRGb2N1c1RpbWVvdXQoKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5vblNjcm9sbCwgdHJ1ZSk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHRoaXMuc2V0SGlkZGVuU3RhdGVPblZpc2liaWxpdHlIaWRkZW4pO1xuICAgIH07XG4gICAgRGF0ZVBpY2tlci5wcm90b3R5cGUucmVuZGVySW5wdXRDb250YWluZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSA9IHRoaXMucHJvcHMsIHNob3dJY29uID0gX2Euc2hvd0ljb24sIGljb24gPSBfYS5pY29uLCBjYWxlbmRhckljb25DbGFzc25hbWUgPSBfYS5jYWxlbmRhckljb25DbGFzc25hbWUsIGNhbGVuZGFySWNvbkNsYXNzTmFtZSA9IF9hLmNhbGVuZGFySWNvbkNsYXNzTmFtZSwgdG9nZ2xlQ2FsZW5kYXJPbkljb25DbGljayA9IF9hLnRvZ2dsZUNhbGVuZGFyT25JY29uQ2xpY2s7XG4gICAgICAgIHZhciBvcGVuID0gdGhpcy5zdGF0ZS5vcGVuO1xuICAgICAgICBpZiAoY2FsZW5kYXJJY29uQ2xhc3NuYW1lKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJjYWxlbmRhckljb25DbGFzc25hbWUgcHJvcHMgaXMgZGVwcmVjYXRlZC4gc2hvdWxkIHVzZSBjYWxlbmRhckljb25DbGFzc05hbWUgcHJvcHMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1kYXRlcGlja2VyX19pbnB1dC1jb250YWluZXJcIi5jb25jYXQoc2hvd0ljb24gPyBcIiByZWFjdC1kYXRlcGlja2VyX192aWV3LWNhbGVuZGFyLWljb25cIiA6IFwiXCIpIH0sXG4gICAgICAgICAgICBzaG93SWNvbiAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChDYWxlbmRhckljb24sIF9hc3NpZ24oeyBpY29uOiBpY29uLCBjbGFzc05hbWU6IGNsc3goY2FsZW5kYXJJY29uQ2xhc3NOYW1lLCAhY2FsZW5kYXJJY29uQ2xhc3NOYW1lICYmIGNhbGVuZGFySWNvbkNsYXNzbmFtZSwgb3BlbiAmJiBcInJlYWN0LWRhdGVwaWNrZXItaWdub3JlLW9uY2xpY2tvdXRzaWRlXCIpIH0sICh0b2dnbGVDYWxlbmRhck9uSWNvbkNsaWNrXG4gICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMudG9nZ2xlQ2FsZW5kYXIsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogbnVsbCkpKSksXG4gICAgICAgICAgICB0aGlzLnN0YXRlLmlzUmVuZGVyQXJpYUxpdmVNZXNzYWdlICYmIHRoaXMucmVuZGVyQXJpYUxpdmVSZWdpb24oKSxcbiAgICAgICAgICAgIHRoaXMucmVuZGVyRGF0ZUlucHV0KCksXG4gICAgICAgICAgICB0aGlzLnJlbmRlckNsZWFyQnV0dG9uKCkpKTtcbiAgICB9O1xuICAgIERhdGVQaWNrZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNhbGVuZGFyID0gdGhpcy5yZW5kZXJDYWxlbmRhcigpO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5pbmxpbmUpXG4gICAgICAgICAgICByZXR1cm4gY2FsZW5kYXI7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLndpdGhQb3J0YWwpIHtcbiAgICAgICAgICAgIHZhciBwb3J0YWxDb250YWluZXIgPSB0aGlzLnN0YXRlLm9wZW4gPyAoUmVhY3QuY3JlYXRlRWxlbWVudChUYWJMb29wLCB7IGVuYWJsZVRhYkxvb3A6IHRoaXMucHJvcHMuZW5hYmxlVGFiTG9vcCB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3QtZGF0ZXBpY2tlcl9fcG9ydGFsXCIsIHRhYkluZGV4OiAtMSwgb25LZXlEb3duOiB0aGlzLm9uUG9ydGFsS2V5RG93biB9LCBjYWxlbmRhcikpKSA6IG51bGw7XG4gICAgICAgICAgICBpZiAodGhpcy5zdGF0ZS5vcGVuICYmIHRoaXMucHJvcHMucG9ydGFsSWQpIHtcbiAgICAgICAgICAgICAgICBwb3J0YWxDb250YWluZXIgPSAoUmVhY3QuY3JlYXRlRWxlbWVudChQb3J0YWwsIF9hc3NpZ24oeyBwb3J0YWxJZDogdGhpcy5wcm9wcy5wb3J0YWxJZCB9LCB0aGlzLnByb3BzKSwgcG9ydGFsQ29udGFpbmVyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCxcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcklucHV0Q29udGFpbmVyKCksXG4gICAgICAgICAgICAgICAgcG9ydGFsQ29udGFpbmVyKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFBvcHBlckNvbXBvbmVudCQxLCBfYXNzaWduKHt9LCB0aGlzLnByb3BzLCB7IGNsYXNzTmFtZTogdGhpcy5wcm9wcy5wb3BwZXJDbGFzc05hbWUsIGhpZGVQb3BwZXI6ICF0aGlzLmlzQ2FsZW5kYXJPcGVuKCksIHRhcmdldENvbXBvbmVudDogdGhpcy5yZW5kZXJJbnB1dENvbnRhaW5lcigpLCBwb3BwZXJDb21wb25lbnQ6IGNhbGVuZGFyLCBwb3BwZXJPbktleURvd246IHRoaXMub25Qb3BwZXJLZXlEb3duLCBzaG93QXJyb3c6IHRoaXMucHJvcHMuc2hvd1BvcHBlckFycm93IH0pKSk7XG4gICAgfTtcbiAgICByZXR1cm4gRGF0ZVBpY2tlcjtcbn0oQ29tcG9uZW50KSk7XG52YXIgUFJFU0VMRUNUX0NIQU5HRV9WSUFfSU5QVVQgPSBcImlucHV0XCI7XG52YXIgUFJFU0VMRUNUX0NIQU5HRV9WSUFfTkFWSUdBVEUgPSBcIm5hdmlnYXRlXCI7XG5cbmV4cG9ydCB7IENhbGVuZGFyQ29udGFpbmVyLCBEYXRlUGlja2VyIGFzIGRlZmF1bHQsIGdldERlZmF1bHRMb2NhbGUsIHJlZ2lzdGVyTG9jYWxlLCBzZXREZWZhdWx0TG9jYWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1WlhNdWFuTWlMQ0p6YjNWeVkyVnpJanBiSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTkwYzJ4cFlpOTBjMnhwWWk1bGN6WXVhbk1pTENJdUxpOXpjbU12WTJGc1pXNWtZWEpmWTI5dWRHRnBibVZ5TG5SemVDSXNJaTR1TDNOeVl5OWpiR2xqYTE5dmRYUnphV1JsWDNkeVlYQndaWEl1ZEhONElpd2lMaTR2YzNKakwyUmhkR1ZmZFhScGJITXVkSE1pTENJdUxpOXpjbU12YVc1d2RYUmZkR2x0WlM1MGMzZ2lMQ0l1TGk5emNtTXZaR0Y1TG5SemVDSXNJaTR1TDNOeVl5OTNaV1ZyWDI1MWJXSmxjaTUwYzNnaUxDSXVMaTl6Y21NdmQyVmxheTUwYzNnaUxDSXVMaTl6Y21NdmJXOXVkR2d1ZEhONElpd2lMaTR2YzNKakwyMXZiblJvWDJSeWIzQmtiM2R1WDI5d2RHbHZibk11ZEhONElpd2lMaTR2YzNKakwyMXZiblJvWDJSeWIzQmtiM2R1TG5SemVDSXNJaTR1TDNOeVl5OXRiMjUwYUY5NVpXRnlYMlJ5YjNCa2IzZHVYMjl3ZEdsdmJuTXVkSE40SWl3aUxpNHZjM0pqTDIxdmJuUm9YM2xsWVhKZlpISnZjR1J2ZDI0dWRITjRJaXdpTGk0dmMzSmpMM1JwYldVdWRITjRJaXdpTGk0dmMzSmpMM2xsWVhJdWRITjRJaXdpTGk0dmMzSmpMM2xsWVhKZlpISnZjR1J2ZDI1ZmIzQjBhVzl1Y3k1MGMzZ2lMQ0l1TGk5emNtTXZlV1ZoY2w5a2NtOXdaRzkzYmk1MGMzZ2lMQ0l1TGk5emNtTXZZMkZzWlc1a1lYSXVkSE40SWl3aUxpNHZjM0pqTDJOaGJHVnVaR0Z5WDJsamIyNHVkSE40SWl3aUxpNHZjM0pqTDNCdmNuUmhiQzUwYzNnaUxDSXVMaTl6Y21NdmRHRmlYMnh2YjNBdWRITjRJaXdpTGk0dmMzSmpMM2RwZEdoZlpteHZZWFJwYm1jdWRITjRJaXdpTGk0dmMzSmpMM0J2Y0hCbGNsOWpiMjF3YjI1bGJuUXVkSE40SWl3aUxpNHZjM0pqTDJsdVpHVjRMblJ6ZUNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhISmNia052Y0hseWFXZG9kQ0FvWXlrZ1RXbGpjbTl6YjJaMElFTnZjbkJ2Y21GMGFXOXVMbHh5WEc1Y2NseHVVR1Z5YldsemMybHZiaUIwYnlCMWMyVXNJR052Y0hrc0lHMXZaR2xtZVN3Z1lXNWtMMjl5SUdScGMzUnlhV0oxZEdVZ2RHaHBjeUJ6YjJaMGQyRnlaU0JtYjNJZ1lXNTVYSEpjYm5CMWNuQnZjMlVnZDJsMGFDQnZjaUIzYVhSb2IzVjBJR1psWlNCcGN5Qm9aWEpsWW5rZ1ozSmhiblJsWkM1Y2NseHVYSEpjYmxSSVJTQlRUMFpVVjBGU1JTQkpVeUJRVWs5V1NVUkZSQ0JjSWtGVElFbFRYQ0lnUVU1RUlGUklSU0JCVlZSSVQxSWdSRWxUUTB4QlNVMVRJRUZNVENCWFFWSlNRVTVVU1VWVElGZEpWRWhjY2x4dVVrVkhRVkpFSUZSUElGUklTVk1nVTA5R1ZGZEJVa1VnU1U1RFRGVkVTVTVISUVGTVRDQkpUVkJNU1VWRUlGZEJVbEpCVGxSSlJWTWdUMFlnVFVWU1EwaEJUbFJCUWtsTVNWUlpYSEpjYmtGT1JDQkdTVlJPUlZOVExpQkpUaUJPVHlCRlZrVk9WQ0JUU0VGTVRDQlVTRVVnUVZWVVNFOVNJRUpGSUV4SlFVSk1SU0JHVDFJZ1FVNVpJRk5RUlVOSlFVd3NJRVJKVWtWRFZDeGNjbHh1U1U1RVNWSkZRMVFzSUU5U0lFTlBUbE5GVVZWRlRsUkpRVXdnUkVGTlFVZEZVeUJQVWlCQlRsa2dSRUZOUVVkRlV5QlhTRUZVVTA5RlZrVlNJRkpGVTFWTVZFbE9SeUJHVWs5TlhISmNia3hQVTFNZ1QwWWdWVk5GTENCRVFWUkJJRTlTSUZCU1QwWkpWRk1zSUZkSVJWUklSVklnU1U0Z1FVNGdRVU5VU1U5T0lFOUdJRU5QVGxSU1FVTlVMQ0JPUlVkTVNVZEZUa05GSUU5U1hISmNiazlVU0VWU0lGUlBVbFJKVDFWVElFRkRWRWxQVGl3Z1FWSkpVMGxPUnlCUFZWUWdUMFlnVDFJZ1NVNGdRMDlPVGtWRFZFbFBUaUJYU1ZSSUlGUklSU0JWVTBVZ1QxSmNjbHh1VUVWU1JrOVNUVUZPUTBVZ1QwWWdWRWhKVXlCVFQwWlVWMEZTUlM1Y2NseHVLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvZ0tpOWNjbHh1THlvZ1oyeHZZbUZzSUZKbFpteGxZM1FzSUZCeWIyMXBjMlVzSUZOMWNIQnlaWE56WldSRmNuSnZjaXdnVTNsdFltOXNMQ0JKZEdWeVlYUnZjaUFxTDF4eVhHNWNjbHh1ZG1GeUlHVjRkR1Z1WkZOMFlYUnBZM01nUFNCbWRXNWpkR2x2Ymloa0xDQmlLU0I3WEhKY2JpQWdJQ0JsZUhSbGJtUlRkR0YwYVdOeklEMGdUMkpxWldOMExuTmxkRkJ5YjNSdmRIbHdaVTltSUh4OFhISmNiaUFnSUNBZ0lDQWdLSHNnWDE5d2NtOTBiMTlmT2lCYlhTQjlJR2x1YzNSaGJtTmxiMllnUVhKeVlYa2dKaVlnWm5WdVkzUnBiMjRnS0dRc0lHSXBJSHNnWkM1ZlgzQnliM1J2WDE4Z1BTQmlPeUI5S1NCOGZGeHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJQ2hrTENCaUtTQjdJR1p2Y2lBb2RtRnlJSEFnYVc0Z1lpa2dhV1lnS0U5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNoaUxDQndLU2tnWkZ0d1hTQTlJR0piY0YwN0lIMDdYSEpjYmlBZ0lDQnlaWFIxY200Z1pYaDBaVzVrVTNSaGRHbGpjeWhrTENCaUtUdGNjbHh1ZlR0Y2NseHVYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJmWDJWNGRHVnVaSE1vWkN3Z1lpa2dlMXh5WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJpSUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lnSmlZZ1lpQWhQVDBnYm5Wc2JDbGNjbHh1SUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0Z3aVEyeGhjM01nWlhoMFpXNWtjeUIyWVd4MVpTQmNJaUFySUZOMGNtbHVaeWhpS1NBcklGd2lJR2x6SUc1dmRDQmhJR052Ym5OMGNuVmpkRzl5SUc5eUlHNTFiR3hjSWlrN1hISmNiaUFnSUNCbGVIUmxibVJUZEdGMGFXTnpLR1FzSUdJcE8xeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1gxOG9LU0I3SUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lnUFNCa095QjlYSEpjYmlBZ0lDQmtMbkJ5YjNSdmRIbHdaU0E5SUdJZ1BUMDlJRzUxYkd3Z1B5QlBZbXBsWTNRdVkzSmxZWFJsS0dJcElEb2dLRjlmTG5CeWIzUnZkSGx3WlNBOUlHSXVjSEp2ZEc5MGVYQmxMQ0J1WlhjZ1gxOG9LU2s3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCMllYSWdYMTloYzNOcFoyNGdQU0JtZFc1amRHbHZiaWdwSUh0Y2NseHVJQ0FnSUY5ZllYTnphV2R1SUQwZ1QySnFaV04wTG1GemMybG5iaUI4ZkNCbWRXNWpkR2x2YmlCZlgyRnpjMmxuYmloMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnWm05eUlDaDJZWElnY3l3Z2FTQTlJREVzSUc0Z1BTQmhjbWQxYldWdWRITXViR1Z1WjNSb095QnBJRHdnYmpzZ2FTc3JLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE1nUFNCaGNtZDFiV1Z1ZEhOYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvZG1GeUlIQWdhVzRnY3lrZ2FXWWdLRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrdVkyRnNiQ2h6TENCd0tTa2dkRnR3WFNBOUlITmJjRjA3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlGOWZZWE56YVdkdUxtRndjR3g1S0hSb2FYTXNJR0Z5WjNWdFpXNTBjeWs3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgzSmxjM1FvY3l3Z1pTa2dlMXh5WEc0Z0lDQWdkbUZ5SUhRZ1BTQjdmVHRjY2x4dUlDQWdJR1p2Y2lBb2RtRnlJSEFnYVc0Z2N5a2dhV1lnS0U5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNoekxDQndLU0FtSmlCbExtbHVaR1Y0VDJZb2NDa2dQQ0F3S1Z4eVhHNGdJQ0FnSUNBZ0lIUmJjRjBnUFNCelczQmRPMXh5WEc0Z0lDQWdhV1lnS0hNZ0lUMGdiblZzYkNBbUppQjBlWEJsYjJZZ1QySnFaV04wTG1kbGRFOTNibEJ5YjNCbGNuUjVVM2x0WW05c2N5QTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtWeHlYRzRnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd0xDQndJRDBnVDJKcVpXTjBMbWRsZEU5M2JsQnliM0JsY25SNVUzbHRZbTlzY3loektUc2dhU0E4SUhBdWJHVnVaM1JvT3lCcEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dVdWFXNWtaWGhQWmlod1cybGRLU0E4SURBZ0ppWWdUMkpxWldOMExuQnliM1J2ZEhsd1pTNXdjbTl3WlhKMGVVbHpSVzUxYldWeVlXSnNaUzVqWVd4c0tITXNJSEJiYVYwcEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRnR3VzJsZFhTQTlJSE5iY0Z0cFhWMDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnY21WMGRYSnVJSFE3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgyUmxZMjl5WVhSbEtHUmxZMjl5WVhSdmNuTXNJSFJoY21kbGRDd2dhMlY1TENCa1pYTmpLU0I3WEhKY2JpQWdJQ0IyWVhJZ1l5QTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3NJSElnUFNCaklEd2dNeUEvSUhSaGNtZGxkQ0E2SUdSbGMyTWdQVDA5SUc1MWJHd2dQeUJrWlhOaklEMGdUMkpxWldOMExtZGxkRTkzYmxCeWIzQmxjblI1UkdWelkzSnBjSFJ2Y2loMFlYSm5aWFFzSUd0bGVTa2dPaUJrWlhOakxDQmtPMXh5WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJTWldac1pXTjBJRDA5UFNCY0ltOWlhbVZqZEZ3aUlDWW1JSFI1Y0dWdlppQlNaV1pzWldOMExtUmxZMjl5WVhSbElEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElISWdQU0JTWldac1pXTjBMbVJsWTI5eVlYUmxLR1JsWTI5eVlYUnZjbk1zSUhSaGNtZGxkQ3dnYTJWNUxDQmtaWE5qS1R0Y2NseHVJQ0FnSUdWc2MyVWdabTl5SUNoMllYSWdhU0E5SUdSbFkyOXlZWFJ2Y25NdWJHVnVaM1JvSUMwZ01Uc2dhU0ErUFNBd095QnBMUzBwSUdsbUlDaGtJRDBnWkdWamIzSmhkRzl5YzF0cFhTa2djaUE5SUNoaklEd2dNeUEvSUdRb2Npa2dPaUJqSUQ0Z015QS9JR1FvZEdGeVoyVjBMQ0JyWlhrc0lISXBJRG9nWkNoMFlYSm5aWFFzSUd0bGVTa3BJSHg4SUhJN1hISmNiaUFnSUNCeVpYUjFjbTRnWXlBK0lETWdKaVlnY2lBbUppQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdGeVoyVjBMQ0JyWlhrc0lISXBMQ0J5TzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1gxOXdZWEpoYlNod1lYSmhiVWx1WkdWNExDQmtaV052Y21GMGIzSXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9kR0Z5WjJWMExDQnJaWGtwSUhzZ1pHVmpiM0poZEc5eUtIUmhjbWRsZEN3Z2EyVjVMQ0J3WVhKaGJVbHVaR1Y0S1RzZ2ZWeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdYMTlsYzBSbFkyOXlZWFJsS0dOMGIzSXNJR1JsYzJOeWFYQjBiM0pKYml3Z1pHVmpiM0poZEc5eWN5d2dZMjl1ZEdWNGRFbHVMQ0JwYm1sMGFXRnNhWHBsY25Nc0lHVjRkSEpoU1c1cGRHbGhiR2w2WlhKektTQjdYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmhZMk5sY0hRb1ppa2dleUJwWmlBb1ppQWhQVDBnZG05cFpDQXdJQ1ltSUhSNWNHVnZaaUJtSUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1hDSkdkVzVqZEdsdmJpQmxlSEJsWTNSbFpGd2lLVHNnY21WMGRYSnVJR1k3SUgxY2NseHVJQ0FnSUhaaGNpQnJhVzVrSUQwZ1kyOXVkR1Y0ZEVsdUxtdHBibVFzSUd0bGVTQTlJR3RwYm1RZ1BUMDlJRndpWjJWMGRHVnlYQ0lnUHlCY0ltZGxkRndpSURvZ2EybHVaQ0E5UFQwZ1hDSnpaWFIwWlhKY0lpQS9JRndpYzJWMFhDSWdPaUJjSW5aaGJIVmxYQ0k3WEhKY2JpQWdJQ0IyWVhJZ2RHRnlaMlYwSUQwZ0lXUmxjMk55YVhCMGIzSkpiaUFtSmlCamRHOXlJRDhnWTI5dWRHVjRkRWx1VzF3aWMzUmhkR2xqWENKZElEOGdZM1J2Y2lBNklHTjBiM0l1Y0hKdmRHOTBlWEJsSURvZ2JuVnNiRHRjY2x4dUlDQWdJSFpoY2lCa1pYTmpjbWx3ZEc5eUlEMGdaR1Z6WTNKcGNIUnZja2x1SUh4OElDaDBZWEpuWlhRZ1B5QlBZbXBsWTNRdVoyVjBUM2R1VUhKdmNHVnlkSGxFWlhOamNtbHdkRzl5S0hSaGNtZGxkQ3dnWTI5dWRHVjRkRWx1TG01aGJXVXBJRG9nZTMwcE8xeHlYRzRnSUNBZ2RtRnlJRjhzSUdSdmJtVWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0JrWldOdmNtRjBiM0p6TG14bGJtZDBhQ0F0SURFN0lHa2dQajBnTURzZ2FTMHRLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR052Ym5SbGVIUWdQU0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQm1iM0lnS0haaGNpQndJR2x1SUdOdmJuUmxlSFJKYmlrZ1kyOXVkR1Y0ZEZ0d1hTQTlJSEFnUFQwOUlGd2lZV05qWlhOelhDSWdQeUI3ZlNBNklHTnZiblJsZUhSSmJsdHdYVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCd0lHbHVJR052Ym5SbGVIUkpiaTVoWTJObGMzTXBJR052Ym5SbGVIUXVZV05qWlhOelczQmRJRDBnWTI5dWRHVjRkRWx1TG1GalkyVnpjMXR3WFR0Y2NseHVJQ0FnSUNBZ0lDQmpiMjUwWlhoMExtRmtaRWx1YVhScFlXeHBlbVZ5SUQwZ1puVnVZM1JwYjI0Z0tHWXBJSHNnYVdZZ0tHUnZibVVwSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1hDSkRZVzV1YjNRZ1lXUmtJR2x1YVhScFlXeHBlbVZ5Y3lCaFpuUmxjaUJrWldOdmNtRjBhVzl1SUdoaGN5QmpiMjF3YkdWMFpXUmNJaWs3SUdWNGRISmhTVzVwZEdsaGJHbDZaWEp6TG5CMWMyZ29ZV05qWlhCMEtHWWdmSHdnYm5Wc2JDa3BPeUI5TzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5WlhOMWJIUWdQU0FvTUN3Z1pHVmpiM0poZEc5eWMxdHBYU2tvYTJsdVpDQTlQVDBnWENKaFkyTmxjM052Y2x3aUlEOGdleUJuWlhRNklHUmxjMk55YVhCMGIzSXVaMlYwTENCelpYUTZJR1JsYzJOeWFYQjBiM0l1YzJWMElIMGdPaUJrWlhOamNtbHdkRzl5VzJ0bGVWMHNJR052Ym5SbGVIUXBPMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaHJhVzVrSUQwOVBTQmNJbUZqWTJWemMyOXlYQ0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISmxjM1ZzZENBOVBUMGdkbTlwWkNBd0tTQmpiMjUwYVc1MVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEpsYzNWc2RDQTlQVDBnYm5Wc2JDQjhmQ0IwZVhCbGIyWWdjbVZ6ZFd4MElDRTlQU0JjSW05aWFtVmpkRndpS1NCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtGd2lUMkpxWldOMElHVjRjR1ZqZEdWa1hDSXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWHlBOUlHRmpZMlZ3ZENoeVpYTjFiSFF1WjJWMEtTa2daR1Z6WTNKcGNIUnZjaTVuWlhRZ1BTQmZPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWHlBOUlHRmpZMlZ3ZENoeVpYTjFiSFF1YzJWMEtTa2daR1Z6WTNKcGNIUnZjaTV6WlhRZ1BTQmZPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWHlBOUlHRmpZMlZ3ZENoeVpYTjFiSFF1YVc1cGRDa3BJR2x1YVhScFlXeHBlbVZ5Y3k1MWJuTm9hV1owS0Y4cE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCbGJITmxJR2xtSUNoZklEMGdZV05qWlhCMEtISmxjM1ZzZENrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3RwYm1RZ1BUMDlJRndpWm1sbGJHUmNJaWtnYVc1cGRHbGhiR2w2WlhKekxuVnVjMmhwWm5Rb1h5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnWkdWelkzSnBjSFJ2Y2x0clpYbGRJRDBnWHp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaUFvZEdGeVoyVjBLU0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHRnlaMlYwTENCamIyNTBaWGgwU1c0dWJtRnRaU3dnWkdWelkzSnBjSFJ2Y2lrN1hISmNiaUFnSUNCa2IyNWxJRDBnZEhKMVpUdGNjbHh1ZlR0Y2NseHVYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJmWDNKMWJrbHVhWFJwWVd4cGVtVnljeWgwYUdselFYSm5MQ0JwYm1sMGFXRnNhWHBsY25Nc0lIWmhiSFZsS1NCN1hISmNiaUFnSUNCMllYSWdkWE5sVm1Gc2RXVWdQU0JoY21kMWJXVnVkSE11YkdWdVozUm9JRDRnTWp0Y2NseHVJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z2FXNXBkR2xoYkdsNlpYSnpMbXhsYm1kMGFEc2dhU3NyS1NCN1hISmNiaUFnSUNBZ0lDQWdkbUZzZFdVZ1BTQjFjMlZXWVd4MVpTQS9JR2x1YVhScFlXeHBlbVZ5YzF0cFhTNWpZV3hzS0hSb2FYTkJjbWNzSUhaaGJIVmxLU0E2SUdsdWFYUnBZV3hwZW1WeWMxdHBYUzVqWVd4c0tIUm9hWE5CY21jcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUhWelpWWmhiSFZsSUQ4Z2RtRnNkV1VnT2lCMmIybGtJREE3WEhKY2JuMDdYSEpjYmx4eVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1gxOXdjbTl3UzJWNUtIZ3BJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ2VDQTlQVDBnWENKemVXMWliMnhjSWlBL0lIZ2dPaUJjSWx3aUxtTnZibU5oZENoNEtUdGNjbHh1ZlR0Y2NseHVYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJmWDNObGRFWjFibU4wYVc5dVRtRnRaU2htTENCdVlXMWxMQ0J3Y21WbWFYZ3BJSHRjY2x4dUlDQWdJR2xtSUNoMGVYQmxiMllnYm1GdFpTQTlQVDBnWENKemVXMWliMnhjSWlrZ2JtRnRaU0E5SUc1aGJXVXVaR1Z6WTNKcGNIUnBiMjRnUHlCY0lsdGNJaTVqYjI1allYUW9ibUZ0WlM1a1pYTmpjbWx3ZEdsdmJpd2dYQ0pkWENJcElEb2dYQ0pjSWp0Y2NseHVJQ0FnSUhKbGRIVnliaUJQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1ppd2dYQ0p1WVcxbFhDSXNJSHNnWTI5dVptbG5kWEpoWW14bE9pQjBjblZsTENCMllXeDFaVG9nY0hKbFptbDRJRDhnWENKY0lpNWpiMjVqWVhRb2NISmxabWw0TENCY0lpQmNJaXdnYm1GdFpTa2dPaUJ1WVcxbElIMHBPMXh5WEc1OU8xeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZmJXVjBZV1JoZEdFb2JXVjBZV1JoZEdGTFpYa3NJRzFsZEdGa1lYUmhWbUZzZFdVcElIdGNjbHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdVbVZtYkdWamRDQTlQVDBnWENKdlltcGxZM1JjSWlBbUppQjBlWEJsYjJZZ1VtVm1iR1ZqZEM1dFpYUmhaR0YwWVNBOVBUMGdYQ0ptZFc1amRHbHZibHdpS1NCeVpYUjFjbTRnVW1WbWJHVmpkQzV0WlhSaFpHRjBZU2h0WlhSaFpHRjBZVXRsZVN3Z2JXVjBZV1JoZEdGV1lXeDFaU2s3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgyRjNZV2wwWlhJb2RHaHBjMEZ5Wnl3Z1gyRnlaM1Z0Wlc1MGN5d2dVQ3dnWjJWdVpYSmhkRzl5S1NCN1hISmNiaUFnSUNCbWRXNWpkR2x2YmlCaFpHOXdkQ2gyWVd4MVpTa2dleUJ5WlhSMWNtNGdkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQlFJRDhnZG1Gc2RXVWdPaUJ1WlhjZ1VDaG1kVzVqZEdsdmJpQW9jbVZ6YjJ4MlpTa2dleUJ5WlhOdmJIWmxLSFpoYkhWbEtUc2dmU2s3SUgxY2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ0tGQWdmSHdnS0ZBZ1BTQlFjbTl0YVhObEtTa29ablZ1WTNScGIyNGdLSEpsYzI5c2RtVXNJSEpsYW1WamRDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdaMWJHWnBiR3hsWkNoMllXeDFaU2tnZXlCMGNua2dleUJ6ZEdWd0tHZGxibVZ5WVhSdmNpNXVaWGgwS0haaGJIVmxLU2s3SUgwZ1kyRjBZMmdnS0dVcElIc2djbVZxWldOMEtHVXBPeUI5SUgxY2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnlaV3BsWTNSbFpDaDJZV3gxWlNrZ2V5QjBjbmtnZXlCemRHVndLR2RsYm1WeVlYUnZjbHRjSW5Sb2NtOTNYQ0pkS0haaGJIVmxLU2s3SUgwZ1kyRjBZMmdnS0dVcElIc2djbVZxWldOMEtHVXBPeUI5SUgxY2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnpkR1Z3S0hKbGMzVnNkQ2tnZXlCeVpYTjFiSFF1Wkc5dVpTQS9JSEpsYzI5c2RtVW9jbVZ6ZFd4MExuWmhiSFZsS1NBNklHRmtiM0IwS0hKbGMzVnNkQzUyWVd4MVpTa3VkR2hsYmlobWRXeG1hV3hzWldRc0lISmxhbVZqZEdWa0tUc2dmVnh5WEc0Z0lDQWdJQ0FnSUhOMFpYQW9LR2RsYm1WeVlYUnZjaUE5SUdkbGJtVnlZWFJ2Y2k1aGNIQnNlU2gwYUdselFYSm5MQ0JmWVhKbmRXMWxiblJ6SUh4OElGdGRLU2t1Ym1WNGRDZ3BLVHRjY2x4dUlDQWdJSDBwTzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1gxOW5aVzVsY21GMGIzSW9kR2hwYzBGeVp5d2dZbTlrZVNrZ2UxeHlYRzRnSUNBZ2RtRnlJRjhnUFNCN0lHeGhZbVZzT2lBd0xDQnpaVzUwT2lCbWRXNWpkR2x2YmlncElIc2dhV1lnS0hSYk1GMGdKaUF4S1NCMGFISnZkeUIwV3pGZE95QnlaWFIxY200Z2RGc3hYVHNnZlN3Z2RISjVjem9nVzEwc0lHOXdjem9nVzEwZ2ZTd2daaXdnZVN3Z2RDd2daeUE5SUU5aWFtVmpkQzVqY21WaGRHVW9LSFI1Y0dWdlppQkpkR1Z5WVhSdmNpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlEOGdTWFJsY21GMGIzSWdPaUJQWW1wbFkzUXBMbkJ5YjNSdmRIbHdaU2s3WEhKY2JpQWdJQ0J5WlhSMWNtNGdaeTV1WlhoMElEMGdkbVZ5WWlnd0tTd2daMXRjSW5Sb2NtOTNYQ0pkSUQwZ2RtVnlZaWd4S1N3Z1oxdGNJbkpsZEhWeWJsd2lYU0E5SUhabGNtSW9NaWtzSUhSNWNHVnZaaUJUZVcxaWIyd2dQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQW1KaUFvWjF0VGVXMWliMnd1YVhSbGNtRjBiM0pkSUQwZ1puVnVZM1JwYjI0b0tTQjdJSEpsZEhWeWJpQjBhR2x6T3lCOUtTd2daenRjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSFpsY21Jb2Jpa2dleUJ5WlhSMWNtNGdablZ1WTNScGIyNGdLSFlwSUhzZ2NtVjBkWEp1SUhOMFpYQW9XMjRzSUhaZEtUc2dmVHNnZlZ4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYzNSbGNDaHZjQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2htS1NCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtGd2lSMlZ1WlhKaGRHOXlJR2x6SUdGc2NtVmhaSGtnWlhobFkzVjBhVzVuTGx3aUtUdGNjbHh1SUNBZ0lDQWdJQ0IzYUdsc1pTQW9aeUFtSmlBb1p5QTlJREFzSUc5d1d6QmRJQ1ltSUNoZklEMGdNQ2twTENCZktTQjBjbmtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1ppQTlJREVzSUhrZ0ppWWdLSFFnUFNCdmNGc3dYU0FtSURJZ1B5QjVXMXdpY21WMGRYSnVYQ0pkSURvZ2IzQmJNRjBnUHlCNVcxd2lkR2h5YjNkY0lsMGdmSHdnS0NoMElEMGdlVnRjSW5KbGRIVnlibHdpWFNrZ0ppWWdkQzVqWVd4c0tIa3BMQ0F3S1NBNklIa3VibVY0ZENrZ0ppWWdJU2gwSUQwZ2RDNWpZV3hzS0hrc0lHOXdXekZkS1NrdVpHOXVaU2tnY21WMGRYSnVJSFE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNUlEMGdNQ3dnZENrZ2IzQWdQU0JiYjNCYk1GMGdKaUF5TENCMExuWmhiSFZsWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9JQ2h2Y0Zzd1hTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXdPaUJqWVhObElERTZJSFFnUFNCdmNEc2dZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURRNklGOHViR0ZpWld3ckt6c2djbVYwZFhKdUlIc2dkbUZzZFdVNklHOXdXekZkTENCa2IyNWxPaUJtWVd4elpTQjlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQTFPaUJmTG14aFltVnNLeXM3SUhrZ1BTQnZjRnN4WFRzZ2IzQWdQU0JiTUYwN0lHTnZiblJwYm5WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBM09pQnZjQ0E5SUY4dWIzQnpMbkJ2Y0NncE95QmZMblJ5ZVhNdWNHOXdLQ2s3SUdOdmJuUnBiblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTaDBJRDBnWHk1MGNubHpMQ0IwSUQwZ2RDNXNaVzVuZEdnZ1BpQXdJQ1ltSUhSYmRDNXNaVzVuZEdnZ0xTQXhYU2tnSmlZZ0tHOXdXekJkSUQwOVBTQTJJSHg4SUc5d1d6QmRJRDA5UFNBeUtTa2dleUJmSUQwZ01Ec2dZMjl1ZEdsdWRXVTdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYjNCYk1GMGdQVDA5SURNZ0ppWWdLQ0YwSUh4OElDaHZjRnN4WFNBK0lIUmJNRjBnSmlZZ2IzQmJNVjBnUENCMFd6TmRLU2twSUhzZ1h5NXNZV0psYkNBOUlHOXdXekZkT3lCaWNtVmhhenNnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodmNGc3dYU0E5UFQwZ05pQW1KaUJmTG14aFltVnNJRHdnZEZzeFhTa2dleUJmTG14aFltVnNJRDBnZEZzeFhUc2dkQ0E5SUc5d095QmljbVZoYXpzZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBJQ1ltSUY4dWJHRmlaV3dnUENCMFd6SmRLU0I3SUY4dWJHRmlaV3dnUFNCMFd6SmRPeUJmTG05d2N5NXdkWE5vS0c5d0tUc2dZbkpsWVdzN0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kRnN5WFNrZ1h5NXZjSE11Y0c5d0tDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1h5NTBjbmx6TG5CdmNDZ3BPeUJqYjI1MGFXNTFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZjQ0E5SUdKdlpIa3VZMkZzYkNoMGFHbHpRWEpuTENCZktUdGNjbHh1SUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN0lHOXdJRDBnV3pZc0lHVmRPeUI1SUQwZ01Ec2dmU0JtYVc1aGJHeDVJSHNnWmlBOUlIUWdQU0F3T3lCOVhISmNiaUFnSUNBZ0lDQWdhV1lnS0c5d1d6QmRJQ1lnTlNrZ2RHaHliM2NnYjNCYk1WMDdJSEpsZEhWeWJpQjdJSFpoYkhWbE9pQnZjRnN3WFNBL0lHOXdXekZkSURvZ2RtOXBaQ0F3TENCa2IyNWxPaUIwY25WbElIMDdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0IyWVhJZ1gxOWpjbVZoZEdWQ2FXNWthVzVuSUQwZ1QySnFaV04wTG1OeVpXRjBaU0EvSUNobWRXNWpkR2x2YmlodkxDQnRMQ0JyTENCck1pa2dlMXh5WEc0Z0lDQWdhV1lnS0dzeUlEMDlQU0IxYm1SbFptbHVaV1FwSUdzeUlEMGdhenRjY2x4dUlDQWdJSFpoY2lCa1pYTmpJRDBnVDJKcVpXTjBMbWRsZEU5M2JsQnliM0JsY25SNVJHVnpZM0pwY0hSdmNpaHRMQ0JyS1R0Y2NseHVJQ0FnSUdsbUlDZ2haR1Z6WXlCOGZDQW9YQ0puWlhSY0lpQnBiaUJrWlhOaklEOGdJVzB1WDE5bGMwMXZaSFZzWlNBNklHUmxjMk11ZDNKcGRHRmliR1VnZkh3Z1pHVnpZeTVqYjI1bWFXZDFjbUZpYkdVcEtTQjdYSEpjYmlBZ0lDQWdJQ0FnWkdWell5QTlJSHNnWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3dnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNnY21WMGRYSnVJRzFiYTEwN0lIMGdmVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNodkxDQnJNaXdnWkdWell5azdYSEpjYm4wcElEb2dLR1oxYm1OMGFXOXVLRzhzSUcwc0lHc3NJR3N5S1NCN1hISmNiaUFnSUNCcFppQW9heklnUFQwOUlIVnVaR1ZtYVc1bFpDa2dheklnUFNCck8xeHlYRzRnSUNBZ2IxdHJNbDBnUFNCdFcydGRPMXh5WEc1OUtUdGNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgyVjRjRzl5ZEZOMFlYSW9iU3dnYnlrZ2UxeHlYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2NDQnBiaUJ0S1NCcFppQW9jQ0FoUFQwZ1hDSmtaV1poZFd4MFhDSWdKaVlnSVU5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNodkxDQndLU2tnWDE5amNtVmhkR1ZDYVc1a2FXNW5LRzhzSUcwc0lIQXBPMXh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWDE5MllXeDFaWE1vYnlrZ2UxeHlYRzRnSUNBZ2RtRnlJSE1nUFNCMGVYQmxiMllnVTNsdFltOXNJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdKaVlnVTNsdFltOXNMbWwwWlhKaGRHOXlMQ0J0SUQwZ2N5QW1KaUJ2VzNOZExDQnBJRDBnTUR0Y2NseHVJQ0FnSUdsbUlDaHRLU0J5WlhSMWNtNGdiUzVqWVd4c0tHOHBPMXh5WEc0Z0lDQWdhV1lnS0c4Z0ppWWdkSGx3Wlc5bUlHOHViR1Z1WjNSb0lEMDlQU0JjSW01MWJXSmxjbHdpS1NCeVpYUjFjbTRnZTF4eVhHNGdJQ0FnSUNBZ0lHNWxlSFE2SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzhnSmlZZ2FTQStQU0J2TG14bGJtZDBhQ2tnYnlBOUlIWnZhV1FnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSHNnZG1Gc2RXVTZJRzhnSmlZZ2IxdHBLeXRkTENCa2IyNWxPaUFoYnlCOU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDA3WEhKY2JpQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0hNZ1B5QmNJazlpYW1WamRDQnBjeUJ1YjNRZ2FYUmxjbUZpYkdVdVhDSWdPaUJjSWxONWJXSnZiQzVwZEdWeVlYUnZjaUJwY3lCdWIzUWdaR1ZtYVc1bFpDNWNJaWs3WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgzSmxZV1FvYnl3Z2Jpa2dlMXh5WEc0Z0lDQWdkbUZ5SUcwZ1BTQjBlWEJsYjJZZ1UzbHRZbTlzSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lnSmlZZ2IxdFRlVzFpYjJ3dWFYUmxjbUYwYjNKZE8xeHlYRzRnSUNBZ2FXWWdLQ0Z0S1NCeVpYUjFjbTRnYnp0Y2NseHVJQ0FnSUhaaGNpQnBJRDBnYlM1allXeHNLRzhwTENCeUxDQmhjaUE5SUZ0ZExDQmxPMXh5WEc0Z0lDQWdkSEo1SUh0Y2NseHVJQ0FnSUNBZ0lDQjNhR2xzWlNBb0tHNGdQVDA5SUhadmFXUWdNQ0I4ZkNCdUxTMGdQaUF3S1NBbUppQWhLSElnUFNCcExtNWxlSFFvS1NrdVpHOXVaU2tnWVhJdWNIVnphQ2h5TG5aaGJIVmxLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR05oZEdOb0lDaGxjbkp2Y2lrZ2V5QmxJRDBnZXlCbGNuSnZjam9nWlhKeWIzSWdmVHNnZlZ4eVhHNGdJQ0FnWm1sdVlXeHNlU0I3WEhKY2JpQWdJQ0FnSUNBZ2RISjVJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ0ppWWdJWEl1Wkc5dVpTQW1KaUFvYlNBOUlHbGJYQ0p5WlhSMWNtNWNJbDBwS1NCdExtTmhiR3dvYVNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdacGJtRnNiSGtnZXlCcFppQW9aU2tnZEdoeWIzY2daUzVsY25KdmNqc2dmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlHRnlPMXh5WEc1OVhISmNibHh5WEc0dktpb2dRR1JsY0hKbFkyRjBaV1FnS2k5Y2NseHVaWGh3YjNKMElHWjFibU4wYVc5dUlGOWZjM0J5WldGa0tDa2dlMXh5WEc0Z0lDQWdabTl5SUNoMllYSWdZWElnUFNCYlhTd2dhU0E5SURBN0lHa2dQQ0JoY21kMWJXVnVkSE11YkdWdVozUm9PeUJwS3lzcFhISmNiaUFnSUNBZ0lDQWdZWElnUFNCaGNpNWpiMjVqWVhRb1gxOXlaV0ZrS0dGeVozVnRaVzUwYzF0cFhTa3BPMXh5WEc0Z0lDQWdjbVYwZFhKdUlHRnlPMXh5WEc1OVhISmNibHh5WEc0dktpb2dRR1JsY0hKbFkyRjBaV1FnS2k5Y2NseHVaWGh3YjNKMElHWjFibU4wYVc5dUlGOWZjM0J5WldGa1FYSnlZWGx6S0NrZ2UxeHlYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2N5QTlJREFzSUdrZ1BTQXdMQ0JwYkNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHa2dQQ0JwYkRzZ2FTc3JLU0J6SUNzOUlHRnlaM1Z0Wlc1MGMxdHBYUzVzWlc1bmRHZzdYSEpjYmlBZ0lDQm1iM0lnS0haaGNpQnlJRDBnUVhKeVlYa29jeWtzSUdzZ1BTQXdMQ0JwSUQwZ01Ec2dhU0E4SUdsc095QnBLeXNwWEhKY2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ1lTQTlJR0Z5WjNWdFpXNTBjMXRwWFN3Z2FpQTlJREFzSUdwc0lEMGdZUzVzWlc1bmRHZzdJR29nUENCcWJEc2dhaXNyTENCckt5c3BYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmJhMTBnUFNCaFcycGRPMXh5WEc0Z0lDQWdjbVYwZFhKdUlISTdYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJmWDNOd2NtVmhaRUZ5Y21GNUtIUnZMQ0JtY205dExDQndZV05yS1NCN1hISmNiaUFnSUNCcFppQW9jR0ZqYXlCOGZDQmhjbWQxYldWdWRITXViR1Z1WjNSb0lEMDlQU0F5S1NCbWIzSWdLSFpoY2lCcElEMGdNQ3dnYkNBOUlHWnliMjB1YkdWdVozUm9MQ0JoY2pzZ2FTQThJR3c3SUdrckt5a2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaGhjaUI4ZkNBaEtHa2dhVzRnWm5KdmJTa3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGaGNpa2dZWElnUFNCQmNuSmhlUzV3Y205MGIzUjVjR1V1YzJ4cFkyVXVZMkZzYkNobWNtOXRMQ0F3TENCcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYSmJhVjBnUFNCbWNtOXRXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lISmxkSFZ5YmlCMGJ5NWpiMjVqWVhRb1lYSWdmSHdnUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvWm5KdmJTa3BPMXh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWDE5aGQyRnBkQ2gyS1NCN1hISmNiaUFnSUNCeVpYUjFjbTRnZEdocGN5QnBibk4wWVc1alpXOW1JRjlmWVhkaGFYUWdQeUFvZEdocGN5NTJJRDBnZGl3Z2RHaHBjeWtnT2lCdVpYY2dYMTloZDJGcGRDaDJLVHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZllYTjVibU5IWlc1bGNtRjBiM0lvZEdocGMwRnlaeXdnWDJGeVozVnRaVzUwY3l3Z1oyVnVaWEpoZEc5eUtTQjdYSEpjYmlBZ0lDQnBaaUFvSVZONWJXSnZiQzVoYzNsdVkwbDBaWEpoZEc5eUtTQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLRndpVTNsdFltOXNMbUZ6ZVc1alNYUmxjbUYwYjNJZ2FYTWdibTkwSUdSbFptbHVaV1F1WENJcE8xeHlYRzRnSUNBZ2RtRnlJR2NnUFNCblpXNWxjbUYwYjNJdVlYQndiSGtvZEdocGMwRnlaeXdnWDJGeVozVnRaVzUwY3lCOGZDQmJYU2tzSUdrc0lIRWdQU0JiWFR0Y2NseHVJQ0FnSUhKbGRIVnliaUJwSUQwZ1QySnFaV04wTG1OeVpXRjBaU2dvZEhsd1pXOW1JRUZ6ZVc1alNYUmxjbUYwYjNJZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlBL0lFRnplVzVqU1hSbGNtRjBiM0lnT2lCUFltcGxZM1FwTG5CeWIzUnZkSGx3WlNrc0lIWmxjbUlvWENKdVpYaDBYQ0lwTENCMlpYSmlLRndpZEdoeWIzZGNJaWtzSUhabGNtSW9YQ0p5WlhSMWNtNWNJaXdnWVhkaGFYUlNaWFIxY200cExDQnBXMU41YldKdmJDNWhjM2x1WTBsMFpYSmhkRzl5WFNBOUlHWjFibU4wYVc5dUlDZ3BJSHNnY21WMGRYSnVJSFJvYVhNN0lIMHNJR2s3WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJoZDJGcGRGSmxkSFZ5YmlobUtTQjdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9kaWtnZXlCeVpYUjFjbTRnVUhKdmJXbHpaUzV5WlhOdmJIWmxLSFlwTG5Sb1pXNG9aaXdnY21WcVpXTjBLVHNnZlRzZ2ZWeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2RtVnlZaWh1TENCbUtTQjdJR2xtSUNoblcyNWRLU0I3SUdsYmJsMGdQU0JtZFc1amRHbHZiaUFvZGlrZ2V5QnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9ablZ1WTNScGIyNGdLR0VzSUdJcElIc2djUzV3ZFhOb0tGdHVMQ0IyTENCaExDQmlYU2tnUGlBeElIeDhJSEpsYzNWdFpTaHVMQ0IyS1RzZ2ZTazdJSDA3SUdsbUlDaG1LU0JwVzI1ZElEMGdaaWhwVzI1ZEtUc2dmU0I5WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ5WlhOMWJXVW9iaXdnZGlrZ2V5QjBjbmtnZXlCemRHVndLR2RiYmwwb2Rpa3BPeUI5SUdOaGRHTm9JQ2hsS1NCN0lITmxkSFJzWlNoeFd6QmRXek5kTENCbEtUc2dmU0I5WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ6ZEdWd0tISXBJSHNnY2k1MllXeDFaU0JwYm5OMFlXNWpaVzltSUY5ZllYZGhhWFFnUHlCUWNtOXRhWE5sTG5KbGMyOXNkbVVvY2k1MllXeDFaUzUyS1M1MGFHVnVLR1oxYkdacGJHd3NJSEpsYW1WamRDa2dPaUJ6WlhSMGJHVW9jVnN3WFZzeVhTd2djaWs3SUgxY2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdaMWJHWnBiR3dvZG1Gc2RXVXBJSHNnY21WemRXMWxLRndpYm1WNGRGd2lMQ0IyWVd4MVpTazdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSEpsYW1WamRDaDJZV3gxWlNrZ2V5QnlaWE4xYldVb1hDSjBhSEp2ZDF3aUxDQjJZV3gxWlNrN0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxkSFJzWlNobUxDQjJLU0I3SUdsbUlDaG1LSFlwTENCeExuTm9hV1owS0Nrc0lIRXViR1Z1WjNSb0tTQnlaWE4xYldVb2NWc3dYVnN3WFN3Z2NWc3dYVnN4WFNrN0lIMWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJRjlmWVhONWJtTkVaV3hsWjJGMGIzSW9ieWtnZTF4eVhHNGdJQ0FnZG1GeUlHa3NJSEE3WEhKY2JpQWdJQ0J5WlhSMWNtNGdhU0E5SUh0OUxDQjJaWEppS0Z3aWJtVjRkRndpS1N3Z2RtVnlZaWhjSW5Sb2NtOTNYQ0lzSUdaMWJtTjBhVzl1SUNobEtTQjdJSFJvY205M0lHVTdJSDBwTENCMlpYSmlLRndpY21WMGRYSnVYQ0lwTENCcFcxTjViV0p2YkM1cGRHVnlZWFJ2Y2wwZ1BTQm1kVzVqZEdsdmJpQW9LU0I3SUhKbGRIVnliaUIwYUdsek95QjlMQ0JwTzF4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnZG1WeVlpaHVMQ0JtS1NCN0lHbGJibDBnUFNCdlcyNWRJRDhnWm5WdVkzUnBiMjRnS0hZcElIc2djbVYwZFhKdUlDaHdJRDBnSVhBcElEOGdleUIyWVd4MVpUb2dYMTloZDJGcGRDaHZXMjVkS0hZcEtTd2daRzl1WlRvZ1ptRnNjMlVnZlNBNklHWWdQeUJtS0hZcElEb2dkanNnZlNBNklHWTdJSDFjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZllYTjVibU5XWVd4MVpYTW9ieWtnZTF4eVhHNGdJQ0FnYVdZZ0tDRlRlVzFpYjJ3dVlYTjVibU5KZEdWeVlYUnZjaWtnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2loY0lsTjViV0p2YkM1aGMzbHVZMGwwWlhKaGRHOXlJR2x6SUc1dmRDQmtaV1pwYm1Wa0xsd2lLVHRjY2x4dUlDQWdJSFpoY2lCdElEMGdiMXRUZVcxaWIyd3VZWE41Ym1OSmRHVnlZWFJ2Y2wwc0lHazdYSEpjYmlBZ0lDQnlaWFIxY200Z2JTQS9JRzB1WTJGc2JDaHZLU0E2SUNodklEMGdkSGx3Wlc5bUlGOWZkbUZzZFdWeklEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ1B5QmZYM1poYkhWbGN5aHZLU0E2SUc5YlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncExDQnBJRDBnZTMwc0lIWmxjbUlvWENKdVpYaDBYQ0lwTENCMlpYSmlLRndpZEdoeWIzZGNJaWtzSUhabGNtSW9YQ0p5WlhSMWNtNWNJaWtzSUdsYlUzbHRZbTlzTG1GemVXNWpTWFJsY21GMGIzSmRJRDBnWm5WdVkzUnBiMjRnS0NrZ2V5QnlaWFIxY200Z2RHaHBjenNnZlN3Z2FTazdYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQjJaWEppS0c0cElIc2dhVnR1WFNBOUlHOWJibDBnSmlZZ1puVnVZM1JwYjI0Z0tIWXBJSHNnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0daMWJtTjBhVzl1SUNoeVpYTnZiSFpsTENCeVpXcGxZM1FwSUhzZ2RpQTlJRzliYmwwb2Rpa3NJSE5sZEhSc1pTaHlaWE52YkhabExDQnlaV3BsWTNRc0lIWXVaRzl1WlN3Z2RpNTJZV3gxWlNrN0lIMHBPeUI5T3lCOVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCelpYUjBiR1VvY21WemIyeDJaU3dnY21WcVpXTjBMQ0JrTENCMktTQjdJRkJ5YjIxcGMyVXVjbVZ6YjJ4MlpTaDJLUzUwYUdWdUtHWjFibU4wYVc5dUtIWXBJSHNnY21WemIyeDJaU2g3SUhaaGJIVmxPaUIyTENCa2IyNWxPaUJrSUgwcE95QjlMQ0J5WldwbFkzUXBPeUI5WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCZlgyMWhhMlZVWlcxd2JHRjBaVTlpYW1WamRDaGpiMjlyWldRc0lISmhkeWtnZTF4eVhHNGdJQ0FnYVdZZ0tFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2tnZXlCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29ZMjl2YTJWa0xDQmNJbkpoZDF3aUxDQjdJSFpoYkhWbE9pQnlZWGNnZlNrN0lIMGdaV3h6WlNCN0lHTnZiMnRsWkM1eVlYY2dQU0J5WVhjN0lIMWNjbHh1SUNBZ0lISmxkSFZ5YmlCamIyOXJaV1E3WEhKY2JuMDdYSEpjYmx4eVhHNTJZWElnWDE5elpYUk5iMlIxYkdWRVpXWmhkV3gwSUQwZ1QySnFaV04wTG1OeVpXRjBaU0EvSUNobWRXNWpkR2x2YmlodkxDQjJLU0I3WEhKY2JpQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2J5d2dYQ0prWldaaGRXeDBYQ0lzSUhzZ1pXNTFiV1Z5WVdKc1pUb2dkSEoxWlN3Z2RtRnNkV1U2SUhZZ2ZTazdYSEpjYm4wcElEb2dablZ1WTNScGIyNG9ieXdnZGlrZ2UxeHlYRzRnSUNBZ2IxdGNJbVJsWm1GMWJIUmNJbDBnUFNCMk8xeHlYRzU5TzF4eVhHNWNjbHh1ZG1GeUlHOTNia3RsZVhNZ1BTQm1kVzVqZEdsdmJpaHZLU0I3WEhKY2JpQWdJQ0J2ZDI1TFpYbHpJRDBnVDJKcVpXTjBMbWRsZEU5M2JsQnliM0JsY25SNVRtRnRaWE1nZkh3Z1puVnVZM1JwYjI0Z0tHOHBJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZWElnUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJySUdsdUlHOHBJR2xtSUNoUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd3b2J5d2dheWtwSUdGeVcyRnlMbXhsYm1kMGFGMGdQU0JyTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCaGNqdGNjbHh1SUNBZ0lIMDdYSEpjYmlBZ0lDQnlaWFIxY200Z2IzZHVTMlY1Y3lodktUdGNjbHh1ZlR0Y2NseHVYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJmWDJsdGNHOXlkRk4wWVhJb2JXOWtLU0I3WEhKY2JpQWdJQ0JwWmlBb2JXOWtJQ1ltSUcxdlpDNWZYMlZ6VFc5a2RXeGxLU0J5WlhSMWNtNGdiVzlrTzF4eVhHNGdJQ0FnZG1GeUlISmxjM1ZzZENBOUlIdDlPMXh5WEc0Z0lDQWdhV1lnS0cxdlpDQWhQU0J1ZFd4c0tTQm1iM0lnS0haaGNpQnJJRDBnYjNkdVMyVjVjeWh0YjJRcExDQnBJRDBnTURzZ2FTQThJR3N1YkdWdVozUm9PeUJwS3lzcElHbG1JQ2hyVzJsZElDRTlQU0JjSW1SbFptRjFiSFJjSWlrZ1gxOWpjbVZoZEdWQ2FXNWthVzVuS0hKbGMzVnNkQ3dnYlc5a0xDQnJXMmxkS1R0Y2NseHVJQ0FnSUY5ZmMyVjBUVzlrZFd4bFJHVm1ZWFZzZENoeVpYTjFiSFFzSUcxdlpDazdYSEpjYmlBZ0lDQnlaWFIxY200Z2NtVnpkV3gwTzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1gxOXBiWEJ2Y25SRVpXWmhkV3gwS0cxdlpDa2dlMXh5WEc0Z0lDQWdjbVYwZFhKdUlDaHRiMlFnSmlZZ2JXOWtMbDlmWlhOTmIyUjFiR1VwSUQ4Z2JXOWtJRG9nZXlCa1pXWmhkV3gwT2lCdGIyUWdmVHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZlkyeGhjM05RY21sMllYUmxSbWxsYkdSSFpYUW9jbVZqWldsMlpYSXNJSE4wWVhSbExDQnJhVzVrTENCbUtTQjdYSEpjYmlBZ0lDQnBaaUFvYTJsdVpDQTlQVDBnWENKaFhDSWdKaVlnSVdZcElIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9YQ0pRY21sMllYUmxJR0ZqWTJWemMyOXlJSGRoY3lCa1pXWnBibVZrSUhkcGRHaHZkWFFnWVNCblpYUjBaWEpjSWlrN1hISmNiaUFnSUNCcFppQW9kSGx3Wlc5bUlITjBZWFJsSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lnUHlCeVpXTmxhWFpsY2lBaFBUMGdjM1JoZEdVZ2ZId2dJV1lnT2lBaGMzUmhkR1V1YUdGektISmxZMlZwZG1WeUtTa2dkR2h5YjNjZ2JtVjNJRlI1Y0dWRmNuSnZjaWhjSWtOaGJtNXZkQ0J5WldGa0lIQnlhWFpoZEdVZ2JXVnRZbVZ5SUdaeWIyMGdZVzRnYjJKcVpXTjBJSGRvYjNObElHTnNZWE56SUdScFpDQnViM1FnWkdWamJHRnlaU0JwZEZ3aUtUdGNjbHh1SUNBZ0lISmxkSFZ5YmlCcmFXNWtJRDA5UFNCY0ltMWNJaUEvSUdZZ09pQnJhVzVrSUQwOVBTQmNJbUZjSWlBL0lHWXVZMkZzYkNoeVpXTmxhWFpsY2lrZ09pQm1JRDhnWmk1MllXeDFaU0E2SUhOMFlYUmxMbWRsZENoeVpXTmxhWFpsY2lrN1hISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmZYMk5zWVhOelVISnBkbUYwWlVacFpXeGtVMlYwS0hKbFkyVnBkbVZ5TENCemRHRjBaU3dnZG1Gc2RXVXNJR3RwYm1Rc0lHWXBJSHRjY2x4dUlDQWdJR2xtSUNocmFXNWtJRDA5UFNCY0ltMWNJaWtnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2loY0lsQnlhWFpoZEdVZ2JXVjBhRzlrSUdseklHNXZkQ0IzY21sMFlXSnNaVndpS1R0Y2NseHVJQ0FnSUdsbUlDaHJhVzVrSUQwOVBTQmNJbUZjSWlBbUppQWhaaWtnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2loY0lsQnlhWFpoZEdVZ1lXTmpaWE56YjNJZ2QyRnpJR1JsWm1sdVpXUWdkMmwwYUc5MWRDQmhJSE5sZEhSbGNsd2lLVHRjY2x4dUlDQWdJR2xtSUNoMGVYQmxiMllnYzNSaGRHVWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQS9JSEpsWTJWcGRtVnlJQ0U5UFNCemRHRjBaU0I4ZkNBaFppQTZJQ0Z6ZEdGMFpTNW9ZWE1vY21WalpXbDJaWElwS1NCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtGd2lRMkZ1Ym05MElIZHlhWFJsSUhCeWFYWmhkR1VnYldWdFltVnlJSFJ2SUdGdUlHOWlhbVZqZENCM2FHOXpaU0JqYkdGemN5QmthV1FnYm05MElHUmxZMnhoY21VZ2FYUmNJaWs3WEhKY2JpQWdJQ0J5WlhSMWNtNGdLR3RwYm1RZ1BUMDlJRndpWVZ3aUlEOGdaaTVqWVd4c0tISmxZMlZwZG1WeUxDQjJZV3gxWlNrZ09pQm1JRDhnWmk1MllXeDFaU0E5SUhaaGJIVmxJRG9nYzNSaGRHVXVjMlYwS0hKbFkyVnBkbVZ5TENCMllXeDFaU2twTENCMllXeDFaVHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZlkyeGhjM05RY21sMllYUmxSbWxsYkdSSmJpaHpkR0YwWlN3Z2NtVmpaV2wyWlhJcElIdGNjbHh1SUNBZ0lHbG1JQ2h5WldObGFYWmxjaUE5UFQwZ2JuVnNiQ0I4ZkNBb2RIbHdaVzltSUhKbFkyVnBkbVZ5SUNFOVBTQmNJbTlpYW1WamRGd2lJQ1ltSUhSNWNHVnZaaUJ5WldObGFYWmxjaUFoUFQwZ1hDSm1kVzVqZEdsdmJsd2lLU2tnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2loY0lrTmhibTV2ZENCMWMyVWdKMmx1SnlCdmNHVnlZWFJ2Y2lCdmJpQnViMjR0YjJKcVpXTjBYQ0lwTzF4eVhHNGdJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQnpkR0YwWlNBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUQ4Z2NtVmpaV2wyWlhJZ1BUMDlJSE4wWVhSbElEb2djM1JoZEdVdWFHRnpLSEpsWTJWcGRtVnlLVHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUY5ZllXUmtSR2x6Y0c5ellXSnNaVkpsYzI5MWNtTmxLR1Z1ZGl3Z2RtRnNkV1VzSUdGemVXNWpLU0I3WEhKY2JpQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlHNTFiR3dnSmlZZ2RtRnNkV1VnSVQwOUlIWnZhV1FnTUNrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnZG1Gc2RXVWdJVDA5SUZ3aWIySnFaV04wWENJZ0ppWWdkSGx3Wlc5bUlIWmhiSFZsSUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1hDSlBZbXBsWTNRZ1pYaHdaV04wWldRdVhDSXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmthWE53YjNObExDQnBibTVsY2p0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvWVhONWJtTXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGVGVXMWliMnd1WVhONWJtTkVhWE53YjNObEtTQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLRndpVTNsdFltOXNMbUZ6ZVc1alJHbHpjRzl6WlNCcGN5QnViM1FnWkdWbWFXNWxaQzVjSWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnZjMlVnUFNCMllXeDFaVnRUZVcxaWIyd3VZWE41Ym1ORWFYTndiM05sWFR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHUnBjM0J2YzJVZ1BUMDlJSFp2YVdRZ01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVZONWJXSnZiQzVrYVhOd2IzTmxLU0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0Z3aVUzbHRZbTlzTG1ScGMzQnZjMlVnYVhNZ2JtOTBJR1JsWm1sdVpXUXVYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxJRDBnZG1Gc2RXVmJVM2x0WW05c0xtUnBjM0J2YzJWZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZWE41Ym1NcElHbHVibVZ5SUQwZ1pHbHpjRzl6WlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCa2FYTndiM05sSUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb1hDSlBZbXBsWTNRZ2JtOTBJR1JwYzNCdmMyRmliR1V1WENJcE8xeHlYRzRnSUNBZ0lDQWdJR2xtSUNocGJtNWxjaWtnWkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1S0NrZ2V5QjBjbmtnZXlCcGJtNWxjaTVqWVd4c0tIUm9hWE1wT3lCOUlHTmhkR05vSUNobEtTQjdJSEpsZEhWeWJpQlFjbTl0YVhObExuSmxhbVZqZENobEtUc2dmU0I5TzF4eVhHNGdJQ0FnSUNBZ0lHVnVkaTV6ZEdGamF5NXdkWE5vS0hzZ2RtRnNkV1U2SUhaaGJIVmxMQ0JrYVhOd2IzTmxPaUJrYVhOd2IzTmxMQ0JoYzNsdVl6b2dZWE41Ym1NZ2ZTazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQmxiSE5sSUdsbUlDaGhjM2x1WXlrZ2UxeHlYRzRnSUNBZ0lDQWdJR1Z1ZGk1emRHRmpheTV3ZFhOb0tIc2dZWE41Ym1NNklIUnlkV1VnZlNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCeVpYUjFjbTRnZG1Gc2RXVTdYSEpjYmx4eVhHNTlYSEpjYmx4eVhHNTJZWElnWDFOMWNIQnlaWE56WldSRmNuSnZjaUE5SUhSNWNHVnZaaUJUZFhCd2NtVnpjMlZrUlhKeWIzSWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQS9JRk4xY0hCeVpYTnpaV1JGY25KdmNpQTZJR1oxYm1OMGFXOXVJQ2hsY25KdmNpd2djM1Z3Y0hKbGMzTmxaQ3dnYldWemMyRm5aU2tnZTF4eVhHNGdJQ0FnZG1GeUlHVWdQU0J1WlhjZ1JYSnliM0lvYldWemMyRm5aU2s3WEhKY2JpQWdJQ0J5WlhSMWNtNGdaUzV1WVcxbElEMGdYQ0pUZFhCd2NtVnpjMlZrUlhKeWIzSmNJaXdnWlM1bGNuSnZjaUE5SUdWeWNtOXlMQ0JsTG5OMWNIQnlaWE56WldRZ1BTQnpkWEJ3Y21WemMyVmtMQ0JsTzF4eVhHNTlPMXh5WEc1Y2NseHVaWGh3YjNKMElHWjFibU4wYVc5dUlGOWZaR2x6Y0c5elpWSmxjMjkxY21ObGN5aGxibllwSUh0Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdaaGFXd29aU2tnZTF4eVhHNGdJQ0FnSUNBZ0lHVnVkaTVsY25KdmNpQTlJR1Z1ZGk1b1lYTkZjbkp2Y2lBL0lHNWxkeUJmVTNWd2NISmxjM05sWkVWeWNtOXlLR1VzSUdWdWRpNWxjbkp2Y2l3Z1hDSkJiaUJsY25KdmNpQjNZWE1nYzNWd2NISmxjM05sWkNCa2RYSnBibWNnWkdsemNHOXpZV3d1WENJcElEb2daVHRjY2x4dUlDQWdJQ0FnSUNCbGJuWXVhR0Z6UlhKeWIzSWdQU0IwY25WbE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RtRnlJSElzSUhNZ1BTQXdPMXh5WEc0Z0lDQWdablZ1WTNScGIyNGdibVY0ZENncElIdGNjbHh1SUNBZ0lDQWdJQ0IzYUdsc1pTQW9jaUE5SUdWdWRpNXpkR0ZqYXk1d2IzQW9LU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGeUxtRnplVzVqSUNZbUlITWdQVDA5SURFcElISmxkSFZ5YmlCeklEMGdNQ3dnWlc1MkxuTjBZV05yTG5CMWMyZ29jaWtzSUZCeWIyMXBjMlV1Y21WemIyeDJaU2dwTG5Sb1pXNG9ibVY0ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2k1a2FYTndiM05sS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlISmxjM1ZzZENBOUlISXVaR2x6Y0c5elpTNWpZV3hzS0hJdWRtRnNkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUxtRnplVzVqS1NCeVpYUjFjbTRnY3lCOFBTQXlMQ0JRY205dGFYTmxMbkpsYzI5c2RtVW9jbVZ6ZFd4MEtTNTBhR1Z1S0c1bGVIUXNJR1oxYm1OMGFXOXVLR1VwSUhzZ1ptRnBiQ2hsS1RzZ2NtVjBkWEp1SUc1bGVIUW9LVHNnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElITWdmRDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhSamFDQW9aU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRnBiQ2hsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2N5QTlQVDBnTVNrZ2NtVjBkWEp1SUdWdWRpNW9ZWE5GY25KdmNpQS9JRkJ5YjIxcGMyVXVjbVZxWldOMEtHVnVkaTVsY25KdmNpa2dPaUJRY205dGFYTmxMbkpsYzI5c2RtVW9LVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9aVzUyTG1oaGMwVnljbTl5S1NCMGFISnZkeUJsYm5ZdVpYSnliM0k3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdibVY0ZENncE8xeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdYMTl5WlhkeWFYUmxVbVZzWVhScGRtVkpiWEJ2Y25SRmVIUmxibk5wYjI0b2NHRjBhQ3dnY0hKbGMyVnlkbVZLYzNncElIdGNjbHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdjR0YwYUNBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFtSmlBdlhseGNMbHhjTGo5Y1hDOHZMblJsYzNRb2NHRjBhQ2twSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHRjBhQzV5WlhCc1lXTmxLQzljWEM0b2RITjRLU1I4S0NnL09seGNMbVFwUHlrb0tEODZYRnd1VzE0dUwxMHJQeWsvS1Z4Y0xpaGJZMjFkUHlsMGN5UXZhU3dnWm5WdVkzUnBiMjRnS0cwc0lIUnplQ3dnWkN3Z1pYaDBMQ0JqYlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhONElEOGdjSEpsYzJWeWRtVktjM2dnUHlCY0lpNXFjM2hjSWlBNklGd2lMbXB6WENJZ09pQmtJQ1ltSUNnaFpYaDBJSHg4SUNGamJTa2dQeUJ0SURvZ0tHUWdLeUJsZUhRZ0t5QmNJaTVjSWlBcklHTnRMblJ2VEc5M1pYSkRZWE5sS0NrZ0t5QmNJbXB6WENJcE8xeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnY21WMGRYSnVJSEJoZEdnN1hISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQmtaV1poZFd4MElIdGNjbHh1SUNBZ0lGOWZaWGgwWlc1a2N6b2dYMTlsZUhSbGJtUnpMRnh5WEc0Z0lDQWdYMTloYzNOcFoyNDZJRjlmWVhOemFXZHVMRnh5WEc0Z0lDQWdYMTl5WlhOME9pQmZYM0psYzNRc1hISmNiaUFnSUNCZlgyUmxZMjl5WVhSbE9pQmZYMlJsWTI5eVlYUmxMRnh5WEc0Z0lDQWdYMTl3WVhKaGJUb2dYMTl3WVhKaGJTeGNjbHh1SUNBZ0lGOWZaWE5FWldOdmNtRjBaVG9nWDE5bGMwUmxZMjl5WVhSbExGeHlYRzRnSUNBZ1gxOXlkVzVKYm1sMGFXRnNhWHBsY25NNklGOWZjblZ1U1c1cGRHbGhiR2w2WlhKekxGeHlYRzRnSUNBZ1gxOXdjbTl3UzJWNU9pQmZYM0J5YjNCTFpYa3NYSEpjYmlBZ0lDQmZYM05sZEVaMWJtTjBhVzl1VG1GdFpUb2dYMTl6WlhSR2RXNWpkR2x2Yms1aGJXVXNYSEpjYmlBZ0lDQmZYMjFsZEdGa1lYUmhPaUJmWDIxbGRHRmtZWFJoTEZ4eVhHNGdJQ0FnWDE5aGQyRnBkR1Z5T2lCZlgyRjNZV2wwWlhJc1hISmNiaUFnSUNCZlgyZGxibVZ5WVhSdmNqb2dYMTluWlc1bGNtRjBiM0lzWEhKY2JpQWdJQ0JmWDJOeVpXRjBaVUpwYm1ScGJtYzZJRjlmWTNKbFlYUmxRbWx1WkdsdVp5eGNjbHh1SUNBZ0lGOWZaWGh3YjNKMFUzUmhjam9nWDE5bGVIQnZjblJUZEdGeUxGeHlYRzRnSUNBZ1gxOTJZV3gxWlhNNklGOWZkbUZzZFdWekxGeHlYRzRnSUNBZ1gxOXlaV0ZrT2lCZlgzSmxZV1FzWEhKY2JpQWdJQ0JmWDNOd2NtVmhaRG9nWDE5emNISmxZV1FzWEhKY2JpQWdJQ0JmWDNOd2NtVmhaRUZ5Y21GNWN6b2dYMTl6Y0hKbFlXUkJjbkpoZVhNc1hISmNiaUFnSUNCZlgzTndjbVZoWkVGeWNtRjVPaUJmWDNOd2NtVmhaRUZ5Y21GNUxGeHlYRzRnSUNBZ1gxOWhkMkZwZERvZ1gxOWhkMkZwZEN4Y2NseHVJQ0FnSUY5ZllYTjVibU5IWlc1bGNtRjBiM0k2SUY5ZllYTjVibU5IWlc1bGNtRjBiM0lzWEhKY2JpQWdJQ0JmWDJGemVXNWpSR1ZzWldkaGRHOXlPaUJmWDJGemVXNWpSR1ZzWldkaGRHOXlMRnh5WEc0Z0lDQWdYMTloYzNsdVkxWmhiSFZsY3pvZ1gxOWhjM2x1WTFaaGJIVmxjeXhjY2x4dUlDQWdJRjlmYldGclpWUmxiWEJzWVhSbFQySnFaV04wT2lCZlgyMWhhMlZVWlcxd2JHRjBaVTlpYW1WamRDeGNjbHh1SUNBZ0lGOWZhVzF3YjNKMFUzUmhjam9nWDE5cGJYQnZjblJUZEdGeUxGeHlYRzRnSUNBZ1gxOXBiWEJ2Y25SRVpXWmhkV3gwT2lCZlgybHRjRzl5ZEVSbFptRjFiSFFzWEhKY2JpQWdJQ0JmWDJOc1lYTnpVSEpwZG1GMFpVWnBaV3hrUjJWME9pQmZYMk5zWVhOelVISnBkbUYwWlVacFpXeGtSMlYwTEZ4eVhHNGdJQ0FnWDE5amJHRnpjMUJ5YVhaaGRHVkdhV1ZzWkZObGREb2dYMTlqYkdGemMxQnlhWFpoZEdWR2FXVnNaRk5sZEN4Y2NseHVJQ0FnSUY5ZlkyeGhjM05RY21sMllYUmxSbWxsYkdSSmJqb2dYMTlqYkdGemMxQnlhWFpoZEdWR2FXVnNaRWx1TEZ4eVhHNGdJQ0FnWDE5aFpHUkVhWE53YjNOaFlteGxVbVZ6YjNWeVkyVTZJRjlmWVdSa1JHbHpjRzl6WVdKc1pWSmxjMjkxY21ObExGeHlYRzRnSUNBZ1gxOWthWE53YjNObFVtVnpiM1Z5WTJWek9pQmZYMlJwYzNCdmMyVlNaWE52ZFhKalpYTXNYSEpjYmlBZ0lDQmZYM0psZDNKcGRHVlNaV3hoZEdsMlpVbHRjRzl5ZEVWNGRHVnVjMmx2YmpvZ1gxOXlaWGR5YVhSbFVtVnNZWFJwZG1WSmJYQnZjblJGZUhSbGJuTnBiMjRzWEhKY2JuMDdYSEpjYmlJc2JuVnNiQ3h1ZFd4c0xHNTFiR3dzYm5Wc2JDeHVkV3hzTEc1MWJHd3NiblZzYkN4dWRXeHNMRzUxYkd3c2JuVnNiQ3h1ZFd4c0xHNTFiR3dzYm5Wc2JDeHVkV3hzTEc1MWJHd3NiblZzYkN4dWRXeHNMRzUxYkd3c2JuVnNiQ3h1ZFd4c0xHNTFiR3dzYm5Wc2JDeHVkV3hzWFN3aWJtRnRaWE1pT2xzaVpYaDBaVzVrVTNSaGRHbGpjeUlzSW1RaUxDSmlJaXdpVDJKcVpXTjBJaXdpYzJWMFVISnZkRzkwZVhCbFQyWWlMQ0pmWDNCeWIzUnZYMThpTENKQmNuSmhlU0lzSW5BaUxDSndjbTkwYjNSNWNHVWlMQ0pvWVhOUGQyNVFjbTl3WlhKMGVTSXNJbU5oYkd3aUxDSmZYMlY0ZEdWdVpITWlMQ0pVZVhCbFJYSnliM0lpTENKVGRISnBibWNpTENKZlh5SXNJbU52Ym5OMGNuVmpkRzl5SWl3aVkzSmxZWFJsSWl3aVgxOWhjM05wWjI0aUxDSmhjM05wWjI0aUxDSjBJaXdpY3lJc0lta2lMQ0p1SWl3aVlYSm5kVzFsYm5Seklpd2liR1Z1WjNSb0lpd2lZWEJ3YkhraUxDSmZYM053Y21WaFpFRnljbUY1SWl3aWRHOGlMQ0ptY205dElpd2ljR0ZqYXlJc0ltd2lMQ0poY2lJc0luTnNhV05sSWl3aVkyOXVZMkYwSWl3aVUzVndjSEpsYzNObFpFVnljbTl5SWl3aVpYSnliM0lpTENKemRYQndjbVZ6YzJWa0lpd2liV1Z6YzJGblpTSXNJbVVpTENKRmNuSnZjaUlzSW01aGJXVWlMQ0pwYzFaaGJHbGtSR0YwWlNJc0ltUm1TWE5UWVcxbFdXVmhjaUlzSW1SbVNYTlRZVzFsVFc5dWRHZ2lMQ0prWmtselUyRnRaVkYxWVhKMFpYSWlMQ0prWmtselUyRnRaVVJoZVNJc0ltUm1TWE5GY1hWaGJDSXNJbEJ2Y0hCbGNrTnZiWEJ2Ym1WdWRDSmRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdPenM3T3pzN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1NVRkJTVUVzWTBGQllTeEhRVUZITEZOQlFXaENRU3hoUVVGaFFTeERRVUZaUXl4RFFVRkRMRVZCUVVWRExFTkJRVU1zUlVGQlJUdEJRVU12UWtZc1JVRkJRVUVzWTBGQllTeEhRVUZIUnl4TlFVRk5MRU5CUVVORExHTkJRV01zU1VGRGFFTTdRVUZCUlVNc1NVRkJRVUVzVTBGQlV5eEZRVUZGTzBGQlFVY3NSMEZCUXl4WlFVRlpReXhMUVVGTExFbEJRVWtzVlVGQlZVd3NRMEZCUXl4RlFVRkZReXhEUVVGRExFVkJRVVU3U1VGQlJVUXNRMEZCUXl4RFFVRkRTU3hUUVVGVExFZEJRVWRJTEVOQlFVTTdRVUZCUlN4SFFVRkZMRWxCUXpWRkxGVkJRVlZFTEVOQlFVTXNSVUZCUlVNc1EwRkJReXhGUVVGRk8wbEJRVVVzUzBGQlN5eEpRVUZKU3l4RFFVRkRMRWxCUVVsTUxFTkJRVU1zUlVGQlJTeEpRVUZKUXl4TlFVRk5MRU5CUVVOTExGTkJRVk1zUTBGQlEwTXNZMEZCWXl4RFFVRkRReXhKUVVGSkxFTkJRVU5TTEVOQlFVTXNSVUZCUlVzc1EwRkJReXhEUVVGRExFVkJRVVZPTEVOQlFVTXNRMEZCUTAwc1EwRkJReXhEUVVGRExFZEJRVWRNTEVOQlFVTXNRMEZCUTBzc1EwRkJReXhEUVVGRE8wZEJRVWM3UVVGRGNrY3NSVUZCUVN4UFFVRlBVQ3hqUVVGaExFTkJRVU5ETEVOQlFVTXNSVUZCUlVNc1EwRkJReXhEUVVGRE8wRkJRemxDTEVOQlFVTTdRVUZGVFN4VFFVRlRVeXhUUVVGVFFTeERRVUZEVml4RFFVRkRMRVZCUVVWRExFTkJRVU1zUlVGQlJUdEZRVU0xUWl4SlFVRkpMRTlCUVU5QkxFTkJRVU1zUzBGQlN5eFZRVUZWTEVsQlFVbEJMRU5CUVVNc1MwRkJTeXhKUVVGSkxFVkJRM0pETEUxQlFVMHNTVUZCU1ZVc1UwRkJVeXhEUVVGRExITkNRVUZ6UWl4SFFVRkhReXhOUVVGTkxFTkJRVU5ZTEVOQlFVTXNRMEZCUXl4SFFVRkhMQ3RDUVVFclFpeERRVUZETzBGQlF6ZEdSaXhGUVVGQlFTeGpRVUZoTEVOQlFVTkRMRU5CUVVNc1JVRkJSVU1zUTBGQlF5eERRVUZETzBWQlEyNUNMRk5CUVZOWkxFVkJRVVZCTEVkQlFVYzdTVUZCUlN4SlFVRkpMRU5CUVVORExGZEJRVmNzUjBGQlIyUXNRMEZCUXp0QlFVRkZPMFZCUTNSRFFTeERRVUZETEVOQlFVTlBMRk5CUVZNc1IwRkJSMDRzUTBGQlF5eExRVUZMTEVsQlFVa3NSMEZCUjBNc1RVRkJUU3hEUVVGRFlTeE5RVUZOTEVOQlFVTmtMRU5CUVVNc1EwRkJReXhKUVVGSldTeEZRVUZGTEVOQlFVTk9MRk5CUVZNc1IwRkJSMDRzUTBGQlF5eERRVUZEVFN4VFFVRlRMRVZCUVVVc1NVRkJTVTBzUlVGQlJTeEZRVUZGTEVOQlFVTTdRVUZEZUVZN1FVRkZUeXhKUVVGSlJ5eFBRVUZSTEVkQlFVY3NVMEZCV0VFc1VVRkJVVUVzUjBGQll6dEZRVU0zUWtFc1QwRkJVU3hIUVVGSFpDeE5RVUZOTEVOQlFVTmxMRTFCUVUwc1NVRkJTU3hUUVVGVFJDeFJRVUZSUVN4RFFVRkRSU3hEUVVGRExFVkJRVVU3UVVGRE4wTXNTVUZCUVN4TFFVRkxMRWxCUVVsRExFTkJRVU1zUlVGQlJVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSVU1zUTBGQlF5eEhRVUZIUXl4VFFVRlRMRU5CUVVORExFMUJRVTBzUlVGQlJVZ3NRMEZCUXl4SFFVRkhReXhEUVVGRExFVkJRVVZFTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUTJwRVJDeE5RVUZCUVN4RFFVRkRMRWRCUVVkSExGTkJRVk1zUTBGQlEwWXNRMEZCUXl4RFFVRkRPMDFCUTJoQ0xFdEJRVXNzU1VGQlNXUXNRMEZCUXl4SlFVRkpZU3hEUVVGRExFVkJRVVVzU1VGQlNXcENMRTFCUVUwc1EwRkJRMHNzVTBGQlV5eERRVUZEUXl4alFVRmpMRU5CUVVORExFbEJRVWtzUTBGQlExVXNRMEZCUXl4RlFVRkZZaXhEUVVGRExFTkJRVU1zUlVGQlJWa3NRMEZCUXl4RFFVRkRXaXhEUVVGRExFTkJRVU1zUjBGQlIyRXNRMEZCUXl4RFFVRkRZaXhEUVVGRExFTkJRVU03UVVGRGFFWTdRVUZEUVN4SlFVRkJMRTlCUVU5WkxFTkJRVU03UjBGRFdEdEJRVU5FTEVWQlFVRXNUMEZCVDBZc1QwRkJVU3hEUVVGRFVTeExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZSaXhUUVVGVExFTkJRVU03UVVGRE1VTXNRMEZCUXp0QlFUWkxUU3hUUVVGVFJ5eGhRVUZoUVN4RFFVRkRReXhGUVVGRkxFVkJRVVZETEVsQlFVa3NSVUZCUlVNc1NVRkJTU3hGUVVGRk8wRkJRekZETEVWQlFVRXNTVUZCU1VFc1NVRkJTU3hKUVVGSlRpeFRRVUZUTEVOQlFVTkRMRTFCUVUwc1MwRkJTeXhEUVVGRExFVkJRVVVzUzBGQlN5eEpRVUZKU0N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRlV5eERRVUZETEVkQlFVZEdMRWxCUVVrc1EwRkJRMG9zVFVGQlRTeEZRVUZGVHl4RlFVRkZMRVZCUVVWV0xFTkJRVU1zUjBGQlIxTXNRMEZCUXl4RlFVRkZWQ3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU5xUml4SlFVRkJMRWxCUVVsVkxFVkJRVVVzU1VGQlNTeEZRVUZGVml4RFFVRkRMRWxCUVVsUExFbEJRVWtzUTBGQlF5eEZRVUZGTzBGQlEzQkNMRTFCUVVFc1NVRkJTU3hEUVVGRFJ5eEZRVUZGTEVWQlFVVkJMRVZCUVVVc1IwRkJSM3BDTEV0QlFVc3NRMEZCUTBVc1UwRkJVeXhEUVVGRGQwSXNTMEZCU3l4RFFVRkRkRUlzU1VGQlNTeERRVUZEYTBJc1NVRkJTU3hGUVVGRkxFTkJRVU1zUlVGQlJWQXNRMEZCUXl4RFFVRkRPMEZCUTNCRVZTeE5RVUZCUVN4RlFVRkZMRU5CUVVOV0xFTkJRVU1zUTBGQlF5eEhRVUZIVHl4SlFVRkpMRU5CUVVOUUxFTkJRVU1zUTBGQlF6dEJRVU51UWp0QlFVTktPMEZCUTBFc1JVRkJRU3hQUVVGUFRTeEZRVUZGTEVOQlFVTk5MRTFCUVUwc1EwRkJRMFlzUlVGQlJTeEpRVUZKZWtJc1MwRkJTeXhEUVVGRFJTeFRRVUZUTEVOQlFVTjNRaXhMUVVGTExFTkJRVU4wUWl4SlFVRkpMRU5CUVVOclFpeEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVTTFSRHRCUVRKSGRVSXNUMEZCVDAwc1pVRkJaU3hMUVVGTExGVkJRVlVzUjBGQlIwRXNaVUZCWlN4SFFVRkhMRlZCUVZWRExFdEJRVXNzUlVGQlJVTXNWVUZCVlN4RlFVRkZReXhQUVVGUExFVkJRVVU3UVVGRGJrZ3NSVUZCUVN4SlFVRkpReXhEUVVGRExFZEJRVWNzU1VGQlNVTXNTMEZCU3l4RFFVRkRSaXhQUVVGUExFTkJRVU03UVVGRE1VSXNSVUZCUVN4UFFVRlBReXhEUVVGRExFTkJRVU5GTEVsQlFVa3NSMEZCUnl4cFFrRkJhVUlzUlVGQlJVWXNRMEZCUXl4RFFVRkRTQ3hMUVVGTExFZEJRVWRCTEV0QlFVc3NSVUZCUlVjc1EwRkJReXhEUVVGRFJpeFZRVUZWTEVkQlFVZEJMRlZCUVZVc1JVRkJSVVVzUTBGQlF6dEJRVU53UmpzN1FVTnVWVTBzU1VGQlFTeHBRa0ZCYVVJc1IwRkJjVU1zVlVGQlZTeEZRVXMzUXl4RlFVRkJPMEZCU25aQ0xFbEJRVUVzU1VGQlFTeEZRVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMR3RDUVVFd1FpeEZRVUV4UWl4clFrRkJhMElzUjBGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkhMRXRCUVVzc1IwRkJRU3hGUVVGQkxFVkJRekZDTEVWQlFXZENMRWRCUVVFc1JVRkJRU3hEUVVGQkxGRkJRVUVzUlVGQmFFSXNVVUZCVVN4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVWNzUzBGQlN5eEhRVUZCTEVWQlFVRXNSVUZEYUVJc1UwRkJVeXhIUVVGQkxFVkJRVUVzUTBGQlFTeFRRVUZCTEVWQlExUXNVVUZCVVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hSUVVGQk8wbEJSVklzU1VGQlRTeFRRVUZUTEVkQlFVYzdRVUZEYUVJc1ZVRkJSVHRCUVVOR0xGVkJRVVVzWVVGQlFTeERRVUZCTEUxQlFVRXNRMEZCWXl4UlFVRlJMRWRCUVVjc1YwRkJWeXhIUVVGSExFVkJRVVVzUTBGQlJUdEJRVVV2UXl4SlFVRkJMRkZCUTBVc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCUVN4VFFVRlRMRVZCUVVVc1UwRkJVeXhGUVVOd1FpeEpRVUZKTEVWQlFVTXNVVUZCVVN4RlFVRkJMRmxCUVVFc1JVRkRSQ3hUUVVGVExFVkJRMVlzV1VGQlFTeEZRVUZCTEUxQlFVMHNTVUZGYUVJc1VVRkJVU3hEUVVOTU8wRkJSVlk3TzBGRFprRXNTVUZCVFN4eFFrRkJjVUlzUjBGQlJ5eFZRVU0xUWl4alFVRnRReXhGUVVOdVF5eFhRVUZ2UWl4RlFVRkJPMEZCUlhCQ0xFbEJRVUVzU1VGQlRTeEhRVUZITEVkQlFVY3NUVUZCVFN4RFFVRjNRaXhKUVVGSkxFTkJRVU03UVVGREwwTXNTVUZCUVN4SlFVRk5MR2xDUVVGcFFpeEhRVUZITEUxQlFVMHNRMEZCUXl4alFVRmpMRU5CUVVNN1FVRkRhRVFzU1VGQlFTeHBRa0ZCYVVJc1EwRkJReXhQUVVGUExFZEJRVWNzWTBGQll6dEJRVU14UXl4SlFVRkJMRWxCUVUwc2EwSkJRV3RDTEVkQlFVY3NWMEZCVnl4RFFVTndReXhWUVVGRExFdEJRV2xDTEVWQlFVRTdPMEZCUTJoQ0xGRkJRVUVzU1VGQlRTeE5RVUZOTEVkQlExWXNRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVVHRCUVVOaUxGbEJRVUVzUzBGQlN5eERRVUZETEZsQlFWazdXVUZEYkVJN1FVRkRSeXhwUWtGQlFTeFpRVUZaTzJsQ1FVTmFMRWxCUVVrc1EwRkJReXhWUVVGRExGZEJRVmNzUlVGQlN5eEZRVUZCTEU5QlFVRXNWMEZCVnl4WlFVRlpMRWxCUVVrc1EwRkJRU3hGUVVGQkxFTkJRVU03V1VGRGRrUXNTMEZCU3l4RFFVRkRMRTFCUVUwN1FVRkRaQ3hSUVVGQkxFbEJRVWtzUjBGQlJ5eERRVUZETEU5QlFVOHNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEUxQlFXTXNRMEZCUXl4RlFVRkZPMWxCUTNoRUxFbEJRMFVzUlVGRFJTeFhRVUZYTzBGQlExZ3NaMEpCUVVFc1RVRkJUU3haUVVGWkxGZEJRVmM3WjBKQlF6ZENMRTFCUVUwc1EwRkJReXhUUVVGVExFTkJRVU1zVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVTjJReXhGUVVORU8wRkJRMEVzWjBKQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc2FVSkJRV2xDTEVOQlFVTXNUMEZCVHl4TlFVRkhMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxHbENRVUZCTEVWQlFVRXNTMEZCU3l4RFFVRkRPenM3UVVGSGVFTXNTMEZCUXl4RlFVTkVMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRMlE3UVVGRFJDeEpRVUZCTEZOQlFWTXNRMEZCUXl4WlFVRkJPMEZCUTFJc1VVRkJRU3hSUVVGUkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1YwRkJWeXhGUVVGRkxHdENRVUZyUWl4RFFVRkRPMUZCUXpGRUxFOUJRVThzV1VGQlFUdEJRVU5NTEZsQlFVRXNVVUZCVVN4RFFVRkRMRzFDUVVGdFFpeERRVUZETEZkQlFWY3NSVUZCUlN4clFrRkJhMElzUTBGQlF6dEJRVU12UkN4VFFVRkRPMEZCUTBnc1MwRkJReXhGUVVGRkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1EwRkJRenRCUVVONFFpeEpRVUZCTEU5QlFVOHNSMEZCUnp0QlFVTmFMRU5CUVVNN1FVRkZUU3hKUVVGTkxHMUNRVUZ0UWl4SFFVRjFReXhWUVVGRExFVkJUM1pGTEVWQlFVRTdRVUZPUXl4SlFVRkJMRWxCUVVFc1VVRkJVU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFJRVUZCTEVWQlExSXNZMEZCWXl4SFFVRkJMRVZCUVVFc1EwRkJRU3hqUVVGQkxFVkJRMlFzVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUTFRc1dVRkJXU3hyUWtGQlFTeEZRVU5hTEV0QlFVc3NSMEZCUVN4RlFVRkJMRU5CUVVFc1MwRkJRU3hGUVVOTUxGZEJRVmNzUjBGQlFTeEZRVUZCTEVOQlFVRXNWMEZCUVR0SlFVVllMRWxCUVUwc1UwRkJVeXhIUVVGSExIRkNRVUZ4UWl4RFFVRkRMR05CUVdNc1JVRkJSU3hYUVVGWExFTkJRVU03UVVGRGNFVXNTVUZCUVN4UlFVTkZMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlEwVXNVMEZCVXl4RlFVRkZMRk5CUVZNc1JVRkRjRUlzUzBGQlN5eEZRVUZGTEV0QlFVc3NSVUZEV2l4SFFVRkhMRVZCUVVVc1ZVRkJReXhKUVVFeVFpeEZRVUZCTzBGQlF5OUNMRmxCUVVFc1UwRkJVeXhEUVVGRExFOUJRVThzUjBGQlJ5eEpRVUZKTzFsQlEzaENMRWxCUVVrc1dVRkJXU3hGUVVGRk8wRkJRMmhDTEdkQ1FVRkJMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzU1VGQlNUczdRVUZGTDBJc1UwRkJReXhGUVVWQkxFVkJRVUVzVVVGQlVTeERRVU5NTzBGQlJWWXNRMEZCUXpzN1FVTkdSQ3hKUVVGWkxFOUJaVmc3UVVGbVJDeERRVUZCTEZWQlFWa3NUMEZCVHl4RlFVRkJPMEZCUTJwQ0xFbEJRVUVzVDBGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4SFFVRkJMRk5CUVcxQ08wRkJRMjVDTEVsQlFVRXNUMEZCUVN4RFFVRkJMRmRCUVVFc1EwRkJRU3hIUVVGQkxGZEJRWFZDTzBGQlEzWkNMRWxCUVVFc1QwRkJRU3hEUVVGQkxGZEJRVUVzUTBGQlFTeEhRVUZCTEZkQlFYVkNPMEZCUTNaQ0xFbEJRVUVzVDBGQlFTeERRVUZCTEZsQlFVRXNRMEZCUVN4SFFVRkJMRmxCUVhsQ08wRkJRM3BDTEVsQlFVRXNUMEZCUVN4RFFVRkJMRkZCUVVFc1EwRkJRU3hIUVVGQkxGRkJRV2xDTzBGQlEycENMRWxCUVVFc1QwRkJRU3hEUVVGQkxGVkJRVUVzUTBGQlFTeEhRVUZCTEZWQlFYRkNPMEZCUTNKQ0xFbEJRVUVzVDBGQlFTeERRVUZCTEUxQlFVRXNRMEZCUVN4SFFVRkJMRTFCUVdFN1FVRkRZaXhKUVVGQkxFOUJRVUVzUTBGQlFTeExRVUZCTEVOQlFVRXNSMEZCUVN4TFFVRlhPMEZCUTFnc1NVRkJRU3hQUVVGQkxFTkJRVUVzVDBGQlFTeERRVUZCTEVkQlFVRXNUMEZCWlR0QlFVTm1MRWxCUVVFc1QwRkJRU3hEUVVGQkxFOUJRVUVzUTBGQlFTeEhRVUZCTEVkQlFWYzdRVUZEV0N4SlFVRkJMRTlCUVVFc1EwRkJRU3hMUVVGQkxFTkJRVUVzUjBGQlFTeExRVUZYTzBGQlExZ3NTVUZCUVN4UFFVRkJMRU5CUVVFc1VVRkJRU3hEUVVGQkxFZEJRVUVzVVVGQmFVSTdRVUZEYWtJc1NVRkJRU3hQUVVGQkxFTkJRVUVzVjBGQlFTeERRVUZCTEVkQlFVRXNWMEZCZFVJN1FVRkRka0lzU1VGQlFTeFBRVUZCTEVOQlFVRXNSMEZCUVN4RFFVRkJMRWRCUVVFc1IwRkJUenRCUVVOVUxFTkJRVU1zUlVGbVZ5eFBRVUZQTEV0QlFWQXNUMEZCVHl4SFFXVnNRaXhGUVVGQkxFTkJRVUVzUTBGQlFUdEJRVVZFTEZOQlFWTXNZMEZCWXl4SFFVRkJPenRCUVVWeVFpeEpRVUZCTEVsQlFVMHNTMEZCU3l4SlFVRkpMRTlCUVU4c1RVRkJUU3hMUVVGTE8wRkJReTlDTEZWQlFVVTdWVUZEUVN4VlFVRlZMRU5CUjJJN1FVRkZSQ3hKUVVGQkxFOUJRVThzUzBGQlN6dEJRVU5rTzBGQlJVOHNTVUZCVFN4M1FrRkJkMElzUjBGQlJ5eEZRVUZGTzBGQlJURkRPMEZCUlUwc1UwRkJWU3hQUVVGUExFTkJRVU1zUzBGQmNVTXNSVUZCUVR0QlFVTXpSQ3hKUVVGQkxFbEJRVWtzUzBGQlN5eEpRVUZKTEVsQlFVa3NSVUZCUlR0UlFVTnFRaXhQUVVGUExFbEJRVWtzU1VGQlNTeEZRVUZGT3p0SlFVZHVRaXhKUVVGTkxFTkJRVU1zUjBGQlJ5eFBRVUZQTEV0QlFVc3NTMEZCU3l4UlFVRlJMRWRCUVVjc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRja1VzU1VGQlFTeFBRVUZQTEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzU1VGQlNTeEpRVUZKTEVWQlFVVTdRVUZEY0VNN1FVRkZRVHM3T3pzN096czdPMEZCVTBjN1FVRkRSeXhUUVVGVkxGTkJRVk1zUTBGRGRrSXNTMEZCWVN4RlFVTmlMRlZCUVRaQ0xFVkJRemRDTEUxQlFUQkNMRVZCUXpGQ0xHRkJRWE5DTEVWQlEzUkNMRTlCUVhsQ0xFVkJRVUU3U1VGQmVrSXNTVUZCUVN4UFFVRkJMRXRCUVVFc1RVRkJRU3hGUVVGQkxFVkJRVUVzVDBGQlowSXNSMEZCUVN4UFFVRlBMRVZCUVVVc1EwRkJRVHRCUVVWNlFpeEpRVUZCTEVsQlFVMHNXVUZCV1N4SFFVTm9RaXhsUVVGbExFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NaVUZCWlN4RFFVRkRMR2RDUVVGblFpeEZRVUZGTEVOQlFVTTdRVUZGYUVVc1NVRkJRU3hKUVVGTkxFOUJRVThzUjBGQlJ5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExGVkJRVlVzUjBGQlJ5eERRVUZETEZWQlFWVXNRMEZCUXp0SlFVVnlSU3hMUVVGeFFpeEpRVUZCTEVWQlFVRXNSMEZCUVN4RFFVRlBMRVZCUVZBc1UwRkJUeXhIUVVGQkxFOUJRVUVzUlVGQlVDeHhRa0ZCVHl4RlFVRlFMRVZCUVVFc1JVRkJUeXhGUVVGRk8wRkJRWHBDTEZGQlFVRXNTVUZCVFN4UlFVRk5MRWRCUVVFc1UwRkJRU3hEUVVGQkxFVkJRVUVzUTBGQlFUdFJRVU5tTEVsQlFVMHNWVUZCVlN4SFFVRkhMRXRCUVVzc1EwRkJReXhMUVVGTExFVkJRVVVzVVVGQlRTeEZRVUZGTEU5QlFVOHNSVUZCUlR0QlFVTXZReXhaUVVGQkxFMUJRVTBzUlVGQlJTeFpRVUZaTzBGQlEzQkNMRmxCUVVFc01rSkJRVEpDTEVWQlFVVXNTVUZCU1R0QlFVTnFReXhaUVVGQkxEUkNRVUUwUWl4RlFVRkZMRWxCUVVrN1FVRkRia01zVTBGQlFTeERRVUZETzFGQlEwWXNTVUZEUlN4UFFVRlBMRU5CUVVNc1ZVRkJWU3hEUVVGRE8wRkJRMjVDTEdGQlFVTXNRMEZCUXl4aFFVRmhMRWxCUVVrc1MwRkJTeXhMUVVGTExGVkJRVlVzUTBGQlF5eFZRVUZWTEVWQlFVVXNVVUZCVFN4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRExFVkJRM0JGTzBGQlEwRXNXVUZCUVN4UFFVRlBMRlZCUVZVN096dEJRVWR5UWl4SlFVRkJMRTlCUVU4c1NVRkJTVHRCUVVOaU8wRkJUVUU3T3pzN08wRkJTMGM3UVVGRFlTeFRRVUZCTEU5QlFVOHNRMEZCUXl4SlFVRlZMRVZCUVVVc1QwRkJZeXhGUVVGQk8wRkJRMmhFT3pzN1FVRkhSenRKUVVOSUxFOUJRVTlITEZOQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFXRXNTVUZCU1N4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03UVVGRE9VVTdRVUZGUVR0QlFVVkJPenM3T3pzN08wRkJUMGM3VTBGRFlTeFZRVUZWTEVOQlEzaENMRWxCUVZVc1JVRkRWaXhUUVVGcFFpeEZRVU5xUWl4TlFVRmxMRVZCUVVFN1FVRkZaaXhKUVVGQkxFbEJRVWtzVFVGQlRTeExRVUZMTEVsQlFVa3NSVUZCUlR0QlFVTnVRaXhSUVVGQkxFOUJRVThzVFVGQlRTeERRVUZETEVsQlFVa3NSVUZCUlN4VFFVRlRMRVZCUVVVN1FVRkROMElzV1VGQlFTd3lRa0ZCTWtJc1JVRkJSU3hKUVVGSk8wRkJRMnBETEZsQlFVRXNORUpCUVRSQ0xFVkJRVVVzU1VGQlNUdEJRVU51UXl4VFFVRkJMRU5CUVVNN08wRkJSVW9zU1VGQlFTeEpRVUZKTEZOQlFWTXNSMEZCUnl4TlFVRk5MRWRCUVVjc1pVRkJaU3hEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEZOQlFWTTdRVUZETlVRc1NVRkJRU3hKUVVGSkxFMUJRVTBzU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlR0QlFVTjRRaXhSUVVGQkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlExWXNiVVZCUVRKRUxFMUJRVTBzUlVGQlFTeE5RVUZCTEVOQlFVc3NRMEZEZGtVN08wbEJSVWdzVTBGQlV5eEhRVUZITEZOQlFWTXNTVUZCU1N4bFFVRmxMRU5CUVVNc1owSkJRV2RDTEVWQlFVVXNRMEZCUXp0QlFVTTFSQ3hKUVVGQkxFOUJRVThzVFVGQlRTeERRVUZETEVsQlFVa3NSVUZCUlN4VFFVRlRMRVZCUVVVN1FVRkROMElzVVVGQlFTeE5RVUZOTEVWQlFVVXNVMEZCVXp0QlFVTnFRaXhSUVVGQkxESkNRVUV5UWl4RlFVRkZMRWxCUVVrN1FVRkRha01zVVVGQlFTdzBRa0ZCTkVJc1JVRkJSU3hKUVVGSk8wRkJRMjVETEV0QlFVRXNRMEZCUXp0QlFVTktPMEZCUlVFN096czdPenRCUVUxSE8wRkJRMkVzVTBGQlFTeGpRVUZqTEVOQlF6VkNMRWxCUVRaQ0xFVkJRemRDTEVWQlFUQkZMRVZCUVVFN1VVRkJlRVVzVlVGQlZTeEhRVUZCTEVWQlFVRXNRMEZCUVN4VlFVRkJMRVZCUVVVc1RVRkJUU3hIUVVGQkxFVkJRVUVzUTBGQlFTeE5RVUZCTzBGQlJYQkNMRWxCUVVFc1NVRkJUU3hUUVVGVExFbEJRMklzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hWUVVGVkxFTkJRVU1zVFVGQlRTeEhRVUZITzBGQlF5OURMRlZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU03UVVGRFpDeFZRVUZGTEZWQlFWVXNRMEZEVEN4RFFVRkRPMEZCUTFvc1NVRkJRU3hQUVVGUExFTkJRVU1zU1VGQlNTeEpRVUZKTEZWQlFWVXNRMEZCUXl4SlFVRkpMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUTBGQlF5eExRVUZMTEVWQlFVVTdRVUZETlVRN1FVRkZRVHM3UVVGRlJ6dEJRVU5KTEVsQlFVMHNiMEpCUVc5Q0xFZEJRVWNzUzBGQlN6dEJRVVY2UXpzN096czdPenRCUVU5SE8xTkJRMkVzYlVKQlFXMUNMRU5CUTJwRExGTkJRV3RETEVWQlEyeERMRTlCUVdkRExFVkJRMmhETEV0QlFYbEVMRVZCUVVFN1NVRkZla1FzU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlR0QlFVTmtMRkZCUVVFc1QwRkJUeXhGUVVGRk96dEpRVWRZTEVsQlFVMHNhMEpCUVd0Q0xFZEJRVWNzWTBGQll5eERRVUZETEZOQlFWTXNSVUZCUlN4TFFVRkxMRU5CUVVNN1FVRkRNMFFzU1VGQlFTeEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExFOUJRVThzUjBGQlJ5eGpRVUZqTEVOQlFVTXNUMEZCVHl4RlFVRkZMRXRCUVVzc1EwRkJReXhIUVVGSExFVkJRVVU3UVVGRmRFVXNTVUZCUVN4UFFVRlBMRlZCUVVjc2EwSkJRV3RDTEVOQlFVRXNRMEZCUVN4TlFVRkJMRU5CUVVjc2IwSkJRVzlDTEVOQlFVY3NRMEZCUVN4TlFVRkJMRU5CUVVFc1owSkJRV2RDTEVOQlFVVTdRVUZETVVVN1FVRkZRVHM3T3pzN08wRkJUVWM3UVVGRFlTeFRRVUZCTEhWQ1FVRjFRaXhEUVVOeVF5eExRVUZoTEVWQlEySXNTMEZCZVVRc1JVRkJRVHRKUVVWNlJDeEpRVUZKTEVWQlFVTXNTMEZCU3l4TFFVRk1MRWxCUVVFc1NVRkJRU3hMUVVGTExFdEJRVXdzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4TFFVRkxMRU5CUVVVc1RVRkJUU3hEUVVGQkxFVkJRVVU3UVVGRGJFSXNVVUZCUVN4UFFVRlBMRVZCUVVVN08wbEJSMWdzU1VGQlRTeHJRa0ZCYTBJc1IwRkJSeXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NZMEZCWXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeExRVUZMTEVOQlFVTXNSMEZCUnl4RlFVRkZPMEZCUXpGRkxFbEJRVUVzU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4TFFVRkxMRU5CUVVNc1JVRkJSVHRCUVVOMFFpeFJRVUZCTEU5QlFVOHNhMEpCUVd0Q096dEpRVWN6UWl4SlFVRkpMRXRCUVVzc1EwRkJReXhOUVVGTkxFdEJRVXNzUTBGQlF5eEpRVUZKTEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRSUVVOc1F5eEpRVUZOTEcxQ1FVRnRRaXhIUVVGSExHTkJRV01zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1MwRkJTeXhEUVVGRE8wRkJRek5FTEZGQlFVRXNUMEZCVHl4RlFVRkhMRU5CUVVFc1RVRkJRU3hEUVVGQkxHdENRVUZyUWl4RlFVRkxMRWxCUVVFc1EwRkJRU3hEUVVGQkxFMUJRVUVzUTBGQlFTeHRRa0ZCYlVJc1EwRkJSVHM3UVVGSGVFUXNTVUZCUVN4SlFVRk5MR1ZCUVdVc1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTTdRVUZEZUVNc1NVRkJRU3hQUVVGUExFVkJRVWNzUTBGQlFTeE5RVUZCTEVOQlFVRXNhMEpCUVd0Q0xFVkJRVTBzUzBGQlFTeERRVUZCTEVOQlFVRXNUVUZCUVN4RFFVRkJMR1ZCUVdVc1RVRkJSenRCUVVOMFJEdEJRVU5CTzBGQlJVRTdPenM3T3p0QlFVMUhPMEZCUTJFc1UwRkJRU3hQUVVGUExFTkJRM0pDTEVsQlFWVXNSVUZEVml4RlFVRnZReXhGUVVGQk8wRkJRV3hETEVsQlFVRXNTVUZCUVN4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVkVzUlVGQlVpeEpRVUZKTEVkQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJSeXhEUVVGRExFZEJRVUVzUlVGQlFTeEZRVUZGTEdOQlFWVXNSVUZCVml4TlFVRk5MRWRCUVVjc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeERRVUZETEV0QlFVRXNSVUZCUlN4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFMUJRVlVzUlVGQlZpeE5RVUZOTEVkQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJSeXhEUVVGRExFZEJRVUVzUlVGQlFUdEJRVVZzUXl4SlFVRkJMRTlCUVU4c1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlF5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhGUVVGRkxFMUJRVTBzUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXp0QlFVTnlSVHRCUVcxQ1FUczdPenM3UVVGTFJ6dEJRVU5ITEZOQlFWVXNUMEZCVHl4RFFVRkRMRWxCUVZVc1JVRkJRVHRCUVVOb1F5eEpRVUZCTEU5QlFVOHNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVONlFqdEJRVVZCT3pzN096czdRVUZOUnp0QlFVTmhMRk5CUVVFc1owSkJRV2RDTEVOQlFVTXNSMEZCVXl4RlFVRkZMRTFCUVdVc1JVRkJRVHRKUVVONlJDeFBRVUZQTEZWQlFWVXNRMEZCUXl4SFFVRkhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUTBGQlF6dEJRVU4yUXp0QlFVVkJPMEZCUlVFN096czdPMEZCUzBjN1FVRkRSeXhUUVVGVkxHRkJRV0VzUTBGQlF5eEpRVUZWTEVWQlFVRTdRVUZEZEVNc1NVRkJRU3hQUVVGUExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTTdRVUZEZWtJN1FVRkZRVHM3T3pzN096dEJRVTlITzFOQlEyRXNZMEZCWXl4RFFVTTFRaXhKUVVGVkxFVkJRMVlzVFVGQlpTeEZRVU5tTEdkQ1FVRnpRaXhGUVVGQk8wbEJSWFJDTEVsQlFVMHNVMEZCVXl4SFFVRkhPMEZCUTJoQ0xGVkJRVVVzWlVGQlpTeERRVUZETEUxQlFVMDdRVUZEZUVJc1ZVRkJSU3hsUVVGbExFTkJRVU1zWjBKQlFXZENMRVZCUVVVc1EwRkJRenRKUVVOMlF5eFBRVUZQTEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVN1FVRkRka0lzVVVGQlFTeE5RVUZOTEVWQlFVVXNVMEZCVXp0QlFVTnFRaXhSUVVGQkxGbEJRVmtzUlVGQlJTeG5Ra0ZCWjBJN1FVRkRMMElzUzBGQlFTeERRVUZETzBGQlEwbzdRVUZGUVRzN096czdRVUZMUnp0QlFVTkhMRk5CUVZVc1pVRkJaU3hEUVVGRExFbEJRVlVzUlVGQlFUdEJRVU40UXl4SlFVRkJMRTlCUVU4c1dVRkJXU3hEUVVGRExFbEJRVWtzUTBGQlF6dEJRVU16UWp0QlFVVkJPenM3T3p0QlFVdEhPMEZCUTBjc1UwRkJWU3hqUVVGakxFTkJRVU1zU1VGQlZTeEZRVUZCTzBGQlEzWkRMRWxCUVVFc1QwRkJUeXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETzBGQlF6RkNPMEZCUlVFN096czdPMEZCUzBjN1FVRkRSeXhUUVVGVkxHbENRVUZwUWl4RFFVRkRMRWxCUVZVc1JVRkJRVHRCUVVNeFF5eEpRVUZCTEU5QlFVOHNZMEZCWXl4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVNM1FqdEJRVVZCT3pzN08wRkJTVWM3VTBGRFlTeGxRVUZsTEVkQlFVRTdRVUZETjBJc1NVRkJRU3hQUVVGUExGVkJRVlVzUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXp0QlFVTTVRanRCUVVWQk8wRkJRMEU3T3pzN08wRkJTMGM3UVVGRFJ5eFRRVUZWTEZkQlFWY3NRMEZCUXl4SlFVRlZMRVZCUVVFN1FVRkRjRU1zU1VGQlFTeFBRVUZQTEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNN1FVRkRka0k3UVVGRlFUczdPenM3UVVGTFJ6dEJRVU5ITEZOQlFWVXNXVUZCV1N4RFFVRkRMRWxCUVZVc1JVRkJRVHRCUVVOeVF5eEpRVUZCTEU5QlFVOHNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVONFFqdEJRVVZCT3pzN096dEJRVXRITzBGQlEwY3NVMEZCVlN4aFFVRmhMRU5CUVVNc1NVRkJWU3hGUVVGQk8wRkJRM1JETEVsQlFVRXNUMEZCVHl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRE8wRkJRM3BDTzBGQmQwSkJPenM3T3pzN1FVRk5SenRCUVVOaExGTkJRVUVzVlVGQlZTeERRVUZETEV0QlFXdENMRVZCUVVVc1MwRkJhMElzUlVGQlFUdEJRVU12UkN4SlFVRkJMRWxCUVVrc1MwRkJTeXhKUVVGSkxFdEJRVXNzUlVGQlJUdEJRVU5zUWl4UlFVRkJMRTlCUVU5RExGbEJRVmtzUTBGQlF5eExRVUZMTEVWQlFVVXNTMEZCU3l4RFFVRkRPenRUUVVNMVFqdEJRVU5NTEZGQlFVRXNUMEZCVHl4RFFVRkRMRXRCUVVzc1NVRkJTU3hEUVVGRExFdEJRVXM3TzBGQlJUTkNPMEZCUlVFN096czdPenRCUVUxSE8wRkJRMkVzVTBGQlFTeFhRVUZYTEVOQlFVTXNTMEZCYTBJc1JVRkJSU3hMUVVGdFFpeEZRVUZCTzBGQlEycEZMRWxCUVVFc1NVRkJTU3hMUVVGTExFbEJRVWtzUzBGQlN5eEZRVUZGTzBGQlEyeENMRkZCUVVFc1QwRkJUME1zWVVGQllTeERRVUZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRU5CUVVNN08xTkJRemRDTzBGQlEwd3NVVUZCUVN4UFFVRlBMRU5CUVVNc1MwRkJTeXhKUVVGSkxFTkJRVU1zUzBGQlN6czdRVUZGTTBJN1FVRkZRVHM3T3pzN08wRkJUVWM3UVVGRFlTeFRRVUZCTEdGQlFXRXNRMEZCUXl4TFFVRnJRaXhGUVVGRkxFdEJRV3RDTEVWQlFVRTdRVUZEYkVVc1NVRkJRU3hKUVVGSkxFdEJRVXNzU1VGQlNTeExRVUZMTEVWQlFVVTdRVUZEYkVJc1VVRkJRU3hQUVVGUFF5eGxRVUZsTEVOQlFVTXNTMEZCU3l4RlFVRkZMRXRCUVVzc1EwRkJRenM3VTBGREwwSTdRVUZEVEN4UlFVRkJMRTlCUVU4c1EwRkJReXhMUVVGTExFbEJRVWtzUTBGQlF5eExRVUZMT3p0QlFVVXpRanRCUVVWQk96czdPenM3UVVGTlJ6dEJRVU5oTEZOQlFVRXNVMEZCVXl4RFFVRkRMRXRCUVcxQ0xFVkJRVVVzUzBGQmJVSXNSVUZCUVR0QlFVTm9SU3hKUVVGQkxFbEJRVWtzUzBGQlN5eEpRVUZKTEV0QlFVc3NSVUZCUlR0QlFVTnNRaXhSUVVGQkxFOUJRVTlETEZkQlFWY3NRMEZCUXl4TFFVRkxMRVZCUVVVc1MwRkJTeXhEUVVGRE96dFRRVU16UWp0QlFVTk1MRkZCUVVFc1QwRkJUeXhEUVVGRExFdEJRVXNzU1VGQlNTeERRVUZETEV0QlFVczdPMEZCUlROQ08wRkJSVUU3T3pzN096dEJRVTFITzBGQlEyRXNVMEZCUVN4UFFVRlBMRU5CUTNKQ0xFdEJRVGhDTEVWQlF6bENMRXRCUVRoQ0xFVkJRVUU3UVVGRk9VSXNTVUZCUVN4SlFVRkpMRXRCUVVzc1NVRkJTU3hMUVVGTExFVkJRVVU3UVVGRGJFSXNVVUZCUVN4UFFVRlBReXhUUVVGVExFTkJRVU1zUzBGQlN5eEZRVUZGTEV0QlFVc3NRMEZCUXpzN1UwRkRla0k3UVVGRFRDeFJRVUZCTEU5QlFVOHNRMEZCUXl4TFFVRkxMRWxCUVVrc1EwRkJReXhMUVVGTE96dEJRVVV6UWp0QlFVVkJPenM3T3pzN08wRkJUMGM3VTBGRFlTeFpRVUZaTEVOQlF6RkNMRWRCUVZNc1JVRkRWQ3hUUVVGbExFVkJRMllzVDBGQllTeEZRVUZCTzBGQlJXSXNTVUZCUVN4SlFVRkpMRXRCUVVzN1FVRkRWQ3hKUVVGQkxFbEJRVTBzUzBGQlN5eEhRVUZITEZWQlFWVXNRMEZCUXl4VFFVRlRMRU5CUVVNN1FVRkRia01zU1VGQlFTeEpRVUZOTEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRE8wRkJSVGRDTEVsQlFVRXNTVUZCU1R0QlFVTkdMRkZCUVVFc1MwRkJTeXhIUVVGSExHZENRVUZuUWl4RFFVRkRMRWRCUVVjc1JVRkJSU3hGUVVGRkxFdEJRVXNzUlVGQlFTeExRVUZCTEVWQlFVVXNSMEZCUnl4RlFVRkJMRWRCUVVFc1JVRkJSU3hEUVVGRE96dEpRVU0zUXl4UFFVRlBMRWRCUVVjc1JVRkJSVHRSUVVOYUxFdEJRVXNzUjBGQlJ5eExRVUZMT3p0QlFVVm1MRWxCUVVFc1QwRkJUeXhMUVVGTE8wRkJRMlE3UVVGbFFUdEJRVVZCT3pzN096dEJRVXRITzBGQlJXRXNVMEZCUVN4alFVRmpMRU5CUXpWQ0xGVkJRV3RDTEVWQlEyeENMRlZCUVhGQ0xFVkJRVUU3UVVGRmNrSXNTVUZCUVN4SlFVRk5MRXRCUVVzc1IwRkJSeXhqUVVGakxFVkJRVVU3UVVGRk9VSXNTVUZCUVN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdEJRVU42UWl4UlFVRkJMRXRCUVVzc1EwRkJReXhqUVVGakxFZEJRVWNzUlVGQlJUczdRVUZGTTBJc1NVRkJRU3hMUVVGTExFTkJRVU1zWTBGQll5eERRVUZETEZWQlFWVXNRMEZCUXl4SFFVRkhMRlZCUVZVN1FVRkRMME03UVVGRlFUczdPenRCUVVsSE8wRkJRMGNzVTBGQlZTeG5Ra0ZCWjBJc1EwRkJReXhWUVVGdFFpeEZRVUZCTzBGQlEyeEVMRWxCUVVFc1NVRkJUU3hMUVVGTExFZEJRVWNzWTBGQll5eEZRVUZGTzBGQlJUbENMRWxCUVVFc1MwRkJTeXhEUVVGRExGbEJRVmtzUjBGQlJ5eFZRVUZWTzBGQlEycERPMEZCUlVFN096czdRVUZKUnp0VFFVTmhMR2RDUVVGblFpeEhRVUZCTzBGQlF6bENMRWxCUVVFc1NVRkJUU3hMUVVGTExFZEJRVWNzWTBGQll5eEZRVUZGTzBsQlJUbENMRTlCUVU4c1MwRkJTeXhEUVVGRExGbEJRVms3UVVGRE0wSTdRVUZGUVRzN096czdRVUZMUnp0QlFVTkhMRk5CUVZVc1pVRkJaU3hEUVVGRExGVkJRVzFDTEVWQlFVRTdRVUZEYWtRc1NVRkJRU3hKUVVGSkxFOUJRVThzVlVGQlZTeExRVUZMTEZGQlFWRXNSVUZCUlRzN1FVRkZiRU1zVVVGQlFTeEpRVUZOTEV0QlFVc3NSMEZCUnl4alFVRmpMRVZCUVVVN08wRkJSVGxDTEZGQlFVRXNUMEZCVHl4TFFVRkxMRU5CUVVNc1kwRkJZeXhIUVVGSExFdEJRVXNzUTBGQlF5eGpRVUZqTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1UwRkJVenM3VTBGRGNrVTdPMEZCUlV3c1VVRkJRU3hQUVVGUExGVkJRVlU3TzBGQlJYSkNPMEZCUlVFN096czdPenM3UVVGUFJ6dFRRVU5oTERKQ1FVRXlRaXhEUVVONlF5eEpRVUZWTEVWQlExWXNWVUZCYjBNc1JVRkRjRU1zVFVGQlpTeEZRVUZCTzBsQlJXWXNUMEZCVHl4VlFVRlZMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN1FVRkRja1E3UVVGRlFUczdPenM3TzBGQlRVYzdRVUZEWVN4VFFVRkJMSEZDUVVGeFFpeERRVUZETEVsQlFWVXNSVUZCUlN4TlFVRmxMRVZCUVVFN1NVRkRMMFFzVDBGQlR5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RlFVRkZMRkZCUVZFc1JVRkJSU3hOUVVGTkxFTkJRVU03UVVGRE0wTTdRVUZGUVRzN096czdPMEZCVFVjN1FVRkRZU3hUUVVGQkxIVkNRVUYxUWl4RFFVRkRMRWxCUVZVc1JVRkJSU3hOUVVGbExFVkJRVUU3U1VGRGFrVXNUMEZCVHl4VlFVRlZMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUlVGQlJTeE5RVUZOTEVOQlFVTTdRVUZEZUVNN1FVRkZRVHM3T3pzN08wRkJUVWM3UVVGRFlTeFRRVUZCTEdkQ1FVRm5RaXhEUVVGRExFdEJRV0VzUlVGQlJTeE5RVUZsTEVWQlFVRTdRVUZETjBRc1NVRkJRU3hQUVVGUExGVkJRVlVzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRVZCUVVVc1MwRkJTeXhEUVVGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNRMEZCUXp0QlFVTXZSRHRCUVVWQk96czdPenM3UVVGTlJ6dEJRVU5oTEZOQlFVRXNjVUpCUVhGQ0xFTkJRVU1zUzBGQllTeEZRVUZGTEUxQlFXVXNSVUZCUVR0QlFVTnNSU3hKUVVGQkxFOUJRVThzVlVGQlZTeERRVUZETEZGQlFWRXNRMEZCUXl4UFFVRlBMRVZCUVVVc1JVRkJSU3hMUVVGTExFTkJRVU1zUlVGQlJTeExRVUZMTEVWQlFVVXNUVUZCVFN4RFFVRkRPMEZCUXpsRU8wRkJSVUU3T3pzN096dEJRVTFITzBGQlEyRXNVMEZCUVN4MVFrRkJkVUlzUTBGRGNrTXNUMEZCWlN4RlFVTm1MRTFCUVdVc1JVRkJRVHRCUVVWbUxFbEJRVUVzVDBGQlR5eFZRVUZWTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1JVRkJSU3hGUVVGRkxFOUJRVThzUTBGQlF5eEZRVUZGTEV0QlFVc3NSVUZCUlN4TlFVRk5MRU5CUVVNN1FVRkRiRVU3UVVGbFFUczdPenM3TzBGQlRVYzdRVUZEWVN4VFFVRkJMR0ZCUVdFc1EwRkRNMElzUjBGQlV5eEZRVU5VTEVWQlVYbENMRVZCUVVFN1VVRlNla0lzUlVGUmRVSXNSMEZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVVVzUzBGQlFTeEZRVkIyUWl4UFFVRlBMR0ZCUVVFc1JVRkRVQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeHZRa0ZCYjBJc1IwRkJRU3hGUVVGQkxFTkJRVUVzYjBKQlFVRXNSVUZEY0VJc1dVRkJXU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFpRVUZCTEVWQlExb3NiMEpCUVc5Q0xFZEJRVUVzUlVGQlFTeERRVUZCTEc5Q1FVRkJMRVZCUTNCQ0xGVkJRVlVzUjBGQlFTeEZRVUZCTEVOQlFVRXNWVUZCUVR0QlFVZGFMRWxCUVVFc1VVRkRSU3hoUVVGaExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNUMEZCVHl4RlFVRkJMRTlCUVVFc1JVRkJSU3hQUVVGUExFVkJRVUVzVDBGQlFTeEZRVUZGTEVOQlFVTTdRVUZEZUVNc1UwRkJReXhaUVVGWk8wRkJRMWdzV1VGQlFTeFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVVNc1YwRkJWeXhGUVVGQk8wRkJRelZDTEdkQ1FVRkJMRWxCUVVrc1YwRkJWeXhaUVVGWkxFbEJRVWtzUlVGQlJUdEJRVU12UWl4dlFrRkJRU3hQUVVGUExGTkJRVk1zUTBGQlF5eEhRVUZITEVWQlFVVXNWMEZCVnl4RFFVRkRPenR4UWtGRE4wSTdiMEpCUTB3c1QwRkJUeXhUUVVGVExFTkJRVU1zUjBGQlJ5eEZRVUZGTEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNN08wRkJSVE5ETEdGQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTB3c1UwRkJReXh2UWtGQmIwSTdRVUZEYmtJc1dVRkJRU3h2UWtGQmIwSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJReXhGUVVGakxFVkJRVUU3YjBKQlFWb3NTMEZCU3l4SFFVRkJMRVZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVVVzUjBGQlJ5eEhRVUZCTEVWQlFVRXNRMEZCUVN4SFFVRkJPMmRDUVVOeVF5eFBRVUZCTEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzUlVGQlJTeEZRVUZGTEV0QlFVc3NSVUZCUVN4TFFVRkJMRVZCUVVVc1IwRkJSeXhGUVVGQkxFZEJRVUVzUlVGQlJTeERRVUZETzBGQlFYSkRMR0ZCUVhGRExFTkJRM1JETEVOQlFVTTdRVUZEU2l4VFFVRkRMRmxCUVZrN1FVRkRXQ3haUVVGQkxFTkJRVU1zV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkRMRmRCUVZjc1JVRkJTeXhGUVVGQkxFOUJRVUVzVTBGQlV5eERRVUZETEVkQlFVY3NSVUZCUlN4WFFVRlhMRU5CUVVNc1EwRkJNMElzUlVGQk1rSXNRMEZCUXl4RFFVRkRPMEZCUTI1RkxGTkJRVU1zYjBKQlFXOUNPMEZCUTI1Q0xGbEJRVUVzUTBGQlF5eHZRa0ZCYjBJc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlF5eEZRVUZqTEVWQlFVRTdiMEpCUVZvc1MwRkJTeXhIUVVGQkxFVkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVVXNSMEZCUnl4SFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQk8yZENRVU4wUXl4UFFVRkJMR2RDUVVGblFpeERRVUZETEVkQlFVY3NSVUZCUlN4RlFVRkZMRXRCUVVzc1JVRkJRU3hMUVVGQkxFVkJRVVVzUjBGQlJ5eEZRVUZCTEVkQlFVRXNSVUZCUlN4RFFVRkRPMEZCUVhKRExHRkJRWEZETEVOQlEzUkRMRU5CUVVNN1UwRkRTQ3hWUVVGVkxFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGVrTXNVVUZCUVN4TFFVRkxPMEZCUlZRN1FVRkZRVHM3T3pzN08wRkJUVWM3UVVGRFlTeFRRVUZCTEdGQlFXRXNRMEZETTBJc1IwRkJVeXhGUVVOVUxFVkJSM2RGTEVWQlFVRTdRVUZJZUVVc1NVRkJRU3hKUVVGQkxFVkJRVUVzUjBGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVZHpSU3hGUVVGRkxFZEJRVUVzUlVGQlFTeEZRVVowUlN4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeHZRa0ZCYjBJc1IwRkJRU3hGUVVGQkxFTkJRVUVzYjBKQlFVRTdTVUZIZEVJc1NVRkJTU3h2UWtGQmIwSXNTVUZCU1N4dlFrRkJiMElzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RlFVRkZPMEZCUXpORUxGRkJRVUVzVDBGQlR5eHZRa0ZCYjBJc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlF5eEZRVUZqTEVWQlFVRTdaMEpCUVZvc1MwRkJTeXhIUVVGQkxFVkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVVXNSMEZCUnl4SFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQk8xbEJRelZETEU5QlFVRXNaMEpCUVdkQ0xFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNTMEZCU3l4RlFVRkJMRXRCUVVFc1JVRkJSU3hIUVVGSExFVkJRVUVzUjBGQlFTeEZRVUZGTEVOQlFVTTdRVUZCY2tNc1UwRkJjVU1zUTBGRGRFTTdPMGxCUlVnc1VVRkRSU3hEUVVGRExGbEJRVms3UVVGRFdDeFJRVUZCTEZsQlFWa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJReXhYUVVGWExFVkJRVUU3TzBGQlF6VkNMRmxCUVVFc1NVRkJTU3hYUVVGWExGbEJRVmtzU1VGQlNTeEZRVUZGTzBGQlF5OUNMR2RDUVVGQkxFOUJRVThzVTBGQlV5eERRVUZETEVkQlFVY3NSVUZCUlN4WFFVRlhMRU5CUVVNN08ybENRVU0zUWp0QlFVTk1MR2RDUVVGQkxFOUJRVThzVTBGQlV5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkJMRVZCUVVFc1IwRkJRU3hYUVVGWExFTkJRVU1zU1VGQlNTeE5RVUZKTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUjBGQlFTeEpRVUZKTEVsQlFVa3NSVUZCUlN4RFFVRkRPenRCUVVWNlJDeFRRVUZETEVOQlFVTTdRVUZEU2l4UlFVRkJMRXRCUVVzN1FVRkZWRHRCUVVWblFpeFRRVUZCTEdWQlFXVXNRMEZETjBJc1MwRkJWeXhGUVVOWUxFVkJVMDBzUlVGQlFUdEJRVlJPTEVsQlFVRXNTVUZCUVN4RlFVRkJMRWRCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGVFNTeEZRVUZGTEVkQlFVRXNSVUZCUVN4RlFWSktMRTlCUVU4c1IwRkJRU3hGUVVGQkxFTkJRVUVzVDBGQlFTeEZRVU5RTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxGbEJRVmtzYTBKQlFVRXNSVUZEV2l4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeFZRVUZWTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVVFN1FVRk5XaXhKUVVGQkxGRkJRMFVzWVVGQllTeERRVUZETEV0QlFVc3NSVUZCUlR0QlFVTnVRaXhSUVVGQkxFOUJRVThzUlVGQlJTeFBRVUZQTEVkQlFVY3NXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExGTkJRVk03UVVGRGNFUXNVVUZCUVN4UFFVRlBMRVZCUVVVc1QwRkJUeXhIUVVGSExGVkJRVlVzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4VFFVRlRPMHRCUTI1RUxFTkJRVU03VTBGRFJpeFpRVUZaTEV0QlFVRXNTVUZCUVN4SlFVRmFMRmxCUVZrc1MwRkJXaXhOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEZsQlFWa3NRMEZCUlN4SlFVRkpMRU5CUVVNc1ZVRkJReXhYUVVGWExFVkJRVUU3UVVGRE4wSXNXVUZCUVN4UFFVRkJMRmRCUVZjc1EwRkRWQ3hMUVVGTExFVkJRMHdzVjBGQlZ5eFpRVUZaTEVsQlFVa3NSMEZCUnl4WFFVRlhMRWRCUVVjc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGRE4wUTdRVUZJUkN4VFFVZERMRU5CUTBZc1EwRkJRVHRCUVVORUxGTkJRVU1zV1VGQldUdEJRVU5ZTEZsQlFVRXNRMEZCUXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVU1zVjBGQlZ5eEZRVUZMTEVWQlFVRXNUMEZCUVN4WFFVRlhMRU5CUVVNc1MwRkJTeXhGUVVGRkxGZEJRVmNzUTBGQlF5eERRVUV2UWl4RlFVRXJRaXhEUVVGRExFTkJRVU03VTBGRGRFVXNWVUZCVlN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUXpORExGRkJRVUVzUzBGQlN6dEJRVVZVTzBGQlJVMHNVMEZCVlN4alFVRmpMRU5CUXpWQ0xGTkJRV1VzUlVGRFppeFBRVUZoTEVWQlEySXNRMEZCVXl4RlFVTlVMRWRCUVZNc1JVRkJRVHRCUVVWVUxFbEJRVUVzU1VGQlRTeGhRVUZoTEVkQlFVY3NUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJRenRCUVVONFF5eEpRVUZCTEVsQlFVMHNZMEZCWXl4SFFVRkhMRkZCUVZFc1EwRkJReXhUUVVGVExFTkJRVU03UVVGRE1VTXNTVUZCUVN4SlFVRk5MRmRCUVZjc1IwRkJSeXhQUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETzBGQlEzQkRMRWxCUVVFc1NVRkJUU3haUVVGWkxFZEJRVWNzVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXp0QlFVTjBReXhKUVVGQkxFbEJRVTBzVDBGQlR5eEhRVUZITEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNN1NVRkROVUlzU1VGQlNTeGhRVUZoTEV0QlFVc3NWMEZCVnl4SlFVRkpMR0ZCUVdFc1MwRkJTeXhQUVVGUExFVkJRVVU3UVVGRE9VUXNVVUZCUVN4UFFVRlBMR05CUVdNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEZsQlFWazdPMEZCUXpGRExGTkJRVUVzU1VGQlNTeGhRVUZoTEVkQlFVY3NWMEZCVnl4RlFVRkZPMUZCUTNSRExGRkJRMFVzUTBGQlF5eFBRVUZQTEV0QlFVc3NZVUZCWVN4SlFVRkpMR05CUVdNc1NVRkJTU3hEUVVGRE8wRkJRMnBFTEdGQlFVTXNUMEZCVHl4TFFVRkxMRmRCUVZjc1NVRkJTU3haUVVGWkxFbEJRVWtzUTBGQlF5eERRVUZETzJGQlF6ZERMRTlCUVU4c1IwRkJSeXhYUVVGWExFbEJRVWtzVDBGQlR5eEhRVUZITEdGQlFXRXNRMEZCUXpzN1FVRkhkRVFzU1VGQlFTeFBRVUZQTEV0QlFVczdRVUZEWkR0QlFVVkJPenM3TzBGQlNVYzdRVUZEWVN4VFFVRkJMRzFDUVVGdFFpeERRVU5xUXl4SlFVRlZMRVZCUTFZc1JVRlJUU3hGUVVGQk8wRkJVazRzU1VGQlFTeEpRVUZCTEVWQlFVRXNSMEZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVZGSkxFVkJRVVVzUjBGQlFTeEZRVUZCTEVWQlVFb3NUMEZCVHl4SFFVRkJMRVZCUVVFc1EwRkJRU3hQUVVGQkxFVkJRMUFzVDBGQlR5eEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRkJMRVZCUTFBc1dVRkJXU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFpRVUZCTEVWQlExb3NXVUZCV1N4SFFVRkJMRVZCUVVFc1EwRkJRU3haUVVGQk8wRkJUV1FzU1VGQlFTeFJRVU5GTEdGQlFXRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1JVRkJSU3hQUVVGUExFVkJRVUVzVDBGQlFTeEZRVUZGTEU5QlFVOHNSVUZCUVN4UFFVRkJMRVZCUVVVc1EwRkJRenRCUVVONlF5eFRRVUZETEZsQlFWazdRVUZEV0N4WlFVRkJMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlF5eFpRVUZaTEVWQlFVRTdRVUZETjBJc1owSkJRVUVzVDBGQlFTeFhRVUZYTEVOQlExUXNXVUZCV1N4WlFVRlpMRWxCUVVrc1IwRkJSeXhaUVVGWkxFZEJRVWNzV1VGQldTeERRVUZETEVsQlFVa3NSVUZETDBRc1NVRkJTU3hEUVVOTU8wRkJTRVFzWVVGSFF5eERRVU5HTEVOQlFVTTdRVUZEU2l4VFFVRkRMRmxCUVZrN1FVRkRXQ3haUVVGQkxFTkJRVU1zV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkRMRmxCUVZrc1JVRkJTeXhGUVVGQkxFOUJRVUVzVjBGQlZ5eERRVUZETEZsQlFWa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJMMElzUlVGQkswSXNRMEZCUXl4RFFVRkRPMEZCUTNoRkxGRkJRVUVzUzBGQlN6dEJRVVZVTzBGQlJXZENMRk5CUVVFc2FVSkJRV2xDTEVOQlF5OUNMRTlCUVdFc1JVRkRZaXhGUVZOTkxFVkJRVUU3UVVGVVRpeEpRVUZCTEVsQlFVRXNSVUZCUVN4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJVMGtzUlVGQlJTeEhRVUZCTEVWQlFVRXNSVUZTU2l4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUVzUlVGRFVDeFBRVUZQTEVkQlFVRXNSVUZCUVN4RFFVRkJMRTlCUVVFc1JVRkRVQ3haUVVGWkxHdENRVUZCTEVWQlExb3NXVUZCV1N4SFFVRkJMRVZCUVVFc1EwRkJRU3haUVVGQkxFVkJRMW9zVlVGQlZTeEhRVUZCTEVWQlFVRXNRMEZCUVN4VlFVRkJPMEZCVFZvc1NVRkJRU3hSUVVORkxHRkJRV0VzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVFc1QwRkJRU3hGUVVGRkxFOUJRVThzUlVGQlFTeFBRVUZCTEVWQlFVVXNRMEZCUXp0VFFVTTFReXhaUVVGWkxFdEJRVUVzU1VGQlFTeEpRVUZhTEZsQlFWa3NTMEZCV2l4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxGbEJRVmtzUTBGQlJTeEpRVUZKTEVOQlFVTXNWVUZCUXl4WFFVRlhMRVZCUVVFN1FVRkROMElzV1VGQlFTeFBRVUZCTEdGQlFXRXNRMEZEV0N4UFFVRlBMRVZCUTFBc1YwRkJWeXhaUVVGWkxFbEJRVWtzUjBGQlJ5eFhRVUZYTEVkQlFVY3NWMEZCVnl4RFFVRkRMRWxCUVVrc1EwRkROMFE3UVVGSVJDeFRRVWRETEVOQlEwWXNRMEZCUVR0QlFVTkVMRk5CUVVNc1dVRkJXVHRCUVVOWUxGbEJRVUVzUTBGQlF5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVVNc1YwRkJWeXhGUVVGQk8wRkJRemRDTEdkQ1FVRkJMRTlCUVVFc1lVRkJZU3hEUVVGRExFOUJRVThzUlVGQlJTeFhRVUZYTEVOQlFVTTdRVUZCYmtNc1lVRkJiVU1zUTBGRGNFTXNRMEZCUXp0VFFVTklMRlZCUVZVc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFBRVUZQTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNM1F5eFJRVUZCTEV0QlFVczdRVUZGVkR0VFFVVm5RaXhoUVVGaExFTkJRek5DTEVsQlFWa3NSVUZEV2l4TFFVRnRRaXhGUVVOdVFpeEhRVUZwUWl4RlFVRkJPMEZCUldwQ0xFbEJRVUVzU1VGQlNTeERRVUZETEV0QlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjN1FVRkJSU3hSUVVGQkxFOUJRVThzUzBGQlN6dEpRVU5vUXl4SlFVRkpMRU5CUVVOTUxGTkJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRRU3hUUVVGWExFTkJRVU1zUjBGQlJ5eERRVUZETzBGQlFVVXNVVUZCUVN4UFFVRlBMRXRCUVVzN1FVRkRNVVFzU1VGQlFTeEpRVUZOTEZOQlFWTXNSMEZCUnl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRMmhETEVsQlFVRXNTVUZCVFN4UFFVRlBMRWRCUVVjc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF6dEJRVVUxUWl4SlFVRkJMRTlCUVU4c1UwRkJVeXhKUVVGSkxFbEJRVWtzU1VGQlNTeFBRVUZQTEVsQlFVa3NTVUZCU1R0QlFVTTNRenRCUVVWblFpeFRRVUZCTEdOQlFXTXNRMEZETlVJc1NVRkJXU3hGUVVOYUxFVkJVMDBzUlVGQlFUdEJRVlJPTEVsQlFVRXNTVUZCUVN4RlFVRkJMRWRCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGVFNTeEZRVUZGTEVkQlFVRXNSVUZCUVN4RlFWSktMRTlCUVU4c1IwRkJRU3hGUVVGQkxFTkJRVUVzVDBGQlFTeEZRVU5RTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxGbEJRVmtzYTBKQlFVRXNSVUZEV2l4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeFZRVUZWTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVVFN1NVRk5XaXhKUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU5xUXl4SlFVRkJMRkZCUTBVc1lVRkJZU3hEUVVGRExFbEJRVWtzUlVGQlJUdEJRVU5zUWl4UlFVRkJMRTlCUVU4c1JVRkJSU3hQUVVGUExFZEJRVWNzVjBGQlZ5eERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRk5CUVZNN1FVRkRia1FzVVVGQlFTeFBRVUZQTEVWQlFVVXNUMEZCVHl4SFFVRkhMRk5CUVZNc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGQlJ5eFRRVUZUTzB0QlEyeEVMRU5CUVVNN1UwRkRSaXhaUVVGWkxFdEJRVUVzU1VGQlFTeEpRVUZhTEZsQlFWa3NTMEZCV2l4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxGbEJRVmtzUTBGQlJTeEpRVUZKTEVOQlFVTXNWVUZCUXl4WFFVRlhMRVZCUVVFN1FVRkROMElzV1VGQlFTeFBRVUZCTEZWQlFWVXNRMEZEVWl4SlFVRkpMRVZCUTBvc1YwRkJWeXhaUVVGWkxFbEJRVWtzUjBGQlJ5eFhRVUZYTEVkQlFVY3NWMEZCVnl4RFFVRkRMRWxCUVVrc1EwRkROMFE3UVVGSVJDeFRRVWRETEVOQlEwWXNRMEZCUVR0QlFVTkVMRk5CUVVNc1dVRkJXVHRCUVVOWUxGbEJRVUVzUTBGQlF5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVVNc1YwRkJWeXhGUVVGTExFVkJRVUVzVDBGQlFTeFZRVUZWTEVOQlFVTXNTVUZCU1N4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVFM1FpeEZRVUUyUWl4RFFVRkRMRU5CUVVNN1UwRkRjRVVzVlVGQlZTeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzBGQlF6RkRMRkZCUVVFc1MwRkJTenRCUVVWVU8wRkJSVTBzVTBGQlZTeG5Ra0ZCWjBJc1EwRkRPVUlzVTBGQlpTeEZRVU5tTEU5QlFXRXNSVUZEWWl4RFFVRlRMRVZCUTFRc1IwRkJVeXhGUVVGQk8wRkJSVlFzU1VGQlFTeEpRVUZOTEdGQlFXRXNSMEZCUnl4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRE8wRkJRM2hETEVsQlFVRXNTVUZCVFN4blFrRkJaMElzUjBGQlJ5eFZRVUZWTEVOQlFVTXNVMEZCVXl4RFFVRkRPMEZCUXpsRExFbEJRVUVzU1VGQlRTeFhRVUZYTEVkQlFVY3NUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJRenRCUVVOd1F5eEpRVUZCTEVsQlFVMHNZMEZCWXl4SFFVRkhMRlZCUVZVc1EwRkJReXhQUVVGUExFTkJRVU03UVVGRE1VTXNTVUZCUVN4SlFVRk5MRTlCUVU4c1IwRkJSeXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETzBsQlF6VkNMRWxCUVVrc1lVRkJZU3hMUVVGTExGZEJRVmNzU1VGQlNTeGhRVUZoTEV0QlFVc3NUMEZCVHl4RlFVRkZPMEZCUXpsRUxGRkJRVUVzVDBGQlR5eG5Ra0ZCWjBJc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEdOQlFXTTdPMEZCUXpsRExGTkJRVUVzU1VGQlNTeGhRVUZoTEVkQlFVY3NWMEZCVnl4RlFVRkZPMUZCUTNSRExGRkJRMFVzUTBGQlF5eFBRVUZQTEV0QlFVc3NZVUZCWVN4SlFVRkpMR2RDUVVGblFpeEpRVUZKTEVOQlFVTTdRVUZEYmtRc1lVRkJReXhQUVVGUExFdEJRVXNzVjBGQlZ5eEpRVUZKTEdOQlFXTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1lVRkRMME1zVDBGQlR5eEhRVUZITEZkQlFWY3NTVUZCU1N4UFFVRlBMRWRCUVVjc1lVRkJZU3hEUVVGRE96dEJRVWQwUkN4SlFVRkJMRTlCUVU4c1MwRkJTenRCUVVOa08wRkJSV2RDTEZOQlFVRXNZVUZCWVN4RFFVTXpRaXhIUVVGVExFVkJRMVFzUlVGQmVVVXNSVUZCUVRzN1FVRkJla1VzU1VGQlFTeEpRVUZCTEVWQlFVRXNSMEZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGMVJTeEZRVUZGTEVkQlFVRXNSVUZCUVN4RlFVRjJSU3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZCUlN4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUU3UVVGRmJFSXNTVUZCUVN4UlFVTkZMRU5CUVVFc1JVRkJRU3hKUVVGRExFTkJRVU1zVDBGQlR5eEpRVUZKTEhkQ1FVRjNRaXhEUVVGRExFZEJRVWNzUlVGQlJTeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRPMEZCUTNKRUxGTkJRVU1zVDBGQlR5eEpRVUZKTEhkQ1FVRjNRaXhEUVVGRExFZEJRVWNzUlVGQlJTeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVNeFJDeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFZEJRVUVzUzBGQlN6dEJRVVZVTzBGQlJXZENMRk5CUVVFc1dVRkJXU3hEUVVGRExFbEJRVlVzUlVGQlJTeExRVUZoTEVWQlFVRTdRVUZEY0VRc1NVRkJRU3hQUVVGUExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlEyWXNWVUZCUXl4UlFVRlJMRVZCUVVFN1VVRkRVQ3hQUVVGQkxGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRE8wRkJRM0pETEZsQlFVRXNWVUZCVlN4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTTdRVUZEZWtNc1dVRkJRU3hWUVVGVkxFTkJRVU1zVVVGQlVTeERRVUZETEV0QlFVc3NWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVaNlF5eExRVVY1UXl4RFFVTTFRenRCUVVOSU8wRkJWV2RDTEZOQlFVRXNZMEZCWXl4RFFVTTFRaXhKUVVGVkxFVkJRMVlzUlVGUFRTeEZRVUZCTzFGQlVFNHNSVUZQU1N4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlJTeEhRVUZCTEVWQlFVRXNSVUZPU2l4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeFpRVUZaTEVkQlFVRXNSVUZCUVN4RFFVRkJMRmxCUVVFc1JVRkRXaXhWUVVGVkxFZEJRVUVzUlVGQlFTeERRVUZCTEZWQlFVRTdTVUZOV2l4UlFVTkZMRU5CUVVNc1dVRkJXU3hKUVVGSkxGbEJRVmtzUTBGQlF5eEpRVUZKTEVWQlFVVXNXVUZCV1N4RFFVRkRPMU5CUTJoRUxGbEJRVmtzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1dVRkJXU3hEUVVGRExFTkJRVU03UVVGRGJrUXNVMEZCUXl4VlFVRlZMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEYWtNc1VVRkJRU3hMUVVGTE8wRkJSVlE3UVVGRlowSXNVMEZCUVN4eFFrRkJjVUlzUTBGRGJrTXNTVUZCVlN4RlFVTldMRVZCUVc5RkxFVkJRVUU3VVVGQmJFVXNUMEZCVHl4SFFVRkJMRVZCUVVFc1EwRkJRU3hQUVVGQkxFVkJRVVVzVDBGQlR5eEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRkJPMEZCUld4Q0xFbEJRVUVzU1VGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRCUVVONFFpeFJRVUZCTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc2VVTkJRWGxETEVOQlFVTTdPMEZCUlRWRUxFbEJRVUVzU1VGQlNTeFJRVUZSTEVkQlFVY3NUMEZCVHl4RlFVRkZPMGxCUTNoQ0xGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RlFVRkZMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dEpRVU0zUXl4UlFVRlJMRWRCUVVjc1ZVRkJWU3hEUVVGRExGRkJRVkVzUlVGQlJTeFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkRha1FzVVVGQlVTeEhRVUZITEZWQlFWVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBGQlJXcEVMRWxCUVVFc1NVRkJTU3hIUVVGSExFZEJRVWNzVDBGQlR5eEZRVUZGTzBsQlEyNUNMRWRCUVVjc1IwRkJSeXhSUVVGUkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEZGQlFWRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRKUVVOMFF5eEhRVUZITEVkQlFVY3NWVUZCVlN4RFFVRkRMRWRCUVVjc1JVRkJSU3hWUVVGVkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdTVUZETVVNc1IwRkJSeXhIUVVGSExGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNWVUZCVlN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJSVEZETEVsQlFVRXNTVUZCU1N4SFFVRkhMRWRCUVVjc1QwRkJUeXhGUVVGRk8wbEJRMjVDTEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc1IwRkJSeXhGUVVGRkxGRkJRVkVzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0SlFVTjBReXhIUVVGSExFZEJRVWNzVlVGQlZTeERRVUZETEVkQlFVY3NSVUZCUlN4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03U1VGRE1VTXNSMEZCUnl4SFFVRkhMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVVzVlVGQlZTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMEZCUlRGRExFbEJRVUVzU1VGQlNTeExRVUZMTzBGQlExUXNTVUZCUVN4SlFVRkpPMEZCUTBZc1VVRkJRU3hMUVVGTExFZEJRVWNzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhSUVVGUkxFVkJRVVVzUlVGQlJTeExRVUZMTEVWQlFVVXNSMEZCUnl4RlFVRkZMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUTBGQlF6czdTVUZETjBRc1QwRkJUeXhIUVVGSExFVkJRVVU3VVVGRFdpeExRVUZMTEVkQlFVY3NTMEZCU3pzN1FVRkZaaXhKUVVGQkxFOUJRVThzUzBGQlN6dEJRVU5rTzBGQlJXZENMRk5CUVVFc2JVSkJRVzFDTEVOQlEycERMRWRCUVZNc1JVRkRWQ3hGUVVjeVJDeEZRVUZCTzBGQlNETkVMRWxCUVVFc1NVRkJRU3hGUVVGQkxFZEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZIZVVRc1JVRkJSU3hIUVVGQkxFVkJRVUVzUlVGR2VrUXNUMEZCVHl4SFFVRkJMRVZCUVVFc1EwRkJRU3hQUVVGQkxFVkJRMUFzV1VGQldTeEhRVUZCTEVWQlFVRXNRMEZCUVN4WlFVRkJPMGxCUjJRc1NVRkJUU3hoUVVGaExFZEJRVWNzVTBGQlV5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRka01zU1VGQlFTeFJRVU5GTEVOQlFVTXNUMEZCVHl4SlFVRkpMREJDUVVFd1FpeERRVUZETEU5QlFVOHNSVUZCUlN4aFFVRmhMRU5CUVVNc1IwRkJSeXhEUVVGRE8wRkJRMnhGTEZOQlFVTXNXVUZCV1R0QlFVTllMRmxCUVVFc1dVRkJXU3hEUVVGRExFdEJRVXNzUTBGRGFFSXNWVUZCUXl4WFFVRlhMRVZCUVVFN1FVRkRWaXhuUWtGQlFTeFBRVUZCTERCQ1FVRXdRaXhEUVVGRExGZEJRVmNzUlVGQlJTeGhRVUZoTEVOQlFVTXNSMEZCUnl4RFFVRkRPMEZCUVRGRUxHRkJRVEJFTEVOQlF6ZEVMRU5CUVVNN1FVRkRTaXhSUVVGQkxFdEJRVXM3UVVGRlZEdEJRVVZuUWl4VFFVRkJMR3RDUVVGclFpeERRVU5vUXl4SFFVRlRMRVZCUTFRc1JVRkhNa1FzUlVGQlFUdEJRVWd6UkN4SlFVRkJMRWxCUVVFc1JVRkJRU3hIUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlIzbEVMRVZCUVVVc1IwRkJRU3hGUVVGQkxFVkJSbnBFTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxGbEJRVmtzUjBGQlFTeEZRVUZCTEVOQlFVRXNXVUZCUVR0SlFVZGtMRWxCUVUwc1UwRkJVeXhIUVVGSExGTkJRVk1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTI1RExFbEJRVUVzVVVGRFJTeERRVUZETEU5QlFVOHNTVUZCU1N3d1FrRkJNRUlzUTBGQlF5eFRRVUZUTEVWQlFVVXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJRenRCUVVNNVJDeFRRVUZETEZsQlFWazdRVUZEV0N4WlFVRkJMRmxCUVZrc1EwRkJReXhMUVVGTExFTkJRMmhDTEZWQlFVTXNWMEZCVnl4RlFVRkJMRVZCUVVzc1QwRkJRU3d3UWtGQk1FSXNRMEZCUXl4VFFVRlRMRVZCUVVVc1YwRkJWeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUYwUkN4RlFVRnpSQ3hEUVVONFJTeERRVUZETzBGQlEwb3NVVUZCUVN4TFFVRkxPMEZCUlZRN1FVRkZaMElzVTBGQlFTeHhRa0ZCY1VJc1EwRkRia01zU1VGQlZTeEZRVU5XTEVWQlJ6SkVMRVZCUVVFN1FVRklNMFFzU1VGQlFTeEpRVUZCTEVWQlFVRXNSMEZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVkNVJDeEZRVUZGTEVkQlFVRXNSVUZCUVN4RlFVWjZSQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUU3UVVGSFpDeEpRVUZCTEVsQlFVMHNaVUZCWlN4SFFVRkhMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU03U1VGRGVrTXNTVUZCVFN4bFFVRmxMRWRCUVVjc1YwRkJWeXhEUVVGRExHVkJRV1VzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZGZGtRc1NVRkJRU3hSUVVORkxFTkJRVU1zVDBGQlR5eEpRVUZKTERSQ1FVRTBRaXhEUVVGRExFOUJRVThzUlVGQlJTeGxRVUZsTEVOQlFVTXNSMEZCUnl4RFFVRkRPMEZCUTNSRkxGTkJRVU1zV1VGQldUdEJRVU5ZTEZsQlFVRXNXVUZCV1N4RFFVRkRMRXRCUVVzc1EwRkRhRUlzVlVGQlF5eFhRVUZYTEVWQlFVRTdRVUZEVml4blFrRkJRU3hQUVVGQkxEUkNRVUUwUWl4RFFVRkRMRmRCUVZjc1JVRkJSU3hsUVVGbExFTkJRVU1zUjBGQlJ5eERRVUZETzBGQlFUbEVMR0ZCUVRoRUxFTkJRMnBGTEVOQlFVTTdRVUZEU2l4UlFVRkJMRXRCUVVzN1FVRkZWRHRCUVVWblFpeFRRVUZCTEc5Q1FVRnZRaXhEUVVOc1F5eEpRVUZWTEVWQlExWXNSVUZITWtRc1JVRkJRVHRCUVVnelJDeEpRVUZCTEVsQlFVRXNSVUZCUVN4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJSM2xFTEVWQlFVVXNSMEZCUVN4RlFVRkJMRVZCUm5wRUxFOUJRVThzUjBGQlFTeEZRVUZCTEVOQlFVRXNUMEZCUVN4RlFVTlFMRmxCUVZrc1IwRkJRU3hGUVVGQkxFTkJRVUVzV1VGQlFUdEJRVWRrTEVsQlFVRXNTVUZCVFN4alFVRmpMRWRCUVVjc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF6dEpRVU4wUXl4SlFVRk5MRmRCUVZjc1IwRkJSeXhYUVVGWExFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVVnNSQ3hKUVVGQkxGRkJRMFVzUTBGQlF5eFBRVUZQTEVsQlFVa3NORUpCUVRSQ0xFTkJRVU1zVjBGQlZ5eEZRVUZGTEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNN1FVRkRiRVVzVTBGQlF5eFpRVUZaTzBGQlExZ3NXVUZCUVN4WlFVRlpMRU5CUVVNc1MwRkJTeXhEUVVOb1FpeFZRVUZETEZkQlFWY3NSVUZCUVR0QlFVTldMR2RDUVVGQkxFOUJRVUVzTkVKQlFUUkNMRU5CUVVNc1YwRkJWeXhGUVVGRkxGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTTdRVUZCTVVRc1lVRkJNRVFzUTBGRE4wUXNRMEZCUXp0QlFVTktMRkZCUVVFc1MwRkJTenRCUVVWVU8wRkJSV2RDTEZOQlFVRXNhMEpCUVd0Q0xFTkJRMmhETEVkQlFWTXNSVUZEVkN4RlFVY3lSQ3hGUVVGQk8wRkJTRE5FTEVsQlFVRXNTVUZCUVN4RlFVRkJMRWRCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGSGVVUXNSVUZCUlN4SFFVRkJMRVZCUVVFc1JVRkdla1FzVDBGQlR5eEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRkJMRVZCUTFBc1dVRkJXU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFpRVUZCTzBsQlIyUXNTVUZCVFN4WlFVRlpMRWRCUVVjc1VVRkJVU3hEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZEY2tNc1NVRkJRU3hSUVVORkxFTkJRVU1zVDBGQlR5eEpRVUZKTEhsQ1FVRjVRaXhEUVVGRExFOUJRVThzUlVGQlJTeFpRVUZaTEVOQlFVTXNSMEZCUnl4RFFVRkRPMEZCUTJoRkxGTkJRVU1zV1VGQldUdEJRVU5ZTEZsQlFVRXNXVUZCV1N4RFFVRkRMRXRCUVVzc1EwRkRhRUlzVlVGQlF5eFhRVUZYTEVWQlFVRTdRVUZEVml4blFrRkJRU3hQUVVGQkxIbENRVUY1UWl4RFFVRkRMRmRCUVZjc1JVRkJSU3haUVVGWkxFTkJRVU1zUjBGQlJ5eERRVUZETzBGQlFYaEVMR0ZCUVhkRUxFTkJRek5FTEVOQlFVTTdRVUZEU2l4UlFVRkJMRXRCUVVzN1FVRkZWRHRCUVVWblFpeFRRVUZCTEcxQ1FVRnRRaXhEUVVOcVF5eEhRVUZUTEVWQlExUXNSVUZITmtRc1JVRkJRVHRSUVVnM1JDeEZRVWN5UkN4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlJTeEhRVUZCTEVWQlFVRXNSVUZHTTBRc1QwRkJUeXhIUVVGQkxFVkJRVUVzUTBGQlFTeFBRVUZCTEVWQlExQXNSVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hqUVVGNVF5eEZRVUY2UXl4alFVRmpMRWRCUVVjc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeDNRa0ZCZDBJc1IwRkJRU3hGUVVGQk8wbEJSek5ETEVsQlFVMHNXVUZCV1N4SFFVRkhMR05CUVdNc1EwRkJReXhSUVVGUkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEdOQlFXTXNRMEZCUXl4RFFVRkRPMGxCUXpGRUxFbEJRVUVzVTBGQlV5eEhRVUZMTEdOQlFXTXNRMEZCUXl4WlFVRlpMRVZCUVVVc1kwRkJZeXhEUVVGRExFTkJRVUVzVTBGQmFrUTdTVUZEYWtJc1NVRkJUU3hYUVVGWExFZEJRVWNzVDBGQlR5eEpRVUZKTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNN1NVRkRMME1zVDBGQlR5eERRVUZETEZkQlFWY3NTVUZCU1N4WFFVRlhMRWRCUVVjc1UwRkJVeXhMUVVGTExFdEJRVXM3UVVGRE1VUTdRVUZGWjBJc1UwRkJRU3hwUWtGQmFVSXNRMEZETDBJc1IwRkJVeXhGUVVOVUxFVkJSekpFTEVWQlFVRTdRVUZJTTBRc1NVRkJRU3hKUVVGQkxFVkJRVUVzUjBGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVZDVSQ3hGUVVGRkxFZEJRVUVzUlVGQlFTeEZRVVo2UkN4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUVzUlVGRFVDeFpRVUZaTEVkQlFVRXNSVUZCUVN4RFFVRkJMRmxCUVVFN1NVRkhaQ3hKUVVGTkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVOcVF5eEpRVUZCTEZGQlEwVXNRMEZCUXl4UFFVRlBMRWxCUVVrc2VVSkJRWGxDTEVOQlFVTXNVVUZCVVN4RlFVRkZMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU03UVVGRE5VUXNVMEZCUXl4WlFVRlpPMEZCUTFnc1dVRkJRU3haUVVGWkxFTkJRVU1zUzBGQlN5eERRVU5vUWl4VlFVRkRMRmRCUVZjc1JVRkJRU3hGUVVGTExFOUJRVUVzZVVKQlFYbENMRU5CUVVNc1VVRkJVU3hGUVVGRkxGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCY0VRc1JVRkJiMFFzUTBGRGRFVXNRMEZCUXp0QlFVTktMRkZCUVVFc1MwRkJTenRCUVVWVU8wRkJSV2RDTEZOQlFVRXNhMEpCUVd0Q0xFTkJRMmhETEVkQlFWTXNSVUZEVkN4RlFVYzJSQ3hGUVVGQk8xRkJTRGRFTEVWQlJ6SkVMRWRCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZGTEVkQlFVRXNSVUZCUVN4RlFVWXpSQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxHTkJRWGxETEVWQlFYcERMR05CUVdNc1IwRkJSeXhGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEhkQ1FVRjNRaXhIUVVGQkxFVkJRVUU3U1VGSE0wTXNTVUZCVFN4UlFVRlJMRWRCUVVjc1VVRkJVU3hEUVVGRExFZEJRVWNzUlVGQlJTeGpRVUZqTEVOQlFVTTdTVUZEZEVNc1NVRkJRU3hYUVVGWExFZEJRVXNzWTBGQll5eERRVUZETEZGQlFWRXNSVUZCUlN4alFVRmpMRU5CUVVNc1EwRkJRU3hYUVVFM1F6dEpRVU51UWl4SlFVRk5MRmRCUVZjc1IwRkJSeXhQUVVGUExFbEJRVWtzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXp0SlFVTXZReXhQUVVGUExFTkJRVU1zVjBGQlZ5eEpRVUZKTEZkQlFWY3NSMEZCUnl4WFFVRlhMRXRCUVVzc1MwRkJTenRCUVVNMVJEdEJRVVZOTEZOQlFWVXNiVUpCUVcxQ0xFTkJRVU1zUlVGSGEwSXNSVUZCUVR0UlFVWndSQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUU3UVVGRldpeEpRVUZCTEVsQlFVa3NXVUZCV1N4SlFVRkpMRTlCUVU4c1JVRkJSVHRSUVVNelFpeEpRVUZOTEZGQlFWRXNSMEZCUnl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVOc1F5eFZRVUZETEZkQlFWY3NSVUZCU3l4RlFVRkJMRTlCUVVFc2QwSkJRWGRDTEVOQlFVTXNWMEZCVnl4RlFVRkZMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlFTeEZRVUZCTEVOQlEzSkZPMEZCUTBRc1VVRkJRU3hQUVVGUExFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTTdPMU5CUTJZc1NVRkJTU3haUVVGWkxFVkJRVVU3UVVGRGRrSXNVVUZCUVN4UFFVRlBMRWRCUVVjc1EwRkJReXhaUVVGWkxFTkJRVU03TzFOQlEyNUNPMEZCUTB3c1VVRkJRU3hQUVVGUExFOUJRVTg3TzBGQlJXeENPMEZCUlUwc1UwRkJWU3h0UWtGQmJVSXNRMEZCUXl4RlFVZHJRaXhGUVVGQk8xRkJSbkJFTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxGbEJRVmtzUjBGQlFTeEZRVUZCTEVOQlFVRXNXVUZCUVR0QlFVVmFMRWxCUVVFc1NVRkJTU3haUVVGWkxFbEJRVWtzVDBGQlR5eEZRVUZGTzFGQlF6TkNMRWxCUVUwc1VVRkJVU3hIUVVGSExGbEJRVmtzUTBGQlF5eE5RVUZOTEVOQlEyeERMRlZCUVVNc1YwRkJWeXhGUVVGTExFVkJRVUVzVDBGQlFTeDNRa0ZCZDBJc1EwRkJReXhYUVVGWExFVkJRVVVzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkJMRVZCUVVFc1EwRkRja1U3UVVGRFJDeFJRVUZCTEU5QlFVOHNSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJRenM3VTBGRFppeEpRVUZKTEZsQlFWa3NSVUZCUlR0QlFVTjJRaXhSUVVGQkxFOUJRVThzUjBGQlJ5eERRVUZETEZsQlFWa3NRMEZCUXpzN1UwRkRia0k3UVVGRFRDeFJRVUZCTEU5QlFVOHNUMEZCVHpzN1FVRkZiRUk3UVVGTlFUczdPenM3UVVGTFJ6dEJRVU5oTEZOQlFVRXNiVUpCUVcxQ0xFTkJRMnBETEdOQlFUWkRMRVZCUXpkRExHZENRVUVyUkN4RlFVRkJPenRCUVVRdlJDeEpRVUZCTEVsQlFVRXNZMEZCUVN4TFFVRkJMRTFCUVVFc1JVRkJRU3hGUVVGQkxHTkJRVFpETEVkQlFVRXNSVUZCUVN4RFFVRkJPMEZCUXpkRExFbEJRVUVzU1VGQlFTeG5Ra0ZCUVN4TFFVRkJMRTFCUVVFc1JVRkJRU3hGUVVGQkxHZENRVUVyUkN4SFFVRkJMRzlEUVVGQkxFTkJRVUU3UVVGRkwwUXNTVUZCUVN4SlFVRk5MRmRCUVZjc1IwRkJSeXhKUVVGSkxFZEJRVWNzUlVGQmIwSTdRVUZETDBNc1NVRkJRU3hMUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4SFFVRkhMRWRCUVVjc1kwRkJZeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVkQlFVY3NSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRk8wRkJRM3BFTEZGQlFVRXNTVUZCVFN4SFFVRkhMRWRCUVVjc1kwRkJZeXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0zUWl4UlFVRkJMRWxCUVVrc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTzFsQlEyWXNTVUZCVFN4SFFVRkhMRWRCUVVjc1ZVRkJWU3hEUVVGRExFZEJRVWNzUlVGQlJTeFpRVUZaTEVOQlFVTTdXVUZEZWtNc1NVRkJUU3hoUVVGaExFZEJRVWNzVjBGQlZ5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hGUVVGRk8xbEJRMmhFTEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1VVRkJVU3hEUVVGRExHZENRVUZuUWl4RFFVRkRMRVZCUVVVN1FVRkROME1zWjBKQlFVRXNZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXp0QlFVTndReXhuUWtGQlFTeFhRVUZYTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1JVRkJSU3hoUVVGaExFTkJRVU03T3p0QlFVVm9ReXhoUVVGQkxFbEJRVWtzVDBGQlR5eEhRVUZITEV0QlFVc3NVVUZCVVN4RlFVRkZPMWxCUTJ4RExFbEJRVTBzU1VGQlNTeEhRVUZITEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRE8xbEJRemRDTEVsQlFVMHNVMEZCVXl4SFFVRkhMRU5CUVVFc1JVRkJRU3hIUVVGQkxFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNUVUZCU1N4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlFVRXNSVUZCUlR0QlFVTXZRaXhaUVVGQkxFbEJRVTBzVlVGQlZTeEhRVUZITEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNN1FVRkRha01zV1VGQlFTeEpRVUZKTEU5QlFVOHNVMEZCVXl4TFFVRkxMRkZCUVZFc1NVRkJTU3hMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZPMEZCUXpsRUxHZENRVUZCTEV0QlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVWNzUjBGQlJ5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1IwRkJSeXhMUVVGSExFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZEY2tRc2IwSkJRVUVzU1VGQlRTeExRVUZMTEVkQlFVY3NWVUZCVlN4RFFVRkRMRU5CUVVNc1EwRkJRenR2UWtGRE0wSXNTVUZCU1N4TFFVRkxMRVZCUVVVN2QwSkJRMVFzU1VGQlRTeEhRVUZITEVkQlFVY3NWVUZCVlN4RFFVRkRMRXRCUVVzc1JVRkJSU3haUVVGWkxFTkJRVU03ZDBKQlF6TkRMRWxCUVUwc1lVRkJZU3hIUVVGSExGZEJRVmNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRWxCUVVrc1JVRkJSVHQzUWtGRGFFUXNTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEVWQlFVVTdRVUZEZEVNc05FSkJRVUVzWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNN1FVRkROMElzTkVKQlFVRXNWMEZCVnl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFVkJRVVVzWVVGQllTeERRVUZET3pzN096czdPMEZCVHk5RExFbEJRVUVzVDBGQlR5eFhRVUZYTzBGQlEzQkNPMEZCUlVFN096czdPMEZCUzBjN1FVRkRZU3hUUVVGQkxHTkJRV01zUTBGQlNTeE5RVUZYTEVWQlFVVXNUVUZCVnl4RlFVRkJPMGxCUTNoRUxFbEJRVWtzVFVGQlRTeERRVUZETEUxQlFVMHNTMEZCU3l4TlFVRk5MRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRMjVETEZGQlFVRXNUMEZCVHl4TFFVRkxPenRCUVVka0xFbEJRVUVzVDBGQlR5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVVNc1MwRkJTeXhGUVVGRkxFdEJRVXNzUlVGQlFTeEZRVUZMTEU5QlFVRXNTMEZCU3l4TFFVRkxMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQmRrSXNSVUZCZFVJc1EwRkJRenRCUVVOb1JUdEJRV05CT3pzN096dEJRVXRITzBGQlEyRXNVMEZCUVN4alFVRmpMRU5CUXpWQ0xGbEJRV2RETEVWQlEyaERMR2RDUVVFMFJDeEZRVUZCTzBGQlJEVkVMRWxCUVVFc1NVRkJRU3haUVVGQkxFdEJRVUVzVFVGQlFTeEZRVUZCTEVWQlFVRXNXVUZCWjBNc1IwRkJRU3hGUVVGQkxFTkJRVUU3UVVGRGFFTXNTVUZCUVN4SlFVRkJMR2RDUVVGQkxFdEJRVUVzVFVGQlFTeEZRVUZCTEVWQlFVRXNaMEpCUVRSRUxFZEJRVUVzYVVOQlFVRXNRMEZCUVR0QlFVVTFSQ3hKUVVGQkxFbEJRVTBzVjBGQlZ5eEhRVUZITEVsQlFVa3NSMEZCUnl4RlFVRjVRanRCUVVOd1JDeEpRVUZCTEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1ZVRkJReXhQUVVGUExFVkJRVUU3VVVGRGJrSXNTVUZCVFN4UFFVRlBMRWRCUVd0Q0xFOUJRVThzUTBGQlFTeEpRVUY2UWl4RlFVRkZMRmRCUVZjc1IwRkJTeXhQUVVGUExFTkJRVUVzVjBGQldqdEJRVU5zUXl4UlFVRkJMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEVWQlFVVTdXVUZEY0VJN08xRkJSMFlzU1VGQlRTeEhRVUZITEVkQlFVY3NWVUZCVlN4RFFVRkRMRTlCUVU4c1JVRkJSU3haUVVGWkxFTkJRVU03VVVGRE4wTXNTVUZCVFN4aFFVRmhMRWRCUVVjc1YwRkJWeXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNTVUZCU1R0QlFVTTFReXhaUVVGQkxGTkJRVk1zUlVGQlJTeEZRVUZGTzBGQlEySXNXVUZCUVN4WlFVRlpMRVZCUVVVc1JVRkJSVHRUUVVOcVFqdFJRVU5FTEVsQlEwVXNWMEZCVnl4SlFVRkpMR0ZCUVdFN1FVRkROVUlzV1VGQlFTeGhRVUZoTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1owSkJRV2RDTzFsQlF5OURMR05CUVdNc1EwRkJReXhoUVVGaExFTkJRVU1zWTBGQll5eERRVUZETEVWQlFVVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhGUVVNMVJEdFpRVU5CT3p0QlFVZEdMRkZCUVVFc1lVRkJZU3hEUVVGRExGZEJRVmNzUTBGQlF5eEhRVUZITEdkQ1FVRm5RanRCUVVNM1F5eFJRVUZCTEVsQlFVMHNZMEZCWXl4SFFVRkhMR0ZCUVdFc1EwRkJReXhqUVVGakxFTkJRVU03UVVGRGNFUXNVVUZCUVN4aFFVRmhMRU5CUVVNc1kwRkJZeXhEUVVGRExFZEJRVWM3WTBGRE4wSXNZVUZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVXNzWTBGQll5eEZRVUZCTEVsQlFVRXNRMEZCUVN4RlFVRkJMRU5CUVVVc1YwRkJWeXhEUVVGQkxFVkJRVUVzUzBGQlFTeERRVUZCTEVkQlF5OUNMRU5CUVVNc1YwRkJWeXhEUVVGRE8wRkJRMnBDTEZGQlFVRXNWMEZCVnl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFVkJRVVVzWVVGQllTeERRVUZETzBGQlEzSkRMRXRCUVVNc1EwRkJRenRCUVVOR0xFbEJRVUVzVDBGQlR5eFhRVUZYTzBGQlEzQkNPMEZCUlVFN096czdPenM3TzBGQlVVYzdRVUZEUnl4VFFVRlZMR3RDUVVGclFpeERRVU5vUXl4VlFVRm5RaXhGUVVOb1FpeFhRVUZwUWl4RlFVTnFRaXhwUWtGQmVVSXNSVUZEZWtJc1UwRkJhVUlzUlVGRGFrSXNZVUZCY1VJc1JVRkJRVHRCUVVWeVFpeEpRVUZCTEVsQlFVMHNRMEZCUXl4SFFVRkhMR0ZCUVdFc1EwRkJReXhOUVVGTk8wbEJRemxDTEVsQlFVMHNTMEZCU3l4SFFVRlhMRVZCUVVVN1FVRkRlRUlzU1VGQlFTeExRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMUZCUXpGQ0xFbEJRVWtzV1VGQldTeEhRVUZITEZWQlFWVTdRVUZETjBJc1VVRkJRU3hKUVVGTkxHbENRVUZwUWl4SFFVRkhMR0ZCUVdFc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRE1VTXNTVUZCU1N4cFFrRkJhVUlzUlVGQlJUdFpRVU55UWl4WlFVRlpMRWRCUVVjc1VVRkJVU3hEUVVGRExGbEJRVmtzUlVGQlJTeFJRVUZSTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUTBGQlF6dFpRVU5zUlN4WlFVRlpMRWRCUVVjc1ZVRkJWU3hEUVVGRExGbEJRVmtzUlVGQlJTeFZRVUZWTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUTBGQlF6dFpRVU4wUlN4WlFVRlpMRWRCUVVjc1ZVRkJWU3hEUVVGRExGbEJRVmtzUlVGQlJTeFZRVUZWTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zUTBGQlF6czdRVUZIZUVVc1VVRkJRU3hKUVVGTkxGRkJRVkVzUjBGQlJ5eFZRVUZWTEVOQlEzcENMRlZCUVZVc1JVRkRWaXhEUVVGRExHbENRVUZwUWl4SFFVRkhMRU5CUVVNc1NVRkJTU3hUUVVGVExFTkJRM0JETzBGQlJVUXNVVUZCUVN4SlFVTkZMRTlCUVU4c1EwRkJReXhaUVVGWkxFVkJRVVVzVjBGQlZ5eERRVUZETzBGQlEyeERMRmxCUVVFc1VVRkJVU3hEUVVGRExGbEJRVmtzUlVGQlJTeFJRVUZSTEVOQlFVTTdXVUZEYUVNc2FVSkJRV2xDTEVsQlFVa3NVMEZCVXl4RlFVTTVRanRCUVVOQkxGbEJRVUVzUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4cFFrRkJhVUlzUTBGQlF6czdPMEZCU1dwRExFbEJRVUVzVDBGQlR5eExRVUZMTzBGQlEyUTdRVUZGUVRzN096dEJRVWxITzBGQlEwY3NVMEZCVlN4UFFVRlBMRU5CUVVNc1EwRkJVeXhGUVVGQk8wRkJReTlDTEVsQlFVRXNUMEZCVHl4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFZEJRVUVzUTBGQlFTeE5RVUZCTEVOQlFVa3NRMEZCUXl4RFFVRkZMRWRCUVVjc1JVRkJSeXhEUVVGQkxFMUJRVUVzUTBGQlFTeERRVUZETEVOQlFVVTdRVUZEYkVNN1FVRkZRVHM3T3pzN1FVRkxSenRCUVVOaExGTkJRVUVzWTBGQll5eERRVU0xUWl4SlFVRlZMRVZCUTFZc1kwRkJhVVFzUlVGQlFUdEJRVUZxUkN4SlFVRkJMRWxCUVVFc1kwRkJRU3hMUVVGQkxFMUJRVUVzUlVGQlFTeEZRVUZCTEdOQlFXbEVMRWRCUVVFc2QwSkJRVUVzUTBGQlFUdEJRVVZxUkN4SlFVRkJMRWxCUVUwc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExHTkJRV01zUTBGQlF5eEhRVUZITEdOQlFXTTdTVUZETlVVc1NVRkJUU3hYUVVGWExFZEJRVWNzVTBGQlV5eEpRVUZKTEdOQlFXTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRjRVFzU1VGQlFTeFBRVUZQTEVWQlFVVXNWMEZCVnl4RlFVRkJMRmRCUVVFc1JVRkJSU3hUUVVGVExFVkJRVUVzVTBGQlFTeEZRVUZGTzBGQlEyNURPMEZCUlVFN096czdRVUZKUnp0QlFVTkhMRk5CUVZVc1lVRkJZU3hEUVVGRExFTkJRVThzUlVGQlFUdEpRVU51UXl4SlFVRk5MRlZCUVZVc1IwRkJSeXhKUVVGSkxFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNWMEZCVnl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExGRkJRVkVzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJRenRKUVVOMlJTeEpRVUZOTEdsQ1FVRnBRaXhIUVVGSExFbEJRVWtzU1VGQlNTeERRVU5vUXl4RFFVRkRMRU5CUVVNc1YwRkJWeXhGUVVGRkxFVkJRMllzUTBGQlF5eERRVUZETEZGQlFWRXNSVUZCUlN4RlFVTmFMRU5CUVVNc1EwRkJReXhQUVVGUExFVkJRVVVzUlVGRFdDeEZRVUZGTEVOQlEwZzdRVUZGUkN4SlFVRkJMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNhVUpCUVdsQ0xFZEJRVWNzUTBGQlF5eFZRVUZWTEVsQlFVa3NUMEZCVXl4RFFVRkRPMEZCUTI1Rk8wRkJSVUU3T3pzN096czdPenM3TzBGQlYwYzdRVUZEUnl4VFFVRlZMR0ZCUVdFc1EwRkJReXhEUVVGUExFVkJRVUU3UVVGRGJrTXNTVUZCUVN4SlFVRk5MRTlCUVU4c1IwRkJSeXhEUVVGRExFTkJRVU1zVlVGQlZTeEZRVUZGTzBGQlF6bENMRWxCUVVFc1NVRkJUU3haUVVGWkxFZEJRVWNzUTBGQlF5eERRVUZETEdWQlFXVXNSVUZCUlR0QlFVVjRReXhKUVVGQkxFOUJRVThzVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRVZCUVVVc1IwRkJSeXhQUVVGUExFZEJRVWNzU1VGQlNTeEhRVUZITEZsQlFWa3NRMEZCUXp0QlFVTTFSRHRCUVVWQk96czdPenM3T3p0QlFWRkhPMEZCUTJFc1UwRkJRU3haUVVGWkxFTkJRVU1zUlVGQlVTeEZRVUZGTEVWQlFWRXNSVUZCUVR0QlFVTTNReXhKUVVGQkxFOUJRVThzWVVGQllTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRTlCUVU4c1JVRkJSU3hMUVVGTExHRkJRV0VzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4UFFVRlBMRVZCUVVVN1FVRkRjRVU3UVVGRlFUczdPenRCUVVsSE8wRkJRMGNzVTBGQlZTeGxRVUZsTEVOQlFVTXNTVUZCVlN4RlFVRkJPMEZCUTNoRExFbEJRVUVzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSVHRCUVVOcVFpeFJRVUZCTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc1kwRkJZeXhEUVVGRE96dEJRVWRxUXl4SlFVRkJMRWxCUVUwc1pVRkJaU3hIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXp0SlFVTjBReXhsUVVGbExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU53UXl4SlFVRkJMRTlCUVU4c1pVRkJaVHRCUVVONFFqdEJRVVZCT3pzN096czdPenM3UVVGVFJ6dEJRVU5oTEZOQlFVRXNXVUZCV1N4RFFVRkRMRWxCUVZVc1JVRkJSU3hoUVVGdFFpeEZRVUZCTzBGQlF6RkVMRWxCUVVFc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhoUVVGaExFTkJRVU1zUlVGQlJUdEJRVU16UXl4UlFVRkJMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zZFVKQlFYVkNMRU5CUVVNN08wRkJSekZETEVsQlFVRXNTVUZCVFN4WlFVRlpMRWRCUVVjc1pVRkJaU3hEUVVGRExFbEJRVWtzUTBGQlF6dEJRVU14UXl4SlFVRkJMRWxCUVUwc2NVSkJRWEZDTEVkQlFVY3NaVUZCWlN4RFFVRkRMR0ZCUVdFc1EwRkJRenRCUVVVMVJDeEpRVUZCTEU5QlFVOHNVVUZCVVN4RFFVRkRMRmxCUVZrc1JVRkJSU3h4UWtGQmNVSXNRMEZCUXp0QlFVTjBSRHRCUVVWQk96czdPenRCUVV0SE8wRkJRMGNzVTBGQlZTeGpRVUZqTEVOQlF6VkNMRXRCUVRCRExFVkJRVUU3UVVGRk1VTXNTVUZCUVN4UFFVRlBMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzVDBGQlR5eERRVUZETEV0QlFVczdRVUZEY0VNN08wRkRkRGxEUVRzN096czdPenM3T3pzN096czdPMEZCWlVjN1FVRkRTQ3hKUVVGQkxGTkJRVUVzYTBKQlFVRXNWVUZCUVN4TlFVRkJMRVZCUVVFN1NVRkJkVU1zVTBGSGRFTXNRMEZCUVN4VFFVRkJMRVZCUVVFc1RVRkJRU3hEUVVGQk8wRkJSME1zU1VGQlFTeFRRVUZCTEZOQlFVRXNRMEZCV1N4TFFVRnhRaXhGUVVGQk8wRkJReTlDTEZGQlFVRXNTVUZCUVN4TFFVRkJMRWRCUVVFc1RVRkJTeXhEUVVGQkxFbEJRVUVzUTBGQlFTeEpRVUZCTEVWQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVNc1NVRkJRVHRCUVVobUxGRkJRVUVzUzBGQlFTeERRVUZCTEZGQlFWRXNSMEZCTmtNc1MwRkJTeXhEUVVGRExGTkJRVk1zUlVGQlJUdFJRWGRDZEVVc1MwRkJXU3hEUVVGQkxGbEJRVUVzUjBGQlJ5eFZRVUZETEVsQlFUUkNMRVZCUVVFN08xbEJRekZETEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSU3hKUVVGSkxFVkJRVUVzU1VGQlFTeEZRVUZGTEVOQlFVTTdRVUZGWml4WlFVRkJMRWxCUVUwc1VVRkJVU3hIUVVGTExFdEJRVWtzUTBGQlF5eExRVUZMTEV0QlFXWTdRVUZEZEVJc1dVRkJRU3hKUVVGTkxHVkJRV1VzUjBGQlJ5eFJRVUZSTEZsQlFWa3NTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETzBGQlEzSkZMRmxCUVVFc1NVRkJUU3hKUVVGSkxFZEJRVWNzWlVGQlpTeEhRVUZITEZGQlFWRXNSMEZCUnl4SlFVRkpMRWxCUVVrc1JVRkJSVHRaUVVWd1JDeEpRVUZKTEVsQlFVa3NTMEZCU2l4SlFVRkJMRWxCUVVFc1NVRkJTU3hMUVVGS0xFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNTVUZCU1N4RFFVRkZMRkZCUVZFc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJUdEJRVU5xUWl4blFrRkJRU3hKUVVGQkxFVkJRVzFDTEVkQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRWEZDTEVWQlFYSkVMRXRCUVVzc1IwRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVWQlFVVXNUMEZCVHl4UlFVRjFRenRuUWtGRE5VUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdaMEpCUXpWQ0xFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE96dFpRVWRzUXl4RFFVRkJMRVZCUVVFc1IwRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkRMRkZCUVZFc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUVzUTBGQlFTeEZRVUZCTEVWQlFVY3NTVUZCU1N4RFFVRkRPMEZCUXpkQ0xGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4bFFVRmxMRWRCUVVjc1dVRkJRVHRCUVVOU0xGbEJRVUVzU1VGQlFTeEpRVUZKTEVkQlFVc3NTMEZCU1N4RFFVRkRMRXRCUVVzc1MwRkJaanRCUVVOT0xGbEJRVUVzU1VGQlFTeEZRVUYzUXl4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRV2hFTEVsQlFVa3NSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hGUVVGRkxGVkJRVlVzUjBGQlFTeEZRVUZCTEVOQlFVRXNWVUZCUVN4RlFVRkZMR1ZCUVdVc2NVSkJRV1U3V1VGRmVFUXNTVUZCU1N4bFFVRmxMRVZCUVVVN1owSkJRMjVDTEU5QlFVOHNXVUZCV1N4RFFVRkRMR1ZCUVdVc1JVRkJSVHRCUVVOdVF5eHZRa0ZCUVN4SlFVRkpMRVZCUVVFc1NVRkJRVHRCUVVOS0xHOUNRVUZCTEV0QlFVc3NSVUZCUlN4SlFVRkpPMjlDUVVOWUxGRkJRVkVzUlVGQlJTeExRVUZKTEVOQlFVTXNXVUZCV1R0QlFVTTFRaXhwUWtGQlFTeERRVUZET3p0WlFVZEtMRkZCUTBVc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeFBRVUZCTEVWQlFVRXNSVUZCUVN4SlFVRkpMRVZCUVVNc1RVRkJUU3hGUVVOWUxGTkJRVk1zUlVGQlF5dzRRa0ZCT0VJc1JVRkRlRU1zVjBGQlZ5eEZRVUZETEUxQlFVMHNSVUZEYkVJc1NVRkJTU3hGUVVGRExGbEJRVmtzUlVGRGFrSXNSMEZCUnl4RlFVRkZMRXRCUVVrc1EwRkJReXhSUVVGUkxFVkJRMnhDTEU5QlFVOHNSVUZCUlN4WlFVRkJPenR2UWtGRFVDeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFOUJRVThzVFVGQlJTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEV0QlFVc3NSVUZCUlR0cFFrRkRMMElzUlVGRFJDeFJRVUZSTEVWQlFVRXNTVUZCUVN4RlFVTlNMRXRCUVVzc1JVRkJSU3hKUVVGSkxFVkJRMWdzVVVGQlVTeEZRVUZGTEZWQlFVTXNTMEZCU3l4RlFVRkJPMjlDUVVOa0xFdEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFbEJRVWtzVlVGQlZTeERRVUZETzJsQ1FVTndSQ3hGUVVGQkxFTkJRMFE3UVVGRlRpeFRRVUZETzFGQmFFVkRMRXRCUVVrc1EwRkJReXhMUVVGTExFZEJRVWM3UVVGRFdDeFpRVUZCTEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGVkJRVlU3VTBGRE5VSTdPenRCUVVkSkxFbEJRVUVzVTBGQlFTeERRVUZCTEhkQ1FVRjNRaXhIUVVFdlFpeFZRVU5GTEV0QlFYRkNMRVZCUTNKQ0xFdEJRWEZDTEVWQlFVRTdVVUZGY2tJc1NVRkJTU3hMUVVGTExFTkJRVU1zVlVGQlZTeExRVUZMTEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUVVVN1dVRkRia01zVDBGQlR6dG5Ra0ZEVEN4SlFVRkpMRVZCUVVVc1MwRkJTeXhEUVVGRExGVkJRVlU3WVVGRGRrSTdPenRCUVVsSUxGRkJRVUVzVDBGQlR5eEpRVUZKTzB0QlExbzdRVUZwUkVRc1NVRkJRU3hUUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEUxQlFVMHNSMEZCVGl4WlFVRkJPMEZCUTBVc1VVRkJRU3hSUVVORkxFdEJRVUVzUTBGQlFTeGhRVUZCTEVOQlFVRXNTMEZCUVN4RlFVRkJMRVZCUVVzc1UwRkJVeXhGUVVGRExIZERRVUYzUXl4RlFVRkJPMWxCUTNKRUxFdEJRVXNzUTBGQlFTeGhRVUZCTEVOQlFVRXNTMEZCUVN4RlFVRkJMRVZCUVVFc1UwRkJVeXhGUVVGRExHZERRVUZuUXl4RlFVRkJMRVZCUXpWRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXl4RFFVTjBRanRaUVVOT0xFdEJRVXNzUTBGQlFTeGhRVUZCTEVOQlFVRXNTMEZCUVN4RlFVRkJMRVZCUVVFc1UwRkJVeXhGUVVGRExIZERRVUYzUXl4RlFVRkJPMEZCUTNKRUxHZENRVUZCTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRVXNzVTBGQlV5eEZRVUZETERoQ1FVRTRRaXhGUVVGQkxFVkJRekZETEVsQlFVa3NRMEZCUXl4bFFVRmxMRVZCUVVVc1EwRkRia0lzUTBGRFJpeERRVU5HTzB0QlJWUTdTVUZEU0N4UFFVRkRMRk5CUVVFN1FVRkJSQ3hEUVhwR1FTeERRVUYxUXl4VFFVRlRMRU5CZVVZdlF5eERRVUZCT3p0QlEzQkVSRHM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenRCUVhsRlJ6dEJRVU5JTEVsQlFVRXNSMEZCUVN4clFrRkJRU3hWUVVGQkxFMUJRVUVzUlVGQlFUdEpRVUZwUXl4VFFVRnRRaXhEUVVGQkxFZEJRVUVzUlVGQlFTeE5RVUZCTEVOQlFVRTdRVUZCY0VRc1NVRkJRU3hUUVVGQkxFZEJRVUVzUjBGQlFUczdVVUZUUlN4TFFVRkxMRU5CUVVFc1MwRkJRU3hIUVVGSExGTkJRVk1zUlVGQmEwSTdVVUZGYmtNc1MwRkJWeXhEUVVGQkxGZEJRVUVzUjBGQmQwSXNWVUZCUXl4TFFVRkxMRVZCUVVFN1FVRkRka01zV1VGQlFTeEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMRlZCUVZVc1JVRkJSU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RlFVRkZPMEZCUXpWRExHZENRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF6czdRVUZGTjBJc1UwRkJRenRSUVVWRUxFdEJRV2RDTEVOQlFVRXNaMEpCUVVFc1IwRkJOa0lzVlVGQlF5eExRVUZMTEVWQlFVRTdRVUZEYWtRc1dVRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEZWQlFWVXNSVUZCUlN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEZRVUZGTzBGQlEycEVMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1EwRkJRenM3UVVGRmJFTXNVMEZCUXp0UlFVVkVMRXRCUVdVc1EwRkJRU3hsUVVGQkxFZEJRU3RETEZWQlFVTXNTMEZCU3l4RlFVRkJPenRCUVVOc1JTeFpRVUZCTEVsQlFVMHNVVUZCVVN4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSE8wRkJRekZDTEZsQlFVRXNTVUZCU1N4UlFVRlJMRXRCUVVzc1QwRkJUeXhEUVVGRExFdEJRVXNzUlVGQlJUdG5Ra0ZET1VJc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdEJRVU4wUWl4blFrRkJRU3hMUVVGTExFTkJRVU1zUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxPenRaUVVjelFpeERRVUZCTEVWQlFVRXNSMEZCUVN4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZETEdWQlFXVXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMRWxCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVWNzUzBGQlN5eERRVUZETzBGQlEzSkRMRk5CUVVNN1VVRkZSQ3hMUVVGVExFTkJRVUVzVTBGQlFTeEhRVUZITEZWQlFVTXNTMEZCT0VJc1JVRkJRVHRaUVVONlF5eFBRVUZCTEZOQlFWTXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUlVGQlJTeExRVUZMTEVOQlFVTTdRVUZCYUVNc1UwRkJaME03UVVGRmJFTXNVVUZCUVN4TFFVRkJMRU5CUVVFc2EwSkJRV3RDTEVkQlFVY3NXVUZCUVRzN1FVRkRia0lzV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc01FSkJRVEJDTEVWQlFVVTdRVUZEZWtNc1owSkJRVUVzVDBGQlR5eExRVUZMT3p0QlFVZGtMRmxCUVVFc1NVRkJUU3hqUVVGakxFZEJRVWNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0clFrRkRPVUlzVFVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR0ZCUVdFc1RVRkJSU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVWtzUTBGQlF5eFZRVUZETEVsQlFVa3NSVUZCU3l4RlFVRkJMRTlCUVVFc1MwRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCTVVJc1JVRkJNRUk3YTBKQlEyNUZMRXRCUVVrc1EwRkJReXhsUVVGbExFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNN1FVRkZOME1zV1VGQlFTeEpRVUZOTEZWQlFWVXNSMEZEWkN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzU1VGQlNTeExRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETzFsQlJYSkZMRkZCUTBVc1EwRkJReXhqUVVGak8yZENRVU5tTEV0QlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlFVTTdaMEpCUXpkRExFTkJRVU1zVlVGQlZUdEJRVVZtTEZOQlFVTTdVVUZGUkN4TFFVRlZMRU5CUVVFc1ZVRkJRU3hIUVVGSExGVkJRVU1zUjBGQmIwSXNSVUZCUVR0QlFVRndRaXhaUVVGQkxFbEJRVUVzUjBGQlFTeExRVUZCTEUxQlFVRXNSVUZCUVN4RlFVRkJMRWRCUVUwc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUVRzN08xbEJSMmhETEU5QlFVRXNZVUZCWVN4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVOcVFpeG5Ra0ZCUVN4UFFVRlBMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTzBGQlF6TkNMR2RDUVVGQkxFOUJRVThzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4N1FVRkRNMElzWjBKQlFVRXNXVUZCV1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldUdEJRVU55UXl4blFrRkJRU3h2UWtGQmIwSXNSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHOUNRVUZ2UWp0QlFVTnlSQ3huUWtGQlFTeHZRa0ZCYjBJc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEc5Q1FVRnZRanRCUVVOeVJDeG5Ra0ZCUVN4WlFVRlpMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzBGQlEzSkRMR2RDUVVGQkxGVkJRVlVzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVN1lVRkRiRU1zUTBGQlF6dEJRVkpHTEZOQlVVVTdRVUZGU2l4UlFVRkJMRXRCUVVFc1EwRkJRU3hWUVVGVkxFZEJRVWNzV1VGQlFUczdPMEZCUjFnc1dVRkJRU3hQUVVGQkxHRkJRV0VzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVNMVFpeG5Ra0ZCUVN4WlFVRlpMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzBGQlEzSkRMR2RDUVVGQkxHOUNRVUZ2UWl4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYjBKQlFXOUNPMkZCUTNSRUxFTkJRVU03UVVGSVJpeFRRVWRGTzBGQlJVb3NVVUZCUVN4TFFVRkJMRU5CUVVFc1lVRkJZU3hIUVVGSExGbEJRVUU3UVVGRFpDeFpRVUZCTEU5QlFVRXNVMEZCVXl4RFFVTlFMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eEZRVU5rTEdOQlFXTXNRMEZEV2l4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUlVGRFpDeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkRha0lzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4blFrRkJaMElzUTBGRE5VSXNRMEZEUmp0QlFWQkVMRk5CVDBNN1VVRkZTQ3hMUVVGVkxFTkJRVUVzVlVGQlFTeEhRVUZITEZWQlFVTXNTMEZCYlVJc1JVRkJRVHRCUVVNdlFpeFpRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGak8yZENRVU42UWl4VFFVRlRMRU5CUTFBc1MwRkJTeXhGUVVOTUxHTkJRV01zUTBGRFdpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1JVRkRaQ3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNSVUZEYWtJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eG5Ra0ZCWjBJc1EwRkROVUlzUTBGRFJqdEJRVkpFTEZOQlVVTTdVVUZGU0N4TFFVRmxMRU5CUVVFc1pVRkJRU3hIUVVGSExGVkJRVU1zUzBGQmJVSXNSVUZCUVR0QlFVTndReXhaUVVGQkxFOUJRVUVzUzBGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hMUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVRXZReXhUUVVFclF6dEJRVVZxUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3h0UWtGQmJVSXNSMEZCUnl4WlFVRkJPMWxCUTJRc1NVRkJRU3hGUVVGQkxFZEJRVEJDTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVd4RExFZEJRVWNzUjBGQlFTeEZRVUZCTEVOQlFVRXNSMEZCUVN4RlFVRkZMR05CUVdNc1IwRkJRU3hGUVVGQkxFTkJRVUVzWTBGQlpUdFpRVVV4UXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhGUVVGRk8wRkJRMjVDTEdkQ1FVRkJMRTlCUVU4c1MwRkJTenM3TzFsQlNXUXNTVUZCVFN4TlFVRk5MRWRCUVVjc1ZVRkJWU3hEUVVGRExFZEJRVWNzUlVGQlJTeFpRVUZaTEVOQlFVTTdRVUZETlVNc1dVRkJRU3hQUVVGUExHTkJRV01zUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRPMEZCUTI1RExGTkJRVU03TzBGQlIwUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1owSkJRV2RDTEVkQlFVY3NXVUZCUVRzN1dVRkRXQ3hKUVVGQkxFVkJRVUVzUjBGQmIwSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJOVUlzUjBGQlJ5eEhRVUZCTEVWQlFVRXNRMEZCUVN4SFFVRkJMRVZCUVVVc1VVRkJVU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFJRVUZsTzFsQlEzQkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVU3TzJkQ1FVVmlMRTlCUVU4c1EwRkJReXhUUVVGVExFTkJRVU03TzFsQlJYQkNMRWxCUVUwc1RVRkJUU3hIUVVGSExGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNXVUZCV1N4RFFVRkRPenRCUVVVMVF5eFpRVUZCTEVsQlFVa3NVVUZCVVN4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlJUdG5Ra0ZEZUVJc1QwRkJUeXhEUVVGRExFTkJRVUVzUlVGQlFTeEhRVUZCTEZGQlFWRXNRMEZCUXl4SFFVRkhMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlJTeFRRVUZUTEVOQlFVTTdPenRaUVVreFF5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRPMEZCUTNCQ0xGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4VFFVRlRMRWRCUVVjc1dVRkJRVHRCUVVOS0xGbEJRVUVzU1VGQlFTeEZRVUU0UWl4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRWFJETEVkQlFVY3NSMEZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hGUVVGRkxGTkJRVk1zUjBGQlFTeEZRVUZCTEVOQlFVRXNVMEZCUVN4RlFVRkZMRTlCUVU4c1lVRkJaVHRCUVVNNVF5eFpRVUZCTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVU3UVVGRE1VSXNaMEpCUVVFc1QwRkJUeXhMUVVGTE96dFpRVVZrTEU5QlFVOHNXVUZCV1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFVkJRVVVzVDBGQlR5eERRVUZETzBGQlF6bERMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeHJRa0ZCYTBJc1IwRkJSeXhaUVVGQk96dFpRVU5pTEVsQlFVRXNSVUZCUVN4SFFWRkdMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJVRm9zUjBGQlJ5eEhRVUZCTEVWQlFVRXNRMEZCUVN4SFFVRkJMRVZCUTBnc1dVRkJXU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFpRVUZCTEVWQlExb3NWVUZCVlN4blFrRkJRU3hGUVVOV0xGbEJRVmtzUjBGQlFTeEZRVUZCTEVOQlFVRXNXVUZCUVN4RlFVTmFMREJDUVVFd1FpeEhRVUZCTEVWQlFVRXNRMEZCUVN3d1FrRkJRU3hGUVVNeFFpeFRRVUZUTEVkQlFVRXNSVUZCUVN4RFFVRkJMRk5CUVVFc1JVRkRWQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlEwczdRVUZGWkN4WlFVRkJMRWxCUVUwc1lVRkJZU3hIUVVGSExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1IwRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWazdRVUZGZWtVc1dVRkJRU3hKUVVORkxFVkJRVVVzV1VGQldTeEpRVUZKTEZWQlFWVXNTVUZCU1N4WlFVRlpMRU5CUVVNN1FVRkROME1zWjBKQlFVRXNRMEZCUXl4aFFVRmhPMmxDUVVOaUxFTkJRVU1zTUVKQlFUQkNMRWxCUVVrc1MwRkJTU3hEUVVGRExGVkJRVlVzUlVGQlJTeERRVUZETEVWQlEyeEVPMEZCUTBFc1owSkJRVUVzVDBGQlR5eExRVUZMT3p0QlFVZGtMRmxCUVVFc1NVRkRSU3haUVVGWk8yZENRVU5hTEU5QlFVODdRVUZEVUN4cFFrRkJReXhSUVVGUkxFTkJRVU1zWVVGQllTeEZRVUZGTEU5QlFVOHNRMEZCUXl4SlFVRkpMRTlCUVU4c1EwRkJReXhoUVVGaExFVkJRVVVzVDBGQlR5eERRVUZETEVOQlFVTXNSVUZEY2tVN1owSkJRMEVzVDBGQlR5eFpRVUZaTEVOQlFVTXNSMEZCUnl4RlFVRkZMR0ZCUVdFc1JVRkJSU3hQUVVGUExFTkJRVU03TzBGQlIyeEVMRmxCUVVFc1NVRkRSU3hWUVVGVk8yZENRVU5XTEZOQlFWTTdRVUZEVkN4cFFrRkJReXhQUVVGUExFTkJRVU1zWVVGQllTeEZRVUZGTEZOQlFWTXNRMEZCUXl4SlFVRkpMRTlCUVU4c1EwRkJReXhoUVVGaExFVkJRVVVzVTBGQlV5eERRVUZETEVOQlFVTXNSVUZEZUVVN1owSkJRMEVzVDBGQlR5eFpRVUZaTEVOQlFVTXNSMEZCUnl4RlFVRkZMRk5CUVZNc1JVRkJSU3hoUVVGaExFTkJRVU03TzBGQlIzQkVMRmxCUVVFc1NVRkRSU3haUVVGWk8yZENRVU5hTEZOQlFWTTdRVUZEVkN4blFrRkJRU3hEUVVGRExFOUJRVTg3UVVGRFVpeHBRa0ZCUXl4UFFVRlBMRU5CUVVNc1lVRkJZU3hGUVVGRkxGTkJRVk1zUTBGQlF5eEpRVUZKTEU5QlFVOHNRMEZCUXl4aFFVRmhMRVZCUVVVc1UwRkJVeXhEUVVGRExFTkJRVU1zUlVGRGVFVTdaMEpCUTBFc1QwRkJUeXhaUVVGWkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEZOQlFWTXNSVUZCUlN4aFFVRmhMRU5CUVVNN08wRkJSM0JFTEZsQlFVRXNUMEZCVHl4TFFVRkxPMEZCUTJRc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEhGQ1FVRnhRaXhIUVVGSExGbEJRVUU3TzBGQlEzUkNMRmxCUVVFc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hGUVVGRk8wRkJRemxDTEdkQ1FVRkJMRTlCUVU4c1MwRkJTenM3UVVGSFVpeFpRVUZCTEVsQlFVRXNSVUZCYlVNc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUV6UXl4SFFVRkhMRWRCUVVFc1JVRkJRU3hEUVVGQkxFZEJRVUVzUlVGQlJTeFRRVUZUTEVkQlFVRXNSVUZCUVN4RFFVRkJMRk5CUVVFc1JVRkJSU3haUVVGWkxHdENRVUZsTzBGQlEyNUVMRmxCUVVFc1NVRkJUU3hoUVVGaExFZEJRVWNzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1R0WlFVVjZSU3hKUVVGSkxGbEJRVmtzUlVGQlJUdEJRVU5vUWl4blFrRkJRU3hQUVVGUExGTkJRVk1zUTBGQlF5eEhRVUZITEVWQlFVVXNZVUZCWVN4RFFVRkRPenRwUWtGREwwSTdRVUZEVEN4blFrRkJRU3hQUVVGUExGTkJRVk1zUTBGQlF5eEhRVUZITEVWQlFVVXNVMEZCVXl4RFFVRkRPenRCUVVWd1F5eFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc2JVSkJRVzFDTEVkQlFVY3NXVUZCUVRzN1FVRkRjRUlzV1VGQlFTeEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMR3RDUVVGclFpeEZRVUZGTEVWQlFVVTdRVUZET1VJc1owSkJRVUVzVDBGQlR5eExRVUZMT3p0QlFVZFNMRmxCUVVFc1NVRkJRU3hMUVVFMlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRnlSQ3hIUVVGSExFZEJRVUVzUlVGQlFTeERRVUZCTEVkQlFVRXNSVUZCUlN4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUVzUlVGQlJTeFZRVUZWTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVVFc1JVRkJSU3haUVVGWkxHdENRVUZsTzBGQlF6ZEVMRmxCUVVFc1NVRkJUU3hoUVVGaExFZEJRVWNzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1R0QlFVVjZSU3haUVVGQkxFbEJRVWtzVlVGQlZTeEpRVUZKTEZsQlFWa3NSVUZCUlR0QlFVTTVRaXhuUWtGQlFTeFBRVUZQTEZOQlFWTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1lVRkJZU3hEUVVGRE96dHBRa0ZETDBJN1FVRkRUQ3huUWtGQlFTeFBRVUZQTEZOQlFWTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1QwRkJUeXhEUVVGRE96dEJRVVZzUXl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzV1VGQldTeEhRVUZITEZsQlFVRTdRVUZEVUN4WlFVRkJMRWxCUVVFc1JVRkJPRUlzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRjBReXhIUVVGSExFZEJRVUVzUlVGQlFTeERRVUZCTEVkQlFVRXNSVUZCUlN4VFFVRlRMRWRCUVVFc1JVRkJRU3hEUVVGQkxGTkJRVUVzUlVGQlJTeFBRVUZQTEdGQlFXVTdRVUZET1VNc1dVRkJRU3hKUVVGSkxFTkJRVU1zVTBGQlV5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZPMEZCUXpGQ0xHZENRVUZCTEU5QlFVOHNTMEZCU3pzN1FVRkZaQ3haUVVGQkxFOUJRVThzVTBGQlV5eERRVUZETEZOQlFWTXNSVUZCUlN4SFFVRkhMRU5CUVVNN1FVRkRiRU1zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMRlZCUVZVc1IwRkJSeXhaUVVGQk8wRkJRMHdzV1VGQlFTeEpRVUZCTEVWQlFUaENMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQmRFTXNSMEZCUnl4SFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQkxFVkJRVVVzVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUVVVc1QwRkJUeXhoUVVGbE8wRkJRemxETEZsQlFVRXNTVUZCU1N4RFFVRkRMRk5CUVZNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJUdEJRVU14UWl4blFrRkJRU3hQUVVGUExFdEJRVXM3TzBGQlJXUXNXVUZCUVN4UFFVRlBMRk5CUVZNc1EwRkJReXhQUVVGUExFVkJRVVVzUjBGQlJ5eERRVUZETzBGQlEyaERMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeFRRVUZUTEVkQlFVY3NXVUZCUVR0WlFVTldMRWxCUVUwc1QwRkJUeXhIUVVGSExFMUJRVTBzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJRenRCUVVOMFF5eFpRVUZCTEU5QlFVOHNUMEZCVHl4TFFVRkxMRU5CUVVNc1NVRkJTU3hQUVVGUExFdEJRVXNzUTBGQlF6dEJRVU4yUXl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzV1VGQldTeEhRVUZITEZsQlFVRTdRVUZEWWl4WlFVRkJMRkZCUTBVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEV0QlFVc3NVMEZCVXp0blFrRkRPVUlzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFbEJRVWtzUlVGQlJTeExRVUZMTEZGQlFWRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF6dEJRVVUxUkN4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWVVGQllTeEhRVUZITEZsQlFVRTdRVUZEWkN4WlFVRkJMRkZCUTBVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEV0QlFVc3NVMEZCVXp0blFrRkRPVUlzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN6dEJRVVUxUkN4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzV1VGQldTeEhRVUZITEZsQlFVRXNSVUZCVFN4UFFVRkJMRXRCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTXNRMEZCZWtJc1JVRkJlVUk3UVVGRk9VTXNVVUZCUVN4TFFVRkJMRU5CUVVFc1ZVRkJWU3hIUVVGSExGbEJRVUU3TzBGQlExZ3NXVUZCUVN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWlVGQlpTeEZRVUZGTzJkQ1FVTTVRaXhQUVVGUExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hOUVVGRkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlNTeERRVUZETEZWQlFVTXNTVUZCU1N4RlFVRkJPMEZCUTNwRExHOUNRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGQk1VSXNhVUpCUVRCQ0xFTkJRek5DT3p0WlFVVklMRTlCUVU4c1MwRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRCUVVOc1JDeFRRVUZETzFGQlJVUXNTMEZCWVN4RFFVRkJMR0ZCUVVFc1IwRkJSeXhWUVVGRExFbEJRVlVzUlVGQlFUdEJRVU42UWl4WlFVRkJMRWxCUVUwc1dVRkJXU3hIUVVGSExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdhMEpCUXpWQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrN2EwSkJRelZDTEZOQlFWTTdRVUZEWWl4WlFVRkJMRTlCUVU4c1NVRkJTU3hEUVVOVUxIVkNRVUYxUWl4RlFVTjJRaXhaUVVGWkxFVkJRMW9zZVVKQlFYbENMRWRCUVVjc1owSkJRV2RDTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGRE5VUTdRVUZEUlN4blFrRkJRU3hwUTBGQmFVTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1ZVRkJWU3hGUVVGRk8wRkJRM0JFTEdkQ1FVRkJMR2xEUVVGcFF5eEZRVUZGTEV0QlFVa3NRMEZCUXl4VlFVRlZMRVZCUVVVN1FVRkRjRVFzWjBKQlFVRXNhVU5CUVdsRExFVkJRVVVzUzBGQlNTeERRVUZETEZWQlFWVXNSVUZCUlR0QlFVTndSQ3huUWtGQlFTd3dRMEZCTUVNc1JVRkJSU3hMUVVGSkxFTkJRVU1zYTBKQlFXdENMRVZCUVVVN1FVRkRja1VzWjBKQlFVRXNiME5CUVc5RExFVkJRVVVzUzBGQlNTeERRVUZETEZsQlFWa3NSVUZCUlR0QlFVTjZSQ3huUWtGQlFTeHJRMEZCYTBNc1JVRkJSU3hMUVVGSkxFTkJRVU1zVlVGQlZTeEZRVUZGTzBGQlEzSkVMR2RDUVVGQkxHbERRVUZwUXl4RlFVRkZMRXRCUVVrc1EwRkJReXhUUVVGVExFVkJRVVU3UVVGRGJrUXNaMEpCUVVFc01rTkJRVEpETEVWQlFVVXNTMEZCU1N4RFFVRkRMR3RDUVVGclFpeEZRVUZGTzBGQlEzUkZMR2RDUVVGQkxEaERRVUU0UXl4RlFVTTFReXhMUVVGSkxFTkJRVU1zY1VKQlFYRkNMRVZCUVVVN1FVRkRPVUlzWjBKQlFVRXNORU5CUVRSRExFVkJRekZETEV0QlFVa3NRMEZCUXl4dFFrRkJiVUlzUlVGQlJUdEJRVU0xUWl4blFrRkJRU3c0UWtGQk9FSXNSVUZCUlN4TFFVRkpMRU5CUVVNc1dVRkJXU3hGUVVGRk8wRkJRMjVFTEdkQ1FVRkJMR2REUVVGblF5eEZRVUZGTEV0QlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVN1owSkJRMnhFTEhORFFVRnpReXhGUVVOd1F5eExRVUZKTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWxCUVVrc1MwRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJUdGhRVU01UXl4RlFVTkVMRXRCUVVrc1EwRkJReXh0UWtGQmJVSXNSVUZCUlN4RlFVTXhRaXhMUVVGSkxFTkJRVU1zWjBKQlFXZENMRVZCUVVVc1EwRkRlRUk3UVVGRFNDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1dVRkJXU3hIUVVGSExGbEJRVUU3V1VGRFVDeEpRVUZCTEVWQlFVRXNSMEZKUml4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVoYUxFZEJRVWNzUjBGQlFTeEZRVUZCTEVOQlFVRXNSMEZCUVN4RlFVTklMRVZCUVhGRExFZEJRVUVzUlVGQlFTeERRVUZCTERCQ1FVRkJMRVZCUVhKRExEQkNRVUV3UWl4SFFVRkhMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVVVGQlVTeExRVUZCTEVWQlEzSkRMRVZCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzTWtKQlFUWkRMRVZCUVRkRExESkNRVUV5UWl4SFFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVWNzWlVGQlpTeEhRVUZCTEVWQlEycERPMWxCUldRc1NVRkJUU3hOUVVGTkxFZEJRMVlzUzBGQlNTeERRVUZETEZWQlFWVXNSVUZCUlN4SlFVRkpMRXRCUVVrc1EwRkJReXhWUVVGVk8wRkJRMnhETEd0Q1FVRkZPMnRDUVVOQkxEQkNRVUV3UWp0QlFVVm9ReXhaUVVGQkxFOUJRVThzVlVGQlJ5eE5RVUZOTEVWQlFVRXNSMEZCUVN4RFFVRkJMRU5CUVVFc1RVRkJRU3hEUVVGSkxGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNUVUZCVFN4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVVTdRVUZEYkVVc1UwRkJRenM3UVVGSFJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4UlFVRlJMRWRCUVVjc1dVRkJRVHRCUVVOSUxGbEJRVUVzU1VGQlFTeExRVUU0UXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGMFJDeEhRVUZITEZOQlFVRXNSVUZCUlN4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxGRkJRVzlDTEVWQlFYQkNMRkZCUVZFc1IwRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZITEVsQlFVa3NSMEZCUnl4RlFVRkZMRXRCUVVFc1JVRkJSU3haUVVGWkxHdENRVUZsTzFsQlF6bEVMRWxCUVUwc1UwRkJVeXhIUVVGSExGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNXVUZCV1N4RFFVRkRPMWxCUXk5RExFbEJRVTBzVFVGQlRTeEhRVUZITEVWQlFVVTdRVUZEYWtJc1dVRkJRU3hKUVVGSkxGRkJRVkVzUTBGQlF5eEhRVUZITEVOQlFVTXNVMEZCVXl4RFFVRkRMRVZCUVVVN1FVRkRNMElzWjBKQlFVRXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJXQ3hMUVVGQkxFTkJRVUVzVFVGQlRTeEZRVUZUTEZGQlFWRXNRMEZCUXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zV1VGQldTeERRVUZGT3p0QlFVVjJSQ3haUVVGQkxFbEJRVWtzUzBGQlNTeERRVUZETEZWQlFWVXNSVUZCUlN4RlFVRkZPMEZCUTNKQ0xHZENRVUZCTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUTFRc1dVRkJXU3hMUVVGYUxFbEJRVUVzU1VGQlFTeFpRVUZaTEV0QlFWb3NUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3haUVVGWkxFTkJRMUlzVFVGQlRTeERRVUZETEZWQlFVTXNWMEZCVnl4RlFVRkJPMEZCUTI1Q0xHOUNRVUZCTEVsQlFVa3NWMEZCVnl4WlFVRlpMRWxCUVVrc1JVRkJSVHRCUVVNdlFpeDNRa0ZCUVN4UFFVRlBMRk5CUVZNc1EwRkJReXhYUVVGWExFVkJRVVVzUjBGQlJ5eERRVUZET3p0QlFVVndReXh2UWtGQlFTeFBRVUZQTEZOQlFWTXNRMEZCUXl4WFFVRlhMRXRCUVVFc1NVRkJRU3hKUVVGWUxGZEJRVmNzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRllMRmRCUVZjc1EwRkJSU3hKUVVGSkxFVkJRVVVzUjBGQlJ5eERRVUZETzBGQlF6RkRMR2xDUVVGRExFTkJRMEVzUTBGQlFTeEhRVUZITEVOQlFVTXNWVUZCUXl4WFFVRlhMRVZCUVVFN1FVRkRaaXh2UWtGQlFTeEpRVUZKTEZkQlFWY3NXVUZCV1N4SlFVRkpMRVZCUVVVN1FVRkRMMElzZDBKQlFVRXNUMEZCVHl4VFFVRlRPenRCUVVWc1FpeHZRa0ZCUVN4UFFVRlBMRmRCUVZjc1MwRkJXQ3hKUVVGQkxFbEJRVUVzVjBGQlZ5eDFRa0ZCV0N4WFFVRlhMRU5CUVVVc1QwRkJUenRwUWtGRE5VSXNRMEZCUXl4RFFVTk1PenM3UVVGSFNDeFpRVUZCTEU5QlFVOHNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGRE1VSXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxGZEJRVmNzUjBGQlJ5eFpRVUZCTzBGQlExb3NXVUZCUVN4SlFVRk5MRmRCUVZjc1IwRkJSeXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRTdRVUZEZGtNc1dVRkJRU3hKUVVGTkxHVkJRV1VzUjBGQlJ5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrN1dVRkRMME1zU1VGQlRTeFJRVUZSTEVkQlExb3NSVUZEUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHTkJRV003UVVGRGVrSXNhVUpCUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGpRVUZqTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1lVRkJZU3hGUVVGRkxFTkJRVU1zUTBGRGNrUTdhVUpCUTBFc1MwRkJTU3hEUVVGRExHdENRVUZyUWl4RlFVRkZPMEZCUTNoQ0xIRkNRVUZETEV0QlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1YwRkJWeXhEUVVGRE8wRkJRekZDTEhkQ1FVRkJMRk5CUVZNc1EwRkJReXhsUVVGbExFVkJRVVVzVjBGQlZ5eERRVUZETEVOQlFVTTdRVUZETVVNc2EwSkJRVVU3YTBKQlEwRXNSVUZCUlR0QlFVVlNMRmxCUVVFc1QwRkJUeXhSUVVGUk8wRkJRMnBDTEZOQlFVTTdPenM3UVVGTFJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4alFVRmpMRWRCUVVjc1dVRkJRVHM3T3p0WlFVZG1MRXRCUVVrc1EwRkJReXhqUVVGakxFVkJRVVVzUzBGQlNTeE5RVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXd3UTBGQlJTeExRVUZMTEVOQlFVTXNSVUZCUlN4aFFVRmhMRVZCUVVVc1NVRkJTU3hGUVVGRkxFTkJRVU1zUTBGQlFUdEJRVU0zUlN4VFFVRkRPMEZCZVVORUxGRkJRVUVzUzBGQlFTeERRVUZCTEdsQ1FVRnBRaXhIUVVGSExGbEJRVUU3V1VGRGJFSXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExEQkNRVUV3UWl4SlFVRkpMRXRCUVVrc1EwRkJReXhaUVVGWkxFVkJRVVU3UVVGRE9VUXNaMEpCUVVFc1QwRkJUeXhKUVVGSk8xbEJRMklzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRFJDUVVFMFFpeEpRVUZKTEV0QlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVN1FVRkRha1VzWjBKQlFVRXNUMEZCVHl4SlFVRkpPMEZCUTJJc1dVRkJRU3hQUVVGUExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdhMEpCUTJRc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHBRa0ZCYVVJc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVYzdhMEpCUTNCRkxFOUJRVThzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJRenRCUVVNM1FpeFRRVUZETzFGQlJVUXNTMEZCVFN4RFFVRkJMRTFCUVVFc1IwRkJSeXhqUVVGTk96dFJRVVZpTEV0QlEwVXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRVUVzUjBGQlJ5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUTJZc1UwRkJVeXhGUVVGRkxFdEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGRE4wTXNVMEZCVXl4RlFVRkZMRXRCUVVrc1EwRkJReXhsUVVGbExFVkJReTlDTEU5QlFVOHNSVUZCUlN4TFFVRkpMRU5CUVVNc1YwRkJWeXhGUVVONlFpeFpRVUZaTEVWQlExWXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUjBGQlJ5eExRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFZEJRVWNzVTBGQlV5eEZRVVZxUlN4alFVRmpMRVZCUTFvc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTEVkQlFVY3NTMEZCU1N4RFFVRkRMR2RDUVVGblFpeEhRVUZITEZOQlFWTXNSVUZGYUVVc1VVRkJVU3hGUVVGRkxFdEJRVWtzUTBGQlF5eFhRVUZYTEVWQlFVVXNSVUZEYUVJc1dVRkJRU3hGUVVGQkxFdEJRVWtzUTBGQlF5eFpRVUZaTEVWQlFVVXNSVUZETDBJc1NVRkJTU3hGUVVGRExGRkJRVkVzUlVGRFlpeExRVUZMTEVWQlFVVXNTMEZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hGUVVGQkxHVkJRVUVzUlVGRFVDeExRVUZKTEVOQlFVTXNWVUZCVlN4RlFVRkZMRVZCUTJ4Q0xHTkJRVUVzUlVGQlFTeExRVUZKTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWRCUVVjc1RVRkJUU3hIUVVGSExGTkJRVk1zUlVGQlFTeGxRVUZCTEVWQlEzWkRMRXRCUVVrc1EwRkJReXhWUVVGVkxFVkJRVVVzU1VGQlNTeExRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRVZCUVVFN1dVRkZia1FzUzBGQlNTeERRVUZETEdsQ1FVRnBRaXhGUVVGRk8xbEJRM2hDTEV0QlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1MwRkJTeXhGUVVGRkxFdEJRM0pDTEV0QlFVMHNRMEZCUVN4aFFVRkJMRU5CUVVFc1RVRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZETEZOQlFWTXNTVUZCUlN4TFFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVkVzUTBGRGJrUXNRMEZEUnl4RlFYcENUeXhGUVRCQ1pEczdPMEZCY21KRUxFbEJRVUVzUjBGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4cFFrRkJhVUlzUjBGQmFrSXNXVUZCUVR0UlFVTkZMRWxCUVVrc1EwRkJReXhqUVVGakxFVkJRVVU3UzBGRGRFSTdRVUZGUkN4SlFVRkJMRWRCUVVFc1EwRkJRU3hUUVVGQkxFTkJRVUVzYTBKQlFXdENMRWRCUVd4Q0xGbEJRVUU3VVVGRFJTeEpRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZPMHRCUTNSQ08wRkJiMWRQTEVsQlFVRXNSMEZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3hqUVVGakxFZEJRWFJDTEZsQlFVRTdVVUZEUlN4SlFVRkpMR05CUVdNc1IwRkJSeXhMUVVGTE8wRkJRekZDTEZGQlFVRXNTVUZCU1N4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVGRkxFdEJRVXNzUTBGQlF5eEpRVUZKTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlFVTXNSVUZCUlRzN1FVRkZka1VzV1VGQlFTeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1NVRkJTU3hSUVVGUkxFTkJRVU1zWVVGQllTeExRVUZMTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVN1owSkJRM1pGTEdOQlFXTXNSMEZCUnl4SlFVRkpPenM3T3p0QlFVdDJRaXhaUVVGQkxFbEJRVWtzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEc5Q1FVRnZRaXhGUVVGRk8yZENRVU42UkN4alFVRmpMRWRCUVVjc1MwRkJTenM3UVVGRmVFSXNXVUZCUVN4SlFVRkpMRWxCUVVrc1EwRkJReXhyUWtGQmEwSXNSVUZCUlN4RlFVRkZPMmRDUVVNM1FpeGpRVUZqTEVkQlFVY3NTVUZCU1RzN1FVRkZka0lzV1VGQlFTeEpRVUZKTEVsQlFVa3NRMEZCUXl4alFVRmpMRVZCUVVVc1JVRkJSVHRuUWtGRGVrSXNZMEZCWXl4SFFVRkhMRXRCUVVzN096dEJRVWN4UWl4UlFVRkJMRTlCUVU4c1kwRkJZenRMUVVOMFFqczdRVUZIVHl4SlFVRkJMRWRCUVVFc1EwRkJRU3hUUVVGQkxFTkJRVUVzYTBKQlFXdENMRWRCUVRGQ0xGbEJRVUU3TzBGQlEwVXNVVUZCUVN4UlFVTkZMRU5CUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzUTBGQlFTeEZRVUZCTEVkQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlJTeFBRVUZQTEUxQlFVVXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF6dEJRVU5zUlN4aFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxGRkJRVkVzUTBGQlF5eGhRVUZoTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUlN4VFFVRlRMRU5CUVVNc1VVRkJVU3hEUVVGRExIVkNRVUYxUWl4RFFVRkRMRU5CUVVFN1MwRkZkRVU3UVVGRlR5eEpRVUZCTEVkQlFVRXNRMEZCUVN4VFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGMFFpeFpRVUZCTzFGQlEwVTdPMUZCUlVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETERCQ1FVRXdRaXhKUVVGSkxFbEJRVWtzUTBGQlF5eFpRVUZaTEVWQlFVVTdRVUZETjBRc1lVRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETERSQ1FVRTBRaXhKUVVGSkxFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0TFFVVndSVHRKUVhWRFNDeFBRVUZETEVkQlFVRTdRVUZCUkN4RFFYWmlRU3hEUVVGcFF5eFRRVUZUTEVOQmRXSjZReXhEUVVGQk96dEJRMnBxUWtRc1NVRkJRU3hWUVVGQkxHdENRVUZCTEZWQlFVRXNUVUZCUVN4RlFVRkJPMGxCUVhkRExGTkJRVEJDTEVOQlFVRXNWVUZCUVN4RlFVRkJMRTFCUVVFc1EwRkJRVHRCUVVGc1JTeEpRVUZCTEZOQlFVRXNWVUZCUVN4SFFVRkJPenRSUVdWRkxFdEJRVmtzUTBGQlFTeFpRVUZCTEVkQlFVY3NVMEZCVXl4RlFVRnJRanRSUVVVeFF5eExRVUZYTEVOQlFVRXNWMEZCUVN4SFFVRkhMRlZCUVVNc1MwRkJkVU1zUlVGQlFUdEJRVU53UkN4WlFVRkJMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZEZEVJc1owSkJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRE96dEJRVVUzUWl4VFFVRkRPMUZCUlVRc1MwRkJaU3hEUVVGQkxHVkJRVUVzUjBGQlJ5eFZRVUZETEV0QlFUQkRMRVZCUVVFN08wRkJRek5FTEZsQlFVRXNTVUZCVFN4UlFVRlJMRWRCUVVjc1MwRkJTeXhEUVVGRExFZEJRVWM3UVVGRE1VSXNXVUZCUVN4SlFVRkpMRkZCUVZFc1MwRkJTeXhQUVVGUExFTkJRVU1zUzBGQlN5eEZRVUZGTzJkQ1FVTTVRaXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlEzUkNMR2RDUVVGQkxFdEJRVXNzUTBGQlF5eEhRVUZITEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVzN08xbEJSek5DTEVOQlFVRXNSVUZCUVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNaVUZCWlN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlJ5eExRVUZMTEVOQlFVTTdRVUZEY2tNc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEd0Q1FVRnJRaXhIUVVGSExGbEJRVUU3UVVGRGJrSXNXVUZCUVN4UFFVRkJMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5d3dRa0ZCTUVJN1FVRkRkRU1zWjBKQlFVRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRGFFUXNaMEpCUVVFc1UwRkJVeXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETzBGQlJtNUVMRk5CUlcxRU8wRkJSWEpFTEZGQlFVRXNTMEZCUVN4RFFVRkJMRmRCUVZjc1IwRkJSeXhaUVVGQk8wRkJRMW9zV1VGQlFTeFBRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZenRuUWtGRGVrSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGak8ybENRVU40UWl4TFFVRkpMRU5CUVVNc2EwSkJRV3RDTEVWQlFVVTdRVUZEZUVJc2NVSkJRVU1zVTBGQlV5eERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRPMEZCUXpsRExIZENRVUZCTEZOQlFWTXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8wRkJRekZFTEd0Q1FVRkZPMnRDUVVOQkxFVkJRVVU3UVVGT1RpeFRRVTFOT3pzN08xRkJTMUlzUzBGQmNVSXNRMEZCUVN4eFFrRkJRU3hIUVVGSExGVkJRVU1zVTBGQmIwTXNSVUZCUVR0WlFVTXpSQ3hKUVVGSkxIRkNRVUZ4UWl4SFFVRkhMRXRCUVVzN096dEJRVWRxUXl4WlFVRkJMRWxCUTBVc1MwRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJTeExRVUZMTEVOQlFVTTdaMEpCUTNoQ0xFVkJRVU1zVTBGQlV5eExRVUZVTEVsQlFVRXNTVUZCUVN4VFFVRlRMSFZDUVVGVUxGTkJRVk1zUTBGQlJTeGpRVUZqTEVOQlFVRTdRVUZETVVJc1owSkJRVUVzVTBGQlV5eERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRVZCUTI1RU96dEJRVVZCTEdkQ1FVRkJMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zWVVGQllTeEpRVUZKTEZGQlFWRXNRMEZCUXl4aFFVRmhMRXRCUVVzc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJUdHZRa0ZEZGtVc2NVSkJRWEZDTEVkQlFVY3NTVUZCU1RzN096czdRVUZMT1VJc1owSkJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNiMEpCUVc5Q0xFVkJRVVU3YjBKQlEzcEVMSEZDUVVGeFFpeEhRVUZITEV0QlFVczdPenRCUVVjdlFpeG5Ra0ZCUVN4SlFVTkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldUdEJRVU4yUWl4dlFrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NRMEZCUXl4UFFVRlBPMEZCUXk5Q0xHOUNRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJRenRCUVVOb1JTeHZRa0ZCUVN4UlFVRlJMRU5CUVVNc1lVRkJZVHR2UWtGRGRFSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhUUVVGVExFTkJRVU1zVVVGQlVTeERRVU4yUXl3clFrRkJLMElzUTBGRGFFTXNSVUZEUkR0dlFrRkRRU3h4UWtGQmNVSXNSMEZCUnl4SlFVRkpPenM3V1VGSmFFTXNjVUpCUVhGQ08yZENRVU51UWl4TFFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVTg3UVVGRGVrSXNaMEpCUVVFc1MwRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1lVRkJZU3hGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZETzBGQlF6VkVMRk5CUVVNN096dEJRWEpHUkN4SlFVRkJMRTFCUVVFc1EwRkJRU3hqUVVGQkxFTkJRVmNzVlVGQldTeEZRVUZCTEdOQlFVRXNSVUZCUVR0QlFVRjJRaXhSUVVGQkxFZEJRVUVzUlVGQlFTeFpRVUZCTzFsQlEwVXNUMEZCVHp0QlFVTk1MR2RDUVVGQkxHVkJRV1VzUlVGQlJTeFBRVUZQTzJGQlEzcENPMU5CUTBZN096dEJRVUZCTEV0QlFVRXNRMEZCUVR0QlFVVkVMRWxCUVVFc1ZVRkJRU3hEUVVGQkxGTkJRVUVzUTBGQlFTeHBRa0ZCYVVJc1IwRkJha0lzV1VGQlFUdFJRVU5GTEVsQlFVa3NRMEZCUXl4eFFrRkJjVUlzUlVGQlJUdExRVU0zUWp0SlFVVkVMRlZCUVd0Q0xFTkJRVUVzVTBGQlFTeERRVUZCTEd0Q1FVRkJMRWRCUVd4Q0xGVkJRVzFDTEZOQlFUQkNMRVZCUVVFN1FVRkRNME1zVVVGQlFTeEpRVUZKTEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU1zVTBGQlV5eERRVUZETzB0QlEzUkRPMEZCTWtWRUxFbEJRVUVzVlVGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4TlFVRk5MRWRCUVU0c1dVRkJRVHRSUVVOUkxFbEJRVUVzUlVGQlFTeEhRVXRHTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCU2xvc1ZVRkJWU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFZRVUZCTEVWQlExWXNZMEZCWXl4SFFVRkJMRVZCUVVFc1EwRkJRU3hqUVVGQkxFVkJRMlFzUlVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4bFFVRjVSQ3hGUVVGNlJDeGxRVUZsTEVkQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJSeXhWUVVGVkxFTkJRVU1zV1VGQldTeERRVUZETEdWQlFXVXNSMEZCUVN4RlFVRkJMRVZCUTNwRUxFOUJRVThzUjBGQlFTeEZRVUZCTEVOQlFVRXNUMEZEU3p0QlFVVmtMRkZCUVVFc1NVRkJUU3hwUWtGQmFVSXNSMEZCUnp0QlFVTjRRaXhaUVVGQkxDdENRVUVyUWl4RlFVRkZMRWxCUVVrN1FVRkRja01zV1VGQlFTd3dRMEZCTUVNc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eEpRVUZKTEVOQlFVTXNZMEZCWXp0QlFVTjRSU3haUVVGQkxIbERRVUY1UXl4RlFVTjJReXhEUVVGRExFTkJRVU1zVDBGQlR5eEpRVUZKTEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRUUVVNdlJEdFJRVU5FTEZGQlEwVXNOa0pCUTBVc1IwRkJSeXhGUVVGRkxFbEJRVWtzUTBGQlF5eFpRVUZaTEVWQlEzUkNMRk5CUVZNc1JVRkJSU3hKUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1JVRkRkRUlzV1VGQlFTeEZRVUZCTEVWQlFVRXNRMEZCUVN4TlFVRkJMRU5CUVVjc1pVRkJaU3hGUVVGSkxFZEJRVUVzUTBGQlFTeERRVUZCTEUxQlFVRXNRMEZCUVN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGVkJRVlVzUTBGQlJTeEZRVU42UkN4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGRGVrSXNVMEZCVXl4RlFVRkZMRWxCUVVrc1EwRkJReXhsUVVGbExFVkJReTlDTEZGQlFWRXNSVUZCUlN4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVGRkxFVkJSVE5DTEVWQlFVRXNWVUZCVlN4RFFVTlFPMHRCUlZRN1NVRkRTQ3hQUVVGRExGVkJRVUU3UVVGQlJDeERRVzVJUVN4RFFVRjNReXhUUVVGVExFTkJiVWhvUkN4RFFVRkJPenRCUTJoSFJDeEpRVUZCTEVsQlFVRXNhMEpCUVVFc1ZVRkJRU3hOUVVGQkxFVkJRVUU3U1VGQmEwTXNVMEZCYjBJc1EwRkJRU3hKUVVGQkxFVkJRVUVzVFVGQlFTeERRVUZCTzBGQlFYUkVMRWxCUVVFc1UwRkJRU3hKUVVGQkxFZEJRVUU3TzFGQlQwVXNTMEZCVlN4RFFVRkJMRlZCUVVFc1IwRkJSeXhWUVVGRExFZEJRVk1zUlVGQlFUdFpRVU55UWl4UFFVRkJMR0ZCUVdFc1EwRkJReXhIUVVGSExFVkJRVVU3UVVGRGFrSXNaMEpCUVVFc1QwRkJUeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHp0QlFVTXpRaXhuUWtGQlFTeFBRVUZQTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUE8wRkJRek5DTEdkQ1FVRkJMRmxCUVZrc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWazdRVUZEY2tNc1owSkJRVUVzYjBKQlFXOUNMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHZRa0ZCYjBJN1FVRkRja1FzWjBKQlFVRXNiMEpCUVc5Q0xFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4dlFrRkJiMEk3UVVGRGNrUXNaMEpCUVVFc1dVRkJXU3hGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1R0QlFVTnlReXhuUWtGQlFTeFZRVUZWTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVk8yRkJRMnhETEVOQlFVTTdRVUZTUml4VFFWRkZPMEZCUlVvc1VVRkJRU3hMUVVGQkxFTkJRVUVzWTBGQll5eEhRVUZITEZWQlEyWXNSMEZCVXl4RlFVTlVMRXRCUVhWRExFVkJRVUU3UVVGRmRrTXNXVUZCUVN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVlVGQlZTeEZRVUZGTzJkQ1FVTjZRaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVXNRMEZCUXl4SFFVRkhMRVZCUVVVc1MwRkJTeXhEUVVGRE96dEJRVVZ5UXl4VFFVRkRPMUZCUlVRc1MwRkJiVUlzUTBGQlFTeHRRa0ZCUVN4SFFVRkhMRlZCUVVNc1IwRkJVeXhGUVVGQk8wRkJRemxDTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUlVGQlJUdEJRVU01UWl4blFrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVXNRMEZCUXl4SFFVRkhMRU5CUVVNN08wRkJSVzVETEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hsUVVGbExFZEJRVWNzVlVGRGFFSXNSMEZCVXl4RlFVTlVMRlZCUVd0Q0xFVkJRMnhDTEV0QlFYVkRMRVZCUVVFN08wRkJSWFpETEZsQlFVRXNTVUZCU1N4alFVRmpMRWRCUVVjc1NVRkJTU3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETzBGQlJXeERMRmxCUVVFc1MwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU14UWl4blFrRkJRU3hKUVVGTkxHRkJRV0VzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNN1owSkJRMjVETEdGQlFXRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1lVRkJZU3hEUVVGRExFOUJRVThzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXp0blFrRkZiRVFzU1VGQlRTeFRRVUZUTEVkQlFVY3NRMEZCUXl4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExHRkJRV0VzUTBGQlF6dG5Ra0ZGYWtRc1NVRkJTU3hUUVVGVExFVkJRVVU3YjBKQlEySXNZMEZCWXl4SFFVRkhMR0ZCUVdFN2IwSkJRemxDT3pzN1dVRkpTaXhKUVVGSkxFOUJRVThzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRXRCUVVzc1ZVRkJWU3hGUVVGRk8yZENRVU5xUkN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVWQlFVVXNWVUZCVlN4RlFVRkZMRXRCUVVzc1EwRkJRenM3UVVGRk5VUXNXVUZCUVN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlF6ZENMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNZMEZCWXl4RlFVRkZMRXRCUVVzc1EwRkJRenM3UVVGRk5VTXNXVUZCUVN4SlFVTkZMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNiVUpCUVcxQ0xFMUJRemxDTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUjBGQlFTeEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRzFDUVVGdFFpeEZRVU55UXp0blFrRkRRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRExFOUJRVThzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEVsQlFVRXNRMEZCUVN4RlFVRkJMRVZCUVVjc1MwRkJTeXhEUVVGRE96dEJRVVV2UWl4VFFVRkRPMUZCUlVRc1MwRkJaMElzUTBGQlFTeG5Ra0ZCUVN4SFFVRkhMRlZCUVVNc1NVRkJWU3hGUVVGQk8wRkJRelZDTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHZENRVUZuUWl4RlFVRkZPMmRDUVVNdlFpeFBRVUZQTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTVUZCU1N4RFFVRkRPenRCUVVVeFF5eFpRVUZCTEU5QlFVOHNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVOMFFpeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGSExGbEJRVUU3UVVGRFppeFpRVUZCTEVsQlFVMHNWMEZCVnl4SFFVRkhMRXRCUVVrc1EwRkJReXhYUVVGWExFVkJRVVU3V1VGRGRFTXNTVUZCVFN4VFFVRlRMRWRCUVVjc1QwRkJUeXhEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZGZWtNc1dVRkJRU3hKUVVGSkxHTkJRV01zUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNN1FVRkRNVU1zV1VGQlFTeFBRVUZQTEdOQlFXTXNTVUZCU1N4VFFVRlRMRVZCUVVVN1FVRkRiRU1zWjBKQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zWTBGQll5eERRVUZETzBGQlFVVXNiMEpCUVVFc1QwRkJUeXhMUVVGTE8wRkJSV3hFTEdkQ1FVRkJMR05CUVdNc1IwRkJSeXhQUVVGUExFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTXNRMEZCUXpzN1FVRkhOME1zV1VGQlFTeFBRVUZQTEVsQlFVazdRVUZEWWl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzVlVGQlZTeEhRVUZITEZsQlFVRTdRVUZEV0N4WlFVRkJMRWxCUVUwc1YwRkJWeXhIUVVGSExFdEJRVWtzUTBGQlF5eFhRVUZYTEVWQlFVVTdXVUZEZEVNc1NVRkJUU3hKUVVGSkxFZEJRVWNzUlVGQlJUdFpRVU5tTEVsQlFVMHNWVUZCVlN4SFFVRkhMRXRCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4WFFVRlhMRU5CUVVNN1FVRkRja1FzV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhGUVVGRk8wRkJRemRDTEdkQ1FVRkJMRWxCUVUwc1lVRkJZU3hIUVVOcVFpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzBGQlEzQkRMSE5DUVVGRkxFdEJRVWtzUTBGQlF5eGxRVUZsTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVrc1JVRkJSU3hYUVVGWExFVkJRVVVzVlVGQlZUdHpRa0ZEZGtRc1UwRkJVenRCUVVObUxHZENRVUZCTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUTFBc1MwRkJReXhEUVVGQkxHRkJRVUVzUTBGQlFTeFZRVUZWTEZsQlExUXNSMEZCUnl4RlFVRkRMRWRCUVVjc1JVRkJRU3hGUVVOSUxFbEJRVWtzUTBGQlF5eFpRVUZaTEVWQlEycENMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRMlFzUlVGQlFTeFZRVUZWTEVWQlFVVXNWVUZCVlN4RlFVTjBRaXhqUVVGakxFVkJRVVVzUzBGQlNTeERRVUZETEdOQlFXTXNSVUZCUlN4RlFVTnlReXhKUVVGSkxFVkJRVVVzVjBGQlZ5eEZRVU5xUWl4UFFVRlBMRVZCUVVVc1lVRkJZU3hGUVVGQkxFTkJRVUVzUTBGRGRFSXNRMEZEU0RzN1dVRkZTQ3hQUVVGUExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlEyaENMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVTjJRaXhWUVVGRExFMUJRV01zUlVGQlFUdG5Ra0ZEWWl4SlFVRk5MRWRCUVVjc1IwRkJSeXhQUVVGUExFTkJRVU1zVjBGQlZ5eEZRVUZGTEUxQlFVMHNRMEZCUXp0QlFVTjRReXhuUWtGQlFTeFJRVU5GTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVNc1IwRkJSeXhGUVVGQmVFSXNUMEZCUVN4RFFVRkJMRVZCUVVFc1JVRkRSU3hKUVVGSkxFTkJRVU1zV1VGQldTeEZRVU5xUWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGQkxFVkJRMlFzTUVKQlFUQkNMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eDNRa0ZCZDBJc1JVRkRMMFFzTWtKQlFUSkNMRVZCUTNwQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNNRUpCUVRCQ0xFVkJSWFpETEVkQlFVY3NSVUZCUlN4SFFVRkhMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRMnhDTEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUTFJc1QwRkJUeXhGUVVGRkxFdEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVrc1JVRkJSU3hIUVVGSExFTkJRVU1zUlVGRE5VTXNXVUZCV1N4RlFVRkZMRXRCUVVrc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTU3hGUVVGRkxFZEJRVWNzUTBGQlF5eEZRVUZCTEVOQlFVRXNRMEZEZEVRN1lVRkZUQ3hEUVVOR0xFTkJRMFk3UVVGRFNDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1YwRkJWeXhIUVVGSExGbEJRVUU3UVVGRFdpeFpRVUZCTEU5QlFVRXNZMEZCWXl4RFFVTmFMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eEZRVU5rTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hGUVVOcVFpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR2RDUVVGblFpeERRVU0xUWp0QlFVcEVMRk5CU1VNN1FVRkZTQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeHJRa0ZCYTBJc1IwRkJSeXhaUVVGQk8wRkJRMjVDTEZsQlFVRXNUMEZCUVN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zTUVKQlFUQkNPMEZCUTNSRExHZENRVUZCTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVrc1EwRkJReXhYUVVGWExFVkJRVVVzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRuUWtGRGJrUXNVMEZCVXl4RFFVRkRMRXRCUVVrc1EwRkJReXhYUVVGWExFVkJRVVVzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1EwRkJRenRCUVVaMFJDeFRRVVZ6UkRzN08wRkJOVWw0UkN4SlFVRkJMRTFCUVVFc1EwRkJRU3hqUVVGQkxFTkJRVmNzU1VGQldTeEZRVUZCTEdOQlFVRXNSVUZCUVR0QlFVRjJRaXhSUVVGQkxFZEJRVUVzUlVGQlFTeFpRVUZCTzFsQlEwVXNUMEZCVHp0QlFVTk1MR2RDUVVGQkxHMUNRVUZ0UWl4RlFVRkZMRWxCUVVrN1lVRkRNVUk3VTBGRFJqczdPMEZCUVVFc1MwRkJRU3hEUVVGQk8wRkJNRWxFTEVsQlFVRXNTVUZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3hOUVVGTkxFZEJRVTRzV1VGQlFUdEJRVU5GTEZGQlFVRXNTVUZCVFN4cFFrRkJhVUlzUjBGQlJ6dEJRVU40UWl4WlFVRkJMSGRDUVVGM1FpeEZRVUZGTEVsQlFVazdRVUZET1VJc1dVRkJRU3hyUTBGQmEwTXNSVUZCUlN4VFFVRlRMRU5CUXpORExFbEJRVWtzUTBGQlF5eFhRVUZYTEVWQlFVVXNSVUZEYkVJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlEzQkNPMEZCUTBRc1dVRkJRU3d5UTBGQk1rTXNSVUZCUlN4SlFVRkpMRU5CUVVNc2EwSkJRV3RDTEVWQlFVVTdVMEZEZGtVN1FVRkRSQ3hSUVVGQkxFOUJRVThzUzBGQlN5eERRVUZCTEdGQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVVFc1JVRkJRU3hUUVVGVExFVkJRVVVzU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFVkJRVUVzUlVGQlJ5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RlFVRkZMRU5CUVU4N1MwRkRNVVU3U1VGRFNDeFBRVUZETEVsQlFVRTdRVUZCUkN4RFFURktRU3hEUVVGclF5eFRRVUZUTEVOQk1Fb3hReXhEUVVGQk96czdRVU12U2tRc1NVRkJUU3huUTBGQlowTXNSMEZCUnl4RFFVRkRPMEZCUlRGRExFbEJRVTBzYjBKQlFXOUNMRWRCUVVjN1FVRkRNMElzU1VGQlFTeFhRVUZYTEVWQlFVVXNZVUZCWVR0QlFVTXhRaXhKUVVGQkxHRkJRV0VzUlVGQlJTeGxRVUZsTzBGQlF6bENMRWxCUVVFc1dVRkJXU3hGUVVGRkxHTkJRV003UTBGRE4wSTdRVUZEUkN4SlFVRk5MR0ZCUVdFc1NVRkJRU3hGUVVGQkxFZEJRVUVzUlVGQlFUdEpRVU5xUWl4RlFVRkRMRU5CUVVFc2IwSkJRVzlDTEVOQlFVTXNWMEZCVnl4RFFVRkhMRWRCUVVFN1FVRkRiRU1zVVVGQlFTeEpRVUZKTEVWQlFVVTdXVUZEU2l4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03V1VGRFRpeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkRUaXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdXVUZEVGl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03V1VGRFRpeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkRUaXhEUVVGRExFVkJRVVVzUlVGQlJTeEZRVUZGTEVOQlFVTTdRVUZEVkN4VFFVRkJPMEZCUTBRc1VVRkJRU3gzUWtGQmQwSXNSVUZCUlN4RFFVRkRPMEZCUXpWQ0xFdEJRVUU3U1VGRFJDeEZRVUZETEVOQlFVRXNiMEpCUVc5Q0xFTkJRVU1zWVVGQllTeERRVUZITEVkQlFVRTdRVUZEY0VNc1VVRkJRU3hKUVVGSkxFVkJRVVU3UVVGRFNpeFpRVUZCTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRFZDeFpRVUZCTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRFZDeFpRVUZCTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRFZDeFpRVUZCTEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRkxFTkJRVU03UVVGRFdpeFRRVUZCTzBGQlEwUXNVVUZCUVN4M1FrRkJkMElzUlVGQlJTeERRVUZETzBGQlF6VkNMRXRCUVVFN1NVRkRSQ3hGUVVGRExFTkJRVUVzYjBKQlFXOUNMRU5CUVVNc1dVRkJXU3hEUVVGSExFZEJRVUU3UVVGRGJrTXNVVUZCUVN4SlFVRkpMRVZCUVVVN1FVRkRTaXhaUVVGQkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRMW9zV1VGQlFTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU5hTEZsQlFVRXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTEVOQlFVTTdRVUZEWml4VFFVRkJPMEZCUTBRc1VVRkJRU3gzUWtGQmQwSXNSVUZCUlN4RFFVRkRPMEZCUXpWQ0xFdEJRVUU3VDBGRFJqdEJRVU5FTEVsQlFVMHNhME5CUVd0RExFZEJRVWNzUTBGQlF6dEJRVVUxUXl4VFFVRlRMSEZDUVVGeFFpeERRVU0xUWl3MlFrRkJkVU1zUlVGRGRrTXNORUpCUVhORExFVkJRVUU3U1VGRmRFTXNTVUZCU1N3MlFrRkJOa0lzUlVGQlJUdFJRVU5xUXl4UFFVRlBMRzlDUVVGdlFpeERRVUZETEZsQlFWazdPMGxCUlRGRExFbEJRVWtzTkVKQlFUUkNMRVZCUVVVN1VVRkRhRU1zVDBGQlR5eHZRa0ZCYjBJc1EwRkJReXhYUVVGWE96dEpRVVY2UXl4UFFVRlBMRzlDUVVGdlFpeERRVUZETEdGQlFXRTdRVUZETTBNN1FVRjVSRUU3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3UVVFeVJrYzdRVUZEU0N4SlFVRkJMRXRCUVVFc2EwSkJRVUVzVlVGQlFTeE5RVUZCTEVWQlFVRTdTVUZCYlVNc1UwRkJjVUlzUTBGQlFTeExRVUZCTEVWQlFVRXNUVUZCUVN4RFFVRkJPMEZCUVhoRUxFbEJRVUVzVTBGQlFTeExRVUZCTEVkQlFVRTdPMEZCUTBVc1VVRkJRU3hMUVVGQkxFTkJRVUVzVlVGQlZTeEhRVUZITEdGQlFVa3NRMEZCUVN4RlFVRkJMRVZCUVVFc1MwRkJTeXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVsQlFVRXNRMEZCUVN4RFFVRkJMRWRCUVVjc1EwRkJReXhaUVVGQkxFVkJRVTBzVDBGQlFTeFRRVUZUTEVWQlFXdENMRU5CUVROQ0xFVkJRVEpDTEVOQlFVTTdRVUZEYkVVc1VVRkJRU3hMUVVGQkxFTkJRVUVzV1VGQldTeEhRVUZITEdGQlFVa3NRMEZCUVN4RlFVRkJMRVZCUVVFc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVsQlFVRXNRMEZCUVN4RFFVRkJMRWRCUVVjc1EwRkJReXhaUVVGQkxFVkJRVTBzVDBGQlFTeFRRVUZUTEVWQlFXdENMRU5CUVROQ0xFVkJRVEpDTEVOQlFVTTdVVUZGYmtVc1MwRkJWU3hEUVVGQkxGVkJRVUVzUjBGQlJ5eFZRVUZETEVkQlFWTXNSVUZCUVRzN08xbEJSM0pDTEU5QlFVRXNZVUZCWVN4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVOcVFpeG5Ra0ZCUVN4UFFVRlBMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTzBGQlF6TkNMR2RDUVVGQkxFOUJRVThzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4N1FVRkRNMElzWjBKQlFVRXNXVUZCV1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldUdEJRVU55UXl4blFrRkJRU3h2UWtGQmIwSXNSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHOUNRVUZ2UWp0QlFVTnlSQ3huUWtGQlFTeHZRa0ZCYjBJc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEc5Q1FVRnZRanRCUVVOeVJDeG5Ra0ZCUVN4WlFVRlpMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzBGQlEzSkRMR2RDUVVGQkxGVkJRVlVzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVN1lVRkRiRU1zUTBGQlF6dEJRVkpHTEZOQlVVVTdVVUZGU2l4TFFVRlZMRU5CUVVFc1ZVRkJRU3hIUVVGSExGVkJRVU1zUjBGQlV5eEZRVUZCT3pzN1dVRkhja0lzVDBGQlFTeGhRVUZoTEVOQlFVTXNSMEZCUnl4RlFVRkZPMEZCUTJwQ0xHZENRVUZCTEZsQlFWa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVms3UVVGRGNrTXNaMEpCUVVFc2IwSkJRVzlDTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXh2UWtGQmIwSTdZVUZEZEVRc1EwRkJRenRCUVVoR0xGTkJSMFU3UVVGRlNpeFJRVUZCTEV0QlFVRXNRMEZCUVN4alFVRmpMRWRCUVVjc1ZVRkRaaXhIUVVGVExFVkJRMVFzUzBGRmRVTXNSVUZCUVRzN1FVRkZka01zV1VGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TlFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRVU1zVlVGQlZTeE5RVUZITEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVN4RFFVRkJMRVZCUVVFc1JVRkJRU3hIUVVGSExFVkJRVVVzUzBGQlN5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhEUVVGRE8wRkJRMmhGTEZOQlFVTTdVVUZGUkN4TFFVRnRRaXhEUVVGQkxHMUNRVUZCTEVkQlFVY3NWVUZCUXl4SFFVRlRMRVZCUVVFN08xbEJRemxDTEVOQlFVRXNSVUZCUVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNaVUZCWlN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlJ5eEhRVUZITEVOQlFVTTdRVUZEYmtNc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdkQ1FVRm5RaXhIUVVGSExGbEJRVUU3TzBGQlEycENMRmxCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzVFVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkRMRmxCUVZrc2EwUkJRVWs3UVVGRE4wSXNVMEZCUXp0UlFVVkVMRXRCUVdsQ0xFTkJRVUVzYVVKQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRCUVVOMFFpeFpRVUZCTEVsQlFVRXNSVUZCT0VJc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUYwUXl4SFFVRkhMRWRCUVVFc1JVRkJRU3hEUVVGQkxFZEJRVUVzUlVGQlJTeFRRVUZUTEVkQlFVRXNSVUZCUVN4RFFVRkJMRk5CUVVFc1JVRkJSU3hQUVVGUExHRkJRV1U3UVVGRE9VTXNXVUZCUVN4SlFVRkpMRU5CUVVNc1UwRkJVeXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTzBGQlF6RkNMR2RDUVVGQkxFOUJRVThzUzBGQlN6czdXVUZGWkN4UFFVRlBMRmRCUVZjc1EwRkJReXhSUVVGUkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RlFVRkZMRk5CUVZNc1EwRkJRenRCUVVOcVJDeFRRVUZETzFGQlJVUXNTMEZCYlVJc1EwRkJRU3h0UWtGQlFTeEhRVUZITEZWQlFVTXNRMEZCVXl4RlFVRkJPMEZCUTNoQ0xGbEJRVUVzU1VGQlFTeEZRVUU0UWl4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRWFJETEVkQlFVY3NSMEZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hGUVVGRkxGTkJRVk1zUjBGQlFTeEZRVUZCTEVOQlFVRXNVMEZCUVN4RlFVRkZMRTlCUVU4c1lVRkJaVHRCUVVNNVF5eFpRVUZCTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVU3UVVGRE1VSXNaMEpCUVVFc1QwRkJUeXhMUVVGTE96dFpRVVZrTEU5QlFVOHNZVUZCWVN4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eERRVUZETEVWQlFVVXNVMEZCVXl4RFFVRkRPMEZCUTNKRUxGTkJRVU03VVVGRlJDeExRVUZsTEVOQlFVRXNaVUZCUVN4SFFVRkhMRlZCUVVNc1EwRkJVeXhGUVVGQk8wRkJRM0JDTEZsQlFVRXNTVUZCUVN4RlFVRTRRaXhIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFYUkRMRWRCUVVjc1IwRkJRU3hGUVVGQkxFTkJRVUVzUjBGQlFTeEZRVUZGTEZOQlFWTXNSMEZCUVN4RlFVRkJMRU5CUVVFc1UwRkJRU3hGUVVGRkxFOUJRVThzWVVGQlpUdEJRVU01UXl4WlFVRkJMRWxCUVVrc1EwRkJReXhUUVVGVExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZETVVJc1owSkJRVUVzVDBGQlR5eExRVUZMT3p0WlFVVmtMRTlCUVU4c1YwRkJWeXhEUVVGRExGRkJRVkVzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RFFVRkRMRVZCUVVVc1QwRkJUeXhEUVVGRE8wRkJReTlETEZOQlFVTTdVVUZGUkN4TFFVRnBRaXhEUVVGQkxHbENRVUZCTEVkQlFVY3NWVUZCUXl4RFFVRlRMRVZCUVVFN1FVRkRkRUlzV1VGQlFTeEpRVUZCTEVWQlFUaENMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQmRFTXNSMEZCUnl4SFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQkxFVkJRVVVzVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUVVVc1QwRkJUeXhoUVVGbE8wRkJRemxETEZsQlFVRXNTVUZCU1N4RFFVRkRMRk5CUVZNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJUdEJRVU14UWl4blFrRkJRU3hQUVVGUExFdEJRVXM3TzFsQlJXUXNUMEZCVHl4aFFVRmhMRU5CUVVNc1ZVRkJWU3hEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlN4UFFVRlBMRU5CUVVNN1FVRkRia1FzVTBGQlF6dFJRVVZFTEV0QlFYVkNMRU5CUVVFc2RVSkJRVUVzUjBGQlJ5eFZRVUZETEVOQlFWTXNSVUZCUVRzN1dVRkROVUlzU1VGQlFTeEZRVUZCTEVkQlEwb3NTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkVTaXhIUVVGSExFZEJRVUVzUlVGQlFTeERRVUZCTEVkQlFVRXNSVUZCUlN4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGQlJTeFZRVUZWTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVVFc1JVRkJSU3haUVVGWkxFZEJRVUVzUlVGQlFTeERRVUZCTEZsQlFVRXNSVUZCUlN4VFFVRlRMRWRCUVVFc1JVRkJRU3hEUVVGQkxGTkJRVUVzUlVGQlJTeFBRVUZQTEVkQlFVRXNSVUZCUVN4RFFVRkJMRTlCUXpORU8wRkJSVm9zV1VGQlFTeEpRVUZOTEdGQlFXRXNSMEZCUnl4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdGQlFXRXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWk8wRkJSWHBGTEZsQlFVRXNTVUZCU1N4RlFVRkZMRmxCUVZrc1NVRkJTU3hWUVVGVkxFbEJRVWtzV1VGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVN1FVRkRia1VzWjBKQlFVRXNUMEZCVHl4TFFVRkxPenRCUVVka0xGbEJRVUVzU1VGQlNTeFpRVUZaTEVsQlFVa3NUMEZCVHl4RlFVRkZPMmRDUVVNelFpeFBRVUZQTEdOQlFXTXNRMEZCUXl4aFFVRmhMRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTTdPMEZCUjNaRUxGbEJRVUVzU1VGQlNTeFZRVUZWTEVsQlFVa3NVMEZCVXl4RlFVRkZPMmRDUVVNelFpeFBRVUZQTEdOQlFXTXNRMEZCUXl4VFFVRlRMRVZCUVVVc1lVRkJZU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTTdPMEZCUjNwRUxGbEJRVUVzU1VGQlNTeFpRVUZaTEVsQlFVa3NVMEZCVXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRk8yZENRVU42UXl4UFFVRlBMR05CUVdNc1EwRkJReXhUUVVGVExFVkJRVVVzWVVGQllTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRU5CUVVNN08wRkJSM3BFTEZsQlFVRXNUMEZCVHl4TFFVRkxPMEZCUTJRc1UwRkJRenRSUVVWRUxFdEJRVEJDTEVOQlFVRXNNRUpCUVVFc1IwRkJSeXhWUVVGRExFTkJRVk1zUlVGQlFUczdXVUZEY2tNc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdEJRVU53UXl4blFrRkJRU3hQUVVGUExFdEJRVXM3TzBGQlIxSXNXVUZCUVN4SlFVRkJMRVZCUVcxRExFZEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZCTTBNc1IwRkJSeXhIUVVGQkxFVkJRVUVzUTBGQlFTeEhRVUZCTEVWQlFVVXNVMEZCVXl4SFFVRkJMRVZCUVVFc1EwRkJRU3hUUVVGQkxFVkJRVVVzV1VGQldTeHJRa0ZCWlR0WlFVTnVSQ3hKUVVGTkxFMUJRVTBzUjBGQlJ5eFJRVUZSTEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVNdlFpeFpRVUZCTEVsQlFVMHNZVUZCWVN4SFFVRkhMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNSMEZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVms3V1VGRmVrVXNTVUZCU1N4WlFVRlpMRVZCUVVVN1FVRkRhRUlzWjBKQlFVRXNUMEZCVHl4WFFVRlhMRU5CUVVNc1RVRkJUU3hGUVVGRkxHRkJRV0VzUTBGQlF6czdhVUpCUTNCRE8wRkJRMHdzWjBKQlFVRXNUMEZCVHl4WFFVRlhMRU5CUVVNc1RVRkJUU3hGUVVGRkxGTkJRVk1zUTBGQlF6czdRVUZGZWtNc1UwRkJRenRSUVVWRUxFdEJRWGRDTEVOQlFVRXNkMEpCUVVFc1IwRkJSeXhWUVVGRExFTkJRVk1zUlVGQlFUczdXVUZEYmtNc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdEJRVU53UXl4blFrRkJRU3hQUVVGUExFdEJRVXM3TzBGQlIxSXNXVUZCUVN4SlFVRkJMRXRCUVRaRExFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFYSkVMRWRCUVVjc1IwRkJRU3hGUVVGQkxFTkJRVUVzUjBGQlFTeEZRVUZGTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVGRkxGVkJRVlVzUjBGQlFTeEZRVUZCTEVOQlFVRXNWVUZCUVN4RlFVRkZMRmxCUVZrc2EwSkJRV1U3V1VGRE4wUXNTVUZCVFN4TlFVRk5MRWRCUVVjc1VVRkJVU3hEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZETDBJc1dVRkJRU3hKUVVGTkxHRkJRV0VzUjBGQlJ5eERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFZEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMEZCUlhwRkxGbEJRVUVzU1VGQlNTeFZRVUZWTEVsQlFVa3NXVUZCV1N4RlFVRkZPMEZCUXpsQ0xHZENRVUZCTEU5QlFVOHNWMEZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hoUVVGaExFTkJRVU03TzJsQ1FVTndRenRCUVVOTUxHZENRVUZCTEU5QlFVOHNWMEZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU03TzBGQlJYWkRMRk5CUVVNN1VVRkZSQ3hMUVVGNVFpeERRVUZCTEhsQ1FVRkJMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUU3TzFsQlF6bENMRWxCUVVFc1JVRkJRU3hIUVVOS0xFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlJFb3NSMEZCUnl4SFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQkxFVkJRVVVzV1VGQldTeEhRVUZCTEVWQlFVRXNRMEZCUVN4WlFVRkJMRVZCUVVVc1ZVRkJWU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFZRVUZCTEVWQlFVVXNXVUZCV1N4SFFVRkJMRVZCUVVFc1EwRkJRU3haUVVGQkxFVkJRVVVzVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUVVVc1QwRkJUeXhIUVVGQkxFVkJRVUVzUTBGQlFTeFBRVU16UkR0QlFVVmFMRmxCUVVFc1NVRkJUU3hoUVVGaExFZEJRVWNzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1R0QlFVVjZSU3haUVVGQkxFbEJRVWtzUlVGQlJTeFpRVUZaTEVsQlFVa3NWVUZCVlN4SlFVRkpMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTzBGQlEyNUZMR2RDUVVGQkxFOUJRVThzUzBGQlN6czdRVUZIWkN4WlFVRkJMRWxCUVVrc1dVRkJXU3hKUVVGSkxFOUJRVThzUlVGQlJUdG5Ra0ZETTBJc1QwRkJUeXhuUWtGQlowSXNRMEZCUXl4aFFVRmhMRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVOQlFVTTdPMEZCUjNwRUxGbEJRVUVzU1VGQlNTeFZRVUZWTEVsQlFVa3NVMEZCVXl4RlFVRkZPMmRDUVVNelFpeFBRVUZQTEdkQ1FVRm5RaXhEUVVGRExGTkJRVk1zUlVGQlJTeGhRVUZoTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJRenM3UVVGSE0wUXNXVUZCUVN4SlFVRkpMRmxCUVZrc1NVRkJTU3hUUVVGVExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVTdaMEpCUTNwRExFOUJRVThzWjBKQlFXZENMRU5CUVVNc1UwRkJVeXhGUVVGRkxHRkJRV0VzUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RFFVRkRPenRCUVVjelJDeFpRVUZCTEU5QlFVOHNTMEZCU3p0QlFVTmtMRk5CUVVNN1VVRkZSQ3hMUVVGaExFTkJRVUVzWVVGQlFTeEhRVUZITEZWQlFVTXNWMEZCYVVJc1JVRkJRVHRCUVVOb1F5eFpRVUZCTEVsQlFVMHNSMEZCUnl4SFFVRkhMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ6dFpRVU14UWl4SlFVRk5MRk5CUVZNc1IwRkJSeXhQUVVGUExFTkJRVU1zVjBGQlZ5eEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTjZReXhaUVVGQkxFOUJRVThzVjBGQlZ5eERRVUZETEZkQlFWY3NSVUZCUlN4SFFVRkhMRU5CUVVNc1NVRkJTU3hYUVVGWExFTkJRVU1zVTBGQlV5eEZRVUZGTEVkQlFVY3NRMEZCUXp0QlFVTnlSU3hUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNZMEZCWXl4SFFVRkhMRlZCUVVNc1IwRkJVeXhGUVVGRkxFTkJRVk1zUlVGQlFUdEJRVU53UXl4WlFVRkJMRTlCUVVFc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEU5QlFVOHNRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNN1FVRkJhRVVzVTBGQlowVTdRVUZGYkVVc1VVRkJRU3hMUVVGQkxFTkJRVUVzWjBKQlFXZENMRWRCUVVjc1ZVRkJReXhIUVVGVExFVkJRVVVzUTBGQlV5eEZRVUZCTzBGQlEzUkRMRmxCUVVFc1QwRkJRU3hQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEV0QlFVc3NUMEZCVHl4RFFVRkRMRTlCUVU4c1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEZWQlFWVXNRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJRenRCUVVGc1JTeFRRVUZyUlR0QlFVVndSU3hSUVVGQkxFdEJRVUVzUTBGQlFTeGxRVUZsTEVkQlFVY3NWVUZCUXl4SFFVRlRMRVZCUVVVc1EwRkJVeXhGUVVGRkxGRkJRV01zUlVGQlFUdEJRVU55UkN4WlFVRkJMRTlCUVVFc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXp0QlFVRTVSQ3hUUVVFNFJEdEJRVVZvUlN4UlFVRkJMRXRCUVVFc1EwRkJRU3h0UWtGQmJVSXNSMEZCUnl4VlFVRkRMRWRCUVZNc1JVRkJSU3hEUVVGVExFVkJRVVVzWVVGQmNVSXNSVUZCUVR0QlFVTm9SU3haUVVGQkxFOUJRVUVzWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkRMRmxCUVZrc1JVRkJRVHRuUWtGRE9VSXNUMEZCUVN4TFFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNXVUZCV1N4RFFVRkRPMEZCUVRGRExHRkJRVEJETEVOQlF6TkRPMEZCUmtRc1UwRkZRenRCUVVWSUxGRkJRVUVzUzBGQlFTeERRVUZCTEdsQ1FVRnBRaXhIUVVGSExGVkJRVU1zUjBGQlV5eEZRVUZGTEVOQlFWTXNSVUZCUlN4UlFVRmpMRVZCUVVFN1FVRkRka1FzV1VGQlFTeFBRVUZCTEZWQlFWVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzVDBGQlR5eERRVUZETEVkQlFVY3NRMEZCUXl4TFFVRkxMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU03UVVGQk0wUXNVMEZCTWtRN1FVRkZOMFFzVVVGQlFTeExRVUZCTEVOQlFVRXNaVUZCWlN4SFFVRkhMRmxCUVVFN1FVRkRWaXhaUVVGQkxFbEJRVUVzUzBGQmIwUXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJOVVFzUjBGQlJ5eEhRVUZCTEVWQlFVRXNRMEZCUVN4SFFVRkJMRVZCUVVVc1VVRkJVU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFJRVUZCTEVWQlFVVXNZVUZCWVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hoUVVGQkxFVkJRVVVzWlVGQlpTeHhRa0ZCWlR0QlFVTndSU3haUVVGQkxFbEJRVTBzVVVGQlVTeEhRVUZITEZGQlFWRXNRMEZCUXl4SFFVRkhMRU5CUVVNN1dVRkZPVUlzU1VGQlNTeGxRVUZsTEVWQlFVVTdaMEpCUTI1Q0xFOUJRVThzWVVGQllTeGhRVUZpTEdGQlFXRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGaUxHRkJRV0VzUTBGQlJTeEpRVUZKTEVOQlFVTXNWVUZCUXl4SlFVRkpMRVZCUVVFN2IwSkJRemxDTEU5QlFVRXNTMEZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhIUVVGSExFVkJRVVVzVVVGQlVTeEZRVUZGTEVsQlFVa3NRMEZCUXp0QlFVRjZReXhwUWtGQmVVTXNRMEZETVVNN08wRkJSMGdzV1VGQlFTeFBRVUZQTEVOQlFVTXNRMEZCUXl4UlFVRlJMRWxCUVVrc1MwRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEhRVUZITEVWQlFVVXNVVUZCVVN4RlFVRkZMRkZCUVZFc1EwRkJRenRCUVVOd1JTeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1YwRkJWeXhIUVVGSExGbEJRVUU3V1VGRFdpeEpRVUZOTEV0QlFVc3NSMEZCUnl4RlFVRkZPMEZCUTJoQ0xGbEJRVUVzU1VGQlRTeGhRVUZoTEVkQlFVY3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhYUVVGWE8xbEJSVFZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNN1dVRkRWQ3hKUVVGSkxHdENRVUZyUWl4SFFVRkhMRXRCUVVzN1dVRkRPVUlzU1VGQlNTeG5Ra0ZCWjBJc1IwRkJSeXhqUVVGakxFTkJRMjVETEdWQlFXVXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eEZRVU12UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUlVGRGFrSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhuUWtGQlowSXNRMEZETlVJN1dVRkZSQ3hKUVVGTkxHRkJRV0VzUjBGQlJ5eFZRVUZETEZsQlFXdENMRVZCUVVFN1FVRkRka01zWjBKQlFVRXNUMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRMVFzYzBKQlFVVXNZMEZCWXl4RFFVTmFMRmxCUVZrc1JVRkRXaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNSVUZEYWtJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eG5Ra0ZCWjBJN1FVRkZMMElzYzBKQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWk8wRkJUak5DTEdGQlRUSkNPMWxCUlRkQ0xFbEJRVTBzVlVGQlZTeEhRVUZITEZWQlFVTXNVVUZCWXl4RlFVRkJPMEZCUTJoRExHZENRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVOVUxITkNRVUZGTEdOQlFXTXNRMEZEV2l4UlFVRlJMRVZCUTFJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVWQlEycENMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWjBKQlFXZENPMEZCUlM5Q0xITkNRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVVHRCUVU1MlFpeGhRVTExUWp0QlFVVjZRaXhaUVVGQkxFbEJRVTBzVVVGQlVTeEhRVUZITEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN2EwSkJRM2hDTEZWQlFWVXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkU3YTBKQlF6bENMRk5CUVZNN1FVRkZZaXhaUVVGQkxFbEJRVTBzV1VGQldTeEhRVUZITEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN2EwSkJRelZDTEdGQlFXRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVms3YTBKQlEzSkRMRk5CUVZNN1dVRkZZaXhQUVVGUExFbEJRVWtzUlVGQlJUdEJRVU5ZTEdkQ1FVRkJMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRMUlzUzBGQlFTeERRVUZCTEdGQlFVRXNRMEZCUXl4SlFVRkpMRVZCUVVGQkxFOUJRVUVzUTBGQlFTeEZRVUZCTEVWQlEwTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJRU3hGUVVOa0xHVkJRV1VzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFpeEZRVU12UXl4SFFVRkhMRVZCUVVVc1EwRkJReXhGUVVOT0xFZEJRVWNzUlVGQlJTeG5Ra0ZCWjBJc1JVRkRja0lzUzBGQlN5eEZRVUZGTEZGQlFWRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eEZRVU12UWl4VlFVRlZMRVZCUVVVc1MwRkJTU3hEUVVGRExHTkJRV01zUlVGREwwSXNaVUZCWlN4RlFVRkZMRXRCUVVrc1EwRkJReXh0UWtGQmJVSXNSVUZEZWtNc1VVRkJVU3hGUVVGRkxGRkJRVkVzUlVGRGJFSXNXVUZCV1N4RlFVRkZMRmxCUVZrc1JVRkRNVUlzWTBGQll5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hGUVVGQkxFTkJRVUVzUTBGRE1VTXNRMEZEU0R0QlFVVkVMR2RDUVVGQkxFbEJRVWtzYTBKQlFXdENPMjlDUVVGRk8wRkJSWGhDTEdkQ1FVRkJMRU5CUVVNc1JVRkJSVHRCUVVOSUxHZENRVUZCTEdkQ1FVRm5RaXhIUVVGSExGRkJRVkVzUTBGQlF5eG5Ra0ZCWjBJc1JVRkJSU3hEUVVGRExFTkJRVU03T3p0QlFVbG9SQ3huUWtGQlFTeEpRVUZOTEcxQ1FVRnRRaXhIUVVOMlFpeGhRVUZoTEVsQlFVa3NRMEZCUXl4SlFVRkpMR2REUVVGblF6dEJRVU40UkN4blFrRkJRU3hKUVVGTkxIVkNRVUYxUWl4SFFVTXpRaXhEUVVGRExHRkJRV0VzU1VGQlNTeERRVUZETEV0QlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1owSkJRV2RDTEVOQlFVTTdRVUZGZWtRc1owSkJRVUVzU1VGQlNTeHRRa0ZCYlVJc1NVRkJTU3gxUWtGQmRVSXNSVUZCUlR0QlFVTnNSQ3h2UWtGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRk8zZENRVU0xUWl4clFrRkJhMElzUjBGQlJ5eEpRVUZKT3p0NVFrRkRjRUk3ZDBKQlEwdzdPenM3UVVGTFRpeFpRVUZCTEU5QlFVOHNTMEZCU3p0QlFVTmtMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeFpRVUZaTEVkQlFVY3NWVUZEWWl4TFFVVjFReXhGUVVOMlF5eERRVUZUTEVWQlFVRTdRVUZGU0N4WlFVRkJMRWxCUVVFc1JVRkJORUlzUjBGQlFTeExRVUZKTEVOQlFVTXNNa0pCUVRKQ0xFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFUZEVMRlZCUVZVc1IwRkJRU3hGUVVGQkxFTkJRVUVzVlVGQlFTeEZRVUZGTEZOQlFWTXNaVUZCZDBNN1dVRkZja1VzU1VGQlNTeFZRVUZWTEVWQlFVVTdaMEpCUTJRN08xbEJSMFlzUzBGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4bFFVRmxMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVVzUzBGQlN5eERRVUZETzBGQlEzaEVMRk5CUVVNN1VVRkZSQ3hMUVVGcFFpeERRVUZCTEdsQ1FVRkJMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUU3UVVGRGRFSXNXVUZCUVN4SlFVRkJMRVZCUVRSQ0xFZEJRVUVzUzBGQlNTeERRVUZETERKQ1FVRXlRaXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUUzUkN4VlFVRlZMRWRCUVVFc1JVRkJRU3hEUVVGQkxGVkJRVUVzUlVGQlJTeFRRVUZUTEdWQlFYZERPMWxCUlhKRkxFbEJRVWtzVlVGQlZTeEZRVUZGTzJkQ1FVTmtPenRaUVVkR0xFdEJRVWtzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhsUVVGbExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdRVUZEZEVRc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEhGQ1FVRnhRaXhIUVVGSExGVkJRVU1zVVVGQlowSXNSVUZCUlN4UFFVRmhMRVZCUVVFN08xbEJRM1JFTEVOQlFVRXNSVUZCUVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNaVUZCWlN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlJ5eFBRVUZQTEVOQlFVTTdRVUZGY2tNc1dVRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGRkJRVkVzUTBGQlF5eE5RVUZCTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVVXNUMEZCVHl4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVVc1MwRkJTeXhGUVVGRk8wRkJRemRETEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3gzUWtGQmQwSXNSMEZCUnl4VlFVTjZRaXhMUVVFd1F5eEZRVU14UXl4UlFVRnBRaXhGUVVOcVFpeExRVUZoTEVWQlFVRTdPMWxCUlZBc1NVRkJRU3hGUVVGQkxFZEJVVVlzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZRV2l4UlFVRlJMRWRCUVVFc1JVRkJRU3hEUVVGQkxGRkJRVUVzUlVGRFVpeFpRVUZaTEVkQlFVRXNSVUZCUVN4RFFVRkJMRmxCUVVFc1JVRkRXaXhsUVVGbExIRkNRVUZCTEVWQlEyWXNUMEZCVHl4SFFVRkJMRVZCUVVFc1EwRkJRU3hQUVVGQkxFVkJRMUFzVDBGQlR5eEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRkJMRVZCUTFBc05rSkJRVFpDTEVkQlFVRXNSVUZCUVN4RFFVRkJMRFpDUVVGQkxFVkJRemRDTERSQ1FVRTBRaXhIUVVGQkxFVkJRVUVzUTBGQlFTdzBRa0ZEYUVJN1FVRkRaQ3haUVVGQkxFbEJRVWtzUTBGQlF5eFpRVUZaTzJkQ1FVRkZPMWxCUlc1Q0xFbEJRVTBzYTBKQlFXdENMRWRCUVVjc2NVSkJRWEZDTEVOQlF6bERMRFpDUVVFMlFpeEZRVU0zUWl3MFFrRkJORUlzUTBGRE4wSTdXVUZGUkN4SlFVRk5MR05CUVdNc1IwRkJSeXhMUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTTdXVUZGYWtVc1NVRkJUU3hWUVVGVkxFZEJRVWNzUTBGQlFTeEZRVUZCTEVkQlFVRXNZVUZCWVN4RFFVRkRMR3RDUVVGclFpeERRVUZETEUxQlFVVXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkpPMEZCUlRGRUxGbEJRVUVzU1VGQlRTeDNRa0ZCZDBJc1IwRkJSeXhWUVVNdlFpeFJRVUZwUWl4RlFVTnFRaXhKUVVGVkxFVkJRMVlzUzBGQllTeEZRVUZCT3p0blFrRkZZaXhKUVVGSkxHbENRVUZwUWl4SFFVRkhMRWxCUVVrN1owSkJRelZDTEVsQlFVa3NhMEpCUVd0Q0xFZEJRVWNzUzBGQlN6dG5Ra0ZET1VJc1VVRkJVU3hSUVVGUk8yOUNRVU5rTEV0QlFVc3NUMEZCVHl4RFFVRkRMRlZCUVZVN1FVRkRja0lzZDBKQlFVRXNhVUpCUVdsQ0xFZEJRVWNzVTBGQlV5eERRVU16UWl4SlFVRkpMRVZCUTBvc2EwTkJRV3RETEVOQlEyNURPM2RDUVVORUxHdENRVUZyUWp0QlFVTm9RaXcwUWtGQlFTeExRVUZMTEV0QlFVc3NSVUZCUlN4SFFVRkhMRU5CUVVNc1IwRkJSeXhMUVVGTExFZEJRVWNzYTBOQlFXdERPM2RDUVVNdlJEdHZRa0ZEUml4TFFVRkxMRTlCUVU4c1EwRkJReXhUUVVGVE8wRkJRM0JDTEhkQ1FVRkJMR2xDUVVGcFFpeEhRVUZITEZOQlFWTXNRMEZETTBJc1NVRkJTU3hGUVVOS0xHdERRVUZyUXl4RFFVTnVRenQzUWtGRFJDeHJRa0ZCYTBJN1FVRkRhRUlzTkVKQlFVRXNTMEZCU3l4TFFVRkxMRU5CUVVNc1IwRkJSeXhGUVVGRkxFZEJRVWNzUzBGQlN5eEhRVUZITEd0RFFVRnJRenQzUWtGREwwUTdiMEpCUTBZc1MwRkJTeXhQUVVGUExFTkJRVU1zVDBGQlR6dEJRVU5zUWl4M1FrRkJRU3hwUWtGQmFVSXNSMEZCUnl4VFFVRlRMRU5CUVVNc1NVRkJTU3hGUVVGRkxHTkJRV01zUTBGQlF6dEJRVU51UkN4M1FrRkJRU3hyUWtGQmEwSXNSMEZCUnl4RFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxGVkJRVlVzWVVGQlZpeFZRVUZWTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJWaXhWUVVGVkxFTkJRVWNzUTBGQlF5eERRVUZETEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUlN4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRMjVFTERoQ1FVRkZMRXRCUVVzc1IwRkJSeXhGUVVGRkxFZEJRVWM3UVVGRFppdzRRa0ZCUlN4TFFVRkxMRWRCUVVjc1kwRkJZenQzUWtGRE1VSTdiMEpCUTBZc1MwRkJTeXhQUVVGUExFTkJRVU1zVTBGQlV6dEJRVU53UWl4M1FrRkJRU3hwUWtGQmFVSXNSMEZCUnl4VFFVRlRMRU5CUVVNc1NVRkJTU3hGUVVGRkxHTkJRV01zUTBGQlF6dEJRVU51UkN4M1FrRkJRU3hyUWtGQmEwSXNSMEZCUnl4RFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxGVkJRVlVzUzBGQlZpeEpRVUZCTEVsQlFVRXNWVUZCVlN4MVFrRkJWaXhWUVVGVkxFTkJRVWNzVlVGQlZTeERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc01FTkJRVVVzVVVGQlVTeERRVU5vUlN4TFFVRkxMRU5CUTA0N1FVRkRReXc0UWtGQlJTeExRVUZMTEVkQlFVY3NSVUZCUlN4SFFVRkhPMEZCUTJZc09FSkJRVVVzUzBGQlN5eEhRVUZITEdOQlFXTTdkMEpCUXpGQ096dEJRVWRLTEdkQ1FVRkJMRTlCUVU4c1JVRkJSU3hwUWtGQmFVSXNSVUZCUVN4cFFrRkJRU3hGUVVGRkxHdENRVUZyUWl4RlFVRkJMR3RDUVVGQkxFVkJRVVU3UVVGRGJFUXNZVUZCUXp0QlFVVkVMRmxCUVVFc1NVRkJUU3hyUWtGQmEwSXNSMEZCUnl4VlFVTjZRaXhSUVVGcFFpeEZRVU5xUWl4WlFVRnJRaXhGUVVOc1FpeExRVUZoTEVWQlFVRTdaMEpCUldJc1NVRkJUU3hqUVVGakxFZEJRVWNzUlVGQlJUdG5Ra0ZEZWtJc1NVRkJTU3haUVVGWkxFZEJRVWNzVVVGQlVUdG5Ra0ZETTBJc1NVRkJTU3hqUVVGakxFZEJRVWNzUzBGQlN6dG5Ra0ZETVVJc1NVRkJTU3hWUVVGVkxFZEJRVWNzUTBGQlF6dEJRVU5rTEdkQ1FVRkJMRWxCUVVFc1JVRkJORU1zUjBGQlFTeDNRa0ZCZDBJc1EwRkRkRVVzV1VGQldTeEZRVU5hTEZsQlFWa3NSVUZEV2l4TFFVRkxMRU5CUTA0c1JVRktTeXhwUWtGQmFVSXNSMEZCUVN4RlFVRkJMRU5CUVVFc2FVSkJRVUVzUlVGQlJTeHJRa0ZCYTBJc2QwSkJTVEZETzJkQ1FVVkVMRTlCUVU4c1EwRkJReXhqUVVGakxFVkJRVVU3UVVGRGRFSXNiMEpCUVVFc1NVRkJTU3hWUVVGVkxFbEJRVWtzWTBGQll5eEZRVUZGTzNkQ1FVTm9ReXhwUWtGQmFVSXNSMEZCUnl4WlFVRlpPM2RDUVVOb1F5eHJRa0ZCYTBJc1IwRkJSeXhMUVVGTE8zZENRVU14UWpzN08wRkJSMFlzYjBKQlFVRXNTVUZCU1N4UFFVRlBMRWxCUVVrc2FVSkJRV2xDTEVkQlFVY3NUMEZCVHl4RlFVRkZPMEZCUXpGRExIZENRVUZCTEZsQlFWa3NSMEZCUnl4UFFVRlBMRU5CUVVNc1ZVRkJWVHQzUWtGRGFrTXNTVUZCVFN4SFFVRkhMRWRCUVVjc2QwSkJRWGRDTEVOQlEyeERMRmxCUVZrc1JVRkRXaXhwUWtGQmFVSXNSVUZEYWtJc2EwSkJRV3RDTEVOQlEyNUNPMEZCUTBRc2QwSkJRVUVzYVVKQlFXbENMRWRCUVVjc1IwRkJSeXhEUVVGRExHbENRVUZwUWp0QlFVTjZReXgzUWtGQlFTeHJRa0ZCYTBJc1IwRkJSeXhIUVVGSExFTkJRVU1zYTBKQlFXdENPenM3UVVGSk4wTXNiMEpCUVVFc1NVRkJTU3hQUVVGUExFbEJRVWtzYVVKQlFXbENMRWRCUVVjc1QwRkJUeXhGUVVGRk8wRkJRekZETEhkQ1FVRkJMRmxCUVZrc1IwRkJSeXhQUVVGUExFTkJRVU1zVTBGQlV6dDNRa0ZEYUVNc1NVRkJUU3hIUVVGSExFZEJRVWNzZDBKQlFYZENMRU5CUTJ4RExGbEJRVmtzUlVGRFdpeHBRa0ZCYVVJc1JVRkRha0lzYTBKQlFXdENMRU5CUTI1Q08wRkJRMFFzZDBKQlFVRXNhVUpCUVdsQ0xFZEJRVWNzUjBGQlJ5eERRVUZETEdsQ1FVRnBRanRCUVVONlF5eDNRa0ZCUVN4clFrRkJhMElzUjBGQlJ5eEhRVUZITEVOQlFVTXNhMEpCUVd0Q096dHZRa0ZITjBNc1NVRkJTU3h0UWtGQmJVSXNRMEZCUXl4cFFrRkJhVUlzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN2QwSkJRM1JFTEVsQlFVMHNSMEZCUnl4SFFVRkhMSGRDUVVGM1FpeERRVU5zUXl4WlFVRlpMRVZCUTFvc2FVSkJRV2xDTEVWQlEycENMR3RDUVVGclFpeERRVU51UWp0QlFVTkVMSGRDUVVGQkxHbENRVUZwUWl4SFFVRkhMRWRCUVVjc1EwRkJReXhwUWtGQmFVSTdRVUZEZWtNc2QwSkJRVUVzYTBKQlFXdENMRWRCUVVjc1IwRkJSeXhEUVVGRExHdENRVUZyUWpzN2VVSkJRM1JETzNkQ1FVTk1MR05CUVdNc1IwRkJSeXhKUVVGSk96dEJRVVYyUWl4dlFrRkJRU3hWUVVGVkxFVkJRVVU3TzBGQlIyUXNaMEpCUVVFc1QwRkJUeXhGUVVGRkxHbENRVUZwUWl4RlFVRkJMR2xDUVVGQkxFVkJRVVVzYTBKQlFXdENMRVZCUVVFc2EwSkJRVUVzUlVGQlJUdEJRVU5zUkN4aFFVRkRPMEZCUlVRc1dVRkJRU3hKUVVGSkxGRkJRVkVzUzBGQlN5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RlFVRkZPMmRDUVVNNVFpeEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdEJRVU5vUXl4dlFrRkJRU3hMUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRU5CUVVNN1FVRkRMMElzYjBKQlFVRXNaVUZCWlN4aFFVRm1MR1ZCUVdVc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZtTEdWQlFXVXNRMEZCUnl4UlFVRlJMRU5CUVVNN08yZENRVVUzUWpzN1FVRkhTU3haUVVGQkxFbEJRVUVzUlVGQk5FTXNSMEZCUVN4clFrRkJhMElzUTBGRGJFVXNVVUZCVVN4RlFVTlNMRmxCUVZrc1JVRkRXaXhMUVVGTExFTkJRMDRzUlVGS1R5eHBRa0ZCYVVJc1IwRkJRU3hGUVVGQkxFTkJRVUVzYVVKQlFVRXNSVUZCUlN4clFrRkJhMElzZDBKQlNUVkRPMWxCUlVRc1VVRkJVU3hSUVVGUk8yZENRVU5rTEV0QlFVc3NUMEZCVHl4RFFVRkRMRlZCUVZVN1owSkJRM1pDTEV0QlFVc3NUMEZCVHl4RFFVRkRMRk5CUVZNN1owSkJRM1JDTEV0QlFVc3NUMEZCVHl4RFFVRkRMRTlCUVU4N1owSkJRM0JDTEV0QlFVc3NUMEZCVHl4RFFVRkRMRk5CUVZNN1FVRkRjRUlzYjBKQlFVRXNTMEZCU1N4RFFVRkRMSEZDUVVGeFFpeERRVUZETEd0Q1FVRnJRaXhGUVVGRkxHbENRVUZwUWl4RFFVRkRPMjlDUVVOcVJUczdRVUZGVGl4VFFVRkRPMUZCUlVRc1MwRkJhVUlzUTBGQlFTeHBRa0ZCUVN4SFFVRkhMRlZCUVVNc2EwSkJRVEJDTEVWQlFVRTdPMWxCUXpkRExFOUJRVThzUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1lVRkJZU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRTFCUVVVc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3gzUWtGQmQwSXNUVUZCU1N4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUXp0QlFVTjZSU3hUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNZMEZCWXl4SFFVRkhMRlZCUTJZc1MwRkJNRU1zUlVGRE1VTXNTMEZCWVN4RlFVRkJPMWxCUlZBc1NVRkJRU3hGUVVGQkxFZEJRWFZFTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVM5RUxEQkNRVUV3UWl4SFFVRkJMRVZCUVVFc1EwRkJRU3d3UWtGQlFTeEZRVUZGTEc5Q1FVRnZRaXhIUVVGQkxFVkJRVUVzUTBGQlFTeHZRa0ZCWlR0QlFVTjJSU3haUVVGQkxFbEJRVTBzVVVGQlVTeEhRVUZITEV0QlFVc3NRMEZCUXl4SFFVRmpPMEZCUTNKRExGbEJRVUVzU1VGQlNTeFJRVUZSTEV0QlFVc3NUMEZCVHl4RFFVRkRMRWRCUVVjc1JVRkJSVHM3WjBKQlJUVkNMRXRCUVVzc1EwRkJReXhqUVVGakxFVkJRVVU3TzFsQlJYaENMRWxCUVVrc1EwRkJReXd3UWtGQk1FSXNSVUZCUlR0blFrRkRMMElzUzBGQlNTeERRVUZETEhkQ1FVRjNRaXhEUVVGRExFdEJRVXNzUlVGQlJTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RFFVRkRPenRCUVVkMlJDeFpRVUZCTEc5Q1FVRnZRaXhKUVVGSkxHOUNRVUZ2UWl4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVOeVJDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGSExGVkJRMllzUzBGRmRVTXNSVUZEZGtNc1EwRkJVeXhGUVVGQk8wRkJSVlFzV1VGQlFTeEpRVUZOTEZOQlFWTXNSMEZCUnl4VlFVRlZMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RFFVRkRPMWxCUlM5RExFbEJRVWtzYVVKQlFXbENMRU5CUVVNc1UwRkJVeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlR0blFrRkROVU03TzFsQlIwWXNTMEZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4VFFVRlRMRU5CUVVNc1JVRkJSU3hMUVVGTExFTkJRVU03UVVGRE1VUXNVMEZCUXp0UlFVVkVMRXRCUVcxQ0xFTkJRVUVzYlVKQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRCUVVNNVFpeFpRVUZCTEVsQlFVMHNVMEZCVXl4SFFVRkhMRlZCUVZVc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkZMME1zU1VGQlNTeHBRa0ZCYVVJc1EwRkJReXhUUVVGVExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZPMmRDUVVNMVF6czdXVUZIUml4TFFVRkpMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdRVUZEZUVRc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEhWQ1FVRjFRaXhIUVVGSExGVkJRVU1zVlVGQmEwSXNSVUZCUlN4UFFVRmhMRVZCUVVFN08wRkJRekZFTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEV0QlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3WjBKQlEzaEVPenRaUVVWR0xFTkJRVUVzUlVGQlFTeEhRVUZCTEVOQlFVRXNSVUZCUVN4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRVU1zWlVGQlpTeE5RVUZCTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVN4RFFVRkJMRVZCUVVFc1JVRkJSeXhQUVVGUExFTkJRVU03UVVGRGNrTXNXVUZCUVN4RFFVRkJMRVZCUVVFc1IwRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhEUVVGRExFTkJRVU1zVFVGQlJTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVOHNUVUZCUlN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMRXRCUVVzc1JVRkJSVHRCUVVOeVJDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1owSkJRV2RDTEVkQlFVY3NWVUZEYWtJc1MwRkJNRU1zUlVGRE1VTXNUMEZCWlN4RlFVRkJPenRCUVVWbUxGbEJRVUVzU1VGQlRTeFJRVUZSTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWRCUVVjN1FVRkRNVUlzV1VGQlFTeEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXd3UWtGQk1FSXNSVUZCUlR0blFrRkRNVU1zVVVGQlVTeFJRVUZSTzI5Q1FVTmtMRXRCUVVzc1QwRkJUeXhEUVVGRExFdEJRVXM3UVVGRGFFSXNkMEpCUVVFc1MwRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eExRVUZMTEVWQlFVVXNUMEZCVHl4RFFVRkRPMEZCUTI1RExIZENRVUZCTEVOQlFVRXNSVUZCUVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNaVUZCWlN4TlFVRkhMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenQzUWtGRGFrUTdiMEpCUTBZc1MwRkJTeXhQUVVGUExFTkJRVU1zVlVGQlZUdEJRVU55UWl4M1FrRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRVZCUVVVN05FSkJRelZDT3p0QlFVVkdMSGRDUVVGQkxFdEJRVWtzUTBGQlF5eDFRa0ZCZFVJc1EwRkRNVUlzVDBGQlR5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1QwRkJUeXhIUVVGSExFTkJRVU1zUlVGREwwSXNWMEZCVnl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVTjRRenQzUWtGRFJEdHZRa0ZEUml4TFFVRkxMRTlCUVU4c1EwRkJReXhUUVVGVE8wRkJRM0JDTEhkQ1FVRkJMRWxCUVVrc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NSVUZCUlRzMFFrRkROVUk3TzBGQlJVWXNkMEpCUVVFc1MwRkJTU3hEUVVGRExIVkNRVUYxUWl4RFFVTXhRaXhQUVVGUExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4UFFVRlBMRWRCUVVjc1EwRkJReXhGUVVNdlFpeFhRVUZYTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlEzaERPM2RDUVVORU96czdRVUZIVWl4VFFVRkRPMUZCUlVRc1MwRkJNa0lzUTBGQlFTd3lRa0ZCUVN4SFFVRkhMRlZCUXpWQ0xFdEJRV0VzUlVGQlFUczdRVUZMVUN4WlFVRkJMRWxCUVVFc1MwRkJkMFFzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZCYUVVc1IwRkJSeXhUUVVGQkxFVkJRVVVzVDBGQlR5eGhRVUZCTEVWQlFVVXNUMEZCVHl4aFFVRkJMRVZCUVVVc1dVRkJXU3hyUWtGQlFTeEZRVUZGTEZsQlFWa3NhMEpCUVdVN1dVRkRlRVVzU1VGQlRTeFRRVUZUTEVkQlFVY3NVVUZCVVN4RFFVRkRMRWRCUVVjc1JVRkJSU3hMUVVGTExFTkJRVU03V1VGRGRFTXNUMEZCVHp0blFrRkRUQ3hWUVVGVkxFVkJRMUlzUTBGQlFTeEZRVUZCTEVsQlFVTXNRMEZCUXl4UFFVRlBMRWxCUVVrc1QwRkJUeXhKUVVGSkxGbEJRVmtzU1VGQlNTeFpRVUZaTzI5Q1FVTnNSQ3hsUVVGbExFTkJRVU1zVTBGQlV5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1IwRkRla01zUzBGQlN6dEJRVU5RTEdkQ1FVRkJMRk5CUVZNc1JVRkJRU3hUUVVGQk8yRkJRMVk3UVVGRFNDeFRRVUZETzFGQlJVUXNTMEZCWlN4RFFVRkJMR1ZCUVVFc1IwRkJSeXhWUVVGRExFdEJRV0VzUlVGQlFUdFpRVU4wUWl4SlFVRkJMRlZCUVZVc1IwRkJTeXhMUVVGSkxFTkJRVU1zTWtKQlFUSkNMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVUVzVlVGQk5VTTdRVUZEYkVJc1dVRkJRU3hQUVVGUExGVkJRVlU3UVVGRGJrSXNVMEZCUXp0UlFXZENSQ3hMUVVGclFpeERRVUZCTEd0Q1FVRkJMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUU3UVVGRGRrSXNXVUZCUVN4SlFVRkJMRXRCUTBvc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGRVNpeEhRVUZITEZOQlFVRXNSVUZCUlN4VFFVRlRMR1ZCUVVFc1JVRkJSU3hQUVVGUExHRkJRVUVzUlVGQlJTeFpRVUZaTEd0Q1FVRkJMRVZCUVVVc1kwRkJZeXh2UWtGRGFrUTdXVUZEV2l4SlFVRk5MR1ZCUVdVc1IwRkJSenRyUWtGRGNFSXNZMEZCWXl4RFFVRkRMRkZCUVZFc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eERRVUZETzJ0Q1FVTXZRaXhUUVVGVE8wRkJSV0lzV1VGQlFTeEpRVUZOTEZOQlFWTXNSMEZCUnl4TFFVRkpMRU5CUVVNc1dVRkJXU3hGUVVGRk8xbEJSWEpETEU5QlFVOHNTVUZCU1N4RFFVTlVMRGhDUVVFNFFpeEZRVU01UWl4clEwRkJNa0lzUTBGQlF5eERRVUZGTEVWQlF6bENMR1ZCUVdVc1JVRkRaanRCUVVORkxHZENRVUZCTEhkRFFVRjNReXhGUVVGRkxFdEJRVWtzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTJwRkxHZENRVUZCTEhkRFFVRjNReXhGUVVGRk8zTkNRVU4wUXl4TFFVRkpMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hUUVVGVE8wRkJRelZETEhOQ1FVRkZMRk5CUVZNN1FVRkRZaXhuUWtGQlFTeHBSRUZCYVVRc1JVRkRMME1zUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMREJDUVVFd1FqdHZRa0ZEZEVNc1dVRkJXVHR2UWtGRFdpeExRVUZKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzV1VGQldTeERRVUZETzI5Q1FVTXhReXhEUVVGRExFdEJRVWtzUTBGQlF5eGxRVUZsTEVWQlFVVTdRVUZEZGtJc2IwSkJRVUVzUTBGQlF5eExRVUZKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNeFFpeG5Ra0ZCUVN4clJFRkJhMFFzUlVGRGFFUXNTMEZCU1N4RFFVRkRMSFZDUVVGMVFpeERRVUZETEVOQlFVTXNRMEZCUXp0blFrRkRha01zZDBOQlFYZERMRVZCUTNSRExGTkJRVk1zU1VGQlNUdHpRa0ZEVkN4alFVRmpMRU5CUVVNc1UwRkJVeXhGUVVGRkxFOUJRVThzUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnp0QlFVTXpReXh6UWtGQlJTeFRRVUZUTzBGQlEyWXNaMEpCUVVFc01rTkJRVEpETEVWQlFVVXNTMEZCU1N4RFFVRkRMR2xDUVVGcFFpeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTjBSU3huUWtGQlFTeDVRMEZCZVVNc1JVRkJSU3hMUVVGSkxFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTnNSU3huUWtGQlFTeHhSRUZCY1VRc1JVRkRia1FzUzBGQlNTeERRVUZETERCQ1FVRXdRaXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU53UXl4blFrRkJRU3h0UkVGQmJVUXNSVUZEYWtRc1MwRkJTU3hEUVVGRExIZENRVUYzUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGJFTXNjVU5CUVhGRExFVkJRVVVzUzBGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRMjVGTEdGQlFVRXNRMEZEUmp0QlFVTklMRk5CUVVNN1VVRkZSQ3hMUVVGWExFTkJRVUVzVjBGQlFTeEhRVUZITEZWQlFVTXNRMEZCVXl4RlFVRkJPMWxCUTNSQ0xFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRWxCUVVrc1NVRkJTU3hGUVVGRk8wRkJRMjVETEdkQ1FVRkJMRTlCUVU4c1NVRkJTVHM3V1VGRllpeEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExGRkJRVkVzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1EwRkJRenRaUVVOc1JDeEpRVUZaTERCQ1FVRXdRaXhIUVVNMVF5eExRVUZKTEVOQlFVTXNNa0pCUVRKQ0xFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1EwRkJRU3hWUVVST08wRkJSemxETEZsQlFVRXNTVUZCVFN4UlFVRlJMRWRCUTFvc1EwRkJReXhMUVVGTExHZENRVUZuUWp0blFrRkRkRUlzUlVGQlJTd3dRa0ZCTUVJc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETERCQ1FVRXdRanRCUVVOdVJTeHJRa0ZCUlR0clFrRkRRU3hKUVVGSk8wRkJSVllzV1VGQlFTeFBRVUZQTEZGQlFWRTdRVUZEYWtJc1UwRkJRenRSUVVWRUxFdEJRV3RDTEVOQlFVRXNhMEpCUVVFc1IwRkJSeXhWUVVGRExFTkJRVk1zUlVGQlFUdFpRVU0zUWl4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEpRVUZKTEVsQlFVa3NSVUZCUlR0QlFVTnVReXhuUWtGQlFTeFBRVUZQTEVsQlFVazdPMWxCUldJc1NVRkJUU3hyUWtGQmEwSXNSMEZCUnl4VlFVRlZMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlFVTTdRVUZET1VRc1dVRkJRU3hKUVVGTkxIZENRVUYzUWl4SFFVRkhMR2xDUVVGcFFpeERRVU5vUkN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUlVGRFpDeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVTllPMEZCUlVRc1dVRkJRU3hKUVVGTkxGRkJRVkVzUjBGRFdpeERRVUZETEV0QlFVc3NhMEpCUVd0Q08yZENRVU40UWl4RlFVRkZMSGRDUVVGM1FpeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc01FSkJRVEJDTzBGQlEycEZMR3RDUVVGRk8ydENRVU5CTEVsQlFVazdRVUZGVml4WlFVRkJMRTlCUVU4c1VVRkJVVHRCUVVOcVFpeFRRVUZETzFGQlJVUXNTMEZCV1N4RFFVRkJMRmxCUVVFc1IwRkJSeXhWUVVGRExFdEJRV0VzUlVGQlFUdFpRVU55UWl4SlFVRkJMRVZCUVVFc1IwRkxSaXhMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVXBhTEdkRFFVRnRReXhGUVVGdVF5eDNRa0ZCZDBJc1IwRkJSeXhGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEZGQlFWRXNSMEZCUVN4RlFVRkJMRVZCUTI1RExHdERRVUUwUXl4RlFVRTFReXd3UWtGQk1FSXNSMEZCUnl4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxHVkJRV1VzUjBGQlFTeEZRVUZCTEVWQlF6VkRMRWRCUVVjc1IwRkJRU3hGUVVGQkxFTkJRVUVzUjBGQlFTeEZRVU5JTEUxQlFVMHNSMEZCUVN4RlFVRkJMRU5CUVVFc1RVRkRUVHRaUVVOa0xFbEJRVTBzVTBGQlV5eEhRVUZITEZGQlFWRXNRMEZCUXl4SFFVRkhMRVZCUVVVc1MwRkJTeXhEUVVGRE8wRkJRM1JETEZsQlFVRXNTVUZCVFN4TlFVRk5MRWRCUTFZc1MwRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGTkJRVk03UVVGRGNrUXNhMEpCUVVVN2EwSkJRMEVzZDBKQlFYZENPMEZCUlRsQ0xGbEJRVUVzVDBGQlR5eEZRVUZITEVOQlFVRXNUVUZCUVN4RFFVRkJMRTFCUVUwc1JVRkJTU3hIUVVGQkxFTkJRVUVzUTBGQlFTeE5RVUZCTEVOQlFVRXNWVUZCVlN4RFFVRkRMRk5CUVZNc1JVRkJSU3hYUVVGWExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVVTdRVUZEYkVVc1UwRkJRenRSUVVWRUxFdEJRVzlDTEVOQlFVRXNiMEpCUVVFc1IwRkJSeXhWUVVGRExFTkJRVk1zUlVGQlFUdEJRVU42UWl4WlFVRkJMRWxCUVVFc1MwRlpSaXhMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVmhhTEVkQlFVY3NSMEZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hGUVVOSUxGTkJRVk1zUjBGQlFTeEZRVUZCTEVOQlFVRXNVMEZCUVN4RlFVTlVMRTlCUVU4c1IwRkJRU3hGUVVGQkxFTkJRVUVzVDBGQlFTeEZRVU5RTEZGQlFWRXNZMEZCUVN4RlFVTlNMRTlCUVU4c1IwRkJRU3hGUVVGQkxFTkJRVUVzVDBGQlFTeEZRVU5RTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxGbEJRVmtzUjBGQlFTeEZRVUZCTEVOQlFVRXNXVUZCUVN4RlFVTmFMRmxCUVZrc1IwRkJRU3hGUVVGQkxFTkJRVUVzV1VGQlFTeEZRVU5hTEZWQlFWVXNaMEpCUVVFc1JVRkRWaXhaUVVGWkxHdENRVUZCTEVWQlExb3NNRUpCUVRCQ0xHZERRVU5rTzBGQlJXUXNXVUZCUVN4SlFVRk5MRlZCUVZVc1IwRkRaQ3hEUVVGRExFOUJRVThzU1VGQlNTeFBRVUZQTEVsQlFVa3NXVUZCV1N4SlFVRkpMRmxCUVZrc1NVRkJTU3hWUVVGVk8wRkJRMnBGTEdkQ1FVRkJMR2xDUVVGcFFpeERRVUZETEZWQlFWVXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVVnVSQ3haUVVGQkxFOUJRVThzU1VGQlNTeERRVU5VTEdkRFFVRm5ReXhGUVVOb1F5dzBRa0ZCTmtJc1EwRkJRU3hOUVVGQkxFTkJRVUVzUTBGQlF5eERRVUZGTEVWQlEyaERPMEZCUTBVc1owSkJRVUVzTUVOQlFUQkRMRVZCUVVVc1ZVRkJWVHRCUVVOMFJDeG5Ra0ZCUVN3d1EwRkJNRU1zUlVGQlJUdHpRa0ZEZUVNc1MwRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzVVVGQlVUdEJRVU42UXl4elFrRkJSU3hUUVVGVE8yZENRVU5pTEcxRVFVRnRSQ3hGUVVOcVJDeERRVUZETERCQ1FVRXdRanR2UWtGRE0wSXNXVUZCV1R0dlFrRkRXaXhMUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeFpRVUZaTEVOQlFVTTdRVUZETlVNc2IwSkJRVUVzUTBGQlF5eFZRVUZWTzBGQlEySXNaMEpCUVVFc2IwUkJRVzlFTEVWQlEyeEVMRXRCUVVrc1EwRkJReXg1UWtGQmVVSXNRMEZCUXl4RFFVRkRMRU5CUVVNN1owSkJRMjVETERCRFFVRXdReXhGUVVONFF5eFRRVUZUTEVsQlFVazdjMEpCUTFRc1owSkJRV2RDTEVOQlFVTXNVMEZCVXl4RlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ6dEJRVU0zUXl4elFrRkJSU3hUUVVGVE8wRkJRMllzWjBKQlFVRXNOa05CUVRaRExFVkJRek5ETEV0QlFVa3NRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZETjBJc1owSkJRVUVzTWtOQlFUSkRMRVZCUVVVc1MwRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGRGRFVXNkVU5CUVhWRExFVkJRVVVzUzBGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZEZGtVc1lVRkJRU3hEUVVOR08wRkJRMGdzVTBGQlF6dFJRVVZFTEV0QlFXVXNRMEZCUVN4bFFVRkJMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUU3UVVGRGNFSXNXVUZCUVN4SlFVRkJMRXRCUTBvc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGRVNpeDFRa0ZCZFVJc1IwRkJRU3hGUVVGQkxFTkJRVUVzZFVKQlFVRXNSVUZCUlN4clFrRkJhMElzUjBGQlFTeEZRVUZCTEVOQlFVRXNhMEpCUVVFc1JVRkJSU3hOUVVGTkxFZEJRVUVzUlVGQlFTeERRVUZCTEUxQlFVRXNSVUZCUlN4SFFVRkhMRk5CUTNCRU8xbEJRMW9zU1VGQlRTeGpRVUZqTEVkQlFVY3NjVUpCUVhGQ0xFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMHNRMEZCUXp0WlFVTjJSQ3hKUVVGTkxHRkJRV0VzUjBGQlJ5eG5Ra0ZCWjBJc1EwRkJReXhEUVVGRExFVkJRVVVzVFVGQlRTeERRVUZETzFsQlEycEVMRWxCUVVrc2EwSkJRV3RDTEVWQlFVVTdaMEpCUTNSQ0xFOUJRVThzYTBKQlFXdENMRU5CUVVNc1EwRkJReXhGUVVGRkxHTkJRV01zUlVGQlJTeGhRVUZoTEVWQlFVVXNSMEZCUnl4RFFVRkRPenRaUVVWc1JTeFBRVUZQTEhWQ1FVRjFRaXhIUVVGSExHRkJRV0VzUjBGQlJ5eGpRVUZqTzBGQlEycEZMRk5CUVVNN1VVRkZSQ3hMUVVGcFFpeERRVUZCTEdsQ1FVRkJMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUU3TzFsQlEzUkNMRWxCUVVFc1JVRkJRU3hIUVVGdFF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRXpReXh2UWtGQmIwSXNSMEZCUVN4RlFVRkJMRU5CUVVFc2IwSkJRVUVzUlVGQlJTeE5RVUZOTEVkQlFVRXNSVUZCUVN4RFFVRkJMRTFCUVdVN1dVRkRia1FzU1VGQlRTeFpRVUZaTEVkQlFVY3NkVUpCUVhWQ0xFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMHNRMEZCUXp0QlFVTjJSQ3haUVVGQkxFOUJRVThzUTBGQlFTeEZRVUZCTEVkQlFVRXNiMEpCUVc5Q0xFdEJRWEJDTEVsQlFVRXNTVUZCUVN4dlFrRkJiMElzUzBGQmNFSXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3h2UWtGQmIwSXNRMEZCUnl4RFFVRkRMRVZCUVVVc1dVRkJXU3hEUVVGRExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxGbEJRVms3UVVGRGFFVXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxGbEJRVmtzUjBGQlJ5eFpRVUZCT3p0QlFVTlFMRmxCUVVFc1NVRkJRU3hMUVV0R0xFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlNsb3NORUpCUVRSQ0xFZEJRVUVzUlVGQlFTeERRVUZCTERSQ1FVRkJMRVZCUXpWQ0xEWkNRVUUyUWl4SFFVRkJMRVZCUVVFc1EwRkJRU3cyUWtGQlFTeEZRVU0zUWl4SFFVRkhMRWRCUVVFc1JVRkJRU3hEUVVGQkxFZEJRVUVzUlVGRFNDeFJRVUZSTEdOQlEwazdRVUZGWkN4WlFVRkJMRWxCUVUwc1dVRkJXU3hIUVVOb1FpeERRVUZCTEVWQlFVRXNSMEZCUVN4aFFVRmhMRU5CUTFnc2NVSkJRWEZDTEVOQlEyNUNMRFpDUVVFMlFpeEZRVU0zUWl3MFFrRkJORUlzUTBGRE4wSXNRMEZEUml4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVVc1NVRkJTVHRaUVVOVUxFOUJRVThzV1VGQldTeExRVUZhTEVsQlFVRXNTVUZCUVN4WlFVRlpMRXRCUVZvc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeFpRVUZaTEVOQlFVVXNSMEZCUnl4RFFVRkRMRlZCUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU1zU1VGQlN5eFJRVU55UXl4TFFVRkxMRU5CUVVFc1lVRkJRU3hEUVVGQkxFdEJRVUVzUlVGQlFTeEZRVUZCTEZOQlFWTXNSVUZCUXl4cFEwRkJhVU1zUlVGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkJMRVZCUTNCRUxFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNWVUZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGQkxFVkJRVXNzVVVGRGJrSXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGRFJTeEhRVUZITEVWQlFVVXNTMEZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGRGRrSXNSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkRUaXhQUVVGUExFVkJRVVVzVlVGQlF5eExRVUZMTEVWQlFVRTdRVUZEWWl4dlFrRkJRU3hMUVVGSkxFTkJRVU1zV1VGQldTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkROMElzYVVKQlFVTXNSVUZEUkN4VFFVRlRMRVZCUVVVc1ZVRkJReXhMUVVGTExFVkJRVUU3UVVGRFppeHZRa0ZCUVN4SlFVRkpMR05CUVdNc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdDNRa0ZEZWtJc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdEJRVU4wUWl4M1FrRkJRU3hMUVVGTExFTkJRVU1zUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxPenRCUVVjelFpeHZRa0ZCUVN4TFFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETEVOQlFVTTdhVUpCUXpsQ0xFVkJRMFFzV1VGQldTeEZRVU5XTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenR6UWtGRFVpeFpRVUZOTEVWQlFVRXNUMEZCUVN4TFFVRkpMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVFN2MwSkJReTlDTEZOQlFWTXNSVUZGWml4alFVRmpMRVZCUTFvc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dHpRa0ZEVUN4WlFVRk5MRVZCUVVFc1QwRkJRU3hMUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUU3YzBKQlF5OUNMRk5CUVZNc1JVRkZaaXhSUVVGUkxFVkJRVVVzVFVGQlRTeERRVUZETEV0QlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGRGNrTXNVMEZCVXl4RlFVRkZMRXRCUVVrc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkRkRUlzWlVGQlFTeEZRVUZCTEV0QlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRM1JETEVsQlFVa3NSVUZCUXl4UlFVRlJMR2RDUVVORUxFdEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUTJ4Q0xHTkJRVUVzUlVGQlFTeExRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFTkJRVU1zUjBGQlJ5eE5RVUZOTEVkQlFVY3NVMEZCVXl4RlFVRkJMR1ZCUVVFc1JVRkZOVVFzVVVGQlVTeEhRVUZITEV0QlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeFJRVUZSTEVOQlFVTXNSMEZCUnl4VFFVRlRMRWxCUnpsRUxFdEJRVWtzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUTNCQ0xFbEJRMUFzUTBGQlF5eERRVU5GTEVWQlExQXNSVUZCUVN4RFFVRkRPMEZCUTBvc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdOQlFXTXNSMEZCUnl4WlFVRkJPMWxCUTFRc1NVRkJRU3hGUVVGQkxFZEJRVzlDTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVRWQ0xFZEJRVWNzUjBGQlFTeEZRVUZCTEVOQlFVRXNSMEZCUVN4RlFVRkZMRkZCUVZFc1IwRkJRU3hGUVVGQkxFTkJRVUVzVVVGQlpUdFpRVU53UXl4SlFVRk5MRkZCUVZFc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVNM1FpeFpRVUZCTEZGQlEwVXNTMEZCU3l4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGQlFTeFRRVUZUTEVWQlFVTXNiVU5CUVcxRExFbEJReTlETEZGQlFWRXNRMEZCUXl4SFFVRkhMRU5CUVVNc1ZVRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZMTEVWQlFVRXNVVUZEZEVJc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCUVN4SFFVRkhMRVZCUVVVc1EwRkJReXhGUVVOT0xFZEJRVWNzUlVGQlJTeExRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVONlFpeEpRVUZKTEVWQlFVTXNVVUZCVVN4RlFVTmlMRTlCUVU4c1JVRkJSU3hWUVVGRExFdEJRVXNzUlVGQlFUdEJRVU5pTEc5Q1FVRkJMRXRCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTXZRaXhwUWtGQlF5eEZRVU5FTEZOQlFWTXNSVUZCUlN4VlFVRkRMRXRCUVVzc1JVRkJRVHRCUVVObUxHOUNRVUZCTEV0QlFVa3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4RFFVRkRPMmxDUVVOb1F5eEZRVU5FTEZsQlFWa3NSVUZEVml4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03YzBKQlExSXNXVUZCVFN4RlFVRkJMRTlCUVVFc1MwRkJTU3hEUVVGRExHMUNRVUZ0UWl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGQk8zTkNRVU5xUXl4VFFVRlRMRVZCUldZc1kwRkJZeXhGUVVOYUxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdjMEpCUTFBc1dVRkJUU3hGUVVGQkxFOUJRVUVzUzBGQlNTeERRVUZETEcxQ1FVRnRRaXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZCTzBGQlEyNURMSE5DUVVGRkxGTkJRVk1zUlVGRlppeFRRVUZUTEVWQlFVVXNTMEZCU1N4RFFVRkRMRzlDUVVGdlFpeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkJMR1ZCUVVFc1JVRkZja01zVVVGQlVTeEhRVUZITEV0QlFVa3NRMEZCUXl4cFFrRkJhVUlzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRkZCUVZFc1EwRkJReXhIUVVGSExGTkJRVk1zUlVGRmFrVXNVVUZCVVN4RlFVRkZMRTFCUVUwc1EwRkJReXhMUVVGSkxFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zYTBKQlF6bENMRXRCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRExFZEJRVWNzVFVGQlRTeEhRVUZITEZOQlFWTXNSVUZCUVN4RlFVVXZSQ3hMUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRM1JDTEVWQk4wSm5RaXhGUVRoQ2RrSXNRMEZCUXl4RFFVTkZPMEZCUlZZc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdGQlFXRXNSMEZCUnl4WlFVRkJPMWxCUTFJc1NVRkJRU3hGUVVGQkxFZEJUMFlzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZPV2l4aFFVRmhMRWRCUVVFc1JVRkJRU3hEUVVGQkxHRkJRVUVzUlVGRFlpeFpRVUZaTEVkQlFVRXNSVUZCUVN4RFFVRkJMRmxCUVVFc1JVRkRXaXhWUVVGVkxFZEJRVUVzUlVGQlFTeERRVUZCTEZWQlFVRXNSVUZEVml4dFFrRkJiVUlzUjBGQlFTeEZRVUZCTEVOQlFVRXNiVUpCUVVFc1JVRkRia0lzY1VKQlFYRkNMRWRCUVVFc1JVRkJRU3hEUVVGQkxIRkNRVUZCTEVWQlEzSkNMR05CUVdNc1IwRkJRU3hGUVVGQkxFTkJRVUVzWTBGRFJqdFpRVVZrTEU5QlFVOHNTVUZCU1N4RFFVTlVMSGxDUVVGNVFpeEZRVU42UWp0QlFVTkZMR2RDUVVGQkxEQkRRVUV3UXl4RlFVTjRReXhoUVVGaExFdEJRVXNzV1VGQldTeEpRVUZKTEZWQlFWVXNRMEZCUXp0QlFVTm9SQ3hoUVVGQkxFVkJRMFFzUlVGQlJTd3JRa0ZCSzBJc1JVRkJSU3h0UWtGQmJVSXNSVUZCUlN4RlFVTjRSQ3hGUVVGRkxHbERRVUZwUXl4RlFVRkZMSEZDUVVGeFFpeEZRVUZGTEVWQlF6VkVMRVZCUVVVc09FSkJRVGhDTEVWQlFVVXNZMEZCWXl4RlFVRkZMRU5CUTI1RU8wRkJRMGdzVTBGQlF6czdPMEZCYWxORUxFbEJRVUVzUzBGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4WlFVRlpMRWRCUVZvc1dVRkJRVHRCUVVOUkxGRkJRVUVzU1VGQlFTeEZRVUVyUXl4SFFVRkJMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRWFpFTEZGQlFWRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1VVRkJRU3hGUVVGRkxHRkJRV0VzUjBGQlFTeEZRVUZCTEVOQlFVRXNZVUZCUVN4RlFVRkZMR1ZCUVdVc2NVSkJRV1U3VVVGRkwwUXNTVUZCU1N4bFFVRmxMRVZCUVVVN1FVRkRia0lzV1VGQlFTeFBRVUZQTEdGQlFXRTdPMUZCUjNSQ0xFbEJRVWtzVVVGQlVTeEZRVUZGTzFsQlExb3NUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJRenM3UVVGSGJrSXNVVUZCUVN4UFFVRlBMRk5CUVZNN1MwRkRha0k3UVVGMVVrUXNTVUZCUVN4TFFVRkJMRU5CUVVFc1UwRkJRU3hEUVVGQkxFMUJRVTBzUjBGQlRpeFpRVUZCTzFGQlExRXNTVUZCUVN4RlFVRkJMRWRCUzBZc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGS1dpeHRRa0ZCYlVJc1IwRkJRU3hGUVVGQkxFTkJRVUVzYlVKQlFVRXNSVUZEYmtJc2NVSkJRWEZDTEVkQlFVRXNSVUZCUVN4RFFVRkJMSEZDUVVGQkxFVkJRM0pDTEVkQlFVY3NSMEZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hGUVVOSUxFVkJRVEJDTEVkQlFVRXNSVUZCUVN4RFFVRkJMR1ZCUVVFc1JVRkJNVUlzWlVGQlpTeEhRVUZITEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1VVRkJVU3hMUVVOa08xRkJSV1FzU1VGQlRTeDNRa0ZCZDBJc1IwRkJSenRCUVVNdlFpeGpRVUZGTEdWQlFXVXNRMEZCUXl4SlFVRkpMRVZCUVVVc1IwRkJSenRqUVVONlFpeEZRVUZGTzBGQlJVNHNVVUZCUVN4UlFVTkZMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlEwVXNVMEZCVXl4RlFVRkZMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUlVGREwwSXNXVUZCV1N4RlFVTldMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTEVkQlFVY3NTVUZCU1N4RFFVRkRMR2RDUVVGblFpeEhRVUZITEZOQlFWTXNSVUZGYWtVc1kwRkJZeXhGUVVOYUxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4SFFVRkhMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNSMEZCUnl4VFFVRlRMRVZCUVVFc1dVRkJRU3hGUVVWd1JDeEZRVUZITEVOQlFVRXNUVUZCUVN4RFFVRkJMSGRDUVVGM1FpeFRRVUZITEZWQlFWVXNRMEZCUXl4SFFVRkhMRVZCUVVVc1dVRkJXU3hGUVVGRkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVVc1JVRkROVVlzU1VGQlNTeEZRVUZETEZOQlFWTXNTVUZGWWp0QlFVTkRMR05CUVVVc1NVRkJTU3hEUVVGRExGbEJRVms3UVVGRGJrSXNZMEZCUlR0QlFVTkJMR3RDUVVGRkxFbEJRVWtzUTBGQlF5eGpRVUZqTzBGQlEzSkNMR3RDUVVGRkxFbEJRVWtzUTBGQlF5eFhRVUZYTEVWQlFVVXNRMEZEY0VJN1MwRkZWRHRKUVVOSUxFOUJRVU1zUzBGQlFUdEJRVUZFTEVOQmRqTkNRU3hEUVVGdFF5eFRRVUZUTEVOQmRUTkNNME1zUTBGQlFUczdRVU40YkVORUxFbEJRVUVzYjBKQlFVRXNhMEpCUVVFc1ZVRkJRU3hOUVVGQkxFVkJRVUU3U1VGQmEwUXNVMEZCYjBNc1EwRkJRU3h2UWtGQlFTeEZRVUZCTEUxQlFVRXNRMEZCUVR0QlFVRjBSaXhKUVVGQkxGTkJRVUVzYjBKQlFVRXNSMEZCUVRzN1FVRkRSU3hSUVVGQkxFdEJRVUVzUTBGQlFTeGxRVUZsTEVkQlFVY3NWVUZCUXl4RFFVRlRMRVZCUVVFc1JVRkJZeXhQUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTMEZCU3l4TFFVRkxMRU5CUVVNc1EwRkJRU3hGUVVGQk8wRkJSV2hGTEZGQlFVRXNTMEZCUVN4RFFVRkJMR0ZCUVdFc1IwRkJSeXhaUVVGQk8xbEJRMlFzVDBGQlR5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExFTkJRemxDTEZWQlFVTXNTMEZCWVN4RlFVRkZMRU5CUVZNc1JVRkJlVUlzUlVGQlFTeFJRVU5vUkN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFdEJRVUVzUlVGQlFTeEZRVU5GTEZOQlFWTXNSVUZEVUN4TFFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVU03UVVGRGNFSXNjMEpCUVVVN1FVRkRSaXh6UWtGQlJTeG5RMEZCWjBNc1JVRkZkRU1zUjBGQlJ5eEZRVUZGTEV0QlFVc3NSVUZEVml4UFFVRlBMRVZCUVVVc1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhGUVVGQkxHVkJRVUVzUlVGRGNrSXNTMEZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eE5RVUZOTEVkQlFVY3NVMEZCVXl4RlFVRkJPMmRDUVVVeFJDeExRVUZKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVOMFFpeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkJMRTFCUVVFc1JVRkJRU3hGUVVGTkxGTkJRVk1zUlVGQlF5d3dRMEZCTUVNc1lVRkJVeXhMUVVWdVJTeEZRVUZGTEVOQlEwZzdRVUZEUVN4blFrRkJRU3hMUVVGTExFTkJRMFlzUlVGcVFqQkRMRVZCYTBKcVJDeERRVU5HTzBGQlEwZ3NVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxGRkJRVkVzUjBGQlJ5eFZRVUZETEV0QlFXRXNSVUZCUVN4RlFVRlhMRTlCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVFc1JVRkJRVHRSUVVVNVJDeExRVUZyUWl4RFFVRkJMR3RDUVVGQkxFZEJRVWNzV1VGQldTeEZRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQmNrSXNSVUZCY1VJN096dEJRVVYwUkN4SlFVRkJMRzlDUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEUxQlFVMHNSMEZCVGl4WlFVRkJPMUZCUTBVc1VVRkRSU3h2UWtGQlF5eHRRa0ZCYlVJc1JVRkJRU3hGUVVOc1FpeFRRVUZUTEVWQlFVTXNhME5CUVd0RExFVkJRelZETEdOQlFXTXNSVUZCUlN4SlFVRkpMRU5CUVVNc2EwSkJRV3RDTEVsQlJYUkRMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGRFJEdExRVVY2UWp0SlFVTklMRTlCUVVNc2IwSkJRVUU3UVVGQlJDeERRWHBEUVN4RFFVRnJSQ3hUUVVGVExFTkJlVU14UkN4RFFVRkJPenRCUTNwQ1JDeEpRVUZCTEdGQlFVRXNhMEpCUVVFc1ZVRkJRU3hOUVVGQkxFVkJRVUU3U1VGQk1rTXNVMEZITVVNc1EwRkJRU3hoUVVGQkxFVkJRVUVzVFVGQlFTeERRVUZCTzBGQlNFUXNTVUZCUVN4VFFVRkJMR0ZCUVVFc1IwRkJRVHM3UVVGSlJTeFJRVUZCTEV0QlFVRXNRMEZCUVN4TFFVRkxMRWRCUVhWQ08wRkJRekZDTEZsQlFVRXNaVUZCWlN4RlFVRkZMRXRCUVVzN1UwRkRka0k3VVVGRlJDeExRVUZ0UWl4RFFVRkJMRzFDUVVGQkxFZEJRVWNzVlVGQlF5eFZRVUZ2UWl4RlFVRkJPMWxCUTNwRExFOUJRVUVzVlVGQlZTeERRVUZETEVkQlFVY3NRMEZEV2l4VlFVRkRMRU5CUVZNc1JVRkJSU3hEUVVGVExFVkJRWGxDTEVWQlFVRXNVVUZETlVNc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeFJRVUZCTEVWQlFVRXNSVUZCVVN4SFFVRkhMRVZCUVVVc1EwRkJReXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlEzSkNMRVZCUVVFc1EwRkJReXhEUVVOTExFVkJTRzFETEVWQlNUZERMRU5CUTBZN1FVRk9SQ3hUUVUxRE8xRkJSVWdzUzBGQlowSXNRMEZCUVN4blFrRkJRU3hIUVVGSExGVkJRVU1zVlVGQmIwSXNSVUZCUVN4RlFVRjVRaXhSUVVNdlJDeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkJMRkZCUVVFc1JVRkJRU3hGUVVORkxFdEJRVXNzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkRka0lzVTBGQlV5eEZRVUZETEdkRFFVRm5ReXhGUVVNeFF5eFJRVUZSTEVWQlFVVXNWVUZCUXl4RFFVRkRMRVZCUVVzc1JVRkJRU3hQUVVGQkxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUVN4RlFVRkJMRVZCUlhaRUxFVkJRVUVzUzBGQlNTeERRVUZETEcxQ1FVRnRRaXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVU01UWl4RlFWQnpSQ3hGUVZGb1JUdEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR05CUVdNc1IwRkJSeXhWUVVObUxFOUJRV2RDTEVWQlEyaENMRlZCUVc5Q0xFbEJRMGNzVVVGRGRrSXNTMEZEUlN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGQlFTeEhRVUZITEVWQlFVTXNUVUZCVFN4RlFVTldMRXRCUVVzc1JVRkJSU3hGUVVGRkxGVkJRVlVzUlVGQlJTeFBRVUZQTEVkQlFVY3NVMEZCVXl4SFFVRkhMRkZCUVZFc1JVRkJSU3hGUVVOeVJDeFRRVUZUTEVWQlFVTXNiVU5CUVcxRExFVkJRemRETEU5QlFVOHNSVUZCUlN4TFFVRkpMRU5CUVVNc1kwRkJZeXhGUVVGQk8xbEJSVFZDTEV0QlFVMHNRMEZCUVN4aFFVRkJMRU5CUVVFc1RVRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZETEN0RFFVRXJReXhGUVVGSExFTkJRVUU3UVVGRGJFVXNXVUZCUVN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFMUJRVUVzUlVGQlFTeEZRVUZOTEZOQlFWTXNSVUZCUXl4dFJFRkJiVVFzUlVGRGFFVXNSVUZCUVN4VlFVRlZMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZEZUVJc1EwRkRTQ3hGUVVOUUxFVkJRVUU3UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4alFVRmpMRWRCUVVjc1ZVRkJReXhWUVVGdlFpeEZRVUY1UWl4RlFVRkJMRkZCUXpkRUxFdEJRVU1zUTBGQlFTeGhRVUZCTEVOQlFVRXNiMEpCUVc5Q0xFVkJRMjVDUVN4UFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGSExFVkJRVU1zVlVGQlZTeEZRVUZCTEVWQlExWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkRaQ3hGUVVGQkxGVkJRVlVzUlVGQlJTeFZRVUZWTEVWQlEzUkNMRkZCUVZFc1JVRkJSU3hMUVVGSkxFTkJRVU1zVVVGQlVTeEZRVU4yUWl4UlFVRlJMRVZCUVVVc1MwRkJTU3hEUVVGRExHTkJRV01zUlVGQlFTeERRVUZCTEVOQlF6ZENMRVZCUTBnc1JVRkJRVHRSUVVWRUxFdEJRV2RDTEVOQlFVRXNaMEpCUVVFc1IwRkJSeXhWUVVGRExGVkJRVzlDTEVWQlFVRTdRVUZET1VJc1dVRkJRU3hKUVVGQkxHVkJRV1VzUjBGQlN5eExRVUZKTEVOQlFVTXNTMEZCU3l4blFrRkJaanRCUVVOMlFpeFpRVUZCTEVsQlFVMHNUVUZCVFN4SFFVRkhMRU5CUVVNc1MwRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eERRVUZETEdWQlFXVXNSVUZCUlN4VlFVRlZMRU5CUVVNc1EwRkJRenRaUVVOc1JTeEpRVUZKTEdWQlFXVXNSVUZCUlR0blFrRkRia0lzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZET3p0QlFVVnFSQ3haUVVGQkxFOUJRVThzVFVGQlRUdEJRVU5tTEZOQlFVTTdVVUZGUkN4TFFVRlJMRU5CUVVFc1VVRkJRU3hIUVVGSExGVkJRVU1zUzBGQllTeEZRVUZCTzFsQlEzWkNMRXRCUVVrc1EwRkJReXhqUVVGakxFVkJRVVU3V1VGRGNrSXNTVUZCU1N4TFFVRkxMRXRCUVVzc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVTdRVUZET1VJc1owSkJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRE96dEJRVVU1UWl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWTBGQll5eEhRVUZITEZsQlFVRTdXVUZEWml4UFFVRkJMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRFdpeG5Ra0ZCUVN4bFFVRmxMRVZCUVVVc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVTdZVUZETjBNc1EwRkJRenRCUVVaR0xGTkJSVVU3T3p0QlFVVktMRWxCUVVFc1lVRkJRU3hEUVVGQkxGTkJRVUVzUTBGQlFTeE5RVUZOTEVkQlFVNHNXVUZCUVR0UlFVRkJMRWxCZDBKRExFdEJRVUVzUjBGQlFTeEpRVUZCTzBGQmRrSkRMRkZCUVVFc1NVRkJUU3hWUVVGVkxFZEJRV0VzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlN4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGRGNrVXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVOVUxHTkJRVVVzVlVGQlF5eERRVUZUTEVWQlFXRXNSVUZCUVN4UFFVRkJMSEZDUVVGeFFpeERRVUZETEVOQlFVTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF6dEJRVU53UlN4alFVRkZMRlZCUVVNc1EwRkJVeXhKUVVGaExFOUJRVUVzWjBKQlFXZENMRU5CUVVNc1EwRkJReXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVhSRExFVkJRWE5ETEVOQlEyeEZPMEZCUlVRc1VVRkJRU3hKUVVGSkxHZENRVUV5UkR0QlFVTXZSQ3hSUVVGQkxGRkJRVkVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMEZCUXpkQ0xGbEJRVUVzUzBGQlN5eFJRVUZSTzBGQlExZ3NaMEpCUVVFc1owSkJRV2RDTEVkQlFVY3NTVUZCU1N4RFFVRkRMR2RDUVVGblFpeERRVUZETEZWQlFWVXNRMEZCUXp0blFrRkRjRVE3UVVGRFJpeFpRVUZCTEV0QlFVc3NVVUZCVVR0QlFVTllMR2RDUVVGQkxHZENRVUZuUWl4SFFVRkhMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VlFVRlZMRU5CUVVNN1owSkJRM0JFT3p0QlFVZEtMRkZCUVVFc1VVRkRSU3hMUVVGQkxFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4RlFVTkZMRk5CUVZNc1JVRkJSU3hwUjBGQk1FWXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFTkJRVVVzUlVGQlFTeEZRVVUzU0N4blFrRkJaMElzUTBGRFlqdExRVVZVTzBsQlEwZ3NUMEZCUXl4aFFVRkJPMEZCUVVRc1EwRndSMEVzUTBGQk1rTXNVMEZCVXl4RFFXOUhia1FzUTBGQlFUczdRVU12UjBRc1UwRkJVeXhyUWtGQmEwSXNRMEZCUXl4UFFVRmhMRVZCUVVVc1QwRkJZU3hGUVVGQk8wbEJRM1JFTEVsQlFVMHNTVUZCU1N4SFFVRkhMRVZCUVVVN1FVRkZaaXhKUVVGQkxFbEJRVWtzVVVGQlVTeEhRVUZITEdWQlFXVXNRMEZCUXl4UFFVRlBMRU5CUVVNN1FVRkRka01zU1VGQlFTeEpRVUZOTEZGQlFWRXNSMEZCUnl4bFFVRmxMRU5CUVVNc1QwRkJUeXhEUVVGRE8wbEJSWHBETEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hGUVVGRkxGRkJRVkVzUTBGQlF5eEZRVUZGTzFGQlEyNURMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMEZCUlRWQ0xGRkJRVUVzVVVGQlVTeEhRVUZITEZOQlFWTXNRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJReXhEUVVGRE96dEJRVVZ1UXl4SlFVRkJMRTlCUVU4c1NVRkJTVHRCUVVOaU8wRkJhVUpCTEVsQlFVRXNkMEpCUVVFc2EwSkJRVUVzVlVGQlFTeE5RVUZCTEVWQlFVRTdTVUZCYzBRc1UwRkhja1FzUTBGQlFTeDNRa0ZCUVN4RlFVRkJMRTFCUVVFc1EwRkJRVHRCUVVORExFbEJRVUVzVTBGQlFTeDNRa0ZCUVN4RFFVRlpMRXRCUVc5RExFVkJRVUU3UVVGRE9VTXNVVUZCUVN4SlFVRkJMRXRCUVVFc1IwRkJRU3hOUVVGTExFTkJRVUVzU1VGQlFTeERRVUZCTEVsQlFVRXNSVUZCUXl4TFFVRkxMRU5CUVVNc1NVRkJReXhKUVVGQk8wRkJWV1lzVVVGQlFTeExRVUZCTEVOQlFVRXNZVUZCWVN4SFFVRkhMRmxCUVVFN1dVRkRaQ3hQUVVGUExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXl4RFFVRkRMRWRCUVVjc1EwRkRiRU1zVlVGQlF5eFRRVUZsTEVWQlFVRTdRVUZEWkN4blFrRkJRU3hKUVVGTkxHTkJRV01zUjBGQlJ5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRPMmRDUVVONlF5eEpRVUZOTEdWQlFXVXNSMEZEYmtJc1ZVRkJWU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRk5CUVZNc1EwRkJRenR2UWtGRGRFTXNWMEZCVnl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTEZOQlFWTXNRMEZCUXp0QlFVVjZReXhuUWtGQlFTeFJRVU5GTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRMFVzVTBGQlV5eEZRVU5RTzBGQlEwVXNNRUpCUVVVN1FVRkRSaXd3UWtGQlJTeHhRMEZCY1VNc1JVRkZNME1zUjBGQlJ5eEZRVUZGTEdOQlFXTXNSVUZEYmtJc1QwRkJUeXhGUVVGRkxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVrc1JVRkJSU3hqUVVGakxFTkJRVU1zUlVGQlFTeGxRVUZCTEVWQlEyeERMR1ZCUVdVc1IwRkJSeXhOUVVGTkxFZEJRVWNzVTBGQlV5eEZRVUZCTzBGQlJXeEVMRzlDUVVGQkxHVkJRV1VzU1VGRFpDdzRRa0ZCVFN4VFFVRlRMRVZCUVVNc0swTkJRU3RETEVWQlFVRXNSVUZCUVN4UlFVRkJMRU5CUlhoRUxFdEJSVkFzUlVGQlJTeERRVU5JTzBGQlEwRXNiMEpCUVVFc1ZVRkJWU3hEUVVGRExGTkJRVk1zUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVTTFSRHRCUVVWV0xHRkJRVU1zUTBGRFJqdEJRVU5JTEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hSUVVGUkxFZEJRVWNzVlVGQlF5eFRRVUZwUWl4RlFVRkJMRVZCUVZjc1QwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRU3hGUVVGQk8wRkJSWFJGTEZGQlFVRXNTMEZCUVN4RFFVRkJMR3RDUVVGclFpeEhRVUZITEZsQlFVRTdRVUZEYmtJc1dVRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNSVUZCUlR0QlFVTjJRaXhUUVVGRE8xRkJOME5ETEV0QlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjN1FVRkRXQ3haUVVGQkxHTkJRV01zUlVGQlJTeHJRa0ZCYTBJc1EwRkRhRU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRVZCUTJ4Q0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVTnVRanRUUVVOR096czdRVUV3UTBnc1NVRkJRU3gzUWtGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4TlFVRk5MRWRCUVU0c1dVRkJRVHRSUVVORkxFbEJRVTBzWVVGQllTeEhRVUZITEVsQlFVa3NRMEZCUXp0QlFVTjZRaXhaUVVGQkxIVkRRVUYxUXl4RlFVRkZMRWxCUVVrN1FVRkROME1zV1VGQlFTeHRSRUZCYlVRc1JVRkRha1FzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl3eVFrRkJNa0k3UVVGRGVrTXNVMEZCUVN4RFFVRkRPMUZCUlVZc1VVRkRSU3h2UWtGQlF5eHRRa0ZCYlVJc1JVRkJRU3hGUVVOc1FpeFRRVUZUTEVWQlFVVXNZVUZCWVN4RlFVTjRRaXhqUVVGakxFVkJRVVVzU1VGQlNTeERRVUZETEd0Q1FVRnJRaXhKUVVWMFF5eEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUTBRN1MwRkZla0k3U1VGRFNDeFBRVUZETEhkQ1FVRkJPMEZCUVVRc1EwRjBSVUVzUTBGQmMwUXNVMEZCVXl4RFFYTkZPVVFzUTBGQlFUczdRVU4wUmtRc1NVRkJRU3hwUWtGQlFTeHJRa0ZCUVN4VlFVRkJMRTFCUVVFc1JVRkJRVHRKUVVFclF5eFRRVWM1UXl4RFFVRkJMR2xDUVVGQkxFVkJRVUVzVFVGQlFTeERRVUZCTzBGQlNFUXNTVUZCUVN4VFFVRkJMR2xDUVVGQkxFZEJRVUU3TzBGQlNVVXNVVUZCUVN4TFFVRkJMRU5CUVVFc1MwRkJTeXhIUVVFeVFqdEJRVU01UWl4WlFVRkJMR1ZCUVdVc1JVRkJSU3hMUVVGTE8xTkJRM1pDTzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc2JVSkJRVzFDTEVkQlFVY3NXVUZCUVR0WlFVTndRaXhKUVVGSkxGRkJRVkVzUjBGQlJ5eGxRVUZsTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU03V1VGRGJFUXNTVUZCVFN4UlFVRlJMRWRCUVVjc1pVRkJaU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRPMWxCUTNCRUxFbEJRVTBzVDBGQlR5eEhRVUZITEVWQlFVVTdXVUZGYkVJc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVWQlFVVXNVVUZCVVN4RFFVRkRMRVZCUVVVN1FVRkRia01zWjBKQlFVRXNTVUZCVFN4VFFVRlRMRWRCUVVjc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF6dEJRVU51UXl4blFrRkJRU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVU5XTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1VVRkJRU3hGUVVGQkxFVkJRVkVzUjBGQlJ5eEZRVUZGTEZOQlFWTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1UwRkJVeXhGUVVGQkxFVkJRM0pETEZWQlFWVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGRGVFUXNRMEZEVmp0QlFVVkVMR2RDUVVGQkxGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNc1EwRkJRenM3UVVGSGJrTXNXVUZCUVN4UFFVRlBMRTlCUVU4N1FVRkRhRUlzVTBGQlF6dFJRVVZFTEV0QlFXTXNRMEZCUVN4alFVRkJMRWRCUVVjc1ZVRkJReXhMUVVFeVF5eEZRVUZCTzBGQlF6TkVMRmxCUVVFc1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dEJRVU0zUXl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWjBKQlFXZENMRWRCUVVjc1dVRkJNRUlzUlVGQlFTeFJRVU16UXl4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxGRkJRVUVzUlVGQlFTeEZRVU5GTEV0QlFVc3NSVUZCUlN4UFFVRlBMRU5CUVVNc1pVRkJaU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1JVRkRhRVFzVTBGQlV5eEZRVUZETEhGRFFVRnhReXhGUVVNdlF5eFJRVUZSTEVWQlFVVXNTMEZCU1N4RFFVRkRMR05CUVdNc1JVRkZOVUlzUlVGQlFTeExRVUZKTEVOQlFVTXNiVUpCUVcxQ0xFVkJRVVVzUTBGRGNFSXNSVUZEVml4RlFVRkJPMUZCUlVRc1MwRkJZeXhEUVVGQkxHTkJRVUVzUjBGQlJ5eFZRVUZETEU5QlFXZENMRVZCUVVFN1dVRkRhRU1zU1VGQlRTeFRRVUZUTEVkQlFVY3NWVUZCVlN4RFFVTXhRaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NSVUZEWml4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGVkJRVlVzUlVGRGNrSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRMnhDTzBGQlJVUXNXVUZCUVN4UlFVTkZMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlEwVXNSMEZCUnl4RlFVRkRMRTFCUVUwc1JVRkRWaXhMUVVGTExFVkJRVVVzUlVGQlJTeFZRVUZWTEVWQlFVVXNUMEZCVHl4SFFVRkhMRk5CUVZNc1IwRkJSeXhSUVVGUkxFVkJRVVVzUlVGRGNrUXNVMEZCVXl4RlFVRkRMSGREUVVGM1F5eEZRVU5zUkN4UFFVRlBMRVZCUVVVc1MwRkJTU3hEUVVGRExHTkJRV01zUlVGQlFUdG5Ra0ZGTlVJc1MwRkJUU3hEUVVGQkxHRkJRVUVzUTBGQlFTeE5RVUZCTEVWQlFVRXNSVUZCUVN4VFFVRlRMRVZCUVVNc2IwUkJRVzlFTEVWQlFVY3NRMEZCUVR0blFrRkRka1VzUzBGQlRTeERRVUZCTEdGQlFVRXNRMEZCUVN4TlFVRkJMRVZCUVVFc1JVRkJRU3hUUVVGVExFVkJRVU1zTmtSQlFUWkVMRVZCUVVFc1JVRkRNVVVzVTBGQlV5eERRVU5NTEVOQlEwZzdRVUZGVml4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWTBGQll5eEhRVUZITEZsQlFVRXNSVUZCTUVJc1VVRkRla01zUzBGQlF5eERRVUZCTEdGQlFVRXNRMEZCUVN4M1FrRkJkMElzUlVGRGRrSkJMRTlCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVWNzUlVGQlF5eFZRVUZWTEVWQlExWXNSVUZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGQkxFVkJRMlFzVVVGQlVTeEZRVUZGTEV0QlFVa3NRMEZCUXl4UlFVRlJMRVZCUTNaQ0xGRkJRVkVzUlVGQlJTeExRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkJMRU5CUVVFc1EwRkROMElzUlVGRFNDeEZRVUZCTzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1owSkJRV2RDTEVkQlFVY3NXVUZCUVR0QlFVTlVMRmxCUVVFc1NVRkJRU3hsUVVGbExFZEJRVXNzUzBGQlNTeERRVUZETEV0QlFVc3NaMEpCUVdZN1dVRkRka0lzU1VGQlRTeE5RVUZOTEVkQlFVY3NRMEZCUXl4TFFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTTdXVUZEZEVRc1NVRkJTU3hsUVVGbExFVkJRVVU3WjBKQlEyNUNMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlNTeERRVUZETEdOQlFXTXNSVUZCUlN4RFFVRkRPenRCUVVWMlF5eFpRVUZCTEU5QlFVOHNUVUZCVFR0QlFVTm1MRk5CUVVNN1VVRkZSQ3hMUVVGUkxFTkJRVUVzVVVGQlFTeEhRVUZITEZWQlFVTXNZMEZCYzBJc1JVRkJRVHRaUVVOb1F5eExRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUlhKQ0xGbEJRVUVzU1VGQlRTeFhRVUZYTEVkQlFVY3NUMEZCVHl4RFFVRkRMR05CUVdNc1EwRkJRenRaUVVVelF5eEpRVU5GTEZWQlFWVXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGQlJTeFhRVUZYTEVOQlFVTTdaMEpCUTNoRExGZEJRVmNzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1JVRkJSU3hYUVVGWExFTkJRVU1zUlVGRGVrTTdaMEpCUTBFN08wRkJSMFlzV1VGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhYUVVGWExFTkJRVU03UVVGRGJFTXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxHTkJRV01zUjBGQlJ5eFpRVUZCTzFsQlEyWXNUMEZCUVN4TFFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRE8wRkJRMW9zWjBKQlFVRXNaVUZCWlN4RlFVRkZMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTzJGQlF6ZERMRU5CUVVNN1FVRkdSaXhUUVVWRk96czdRVUZGU2l4SlFVRkJMR2xDUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEUxQlFVMHNSMEZCVGl4WlFVRkJPMEZCUTBVc1VVRkJRU3hKUVVGSkxHZENRVUZuUWp0QlFVTndRaXhSUVVGQkxGRkJRVkVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMEZCUXpkQ0xGbEJRVUVzUzBGQlN5eFJRVUZSTzBGQlExZ3NaMEpCUVVFc1owSkJRV2RDTEVkQlFVY3NTVUZCU1N4RFFVRkRMR2RDUVVGblFpeEZRVUZGTzJkQ1FVTXhRenRCUVVOR0xGbEJRVUVzUzBGQlN5eFJRVUZSTzBGQlExZ3NaMEpCUVVFc1owSkJRV2RDTEVkQlFVY3NTVUZCU1N4RFFVRkRMR2RDUVVGblFpeEZRVUZGTzJkQ1FVTXhRenM3UVVGSFNpeFJRVUZCTEZGQlEwVXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGRFJTeFRRVUZUTEVWQlFVVXNNa2RCUVc5SExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkZMRVZCUVVFc1JVRkZka2tzWjBKQlFXZENMRU5CUTJJN1MwRkZWRHRKUVVOSUxFOUJRVU1zYVVKQlFVRTdRVUZCUkN4RFFYaElRU3hEUVVFclF5eFRRVUZUTEVOQmQwaDJSQ3hEUVVGQk96dEJRM2hIUkN4SlFVRkJMRWxCUVVFc2EwSkJRVUVzVlVGQlFTeE5RVUZCTEVWQlFVRTdTVUZCYTBNc1UwRkJLMElzUTBGQlFTeEpRVUZCTEVWQlFVRXNUVUZCUVN4RFFVRkJPMEZCUVdwRkxFbEJRVUVzVTBGQlFTeEpRVUZCTEVkQlFVRTdPMEZCYjBKRkxGRkJRVUVzUzBGQlFTeERRVUZCTEV0QlFVc3NSMEZCWXp0QlFVTnFRaXhaUVVGQkxFMUJRVTBzUlVGQlJTeEpRVUZKTzFOQlEySTdRVUYxUTBRc1VVRkJRU3hMUVVGQkxFTkJRVUVzZFVKQlFYVkNMRWRCUVVjc1dVRkJRVHRCUVVONFFpeFpRVUZCTEhGQ1FVRnhRaXhEUVVGRExGbEJRVUU3TzJkQ1FVTndRaXhKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEVsQlFVazdiMEpCUVVVN1owSkJSV2hDTEV0QlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVenR2UWtGRGFrSXNRMEZCUVN4RlFVRkJMRWxCUVVNc1MwRkJTU3hEUVVGRExGRkJRVkU3UVVGRFdpeDNRa0ZCUVN4SlFVRkpMRU5CUVVNc2EwSkJRV3RDTEVOQlEzSkNMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRFZDdzRRa0ZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eFpRVUZaTzJsRFFVTTNRaXhEUVVGQkxFVkJRVUVzUjBGQlFTeE5RVUZCTEV0QlFVa3NRMEZCUXl4TlFVRk5MRTFCUVVVc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3haUVVGWkxFMUJRVWtzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGQkxFTkJRVU03UVVGRGJrTXNPRUpCUVVVc1MwRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFpRVUZaTEVWQlF6RkNMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRMlFzUTBGQlF5eE5RVUZCTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUjBGRFNpeERRVUZETzBGQlEwd3NZVUZCUXl4RFFVRkRPMEZCUTBvc1UwRkJRenRSUVVWRUxFdEJRVmNzUTBGQlFTeFhRVUZCTEVkQlFVY3NWVUZCUXl4SlFVRlZMRVZCUVVFN08wRkJRM1pDTEZsQlFVRXNTVUZEUlN4RFFVRkRMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUE8wRkJRM2hETEdkQ1FVRkJMSEZDUVVGeFFpeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRM3BETEdsQ1FVRkRMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzI5Q1FVTjJRaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWazdRVUZEZGtJc2IwSkJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZPMjlDUVVOeVFpeGpRVUZqTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEZRVU51UXp0blFrRkRRVHM3V1VGRlJpeERRVUZCTEVWQlFVRXNSMEZCUVN4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZETEZGQlFWRXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMRWxCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVWNzU1VGQlNTeERRVUZETzBGQlF6ZENMRk5CUVVNN1VVRkZSQ3hMUVVGakxFTkJRVUVzWTBGQlFTeEhRVUZITEZWQlFVTXNTVUZCVlN4RlFVRkJPMEZCUXpGQ0xGbEJRVUVzVDBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1NVRkJTU3haUVVGWkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hEUVVGRE8wRkJRVGxFTEZOQlFUaEVPMUZCUldoRkxFdEJRV01zUTBGQlFTeGpRVUZCTEVkQlFVY3NWVUZCUXl4SlFVRlZMRVZCUVVFN1FVRkRNVUlzV1VGQlFTeFBRVUZCTEVOQlFVTXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVThzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4N1FVRkRlRU1zWjBKQlFVRXNjVUpCUVhGQ0xFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRla01zYVVKQlFVTXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVms3YjBKQlEzWkNMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldUdEJRVU4yUWl4dlFrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVTdRVUZEY2tJc2IwSkJRVUVzWTBGQll5eERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03UVVGTWJrTXNVMEZMYlVNN1VVRkZja01zUzBGQlV5eERRVUZCTEZOQlFVRXNSMEZCUnl4VlFVRkRMRWxCUVZVc1JVRkJRVHM3UVVGRGNrSXNXVUZCUVN4SlFVRk5MRTlCUVU4c1IwRkJSenRuUWtGRFpDeHJRMEZCYTBNN1FVRkRiRU1zWjBKQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFZEJRVWNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4aFFVRmhMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzVTBGQlV6dGhRVU4wUlR0QlFVVkVMRmxCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZPMEZCUXpkQ0xHZENRVUZCTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc05FTkJRVFJETEVOQlFVTTdPMEZCUnpWRUxGbEJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRk8wRkJRemRDTEdkQ1FVRkJMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zTkVOQlFUUkRMRU5CUVVNN096dEJRVWsxUkN4WlFVRkJMRWxCUTBVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFhRVUZYTzBGQlEzUkNMR2RDUVVGQkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1IwRkJSeXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGREwwUXNjVUpCUVVNc1EwRkJReXhEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRk5CUVZNc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRWRCUVVrc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eFRRVUZUTEVsQlFVa3NSVUZCUlN4RFFVRkRPMEZCUXpWRUxHOUNRVUZCTEVOQlFVTXNSVUZEU0R0QlFVTkJMR2RDUVVGQkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNORU5CUVRSRExFTkJRVU03TzBGQlJ6VkVMRmxCUVVFc1QwRkJUeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXp0QlFVTXhRaXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNaVUZCWlN4SFFVRkhMRlZCUTJoQ0xFdEJRWGxETEVWQlEzcERMRWxCUVZVc1JVRkJRVHM3V1VGRlZpeEpRVUZKTEV0QlFVc3NRMEZCUXl4SFFVRkhMRXRCUVVzc1QwRkJUeXhEUVVGRExFdEJRVXNzUlVGQlJUdG5Ra0ZETDBJc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdEJRVU4wUWl4blFrRkJRU3hMUVVGTExFTkJRVU1zUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxPenRCUVVjelFpeFpRVUZCTEVsQlEwVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhMUVVGTExFOUJRVThzUTBGQlF5eFBRVUZQTEVsQlFVa3NTMEZCU3l4RFFVRkRMRWRCUVVjc1MwRkJTeXhQUVVGUExFTkJRVU1zVTBGQlV6dG5Ra0ZEYWtVc1MwRkJTeXhEUVVGRExFMUJRVTBzV1VGQldTeFhRVUZYTzBGQlEyNURMR2RDUVVGQkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNaVUZCWlN4RlFVTTFRanRuUWtGRFFTeExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUTNSQ0xHZENRVUZCTEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1pVRkJaU3haUVVGWkxGZEJRVmM3UVVGRGFrUXNiMEpCUVVFc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eGxRVUZsTEVOQlFVTXNTMEZCU3l4RlFVRkZPenRCUVVWNFF5eFpRVUZCTEVsQlEwVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhMUVVGTExFOUJRVThzUTBGQlF5eFRRVUZUTEVsQlFVa3NTMEZCU3l4RFFVRkRMRWRCUVVjc1MwRkJTeXhQUVVGUExFTkJRVU1zVlVGQlZUdG5Ra0ZEY0VVc1MwRkJTeXhEUVVGRExFMUJRVTBzV1VGQldTeFhRVUZYTzBGQlEyNURMR2RDUVVGQkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNWMEZCVnl4RlFVTjRRanRuUWtGRFFTeExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUTNSQ0xHZENRVUZCTEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1YwRkJWeXhaUVVGWkxGZEJRVmM3UVVGRE4wTXNiMEpCUVVFc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTEVOQlFVTXNTMEZCU3l4RlFVRkZPenRaUVVkd1F5eEpRVUZKTEV0QlFVc3NRMEZCUXl4SFFVRkhMRXRCUVVzc1QwRkJUeXhEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU12UWl4blFrRkJRU3hMUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXpzN1dVRkZlRUlzUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQlF5eGxRVUZsTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGSExFdEJRVXNzUTBGQlF6dEJRVU55UXl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzVjBGQlZ5eEhRVUZITEZsQlFVRTdPMWxCUTFvc1NVRkJTU3hMUVVGTExFZEJRVmNzUlVGQlJUdFpRVU4wUWl4SlFVRk5MRTFCUVUwc1IwRkRWaXhQUVVGUExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4TFFVRkxMRkZCUVZFc1IwRkJSeXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNSMEZCUnl4SFFVRkhPMEZCUTJwRkxGbEJRVUVzU1VGQlRTeFRRVUZUTEVkQlFVY3NRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeEhRVUZKTEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1UwRkJVenRCUVVWeVJTeFpRVUZCTEVsQlFVMHNWVUZCVlN4SFFVTmtMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hKUVVGSkxFOUJRVThzUlVGQlJUdEJRVVV6UkN4WlFVRkJMRWxCUVUwc1NVRkJTU3hIUVVGSExHRkJRV0VzUTBGQlF5eFZRVUZWTEVOQlFVTTdRVUZEZEVNc1dVRkJRU3hKUVVGTkxHbENRVUZwUWl4SFFVTnlRaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWYzdaMEpCUTNSQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWMEZCVnl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVThzUlVGQlJTeERRVUZQTEVWQlFVRTdiMEpCUTNCRUxFOUJRVThzUTBGQlF5eERRVUZETEU5QlFVOHNSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJReXhQUVVGUExFVkJRVVU3UVVGRGJFTXNhVUpCUVVNc1EwRkJRenRaUVVWS0xFbEJRVTBzV1VGQldTeEhRVUZITEVWQlFVVXNSMEZCUnl4aFFVRmhMRU5CUVVNc1ZVRkJWU3hEUVVGRE8wRkJRMjVFTEZsQlFVRXNTVUZCVFN4VlFVRlZMRWRCUVVjc1dVRkJXU3hIUVVGSExGTkJRVk03UVVGRk0wTXNXVUZCUVN4TFFVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NWVUZCVlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRk8yZENRVU51UXl4SlFVRk5MRmRCUVZjc1IwRkJSeXhWUVVGVkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNSMEZCUnl4VFFVRlRMRU5CUVVNN1FVRkRia1FzWjBKQlFVRXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU03WjBKQlJYWkNMRWxCUVVrc2FVSkJRV2xDTEVWQlFVVTdRVUZEY2tJc2IwSkJRVUVzU1VGQlRTeGhRVUZoTEVkQlFVY3NhMEpCUVd0Q0xFTkJRM1JETEVsQlFVa3NSVUZEU2l4WFFVRlhMRVZCUTFnc1EwRkJReXhGUVVORUxGTkJRVk1zUlVGRFZDeHBRa0ZCYVVJc1EwRkRiRUk3UVVGRFJDeHZRa0ZCUVN4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eGhRVUZoTEVOQlFVTTdPenM3V1VGTGRrTXNTVUZCVFN4WFFVRlhMRWRCUVVjc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQmJVSXNWVUZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hGUVVGQk8yZENRVU0xUkN4SlFVRkpMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzU1VGQlNTeFZRVUZWTEVOQlFVTXNUMEZCVHl4RlFVRkZMRVZCUVVVN1FVRkRNVU1zYjBKQlFVRXNUMEZCVHl4SlFVRkpPenRCUVVWaUxHZENRVUZCTEU5QlFVOHNTVUZCU1R0QlFVTmlMR0ZCUVVNc1JVRkJSU3hMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZGV2l4WlFVRkJMRTlCUVU4c1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQmNVSXNWVUZCUXl4SlFVRkpMRVZCUVVFN1FVRkRlRU1zWjBKQlFVRXNVVUZEUlN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFbEJRVUVzUlVGQlFTeEZRVU5GTEVkQlFVY3NSVUZCUlN4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRMjVDTEU5QlFVOHNSVUZCUlN4TFFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZKTEVWQlFVVXNTVUZCU1N4RFFVRkRMRVZCUXpGRExGTkJRVk1zUlVGQlJTeExRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVNdlFpeEhRVUZITEVWQlFVVXNWVUZCUXl4RlFVRnBRaXhGUVVGQk8wRkJRM0pDTEhkQ1FVRkJMRWxCUVVrc1NVRkJTU3hMUVVGTExGZEJRVmNzUlVGQlJUdEJRVU40UWl3MFFrRkJRU3hMUVVGSkxFTkJRVU1zVVVGQlVTeEhRVUZITEVWQlFVVTdPMEZCUlhSQ0xIRkNRVUZETEVWQlEwUXNVMEZCVXl4RlFVRkZMRlZCUVVNc1MwRkJlVU1zUlVGQlFUdEJRVU51UkN4M1FrRkJRU3hMUVVGSkxFTkJRVU1zWlVGQlpTeERRVUZETEV0QlFVc3NSVUZCUlN4SlFVRkpMRU5CUVVNN1FVRkRia01zY1VKQlFVTXNSVUZEUkN4UlFVRlJMRVZCUVVVc1NVRkJTU3hMUVVGTExGZEJRVmNzUjBGQlJ5eERRVUZETEVkQlFVY3NSVUZCUlN4RlFVTjJReXhKUVVGSkxFVkJRVU1zVVVGQlVTeEZRVU5GTEdWQlFVRXNSVUZCUVN4TFFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEUxQlFVMHNSMEZCUnl4VFFVRlRMRVZCUXpsRExHVkJRVUVzUlVGQlFTeExRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFMUJRVTBzUjBGQlJ5eFRRVUZUTEVWQlJUVkVMRVZCUVVFc1ZVRkJWU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGRGVrTTdRVUZGVkN4aFFVRkRMRU5CUVVNN1FVRkRTaXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNhVUpCUVdsQ0xFZEJRVWNzV1VGQlFUdFpRVU5zUWl4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWlVGQlpTeExRVUZMTEV0QlFVc3NSVUZCUlR0QlFVTjRReXhuUWtGQlFTeFBRVUZQTEhsRFFVRkxPenRaUVVka0xGRkJRMFVzTmtKQlEwVXNVMEZCVXl4RlFVRkZMR3RGUVVOVUxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZEVkN4elFrRkJSVHRCUVVOR0xITkNRVUZGTEVWQlFVVXNRMEZEVGl4RlFVTkdMRWRCUVVjc1JVRkJSU3hWUVVGRExFMUJRWE5DTEVWQlFVRTdRVUZETVVJc2IwSkJRVUVzUzBGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5PMmxDUVVOeVFpeEZRVUZCTzBGQlJVUXNaMEpCUVVFc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCU3l4VFFVRlRMRVZCUVVNc0swSkJRU3RDTEVWQlFVRXNSVUZETTBNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFhRVUZYTEVOQlEyNUNMRU5CUTBZN1FVRkZWaXhUUVVGRE96czdRVUUxVUVRc1NVRkJRU3hOUVVGQkxFTkJRVUVzWTBGQlFTeERRVUZYTEVsQlFWa3NSVUZCUVN4alFVRkJMRVZCUVVFN1FVRkJka0lzVVVGQlFTeEhRVUZCTEVWQlFVRXNXVUZCUVR0WlFVTkZMRTlCUVU4N1FVRkRUQ3huUWtGQlFTeFRRVUZUTEVWQlFVVXNSVUZCUlR0QlFVTmlMR2RDUVVGQkxGZEJRVmNzUlVGQlJTeEpRVUZKTzBGQlEycENMR2RDUVVGQkxGZEJRVmNzUlVGQlJTeE5RVUZOTzBGQlEyNUNMR2RDUVVGQkxHVkJRV1VzUlVGQlJTeEpRVUZKTzJGQlEzUkNPMU5CUTBZN096dEJRVUZCTEV0QlFVRXNRMEZCUVR0QlFXZENSQ3hKUVVGQkxFbEJRVUVzUTBGQlFTeFRRVUZCTEVOQlFVRXNhVUpCUVdsQ0xFZEJRV3BDTEZsQlFVRTdPMUZCUlVVc1NVRkJTU3hEUVVGRExIVkNRVUYxUWl4RlFVRkZPMUZCUXpsQ0xFbEJRVWtzUTBGQlF5dzRRa0ZCT0VJc1JVRkJSVHRMUVVOMFF6dEJRVVZFTEVsQlFVRXNTVUZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3h2UWtGQmIwSXNSMEZCY0VJc1dVRkJRVHM3UVVGRFJTeFJRVUZCTEVOQlFVRXNSVUZCUVN4SFFVRkJMRWxCUVVrc1EwRkJReXhqUVVGakxFMUJRVVVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFZRVUZWTEVWQlFVVTdTMEZEYkVNN1FVRlJUeXhKUVVGQkxFbEJRVUVzUTBGQlFTeFRRVUZCTEVOQlFVRXNPRUpCUVRoQ0xFZEJRWFJETEZsQlFVRTdVVUZCUVN4SlFWZERMRXRCUVVFc1IwRkJRU3hKUVVGQk8wRkJWbE1zVVVGQlFTeEpRVUZCTEZGQlFWRXNSMEZCU3l4SlFVRkpMRU5CUVVNc1MwRkJTeXhUUVVGbU8xRkJRMmhDTEVsQlFVa3NRMEZCUXl4eFFrRkJjVUlzUlVGQlJUdFJRVVUxUWl4SlFVRkpMRkZCUVZFc1JVRkJSVHRCUVVOYUxGbEJRVUVzU1VGQlNTeERRVUZETEdOQlFXTXNSMEZCUnl4SlFVRkpMR05CUVdNc1EwRkJReXhaUVVGQk8yZENRVU4yUXl4TFFVRkpMRU5CUVVNc2NVSkJRWEZDTEVWQlFVVTdRVUZET1VJc1lVRkJReXhEUVVGRE8wRkJSVVlzV1VGQlFTeEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU03TzB0QlJYaERPMEZCUlU4c1NVRkJRU3hKUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEhGQ1FVRnhRaXhIUVVFM1FpeFpRVUZCTzFGQlEwVXNTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzU1VGQlNTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZPMWxCUTNSRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZEV2l4blFrRkJRU3hOUVVGTkxFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1dVRkJXU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1R0QlFVTndSU3hoUVVGQkxFTkJRVU03TzB0QlJVdzdRVUZ2VFVRc1NVRkJRU3hKUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEUxQlFVMHNSMEZCVGl4WlFVRkJPMUZCUVVFc1NVRTJRa01zUzBGQlFTeEhRVUZCTEVsQlFVRTdPMEZCTlVKVExGRkJRVUVzU1VGQlFTeE5RVUZOTEVkQlFVc3NTVUZCU1N4RFFVRkRMRXRCUVVzc1QwRkJaanRCUVVWa0xGRkJRVUVzVVVGRFJTeExRVU5GTEVOQlFVRXNZVUZCUVN4RFFVRkJMRXRCUVVFc1JVRkJRU3hGUVVGQkxGTkJRVk1zUlVGQlJTeHRRMEZEVkN4RFFVRkJMRTFCUVVFc1EwRkJRU3hEUVVGRExFMUJRVUVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WFFVRlhMRTFCUVVrc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4SFFVRkJMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zVjBGQlZ6dEJRVU4wUkN4clFrRkJSVHRyUWtGRFFTeEZRVUZGTEVOQlEwNHNSVUZCUVR0WlFVVkVMRWxCUVVrc1EwRkJReXhwUWtGQmFVSXNSVUZCUlR0WlFVTjZRaXhMUVVGTExFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4RlFVRkJMRk5CUVZNc1JVRkJReXgzUWtGQmQwSXNSVUZCUVR0blFrRkRja01zUzBGQlN5eERRVUZCTEdGQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVVFc1JVRkJRU3hUUVVGVExFVkJRVU1zTkVKQlFUUkNMRVZCUVVFN1FVRkRla01zYjBKQlFVRXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hKUVVGQkxFVkJRVUVzUlVGRFJTeFRRVUZUTEVWQlFVTXNOa0pCUVRaQ0xFVkJRM1pETEVkQlFVY3NSVUZCUlN4VlFVRkRMRWxCUVhOQ0xFVkJRVUU3UVVGRE1VSXNORUpCUVVFc1MwRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTzBGQlEyeENMSGxDUVVGRExFVkJRMFFzUzBGQlN5eEZRVUZGTEUxQlFVMHNSMEZCUnl4RlFVRkZMRTFCUVUwc1VVRkJRU3hGUVVGRkxFZEJRVWNzUlVGQlJTeEZRVU12UWl4SlFVRkpMRVZCUVVNc1UwRkJVeXhuUWtGRFJpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmRCUVZjc1JVRkZha01zUlVGQlFTeEpRVUZKTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUTJoQ0xFTkJRMFFzUTBGRFJpeERRVU5HTzB0QlJWUTdRVUZzVWswc1NVRkJRU3hKUVVGQkxFTkJRVUVzYTBKQlFXdENMRWRCUVVjc1ZVRkRNVUlzVlVGQmEwSXNSVUZEYkVJc1YwRkJNRUlzUlVGQlFUdEJRVVV4UWl4UlFVRkJMRkZCUTBVc1YwRkJWeXhEUVVGRExGTkJRVk1zU1VGQlNTeFZRVUZWTEVkQlFVY3NRMEZCUXl4SFFVRkhMRmRCUVZjc1EwRkJReXhaUVVGWkxFZEJRVWNzUTBGQlF5eERRVUZETzBGQlJUTkZMRXRCUVVNN1NVRTBVVWdzVDBGQlF5eEpRVUZCTzBOQlFVRXNRMEUzVW1sRExGTkJRVk1zUTBFMlVqRkRMRU5CUVVFN08wRkRjRlJFTEVsQlFVMHNNRUpCUVRCQ0xFZEJRVWNzUTBGQlF6dEJRVEpEY0VNN096czdPenM3T3pzN096czdPenM3T3pzN1FVRnRRa2M3UVVGRFNDeEpRVUZCTEVsQlFVRXNhMEpCUVVFc1ZVRkJRU3hOUVVGQkxFVkJRVUU3U1VGQmEwTXNVMEZCYjBJc1EwRkJRU3hKUVVGQkxFVkJRVUVzVFVGQlFTeERRVUZCTzBGQlEzQkVMRWxCUVVFc1UwRkJRU3hKUVVGQkxFTkJRVmtzUzBGQlowSXNSVUZCUVR0QlFVTXhRaXhSUVVGQkxFbEJRVUVzUzBGQlFTeEhRVUZCTEUxQlFVc3NRMEZCUVN4SlFVRkJMRU5CUVVFc1NVRkJRU3hGUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZETEVsQlFVRTdRVUZIWml4UlFVRkJMRXRCUVVFc1EwRkJRU3hUUVVGVExFZEJRVWNzWVVGQlFTeERRVUZCTEVWQlFVRXNSVUZCU1N4TFFVRkxMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGpRVUZqTEVOQlFVTXNSVUZCUlN4SlFVRkJMRU5CUVVFc1EwRkJRU3hIUVVGSExFTkJRVU1zV1VGQlFUdEJRVU53UkN4WlFVRkJMRTlCUVVFc1UwRkJVeXhGUVVGclFqdEJRVUV6UWl4VFFVRXlRaXhEUVVNMVFqdFJRVVZFTEV0QlFWVXNRMEZCUVN4VlFVRkJMRWRCUVVjc1ZVRkJReXhKUVVGVkxFVkJRVUU3V1VGRGRFSXNUMEZCUVN4aFFVRmhMRU5CUVVNc1NVRkJTU3hGUVVGRk8wRkJRMnhDTEdkQ1FVRkJMRTlCUVU4c1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVODdRVUZETTBJc1owSkJRVUVzVDBGQlR5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUenRCUVVNelFpeG5Ra0ZCUVN4WlFVRlpMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzBGQlEzSkRMR2RDUVVGQkxGbEJRVmtzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrN1FVRkRja01zWjBKQlFVRXNWVUZCVlN4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVlVGQlZUdGhRVU5zUXl4RFFVRkRPMEZCVGtZc1UwRk5SVHRSUVVWS0xFdEJRVlVzUTBGQlFTeFZRVUZCTEVkQlFVY3NWVUZCUXl4SlFVRlZMRVZCUVVFN1dVRkRkRUlzVDBGQlFTeGhRVUZoTEVOQlFVTXNTVUZCU1N4RlFVRkZPMEZCUTJ4Q0xHZENRVUZCTEZsQlFWa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVms3WVVGRGRFTXNRMEZCUXp0QlFVWkdMRk5CUlVVN1FVRkZTaXhSUVVGQkxFdEJRVUVzUTBGQlFTeGhRVUZoTEVkQlFVY3NXVUZCVFN4RlFVRkJMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzVDBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFZEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRU5CUVVFc1JVRkJRVHRSUVVWNlJTeExRVUZ4UWl4RFFVRkJMSEZDUVVGQkxFZEJRVWNzVlVGQlF5eFJRVUZuUWl4RlFVRkJPMEZCUTNaRExGbEJRVUVzU1VGQlRTeGxRVUZsTEVkQlFVY3NXVUZCUVRzN1FVRkRkRUlzWjBKQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzUzBGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGRkxFOUJRVThzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZGTEV0QlFVc3NSVUZCUlR0QlFVTTFReXhoUVVGRE8wRkJSVVFzV1VGQlFTeE5RVUZOTEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU1zWlVGQlpTeERRVUZETzBGQlF5OURMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeGxRVUZsTEVkQlFVY3NWVUZEYUVJc1IwRkJVeXhGUVVOVUxFdEJSWFZETEVWQlFVRTdRVUZGZGtNc1dVRkJRU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4RlFVRkZPMmRDUVVONlFpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVVzUzBGQlN5eERRVUZET3p0QlFVVnlReXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNiMEpCUVc5Q0xFZEJRVWNzVlVGQlF5eFBRVUZsTEVWQlFVVXNUMEZCWVN4RlFVRkJPenRaUVVNNVF5eEpRVUZCTEVWQlFVRXNSMEZCTWtJc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQmJrTXNTVUZCU1N4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQkxFVkJRVVVzWTBGQll5eEhRVUZCTEVWQlFVRXNRMEZCUVN4alFVRmxPMWxCUXpORExFbEJRVWtzU1VGQlNTeExRVUZMTEZOQlFWTXNTVUZCU1N4alFVRmpMRXRCUVVzc1UwRkJVeXhGUVVGRk8yZENRVU4wUkRzN1dVRkhUU3hKUVVGQkxGZEJRVmNzUjBGQlN5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RlFVRkZMR05CUVdNc1EwRkJReXhEUVVGQkxGZEJRWHBETzBGQlJXNUNMRmxCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRXRCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVDBGQlR5eERRVUZETEVWQlFVVTdaMEpCUTNoRU96dFpRVVZHTEVOQlFVRXNSVUZCUVN4SFFVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNaVUZCWlN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlJ5eFBRVUZQTEVOQlFVTTdRVUZGY2tNc1dVRkJRU3hKUVVGSkxFOUJRVThzUjBGQlJ5eFhRVUZYTEVkQlFVY3NRMEZCUXl4RlFVRkZPMmRDUVVNM1FpeExRVUZKTEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU1zWTBGQll5eEpRVUZKTEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1EwRkJRenM3UVVGREwwUXNhVUpCUVVFc1NVRkJTU3hQUVVGUExFZEJRVWNzVjBGQlZ5eEpRVUZKTEdOQlFXTXNSVUZCUlR0QlFVTnNSQ3huUWtGQlFTeExRVUZKTEVOQlFVTXNjVUpCUVhGQ0xFTkJRM2hDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1kwRkJZeXhKUVVGSkxFOUJRVThzUjBGQlJ5eFhRVUZYTEVOQlFVTXNRMEZCUXl4RFFVTnVSRHM3TzBGQlEwa3NaMEpCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhQUVVGUExFZEJRVWNzVjBGQlZ5eERRVUZETEUxQlFVVXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRlBMRTFCUVVVc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hMUVVGTExFVkJRVVU3UVVGRGFFVXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxGTkJRVk1zUjBGQlJ5eFZRVUZETEVOQlFVOHNSVUZCUlN4TFFVRlhMRVZCUVVzc1JVRkJRU3hQUVVGQkxGTkJRVk1zUTBGQlF5eERRVUZETEVWQlFVVXNTMEZCU3l4RFFVRkRMRU5CUVVFc1JVRkJRVHRCUVVWNlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4aFFVRmhMRWRCUVVjc1ZVRkJReXhEUVVGVExFVkJRVUVzUlVGQlN5eFBRVUZCTEVOQlFVTXNTMEZCU3l4UFFVRlBMRU5CUVVNc1QwRkJUeXhGUVVGRkxFTkJRVU1zUTBGQlFTeEZRVUZCTzFGQlJYWkVMRXRCUVZrc1EwRkJRU3haUVVGQkxFZEJRVWNzVlVGQlF5eERRVUZUTEVWQlFVRTdRVUZEZGtJc1dVRkJRU3hQUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVMEZCVXp0blFrRkRjRUlzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBPMEZCUTJ4Q0xHZENRVUZCTEZWQlFWVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVExFTkJRVU03UVVGR2RrUXNVMEZGZFVRN1VVRkZla1FzUzBGQlZTeERRVUZCTEZWQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRCUVVOeVFpeFpRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVE8yZENRVU53UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVTg3UVVGRGJFSXNaMEpCUVVFc1ZVRkJWU3hEUVVGRExFOUJRVThzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXp0QlFVWnlSQ3hUUVVWeFJEdFJRVVYyUkN4TFFVRlRMRU5CUVVFc1UwRkJRU3hIUVVGSExGVkJRVU1zUTBGQlV5eEZRVUZCTzBGQlEzQkNMRmxCUVVFc1QwRkJRU3hoUVVGaExFTkJRVU1zUTBGQlF5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRPMEZCUVRGRUxGTkJRVEJFTzFGQlJUVkVMRXRCUVd0Q0xFTkJRVUVzYTBKQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRCUVVOMlFpeFpRVUZCTEVsQlFVRXNTMEZEU2l4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVSS0xGbEJRVmtzYTBKQlFVRXNSVUZCUlN4VlFVRlZMR2RDUVVGQkxFVkJRVVVzV1VGQldTeHJRa0ZCUVN4RlFVRkZMRk5CUVZNc1pVRkJRU3hGUVVGRkxFOUJRVThzWVVGRGRFUTdRVUZGV2l4WlFVRkJMRWxCUTBVc1JVRkJSU3haUVVGWkxFbEJRVWtzVlVGQlZTeEpRVUZKTEZsQlFWa3NRMEZCUXp0QlFVTTNReXhuUWtGQlFTeERRVUZETEV0QlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVc1JVRkRja0k3UVVGRFFTeG5Ra0ZCUVN4UFFVRlBMRXRCUVVzN08wRkJSV1FzV1VGQlFTeEpRVUZKTEZsQlFWa3NTVUZCU1N4UFFVRlBMRVZCUVVVN1owSkJRek5DTEU5QlFVOHNZVUZCWVN4RFFVRkRMRU5CUVVNc1JVRkJSU3hMUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVWQlFVVXNUMEZCVHl4RFFVRkRPenRCUVVWNFJDeFpRVUZCTEVsQlFVa3NWVUZCVlN4SlFVRkpMRk5CUVZNc1JVRkJSVHRuUWtGRE0wSXNUMEZCVHl4aFFVRmhMRU5CUVVNc1EwRkJReXhGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN08wRkJSVEZFTEZsQlFVRXNTVUZCU1N4WlFVRlpMRWxCUVVrc1UwRkJVeXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTzJkQ1FVTjZReXhQUVVGUExHRkJRV0VzUTBGQlF5eERRVUZETEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGQlF6czdRVUZGTVVRc1dVRkJRU3hQUVVGUExFdEJRVXM3UVVGRFpDeFRRVUZETzFGQlJVUXNTMEZCY1VJc1EwRkJRU3h4UWtGQlFTeEhRVUZITEZWQlFVTXNRMEZCVXl4RlFVRkJPenRaUVVOb1F5eEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMR3RDUVVGclFpeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZPMEZCUXk5Q0xHZENRVUZCTEU5QlFVOHNTMEZCU3pzN1dVRkhVaXhKUVVGQkxFVkJRVUVzUjBGQk9FSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJkRU1zVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUVVVc1dVRkJXU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFpRVUZsTzFsQlF6bERMRWxCUVUwc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1dVRkZia01zU1VGQlNTeFpRVUZaTEVWQlFVVTdRVUZEYUVJc1owSkJRVUVzVDBGQlR5eFZRVUZWTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlFVa3NTVUZCU1N4RFFVRkRPenRCUVVWNFJDeFpRVUZCTEU5QlFVOHNWVUZCVlN4RFFVRkRMRXRCUVVzc1JVRkJSU3hUUVVGVExFdEJRVUVzU1VGQlFTeEpRVUZVTEZOQlFWTXNTMEZCUVN4TlFVRkJMRWRCUVZRc1UwRkJVeXhIUVVGSkxFbEJRVWtzUTBGQlF6dEJRVU0zUXl4VFFVRkRPMUZCUlVRc1MwRkJiVUlzUTBGQlFTeHRRa0ZCUVN4SFFVRkhMRlZCUVVNc1EwRkJVeXhGUVVGQk96dFpRVU01UWl4SlFVRkpMRU5CUVVNc1MwRkJTU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRk8wRkJReTlDTEdkQ1FVRkJMRTlCUVU4c1MwRkJTenM3UVVGSFVpeFpRVUZCTEVsQlFVRXNSVUZCZDBNc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZvUkN4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUVzUlVGQlJTeFZRVUZWTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVVFc1JVRkJSU3haUVVGWkxHdENRVUZsTzFsQlEzaEVMRWxCUVUwc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkZia01zV1VGQlFTeEpRVUZKTEZWQlFWVXNTVUZCU1N4WlFVRlpMRVZCUVVVN1FVRkRPVUlzWjBKQlFVRXNUMEZCVHl4VlFVRlZMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRWRCUVVrc1NVRkJTU3hEUVVGRE96dEJRVVY0UkN4WlFVRkJMRTlCUVU4c1ZVRkJWU3hEUVVGRExFdEJRVXNzUlVGQlJTeFBRVUZQTEV0QlFVRXNTVUZCUVN4SlFVRlFMRTlCUVU4c1MwRkJRU3hOUVVGQkxFZEJRVkFzVDBGQlR5eEhRVUZKTEVsQlFVa3NRMEZCUXp0QlFVTXpReXhUUVVGRE8xRkJSVVFzUzBGQmEwSXNRMEZCUVN4clFrRkJRU3hIUVVGSExGVkJRVU1zUTBGQlV5eEZRVUZCTzBGQlF6ZENMRmxCUVVFc1NVRkRSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NTMEZCU3l4VFFVRlRPMEZCUXpkQ0xHZENRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hKUVVGSkxFbEJRVWs3UVVGRE0wSXNaMEpCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVsQlFVa3NTVUZCU1N4RlFVTXZRanRuUWtGRFFUczdRVUZIU1N4WlFVRkJMRWxCUVVFc1MwRkRTaXhMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVVJLTEU5QlFVOHNZVUZCUVN4RlFVRkZMRTlCUVU4c1lVRkJRU3hGUVVGRkxGbEJRVmtzYTBKQlFVRXNSVUZCUlN4WlFVRlpMR3RDUVVGQkxFVkJRVVVzVlVGQlZTeG5Ra0ZEY0VRN1FVRkZXaXhaUVVGQkxFbEJRVTBzU1VGQlNTeEhRVUZITEdOQlFXTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRlRVFzV1VGQlFTeEpRVUZOTEZWQlFWVXNSMEZEWkN4RFFVRkRMRTlCUVU4c1NVRkJTU3hQUVVGUExFbEJRVWtzV1VGQldTeEpRVUZKTEZsQlFWa3NTVUZCU1N4VlFVRlZPMEZCUTJwRkxHZENRVUZCTEdOQlFXTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dEJRVVV2UWl4WlFVRkJMRkZCUTBVc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETERCQ1FVRXdRanRCUVVOMFF5eG5Ra0ZCUVN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRUdEJRVU5zUWl4blFrRkJRU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVWQlFVVXNZMEZCWXl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTTdaMEpCUTNKRUxGTkJRVk1zUTBGQlF5eEpRVUZKTEVWQlFVVXNZMEZCWXl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdaMEpCUTNoRUxFTkJRVU1zVlVGQlZUdEJRVVZtTEZOQlFVTTdVVUZGUkN4TFFVRmpMRU5CUVVFc1kwRkJRU3hIUVVGSExGVkJRVU1zU1VGQldTeEZRVUZCTzBGQlEzUkNMRmxCUVVFc1NVRkJRU3hGUVVFclF5eEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVhaRUxHVkJRV1VzUjBGQlFTeEZRVUZCTEVOQlFVRXNaVUZCUVN4RlFVRkZMRkZCUVZFc1IwRkJRU3hGUVVGQkxFTkJRVUVzVVVGQlFTeEZRVUZGTEdGQlFXRXNiVUpCUVdVN1dVRkZMMFFzU1VGQlNTeGxRVUZsTEVWQlFVVTdaMEpCUTI1Q0xFOUJRVThzWVVGQllTeGhRVUZpTEdGQlFXRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGaUxHRkJRV0VzUTBGQlJTeEpRVUZKTEVOQlFVTXNWVUZCUXl4SlFVRkpMRWxCUVVzc1QwRkJRU3hKUVVGSkxFdEJRVXNzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkJMRVZCUVVFc1EwRkJRenM3V1VGRk9VUXNUMEZCVHl4RFFVRkRMRU5CUVVNc1VVRkJVU3hKUVVGSkxFbEJRVWtzUzBGQlN5eFBRVUZQTEVOQlFVTXNVVUZCVVN4RFFVRkRPMEZCUTJwRUxGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4WFFVRlhMRWRCUVVjc1ZVRkRXaXhMUVVWMVF5eEZRVU4yUXl4RFFVRlRMRVZCUVVFN1FVRkZSQ3haUVVGQkxFbEJRVUVzU1VGQlNTeEhRVUZMTEV0QlFVa3NRMEZCUXl4TFFVRkxMRXRCUVdZN1FVRkRXaXhaUVVGQkxFbEJRVWtzU1VGQlNTeExRVUZMTEZOQlFWTXNSVUZCUlR0blFrRkRkRUk3TzBGQlJVWXNXVUZCUVN4TFFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExHTkJRV01zUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlN5eERRVUZETzBGQlF5OUVMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeGhRVUZoTEVkQlFVY3NWVUZCUXl4TFFVRXdReXhGUVVGRkxFTkJRVk1zUlVGQlFUczdRVUZETlVRc1dVRkJRU3hKUVVGQkxFZEJRVWNzUjBGQlN5eExRVUZMTEVOQlFVRXNSMEZCVmp0QlFVTk1MRmxCUVVFc1NVRkJRU3hGUVVFMFF5eEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVhCRUxFbEJRVWtzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVN4RlFVRkZMR05CUVdNc1IwRkJRU3hGUVVGQkxFTkJRVUVzWTBGQlFTeEZRVUZGTEdWQlFXVXNjVUpCUVdVN1FVRkZOVVFzV1VGQlFTeEpRVUZKTEVkQlFVY3NTMEZCU3l4UFFVRlBMRU5CUVVNc1IwRkJSeXhGUVVGRk96dG5Ra0ZGZGtJc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUczdRVUZIZUVJc1dVRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl3d1FrRkJNRUlzUlVGQlJUdG5Ra0ZETVVNc1VVRkJVU3hIUVVGSE8yOUNRVU5VTEV0QlFVc3NUMEZCVHl4RFFVRkRMRXRCUVVzN2QwSkJRMmhDTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFbEJRVWtzU1VGQlNTeEZRVUZGT3pSQ1FVTXZRanM3UVVGRlJpeDNRa0ZCUVN4TFFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETEVOQlFVTTdRVUZETVVJc2QwSkJRVUVzUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQlF5eGxRVUZsTEUxQlFVY3NTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRPM2RDUVVOcVJEdHZRa0ZEUml4TFFVRkxMRTlCUVU4c1EwRkJReXhWUVVGVk8zZENRVU55UWl4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEpRVUZKTEVsQlFVa3NSVUZCUlRzMFFrRkRia003TzBGQlJVWXNkMEpCUVVFc1MwRkJTU3hEUVVGRExHOUNRVUZ2UWl4RFFVTjJRaXhEUVVGRExFZEJRVWNzUTBGQlF5eEZRVU5NTEZGQlFWRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZEY2tNN2QwSkJRMFE3YjBKQlEwWXNTMEZCU3l4UFFVRlBMRU5CUVVNc1UwRkJVenQzUWtGRGNFSXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVmtzU1VGQlNTeEpRVUZKTEVWQlFVVTdORUpCUTI1RE96dEJRVVZHTEhkQ1FVRkJMRXRCUVVrc1EwRkJReXh2UWtGQmIwSXNRMEZEZGtJc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGRFRDeFJRVUZSTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlEzSkRPM2RDUVVORU8wRkJRMFlzYjBKQlFVRXNTMEZCU3l4UFFVRlBMRU5CUVVNc1QwRkJUeXhGUVVGRk8zZENRVU53UWl4SlFVTkZMRWxCUVVrc1MwRkJTeXhUUVVGVE8wRkJRMnhDTERSQ1FVRkJMR05CUVdNc1MwRkJTeXhUUVVGVE8wRkJRelZDTERSQ1FVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEpRVUZKTEVsQlFVa3NSVUZETDBJN05FSkJRMEU3TzNkQ1FVVk5MRWxCUVVFc1YwRkJWeXhIUVVGTExHTkJRV01zUTBGQlF5eEpRVUZKTEVWQlFVVXNZMEZCWXl4RFFVRkRMRU5CUVVFc1YwRkJla003ZDBKQlEyNUNMRWxCUVVrc1RVRkJUU3hIUVVGSExEQkNRVUV3UWp0QlFVTjJReXgzUWtGQlFTeEpRVUZKTEU5QlFVOHNSMEZCUnl4RFFVRkRMRWRCUVVjc1RVRkJUVHRCUVVWNFFpeDNRa0ZCUVN4SlFVRkpMRTlCUVU4c1IwRkJSeXhYUVVGWExFVkJRVVU3UVVGRGVrSXNORUpCUVVFc1NVRkJUU3hqUVVGakxFZEJRVWNzWTBGQll5eEhRVUZITEUxQlFVMDdORUpCUlRsRExFbEJRVWtzUTBGQlF5eEpRVUZKTEZkQlFWY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1YwRkJWeXhIUVVGSExHTkJRV01zUlVGQlJUdG5RMEZEZUVRc1RVRkJUU3hIUVVGSExHTkJRV003TzJsRFFVTnNRanRuUTBGRFRDeE5RVUZOTEVsQlFVa3NZMEZCWXpzN1FVRkhNVUlzTkVKQlFVRXNUMEZCVHl4SFFVRkhMRU5CUVVNc1IwRkJSeXhOUVVGTk96dEJRVWQwUWl4M1FrRkJRU3hMUVVGSkxFTkJRVU1zYjBKQlFXOUNMRU5CUTNaQ0xFOUJRVThzUlVGRFVDeFJRVUZSTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFVkJRVVVzVFVGQlRTeERRVUZETEVOQlF6RkRPM2RDUVVORU96dEJRVVZHTEc5Q1FVRkJMRXRCUVVzc1QwRkJUeXhEUVVGRExGTkJRVk1zUlVGQlJUdDNRa0ZEZEVJc1NVRkRSU3hKUVVGSkxFdEJRVXNzVTBGQlV6dEJRVU5zUWl3MFFrRkJRU3hqUVVGakxFdEJRVXNzVTBGQlV6dEJRVU0xUWl3MFFrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NTVUZCU1N4SlFVRkpMRVZCUXk5Q096UkNRVU5CT3p0M1FrRkZUU3hKUVVGQkxGTkJRVk1zUjBGQlN5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RlFVRkZMR05CUVdNc1EwRkJReXhEUVVGQkxGTkJRWHBETzNkQ1FVTnFRaXhKUVVGSkxFMUJRVTBzUjBGQlJ5d3dRa0ZCTUVJN1FVRkRka01zZDBKQlFVRXNTVUZCU1N4UFFVRlBMRWRCUVVjc1EwRkJReXhIUVVGSExFMUJRVTA3UVVGRmVFSXNkMEpCUVVFc1NVRkJTU3hQUVVGUExFZEJRVWNzVTBGQlV5eEZRVUZGTzBGQlEzWkNMRFJDUVVGQkxFbEJRVTBzWTBGQll5eEhRVUZITEdOQlFXTXNSMEZCUnl4TlFVRk5PelJDUVVVNVF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4VFFVRlRMRWxCUVVrc1EwRkJReXhIUVVGSExGTkJRVk1zUjBGQlJ5eGpRVUZqTEVWQlFVVTdaME5CUTNCRUxFMUJRVTBzUjBGQlJ5eGpRVUZqT3p0cFEwRkRiRUk3WjBOQlEwd3NUVUZCVFN4SlFVRkpMR05CUVdNN08wRkJSekZDTERSQ1FVRkJMRTlCUVU4c1IwRkJSeXhEUVVGRExFZEJRVWNzVFVGQlRUczdRVUZIZEVJc2QwSkJRVUVzUzBGQlNTeERRVUZETEc5Q1FVRnZRaXhEUVVOMlFpeFBRVUZQTEVWQlExQXNVVUZCVVN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVTXhRenQzUWtGRFJEczdPenRCUVV0T0xGbEJRVUVzWlVGQlpTeEpRVUZKTEdWQlFXVXNRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRNME1zVTBGQlF6dFJRVVZFTEV0QlFXbENMRU5CUVVFc2FVSkJRVUVzUjBGQlJ5eFZRVUZETEVOQlFWTXNSVUZCUVR0WlFVTjBRaXhKUVVGQkxFVkJRVUVzUjBGUlJpeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFWQmFMRWxCUVVrc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlFTeEZRVU5LTEU5QlFVOHNSMEZCUVN4RlFVRkJMRU5CUVVFc1QwRkJRU3hGUVVOUUxFOUJRVThzWVVGQlFTeEZRVU5RTEZsQlFWa3NSMEZCUVN4RlFVRkJMRU5CUVVFc1dVRkJRU3hGUVVOYUxGbEJRVmtzUjBGQlFTeEZRVUZCTEVOQlFVRXNXVUZCUVN4RlFVTmFMRlZCUVZVc1IwRkJRU3hGUVVGQkxFTkJRVUVzVlVGQlFTeEZRVU5XTEdGQlFXRXNSMEZCUVN4RlFVRkJMRU5CUVVFc1lVRkRSRHRCUVVWa0xGbEJRVUVzVDBGQlR5eEpRVUZKTEVOQlExUXNOa0pCUVRaQ0xFVkJRemRDTEhsQ1FVRXdRaXhEUVVGQkxFMUJRVUVzUTBGQlFTeERRVUZETEVOQlFVVXNSVUZETjBJc1NVRkJTU3hIUVVGSExHRkJRV0VzUzBGQlFTeEpRVUZCTEVsQlFXSXNZVUZCWVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRV0lzWVVGQllTeERRVUZITEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eFRRVUZUTEVWQlEzQkVPMEZCUTBVc1owSkJRVUVzZFVOQlFYVkRMRVZCUVVVc1MwRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eERRVUZETEVOQlFVTTdaMEpCUXk5RUxIVkRRVUYxUXl4RlFVTnlReXhEUVVGRExFOUJRVThzU1VGQlNTeFBRVUZQTEVsQlFVa3NXVUZCV1N4SlFVRkpMRmxCUVZrc1NVRkJTU3hWUVVGVk8wRkJRMnBGTEc5Q1FVRkJMR05CUVdNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTXZRaXhuUWtGQlFTeG5SRUZCWjBRc1JVRkRPVU1zUzBGQlNTeERRVUZETEd0Q1FVRnJRaXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0xUWl4blFrRkJRU3d3UTBGQk1FTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5vUlN4blFrRkJRU3gzUTBGQmQwTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0xUkN4blFrRkJRU3gxUTBGQmRVTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU14UkN4blFrRkJRU3hwUkVGQmFVUXNSVUZETDBNc1MwRkJTU3hEUVVGRExHdENRVUZyUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNMVFpeG5Ra0ZCUVN4dlJFRkJiMFFzUlVGRGJFUXNTMEZCU1N4RFFVRkRMSEZDUVVGeFFpeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTXZRaXhuUWtGQlFTeHJSRUZCYTBRc1JVRkRhRVFzUzBGQlNTeERRVUZETEcxQ1FVRnRRaXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0zUWl4blFrRkJRU3h2UTBGQmIwTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0xUkN4aFFVRkJMRU5CUTBZN1FVRkRTQ3hUUVVGRE8xRkJSVVFzUzBGQlpTeERRVUZCTEdWQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRCUVVNeFFpeFpRVUZCTEVsQlEwVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXd3UWtGQk1FSTdRVUZEY2tNc1owSkJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRWxCUVVrc1NVRkJTU3hGUVVNdlFqdEJRVU5CTEdkQ1FVRkJMRTlCUVU4c1NVRkJTVHM3V1VGRllpeEpRVUZOTEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlFVTTdXVUZEY0VRc1NVRkJUU3g1UWtGQmVVSXNSMEZCUnl4alFVRmpMRU5CUVVNc1EwRkJReXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZGTDBRc1dVRkJRU3hQUVVGUExFTkJRVU1zUzBGQlN5eFhRVUZYTEVsQlFVa3NRMEZCUXl4NVFrRkJlVUlzUjBGQlJ5eEhRVUZITEVkQlFVY3NTVUZCU1R0QlFVTnlSU3hUUVVGRE8xRkJSVVFzUzBGQll5eERRVUZCTEdOQlFVRXNSMEZCUnl4VlFVRkRMRU5CUVZNc1JVRkJRVHRaUVVONlFpeFBRVUZQTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2FVSkJRV2xDTEVkQlFVY3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhwUWtGQmFVSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRE8wRkJRek5GTEZOQlFVTTdPenRCUVVWRUxFbEJRVUVzU1VGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4TlFVRk5MRWRCUVU0c1dVRkJRVHRSUVVGQkxFbEJlVVZETEV0QlFVRXNSMEZCUVN4SlFVRkJPMUZCZUVWRExFbEJRVTBzVTBGQlV5eEhRVUZITEVWQlFVVTdRVUZEWkN4UlFVRkJMRWxCUVVFc1MwRkRTaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVVJLTEVsQlFVa3NSMEZCUVN4RlFVRkJMRU5CUVVFc1NVRkJRU3hGUVVGRkxHTkJRV01zUjBGQlFTeEZRVUZCTEVOQlFVRXNZMEZCUVN4RlFVRkZMR2RDUVVGblFpeEhRVUZCTEVWQlFVRXNRMEZCUVN4blFrRkJRU3hGUVVGRkxHZENRVUZuUWl4elFrRkRjRVE3UVVGRFdpeFJRVUZCTEVsQlFVa3NTVUZCU1N4TFFVRkxMRk5CUVZNc1JVRkJSVHRCUVVOMFFpeFpRVUZCTEU5QlFVOHNTVUZCU1RzN1FVRkZVQ3hSUVVGQkxFbEJRVUVzUlVGQk5rSXNSMEZCUVN4alFVRmpMRU5CUVVNc1NVRkJTU3hGUVVGRkxHTkJRV01zUTBGQlF5eEZRVUV2UkN4WFFVRlhMRWRCUVVFc1JVRkJRU3hEUVVGQkxGZEJRVUVzUlVGQlJTeFRRVUZUTEdWQlFYbERPMmREUVVVNVJDeERRVUZETEVWQlFVRTdRVUZEVWl4WlFVRkJMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRMW9zUzBGRFJTeERRVUZCTEdGQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVVFc1JVRkJRU3hIUVVGSExFVkJRVVVzVFVGQlN5eERRVUZCTEZOQlFWTXNRMEZCUXl4RFFVRkRMRWRCUVVjc1YwRkJWeXhEUVVGRExFVkJRM0JETEU5QlFVOHNSVUZCUlN4VlFVRkRMRXRCUVVzc1JVRkJRVHRCUVVOaUxHOUNRVUZCTEV0QlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU0xUWl4cFFrRkJReXhGUVVORUxGTkJRVk1zUlVGQlJTeFZRVUZETEV0QlFVc3NSVUZCUVR0QlFVTm1MRzlDUVVGQkxFbEJRVWtzWTBGQll5eERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZPM2RDUVVONlFpeExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUTNSQ0xIZENRVUZCTEV0QlFVc3NRMEZCUXl4SFFVRkhMRWRCUVVjc1QwRkJUeXhEUVVGRExFdEJRVXM3TzBGQlJ6TkNMRzlDUVVGQkxFdEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJRenRwUWtGRE4wSXNSVUZEUkN4UlFVRlJMRVZCUVVVc1RVRkJUU3hEUVVGRExFMUJRVXNzUTBGQlFTeGxRVUZsTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkRla01zVTBGQlV5eEZRVUZGTEUxQlFVc3NRMEZCUVN4cFFrRkJhVUlzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZEY0VNc1dVRkJXU3hGUVVOV0xFTkJRVU1zVFVGQlFTeERRVUZMTEV0QlFVc3NRMEZCUXp0QlFVTldMSE5DUVVGRkxGVkJRVU1zUzBGQlN5eEZRVUZCTEVWQlFVc3NUMEZCUVN4blFrRkJaMElzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVFN2MwSkJRM0pETEZOQlFWTXNSVUZGWml4alFVRmpMRVZCUTFvc1RVRkJTeXhEUVVGQkxFdEJRVXNzUTBGQlF6dEJRVU5VTEhOQ1FVRkZMRlZCUVVNc1MwRkJTeXhGUVVGQkxFVkJRVXNzVDBGQlFTeG5Ra0ZCWjBJc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVRTdjMEpCUTNKRExGTkJRVk1zUlVGRlppeFpRVUZaTEVWQlExWXNRMEZCUXl4TlFVRkJMRU5CUVVzc1MwRkJTeXhEUVVGRE8wRkJRMVlzYzBKQlFVVXNWVUZCUXl4TFFVRkxMRVZCUVVFc1JVRkJTeXhQUVVGQkxHZENRVUZuUWl4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlFUdHpRa0ZEY2tNc1UwRkJVeXhGUVVWbUxHTkJRV01zUlVGRFdpeE5RVUZMTEVOQlFVRXNTMEZCU3l4RFFVRkRPMEZCUTFRc2MwSkJRVVVzVlVGQlF5eExRVUZMTEVWQlFVRXNSVUZCU3l4UFFVRkJMR2RDUVVGblFpeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRVHRCUVVOMlF5eHpRa0ZCUlN4VFFVRlRMRVZCUldZc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGRFVTeGpRVUZCTEVWQlFVRXNUVUZCUVN4RFFVRkxMR0ZCUVdFc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eE5RVUZOTEVkQlFVY3NVMEZCVXl4RlFVVjJSQ3hGUVVGQkxFMUJRVUVzUTBGQlN5eGpRVUZqTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUTI1Q0xFTkJRMUE3T3p0UlFURkRTQ3hMUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEZkQlFWY3NSVUZCUlN4RFFVRkRMRWxCUVVrc1UwRkJVeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZCTzI5Q1FVRndReXhEUVVGRExFTkJRVUU3UVVFeVExUTdRVUZGUkN4UlFVRkJMRkZCUTBVc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCU3l4VFFVRlRMRVZCUVVNc2QwSkJRWGRDTEVWQlFVRTdXVUZEY2tNc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCUVN4VFFVRlRMRVZCUVVNc1owTkJRV2RETEVWQlF6RkRMRmxCUVZrc1JVRkRWaXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZEVml4elFrRkJSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzNOQ1FVTllMRk5CUVZNc1JVRkZaaXhqUVVGakxFVkJRMW9zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTlVMSE5DUVVGRkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZEWWl4elFrRkJSU3hUUVVGVExFVkJRVUVzUlVGSFpDeFRRVUZUTEVOQlEwNHNRMEZEUmp0TFFVVlVPMGxCUTBnc1QwRkJReXhKUVVGQk8wRkJRVVFzUTBFeFdrRXNRMEZCYTBNc1UwRkJVeXhEUVRCYU1VTXNRMEZCUVRzN1FVTjZaVVFzVTBGQlV5eGhRVUZoTEVOQlEzQkNMRWxCUVZrc1JVRkRXaXhSUVVGblFpeEZRVU5vUWl4UFFVRmpMRVZCUTJRc1QwRkJZeXhGUVVGQk8wbEJSV1FzU1VGQlRTeEpRVUZKTEVkQlFXRXNSVUZCUlR0QlFVTjZRaXhKUVVGQkxFdEJRVXNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzVVVGQlVTeEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVONlF5eFJRVUZCTEVsQlFVMHNUMEZCVHl4SFFVRkhMRWxCUVVrc1IwRkJSeXhSUVVGUkxFZEJRVWNzUTBGQlF6dFJRVU51UXl4SlFVRkpMRk5CUVZNc1IwRkJSeXhKUVVGSk8xRkJSWEJDTEVsQlFVa3NUMEZCVHl4RlFVRkZPMEZCUTFnc1dVRkJRU3hUUVVGVExFZEJRVWNzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRTlCUVU4N08wRkJSM3BETEZGQlFVRXNTVUZCU1N4UFFVRlBMRWxCUVVrc1UwRkJVeXhGUVVGRk8wRkJRM2hDTEZsQlFVRXNVMEZCVXl4SFFVRkhMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeFBRVUZQT3p0UlFVZDZReXhKUVVGSkxGTkJRVk1zUlVGQlJUdEJRVU5pTEZsQlFVRXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU03T3p0QlFVbDBRaXhKUVVGQkxFOUJRVThzU1VGQlNUdEJRVU5pTzBGQlowSkJMRWxCUVVFc2JVSkJRVUVzYTBKQlFVRXNWVUZCUVN4TlFVRkJMRVZCUVVFN1NVRkJhVVFzVTBGSGFFUXNRMEZCUVN4dFFrRkJRU3hGUVVGQkxFMUJRVUVzUTBGQlFUdEJRVU5ETEVsQlFVRXNVMEZCUVN4dFFrRkJRU3hEUVVGWkxFdEJRU3RDTEVWQlFVRTdRVUZEZWtNc1VVRkJRU3hKUVVGQkxFdEJRVUVzUjBGQlFTeE5RVUZMTEVOQlFVRXNTVUZCUVN4RFFVRkJMRWxCUVVFc1JVRkJReXhMUVVGTExFTkJRVU1zU1VGQlF5eEpRVUZCTzBGQmRVTm1MRkZCUVVFc1MwRkJRU3hEUVVGQkxHRkJRV0VzUjBGQlJ5eFpRVUZCTzBGQlEyUXNXVUZCUVN4SlFVRk5MRmxCUVZrc1IwRkJSeXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVazdXVUZEY0VNc1NVRkJUU3hQUVVGUExFZEJRVWNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExGVkJRVU1zU1VGQlNTeEZRVUZCTEVWQlFVc3NVVUZEYWtRc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZEUlN4VFFVRlRMRVZCUTFBc1dVRkJXU3hMUVVGTE8wRkJRMllzYzBKQlFVVTdRVUZEUml4elFrRkJSU3dyUWtGQkswSXNSVUZGY2tNc1IwRkJSeXhGUVVGRkxFbEJRVWtzUlVGRFZDeFBRVUZQTEVWQlFVVXNTMEZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RlFVTjRRaXhsUVVGQkxFVkJRVUVzV1VGQldTeExRVUZMTEVsQlFVa3NSMEZCUnl4TlFVRk5MRWRCUVVjc1UwRkJVeXhGUVVGQk8wRkJSWGhFTEdkQ1FVRkJMRmxCUVZrc1MwRkJTeXhKUVVGSkxFbEJRM0JDTEV0QlFVMHNRMEZCUVN4aFFVRkJMRU5CUVVFc1RVRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZETEhsRFFVRjVReXhoUVVGVExFdEJSV3hGTEVWQlFVVXNRMEZEU0R0QlFVTkJMR2RDUVVGQkxFbEJRVWtzUTBGRFJDeEZRV3BDTWtNc1JVRnJRbXhFTEVOQlFVTTdXVUZGUml4SlFVRk5MRTlCUVU4c1IwRkJSeXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4SlFVRkpPMWxCUTNaRkxFbEJRVTBzVDBGQlR5eEhRVUZITEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhIUVVGSExFOUJRVThzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFbEJRVWs3V1VGRmRrVXNTVUZCU1N4RFFVRkRMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGRExFbEJRVWtzUlVGQlN5eEZRVUZCTEU5QlFVRXNTVUZCU1N4TFFVRkxMRTlCUVU4c1EwRkJhRUlzUlVGQlowSXNRMEZCUXl4RlFVRkZPMEZCUTNSRkxHZENRVUZCTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUTJJc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCUVN4VFFVRlRMRVZCUVVNc0swSkJRU3RDTEVWQlEzcERMRWRCUVVjc1JVRkJSU3hWUVVGVkxFVkJRMllzVDBGQlR5eEZRVUZGTEV0QlFVa3NRMEZCUXl4alFVRmpMRVZCUVVFN1FVRkZOVUlzYjBKQlFVRXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hIUVVGQkxFVkJRVUVzUlVGQlJ5eFRRVUZUTEVWQlFVTXNLMGRCUVN0SExFVkJRVWNzUTBGQlFTeERRVU16U0N4RFFVTlFPenRaUVVkSUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNWVUZCUXl4SlFVRkpMRVZCUVVzc1JVRkJRU3hQUVVGQkxFbEJRVWtzUzBGQlN5eFBRVUZQTEVOQlFXaENMRVZCUVdkQ0xFTkJRVU1zUlVGQlJUdEJRVU4wUlN4blFrRkJRU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVU5XTEV0QlEwVXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZETEN0Q1FVRXJRaXhGUVVONlF5eEhRVUZITEVWQlFVVXNWVUZCVlN4RlFVTm1MRTlCUVU4c1JVRkJSU3hMUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZCTzBGQlJUVkNMRzlDUVVGQkxFdEJRVUVzUTBGQlFTeGhRVUZCTEVOQlFVRXNSMEZCUVN4RlFVRkJMRVZCUVVjc1UwRkJVeXhGUVVGRExDdEhRVUVyUnl4RlFVRkhMRU5CUVVFc1EwRkRNMGdzUTBGRFVEczdRVUZIU0N4WlFVRkJMRTlCUVU4c1QwRkJUenRCUVVOb1FpeFRRVUZETzFGQlJVUXNTMEZCVVN4RFFVRkJMRkZCUVVFc1IwRkJSeXhWUVVGRExFbEJRVmtzUlVGQlFUdEJRVU4wUWl4WlFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTXpRaXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNhMEpCUVd0Q0xFZEJRVWNzV1VGQlFUdEJRVU51UWl4WlFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeEZRVUZGTzBGQlEzWkNMRk5CUVVNN1VVRkZSQ3hMUVVGVkxFTkJRVUVzVlVGQlFTeEhRVUZITEZWQlFVTXNUVUZCWXl4RlFVRkJPMWxCUXpGQ0xFbEJRVTBzUzBGQlN5eEhRVUZITEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eFZRVUZWTEVsQlFVa3NSVUZCUVR0blFrRkRia1FzVDBGQlR5eEpRVUZKTEVkQlFVY3NUVUZCVFR0QlFVTjBRaXhoUVVGRExFTkJRVU03V1VGRlJpeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMEZCUTFvc1owSkJRVUVzVTBGQlV5eEZRVUZGTEV0QlFVczdRVUZEYWtJc1lVRkJRU3hEUVVGRE8wRkJRMG9zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR05CUVdNc1IwRkJSeXhaUVVGQk8wRkJRMllzV1VGQlFTeFBRVUZQTEV0QlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRek5DTEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hqUVVGakxFZEJRVWNzV1VGQlFUdEJRVU5tTEZsQlFVRXNUMEZCVHl4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFVkJRVVVzUTBGQlF6dEJRVU0xUWl4VFFVRkRPMUZCYkVoVExFbEJRVUVzYzBKQlFYTkNMRWRCUVRaQ0xFdEJRVXNzUTBGQlFTeHpRa0ZCYkVNc1JVRkJSU3h6UWtGQmMwSXNSMEZCU3l4TFFVRkxMRU5CUVVFc2MwSkJRVlk3UVVGRGRFUXNVVUZCUVN4SlFVRk5MRkZCUVZFc1IwRkRXaXh6UWtGQmMwSXNTMEZCU3l4elFrRkJjMElzUjBGQlJ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRPMUZCUlRkRUxFdEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVYzdXVUZEV0N4VFFVRlRMRVZCUVVVc1lVRkJZU3hEUVVOMFFpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1JVRkRaaXhSUVVGUkxFVkJRMUlzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRVZCUTJ4Q0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVTnVRanRUUVVOR08wRkJRMFFzVVVGQlFTeExRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRk5CUVZNc1JVRkJhMEk3T3p0QlFVZG9SQ3hKUVVGQkxHMUNRVUZCTEVOQlFVRXNVMEZCUVN4RFFVRkJMR2xDUVVGcFFpeEhRVUZxUWl4WlFVRkJPMEZCUTBVc1VVRkJRU3hKUVVGTkxHVkJRV1VzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTlCUVU4N1VVRkZhRVFzU1VGQlNTeGxRVUZsTEVWQlFVVTdPMEZCUlc1Q0xGbEJRVUVzU1VGQlRTeDFRa0ZCZFVJc1IwRkJSeXhsUVVGbExFTkJRVU03YTBKQlF6VkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zWlVGQlpTeERRVUZETEZGQlFWRTdhMEpCUTI1RExFbEJRVWs3V1VGRFVpeEpRVUZOTEc5Q1FVRnZRaXhIUVVGSE8wRkJRek5DTEd0Q1FVRkZMSFZDUVVGMVFpeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkRMRTlCUVU4c1JVRkJTeXhGUVVGQkxFOUJRVUVzVDBGQlR5eERRVUZETEZsQlFWa3NRMEZCUVN4RlFVRkJPMnRDUVVNNVJDeEpRVUZKTzBGQlJWSXNXVUZCUVN4bFFVRmxMRU5CUVVNc1UwRkJVenRuUWtGRGRrSXNiMEpCUVc5Q0xFbEJRVWtzYjBKQlFXOUNMRmxCUVZrN2MwSkJRM0JFTEc5Q1FVRnZRaXhEUVVGRExGTkJRVk03UVVGRE9VSXNkMEpCUVVFc1EwRkJReXh2UWtGQmIwSXNRMEZCUXl4WlFVRlpMRWRCUVVjc1pVRkJaU3hEUVVGRExGbEJRVms3TkVKQlF5OUVPMEZCUTBvc2MwSkJRVVVzUTBGQlF5eGxRVUZsTEVOQlFVTXNXVUZCV1N4SFFVRkhMR1ZCUVdVc1EwRkJReXhaUVVGWkxFbEJRVWtzUTBGQlF6czdTMEZGTVVVN1FVRnJSa1FzU1VGQlFTeHRRa0ZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3hOUVVGTkxFZEJRVTRzV1VGQlFUdFJRVU5GTEVsQlFVMHNZVUZCWVN4SFFVRkhMRWxCUVVrc1EwRkJRenRCUVVONlFpeFpRVUZCTEdsRFFVRnBReXhGUVVGRkxFbEJRVWs3UVVGRGRrTXNXVUZCUVN3MlEwRkJOa01zUlVGRE0wTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXh6UWtGQmMwSTdRVUZEY0VNc1UwRkJRU3hEUVVGRE8xRkJSVVlzVVVGRFJTeExRVUZETEVOQlFVRXNZVUZCUVN4RFFVRkJMRzFDUVVGdFFpeEZRVU5zUWl4RlFVRkJMRk5CUVZNc1JVRkJSU3hoUVVGaExFVkJRM2hDTEZsQlFWa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVNNVFpeGpRVUZqTEVWQlFVVXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeEZRVUZCTEVWQlJYUkRMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGRFJEdExRVVY2UWp0SlFVTklMRTlCUVVNc2JVSkJRVUU3UVVGQlJDeERRVE5KUVN4RFFVRnBSQ3hUUVVGVExFTkJNa2w2UkN4RFFVRkJPenRCUTNCTFJDeEpRVUZCTEZsQlFVRXNhMEpCUVVFc1ZVRkJRU3hOUVVGQkxFVkJRVUU3U1VGQk1FTXNVMEZIZWtNc1EwRkJRU3haUVVGQkxFVkJRVUVzVFVGQlFTeERRVUZCTzBGQlNFUXNTVUZCUVN4VFFVRkJMRmxCUVVFc1IwRkJRVHM3UVVGSlJTeFJRVUZCTEV0QlFVRXNRMEZCUVN4TFFVRkxMRWRCUVhOQ08wRkJRM3BDTEZsQlFVRXNaVUZCWlN4RlFVRkZMRXRCUVVzN1UwRkRka0k3UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4dFFrRkJiVUlzUjBGQlJ5eFpRVUZCTzBGQlEzQkNMRmxCUVVFc1NVRkJUU3hQUVVGUExFZEJRVmNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0clFrRkRMMElzVDBGQlR5eERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUenRyUWtGRE1VSXNTVUZCU1R0QlFVTlNMRmxCUVVFc1NVRkJUU3hQUVVGUExFZEJRVmNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0clFrRkRMMElzVDBGQlR5eERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUenRyUWtGRE1VSXNTVUZCU1R0WlFVVlNMRWxCUVUwc1QwRkJUeXhIUVVGNVFpeEZRVUZGTzBGQlEzaERMRmxCUVVFc1MwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eFBRVUZQTEVWQlFVVXNRMEZCUXl4SlFVRkpMRTlCUVU4c1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU4yUXl4blFrRkJRU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVU5XTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1VVRkJRU3hGUVVGQkxFVkJRVkVzUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGQkxFVkJRM0pDTEVOQlFVTXNRMEZEU3l4RFFVTldPenRCUVVWSUxGbEJRVUVzVDBGQlR5eFBRVUZQTzBGQlEyaENMRk5CUVVNN1VVRkZSQ3hMUVVGakxFTkJRVUVzWTBGQlFTeEhRVUZITEZWQlFVTXNTMEZCTWtNc1JVRkJRVHRCUVVNelJDeFpRVUZCTEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1FVRkROME1zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR2RDUVVGblFpeEhRVUZITEZsQlFVRXNSVUZCTUVJc1VVRkRNME1zUzBGRFJTeERRVUZCTEdGQlFVRXNRMEZCUVN4UlFVRkJMRVZCUVVFc1JVRkJRU3hMUVVGTExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUTNSQ0xGTkJRVk1zUlVGQlF5d3JRa0ZCSzBJc1JVRkRla01zVVVGQlVTeEZRVUZGTEV0QlFVa3NRMEZCUXl4alFVRmpMRVZCUlRWQ0xFVkJRVUVzUzBGQlNTeERRVUZETEcxQ1FVRnRRaXhGUVVGRkxFTkJRM0JDTEVWQlExWXNSVUZCUVR0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxHTkJRV01zUjBGQlJ5eFZRVUZETEU5QlFXZENMRVZCUVVFc1JVRkJlVUlzVVVGRGVrUXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGRFJTeEhRVUZITEVWQlFVTXNUVUZCVFN4RlFVTldMRXRCUVVzc1JVRkJSU3hGUVVGRkxGVkJRVlVzUlVGQlJTeFBRVUZQTEVkQlFVY3NVMEZCVXl4SFFVRkhMRkZCUVZFc1JVRkJSU3hGUVVOeVJDeFRRVUZUTEVWQlFVTXNhME5CUVd0RExFVkJRelZETEU5QlFVOHNSVUZCUlN4VlFVRkRMRXRCUVhWRExFVkJRVUU3UVVGREwwTXNaMEpCUVVFc1QwRkJRU3hMUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEV0QlFVc3NRMEZCUXp0aFFVRkJMRVZCUVVFN1dVRkhOVUlzUzBGQlRTeERRVUZCTEdGQlFVRXNRMEZCUVN4TlFVRkJMRVZCUVVFc1JVRkJRU3hUUVVGVExFVkJRVU1zT0VOQlFUaERMRVZCUVVjc1EwRkJRVHRCUVVOcVJTeFpRVUZCTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1RVRkJRU3hGUVVGQkxFVkJRVTBzVTBGQlV5eEZRVUZETEdsRVFVRnBSQ3hGUVVGQkxFVkJRemxFTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVOWUxFTkJRMGdzUlVGRFVDeEZRVUZCTzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGSExGbEJRVUVzUlVGQk1FSXNVVUZEZWtNc1MwRkJReXhEUVVGQkxHRkJRVUVzUTBGQlFTeHRRa0ZCYlVJc1JVRkRiRUpCTEU5QlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVjc1JVRkJReXhWUVVGVkxFVkJRMVlzUlVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkJMRVZCUTJRc1VVRkJVU3hGUVVGRkxFdEJRVWtzUTBGQlF5eFJRVUZSTEVWQlEzWkNMRkZCUVZFc1JVRkJSU3hMUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZCTEVOQlFVRXNRMEZETjBJc1JVRkRTQ3hGUVVGQk8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNaMEpCUVdkQ0xFZEJRVWNzV1VGQlFUdEJRVU5VTEZsQlFVRXNTVUZCUVN4bFFVRmxMRWRCUVVzc1MwRkJTU3hEUVVGRExFdEJRVXNzWjBKQlFXWTdXVUZEZGtJc1NVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eExRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVU03V1VGRGRFUXNTVUZCU1N4bFFVRmxMRVZCUVVVN1owSkJRMjVDTEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTU3hEUVVGRExHTkJRV01zUlVGQlJTeERRVUZET3p0QlFVVjJReXhaUVVGQkxFOUJRVThzVFVGQlRUdEJRVU5tTEZOQlFVTTdVVUZGUkN4TFFVRlJMRU5CUVVFc1VVRkJRU3hIUVVGSExGVkJRVU1zU1VGQldTeEZRVUZCTzFsQlEzUkNMRXRCUVVrc1EwRkJReXhqUVVGakxFVkJRVVU3UVVGRGNrSXNXVUZCUVN4SlFVRkpMRWxCUVVrc1MwRkJTeXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVazdaMEpCUVVVN1FVRkRPVUlzV1VGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGRE0wSXNVMEZCUXp0UlFVVkVMRXRCUVdNc1EwRkJRU3hqUVVGQkxFZEJRVWNzVlVGQlF5eExRVUYzUXl4RlFVRkJPMWxCUTNoRUxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlExZzdRVUZEUlN4blFrRkJRU3hsUVVGbExFVkJRVVVzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR1ZCUVdVN1lVRkROME1zUlVGRFJDeFpRVUZCTzBGQlEwVXNaMEpCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEd0Q1FVRnJRaXhGUVVGRk8yOUNRVU5xUXl4TFFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRVVVzUzBGQlN5eERRVUZET3p0QlFVVnFSQ3hoUVVGRExFTkJRMFk3UVVGRFNDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1owSkJRV2RDTEVkQlFVY3NWVUZEYWtJc1NVRkJWU3hGUVVOV0xFdEJRWGRETEVWQlFVRTdPMWxCUlhoRExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4UlFVRlJMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZITEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNN1dVRkROVUlzUzBGQlNTeERRVUZETEU5QlFVOHNSVUZCUlR0QlFVTm9RaXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNVVUZCVVN4SFFVRkhMRlZCUVVNc1NVRkJWU3hGUVVGRkxFdEJRWGRETEVWQlFVRTdPMWxCUXpsRUxFTkJRVUVzUlVGQlFTeEhRVUZCTEVOQlFVRXNSVUZCUVN4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRVU1zVVVGQlVTeE5RVUZCTEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVN4RFFVRkJMRVZCUVVFc1JVRkJSeXhKUVVGSkxFVkJRVVVzUzBGQlN5eERRVUZETzBGQlEzQkRMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeFBRVUZQTEVkQlFVY3NXVUZCUVRzN1dVRkRVaXhEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRExFOUJRVThzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEVsQlFVRXNRMEZCUVN4RlFVRkJMRVZCUVVjc1NVRkJTU3hEUVVGRE8wRkJRelZDTEZOQlFVTTdPenRCUVVWRUxFbEJRVUVzV1VGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4TlFVRk5MRWRCUVU0c1dVRkJRVHRCUVVORkxGRkJRVUVzU1VGQlNTeG5Ra0ZCWjBJN1FVRkRjRUlzVVVGQlFTeFJRVUZSTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXVHRCUVVNM1FpeFpRVUZCTEV0QlFVc3NVVUZCVVR0QlFVTllMR2RDUVVGQkxHZENRVUZuUWl4SFFVRkhMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNSVUZCUlR0blFrRkRNVU03UVVGRFJpeFpRVUZCTEV0QlFVc3NVVUZCVVR0QlFVTllMR2RDUVVGQkxHZENRVUZuUWl4SFFVRkhMRWxCUVVrc1EwRkJReXhuUWtGQlowSXNSVUZCUlR0blFrRkRNVU03TzBGQlIwb3NVVUZCUVN4UlFVTkZMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlEwVXNVMEZCVXl4RlFVRkZMQ3RHUVVGM1JpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1EwRkJSU3hGUVVGQkxFVkJSVE5JTEdkQ1FVRm5RaXhEUVVOaU8wdEJSVlE3U1VGRFNDeFBRVUZETEZsQlFVRTdRVUZCUkN4RFFXcEpRU3hEUVVFd1F5eFRRVUZUTEVOQmFVbHNSQ3hEUVVGQk96dEJRek5GUkN4SlFVRk5MSGxDUVVGNVFpeEhRVUZITzBsQlEyaERMQ3RDUVVFclFqdEpRVU12UWl4blEwRkJaME03U1VGRGFFTXNjVU5CUVhGRE8wTkJRM1JETzBGQlJVUXNTVUZCVFN4blFrRkJaMElzUjBGQlJ5eFZRVUZETEU5QlFYVkNMRVZCUVVFN1FVRkRMME1zU1VGQlFTeEpRVUZOTEZWQlFWVXNSMEZCUnl4RFFVRkRMRTlCUVU4c1EwRkJReXhUUVVGVExFbEJRVWtzUlVGQlJTeEZRVUZGTEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRla1FzU1VGQlFTeFBRVUZQTEhsQ1FVRjVRaXhEUVVGRExFbEJRVWtzUTBGRGJrTXNWVUZCUXl4aFFVRmhMRWxCUVVzc1QwRkJRU3hWUVVGVkxFTkJRVU1zVDBGQlR5eERRVUZETEdGQlFXRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJkRU1zUlVGQmMwTXNRMEZETVVRN1FVRkRTQ3hEUVVGRE8wRkJiVWxFTEVsQlFVRXNVVUZCUVN4clFrRkJRU3hWUVVGQkxFMUJRVUVzUlVGQlFUdEpRVUZ6UXl4VFFVRjFReXhEUVVGQkxGRkJRVUVzUlVGQlFTeE5RVUZCTEVOQlFVRTdRVUZqTTBVc1NVRkJRU3hUUVVGQkxGRkJRVUVzUTBGQldTeExRVUZ2UWl4RlFVRkJPMEZCUXpsQ0xGRkJRVUVzU1VGQlFTeExRVUZCTEVkQlFVRXNUVUZCU3l4RFFVRkJMRWxCUVVFc1EwRkJRU3hKUVVGQkxFVkJRVU1zUzBGQlN5eERRVUZETEVsQlFVTXNTVUZCUVR0UlFXOUVaaXhMUVVGakxFTkJRVUVzWTBGQlFTeEhRVUZ2UXl4VFFVRlRPMUZCU1RORUxFdEJRV3RDTEVOQlFVRXNhMEpCUVVFc1IwRkJSeXhWUVVGRExFdEJRV2xDTEVWQlFVRTdRVUZEY2tNc1dVRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdOQlFXTXNRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRiRU1zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR3RDUVVGclFpeEhRVUZITEZsQlFVRTdRVUZEYmtJc1dVRkJRU3hQUVVGUExFdEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNUMEZCVHp0QlFVTnNReXhUUVVGRE8xRkJSVVFzUzBGQmJVSXNRMEZCUVN4dFFrRkJRU3hIUVVGSExGVkJRVU1zUzBGQmRVTXNSVUZCUVRzN1FVRkROVVFzV1VGQlFTeEpRVUZKTEdkQ1FVRm5RaXhEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlR0blFrRkRiRU1zUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQlF5eGxRVUZsTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGSExFdEJRVXNzUTBGQlF6czdRVUZGZGtNc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdGQlFXRXNSMEZCUnl4WlFVRkJPMEZCUTFJc1dVRkJRU3hKUVVGQkxFVkJRWGxETEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJha1FzV1VGQldTeEhRVUZCTEVWQlFVRXNRMEZCUVN4WlFVRkJMRVZCUVVVc1VVRkJVU3hIUVVGQkxFVkJRVUVzUTBGQlFTeFJRVUZCTEVWQlFVVXNWVUZCVlN4blFrRkJaVHRaUVVONlJDeEpRVUZOTEU5QlFVOHNSMEZCUnl4dFFrRkJiVUlzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMWxCUXk5RExFbEJRVTBzVDBGQlR5eEhRVUZITEcxQ1FVRnRRaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZETDBNc1dVRkJRU3hKUVVGTkxFOUJRVThzUjBGQlJ5eFBRVUZQTEVWQlFVVTdRVUZEZWtJc1dVRkJRU3hKUVVGTkxGZEJRVmNzUjBGQlJ5eFZRVUZWTEVsQlFVa3NVVUZCVVN4SlFVRkpMRmxCUVZrN1dVRkRNVVFzU1VGQlNTeFhRVUZYTEVWQlFVVTdRVUZEWml4blFrRkJRU3hQUVVGUExGZEJRVmM3TzJsQ1FVTmlPMmRDUVVOTUxFbEJRVWtzVDBGQlR5eEpRVUZKTEZGQlFWRXNRMEZCUXl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFVkJRVVU3UVVGRGVrTXNiMEpCUVVFc1QwRkJUeXhQUVVGUE96dHhRa0ZEVkN4SlFVRkpMRTlCUVU4c1NVRkJTU3hQUVVGUExFTkJRVU1zVDBGQlR5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RlFVRkZPMEZCUXk5RExHOUNRVUZCTEU5QlFVOHNUMEZCVHpzN08wRkJSMnhDTEZsQlFVRXNUMEZCVHl4UFFVRlBPMEZCUTJoQ0xGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4aFFVRmhMRWRCUVVjc1dVRkJRVHRCUVVOa0xGbEJRVUVzUzBGQlNTeERRVUZETEZGQlFWRXNRMEZEV0N4VlFVRkRMRVZCUVZFc1JVRkJRVHRCUVVGT0xHZENRVUZCTEVsQlFVRXNTVUZCU1N4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQk8wRkJRVThzWjBKQlFVRXNVVUZCUXp0QlFVTmlMRzlDUVVGQkxFbEJRVWtzUlVGQlJTeFRRVUZUTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenRwUWtGRGVrSTdRVUZHWVN4aFFVVmFMRVZCUTBZc1dVRkJUU3hGUVVGQkxFOUJRVUVzUzBGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVhaRExFVkJRWFZETEVOQlF6bERPMEZCUTBnc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdGQlFXRXNSMEZCUnl4WlFVRkJPMEZCUTJRc1dVRkJRU3hMUVVGSkxFTkJRVU1zVVVGQlVTeERRVU5ZTEZWQlFVTXNSVUZCVVN4RlFVRkJPMEZCUVU0c1owSkJRVUVzU1VGQlFTeEpRVUZKTEVkQlFVRXNSVUZCUVN4RFFVRkJMRWxCUVVFN1FVRkJUeXhuUWtGQlFTeFJRVUZETzBGQlEySXNiMEpCUVVFc1NVRkJTU3hGUVVGRkxGTkJRVk1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPMmxDUVVONlFqdEJRVVpoTEdGQlJWb3NSVUZEUml4WlFVRk5MRVZCUVVFc1QwRkJRU3hMUVVGSkxFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCZGtNc1JVRkJkVU1zUTBGRE9VTTdRVUZEU0N4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWTBGQll5eEhRVUZITEZWQlEyWXNSMEZCVXl4RlFVTlVMRXRCUlhWRExFVkJRM1pETEdWQlFYZENMRVZCUVVFN1dVRkZlRUlzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1IwRkJSeXhGUVVGRkxFdEJRVXNzUlVGQlJTeGxRVUZsTEVOQlFVTTdRVUZEYUVRc1dVRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUTBGQlF5eEhRVUZITEVOQlFVTTdRVUZETDBRc1UwRkJRenRSUVVWRUxFdEJRVzFDTEVOQlFVRXNiVUpCUVVFc1IwRkJSeXhWUVVGRExFZEJRVk1zUlVGQlFUdFpRVU01UWl4TFFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFVkJRVVVzWVVGQllTeEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTNKRExGbEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTEVOQlFVTXNSMEZCUnl4RFFVRkRPMEZCUXk5RUxGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4eFFrRkJjVUlzUjBGQlJ5eFpRVUZCTzFsQlEzUkNMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeGhRVUZoTEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNN1dVRkRNME1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4cFFrRkJhVUlzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR2xDUVVGcFFpeEZRVUZGTzBGQlEyaEZMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeHZRa0ZCYjBJc1IwRkJSeXhWUVVOeVFpeExRVUYxUXl4RlFVTjJReXhKUVVGWkxFVkJRVUU3UVVGRldpeFpRVUZCTEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSU3hoUVVGaExFVkJRVVVzVDBGQlR5eERRVUZETEU5QlFVOHNSVUZCUlN4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU03UVVGRE1VUXNXVUZCUVN4RFFVRkRMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eG5Ra0ZCWjBJc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdkQ1FVRm5RaXhEUVVGRExFdEJRVXNzUlVGQlJTeEpRVUZKTEVOQlFVTTdRVUZETTBVc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEc5Q1FVRnZRaXhIUVVGSExGVkJRM0pDTEV0QlFYVkRMRVZCUTNaRExFbEJRVmtzUlVGQlFUdEJRVVZhTEZsQlFVRXNRMEZCUXl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWjBKQlFXZENMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhMUVVGTExFVkJRVVVzU1VGQlNTeERRVUZETzBGQlF6TkZMRk5CUVVNN1VVRkZSQ3hMUVVGblFpeERRVUZCTEdkQ1FVRkJMRWRCUVVjc1ZVRkJReXhKUVVGVkxFVkJRVUU3TzFsQlF6VkNMRU5CUVVFc1JVRkJRU3hIUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1dVRkJXU3hOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlFTeERRVUZCTEVWQlFVRXNSVUZCUnl4SlFVRkpMRU5CUVVNN1dVRkRMMElzUzBGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4RlFVRkZMSFZDUVVGMVFpeEZRVUZGTEVsQlFVa3NSVUZCUlN4RFFVRkRPMEZCUTJoRUxGbEJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR3RDUVVGclFpeEZRVUZGTzBGQlEycERMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJRenRuUWtGRGVrSXNRMEZCUVN4RlFVRkJMRWRCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZCUXl4UFFVRlBMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQkxFTkJRVUVzUlVGQlFTeEZRVUZITEVsQlFVa3NRMEZCUXpzN1FVRkhOVUlzV1VGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR1ZCUVdVc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVXNRMEZCUXl4SlFVRkpMRU5CUVVNN1FVRkRhRVVzVTBGQlF6dFJRVVZFTEV0QlFXdERMRU5CUVVFc2EwTkJRVUVzUjBGQlJ5eFZRVUZETEVsQlFWVXNSVUZCUVR0WlFVTTVReXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVU3UVVGRGNFTXNaMEpCUVVFc1QwRkJUeXhKUVVGSk96dEJRVWRpTEZsQlFVRXNTVUZCVFN4WlFVRlpMRWRCUVVjc1pVRkJaU3hEUVVGRExFbEJRVWtzUTBGQlF6dEJRVU14UXl4WlFVRkJMRWxCUVUwc1ZVRkJWU3hIUVVGSExHRkJRV0VzUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZGZEVNc1NVRkJUU3hUUVVGVExFZEJRVWNzWjBKQlFXZENMRU5CUVVNc1ZVRkJWU3hGUVVGRkxGbEJRVmtzUTBGQlF6dFpRVVUxUkN4SlFVRkpMR1ZCUVdVc1IwRkJSeXhKUVVGSk8wRkJSVEZDTEZsQlFVRXNTMEZCU3l4SlFVRkpMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVVzVFVGQlRTeEpRVUZKTEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1JVRkJSVHRuUWtGRGJFUXNTVUZCVFN4alFVRmpMRWRCUVVjc1QwRkJUeXhEUVVGRExGbEJRVmtzUlVGQlJTeE5RVUZOTEVOQlFVTTdaMEpCUlhCRUxFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNZMEZCWXl4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdHZRa0ZET1VNc1pVRkJaU3hIUVVGSExHTkJRV003YjBKQlEyaERPenM3UVVGSlNpeFpRVUZCTEU5QlFVOHNaVUZCWlR0QlFVTjRRaXhUUVVGRE8xRkJSVVFzUzBGQmFVSXNRMEZCUVN4cFFrRkJRU3hIUVVGSExGVkJRVU1zU1VGQlZTeEZRVUZCT3p0WlFVTTNRaXhKUVVGTkxIVkNRVUYxUWl4SFFVTXpRaXhEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNhME5CUVd0RExFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVa3NTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeEhRVUZCTEVsQlFVazdRVUZGZGtRc1dVRkJRU3hMUVVGSkxFTkJRVU1zZFVKQlFYVkNMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTTdRVUZEY2tRc1dVRkJRU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVU3UVVGRGFrTXNaMEpCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNkVUpCUVhWQ0xFTkJRVU03WjBKQlF6VkRMRU5CUVVFc1JVRkJRU3hIUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1QwRkJUeXhOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlFTeERRVUZCTEVWQlFVRXNSVUZCUnl4SlFVRkpMRU5CUVVNN08xbEJSelZDTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaVHRCUVVONFFpeG5Ra0ZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUTBGQlF5eDFRa0ZCZFVJc1EwRkJRenRCUVVOMlJDeFRRVUZETzFGQlJVUXNTMEZCZFVJc1EwRkJRU3gxUWtGQlFTeEhRVUZITEZWQlFVTXNTVUZCVlN4RlFVRkJPenRaUVVOdVF5eERRVUZCTEVWQlFVRXNSMEZCUVN4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZETEdGQlFXRXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMRWxCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVWNzU1VGQlNTeERRVUZETzFsQlEyaERMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeDFRa0ZCZFVJc1JVRkJSU3hKUVVGSkxFVkJRVVVzUTBGQlF6dEJRVU5zUkN4VFFVRkRPMUZCUlVRc1MwRkJjVUlzUTBGQlFTeHhRa0ZCUVN4SFFVRkhMRlZCUVVNc1NVRkJWU3hGUVVGQk8wRkJRMnBETEZsQlFVRXNTMEZCU1N4RFFVRkRMR2RDUVVGblFpeERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTXpRaXhaUVVGQkxFdEJRVWtzUTBGQlF5eHBRa0ZCYVVJc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGRE9VSXNVMEZCUXp0UlFVVkVMRXRCUVZVc1EwRkJRU3hWUVVGQkxFZEJRVWNzVlVGQlF5eEpRVUZaTEVWQlFVRTdRVUZEZUVJc1dVRkJRU3hMUVVGSkxFTkJRVU1zVVVGQlVTeERRVU5ZTEZWQlFVTXNSVUZCVVN4RlFVRkJPMEZCUVU0c1owSkJRVUVzU1VGQlFTeEpRVUZKTEVkQlFVRXNSVUZCUVN4RFFVRkJMRWxCUVVFN1FVRkJUeXhuUWtGQlFTeFJRVUZETzI5Q1FVTmlMRWxCUVVrc1JVRkJSU3hQUVVGUExFTkJRVU1zU1VGQlNTeEZRVUZGTEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRwUWtGRGJFTTdRVUZHWVN4aFFVVmFMRVZCUTBZc1dVRkJUU3hGUVVGQkxFOUJRVUVzUzBGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVhSRExFVkJRWE5ETEVOQlF6ZERPMEZCUTBnc1UwRkJRenRSUVVWRUxFdEJRVmNzUTBGQlFTeFhRVUZCTEVkQlFVY3NWVUZCUXl4TFFVRmhMRVZCUVVFN1FVRkRNVUlzV1VGQlFTeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVTllMRlZCUVVNc1JVRkJVU3hGUVVGQk8wRkJRVTRzWjBKQlFVRXNTVUZCUVN4SlFVRkpMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUU3UVVGQlR5eG5Ra0ZCUVN4UlFVRkRPMjlDUVVOaUxFbEJRVWtzUlVGQlJTeFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dHBRa0ZEY0VNN1FVRkdZU3hoUVVWYUxFVkJRMFlzV1VGQlRTeEZRVUZCTEU5QlFVRXNTMEZCU1N4RFFVRkRMR2xDUVVGcFFpeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRWFpETEVWQlFYVkRMRU5CUXpsRE8wRkJRMGdzVTBGQlF6dFJRVVZFTEV0QlFXVXNRMEZCUVN4bFFVRkJMRWRCUVVjc1ZVRkJReXhUUVVGbExFVkJRVUU3UVVGRGFFTXNXVUZCUVN4TFFVRkpMRU5CUVVNc1VVRkJVU3hEUVVOWUxGVkJRVU1zUlVGQlVTeEZRVUZCTzBGQlFVNHNaMEpCUVVFc1NVRkJRU3hKUVVGSkxFZEJRVUVzUlVGQlFTeERRVUZCTEVsQlFVRTdRVUZCVHl4blFrRkJRU3hSUVVGRE8wRkJRMklzYjBKQlFVRXNTVUZCU1N4RlFVRkZMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhGUVVGRkxFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0cFFrRkRka1U3UVVGR1lTeGhRVVZhTEVWQlEwWXNXVUZCVFN4RlFVRkJMRTlCUVVFc1MwRkJTU3hEUVVGRExIRkNRVUZ4UWl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFUTkRMRVZCUVRKRExFTkJRMnhFTzBGQlEwZ3NVMEZCUXp0UlFVVkVMRXRCUVUwc1EwRkJRU3hOUVVGQkxFZEJRVWNzVlVGQlF5eEpRVUUwUWl4RlFVRkJPMEZCUVRWQ0xGbEJRVUVzU1VGQlFTeEpRVUZCTEV0QlFVRXNUVUZCUVN4RlFVRkJMRVZCUVVFc1NVRkJZU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkJPMEZCUTNCRExGbEJRVUVzU1VGQlRTeFhRVUZYTEVkQlFVY3NZMEZCWXl4RFFVTm9ReXhKUVVGSkxFVkJRMG9zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUTJwQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaMEpCUVdkQ0xFTkJRelZDTzFsQlJVUXNTVUZCVFN4UlFVRlJMRWRCUVhsQ0xFVkJRVVU3UVVGRGVrTXNXVUZCUVN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWlVGQlpTeEZRVUZGTzJkQ1FVTTVRaXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVU5ZTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRVXNzUjBGQlJ5eEZRVUZETEVkQlFVY3NSVUZCUXl4VFFVRlRMRVZCUVVNc05FSkJRVFJDTEVWQlEyaEVMRVZCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVsQlFVa3NSMEZCUnl4RFFVTjRRaXhEUVVOUU96dFpRVVZJTEU5QlFVOHNVVUZCVVN4RFFVRkRMRTFCUVUwc1EwRkRjRUlzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zVlVGQlF5eE5RVUZOTEVWQlFVRTdaMEpCUXk5Q0xFbEJRVTBzUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4WFFVRlhMRVZCUVVVc1RVRkJUU3hEUVVGRE8wRkJRM2hETEdkQ1FVRkJMRWxCUVUwc1YwRkJWeXhIUVVGSExFdEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNSMEZCUnl4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETzBGQlJUbEVMR2RDUVVGQkxFbEJRVTBzWjBKQlFXZENMRWRCUVVjc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dHpRa0ZEYUVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhIUVVGSE8zTkNRVU12UWl4VFFVRlRPMEZCUldJc1owSkJRVUVzVVVGRFJTeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkJMRXRCUVVFc1JVRkJRU3hGUVVORkxFZEJRVWNzUlVGQlJTeE5RVUZOTEVWQlFVRXNXVUZCUVN4RlFVTkRMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVVzVFVGQlRTeEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRM1JFTEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc05FSkJRVFJDTEVWQlFVVXNaMEpCUVdkQ0xFTkJRVU1zUlVGQlFTeEZRVVU1UkN4WFFVRlhMRU5CUTFJN1lVRkZWQ3hEUVVGRExFTkJRMGc3UVVGRFNDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1lVRkJZU3hIUVVGSExGVkJRVU1zUjBGQlV5eEZRVUZGTEUxQlFXVXNSVUZCUVR0QlFVTjZReXhaUVVGQkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4aFFVRmhMRVZCUVVVN1FVRkROVUlzWjBKQlFVRXNUMEZCVHl3eVFrRkJNa0lzUTBGQlF5eEhRVUZITEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFVkJRVVVzVFVGQlRTeERRVUZET3p0QlFVVXpSU3haUVVGQkxFOUJRVThzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTm9RaXhyUWtGQlJTeDFRa0ZCZFVJc1EwRkJReXhIUVVGSExFVkJRVVVzVFVGQlRUdEJRVU55UXl4clFrRkJSU3h4UWtGQmNVSXNRMEZCUXl4SFFVRkhMRVZCUVVVc1RVRkJUU3hEUVVGRE8wRkJRM2hETEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3haUVVGWkxFZEJRVWNzV1VGQlFUdEJRVU5pTEZsQlFVRXNTMEZCU1N4RFFVRkRMRkZCUVZFc1EwRkRXQ3hWUVVGRExFVkJRVkVzUlVGQlFUczdRVUZCVGl4blFrRkJRU3hKUVVGQkxFbEJRVWtzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVR0QlFVRlBMR2RDUVVGQkxGRkJRVU03YjBKQlEySXNTVUZCU1N4RlFVRkZMRkZCUVZFc1EwRkRXaXhKUVVGSkxFVkJRMG9zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTlVMREpDUVVGSExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1IwRkRlRUlzVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXl4alFVRmpPekJDUVVOMFF5eERRVUZETEVOQlEwNDdRVUZEUml4cFFrRkJRVHRCUVVGRExHRkJRVUVzUlVGRFJpeFpRVUZOTEVWQlFVRXNUMEZCUVN4TFFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQmRFTXNSVUZCYzBNc1EwRkROME03UVVGRFNDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc2EwSkJRV3RDTEVkQlFVY3NXVUZCUVR0WlFVTnVRaXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNZVUZCWVN4RlFVRkZMRk5CUVZNc1JVRkJSU3hEUVVGRE8wRkJRemRETEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3h2UWtGQmIwSXNSMEZCUnl4WlFVRkJPenRCUVVOeVFpeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhyUWtGQmEwSXNSVUZCUlR0blFrRkRha003TzBGQlIwWXNXVUZCUVN4SlFVRk5MRmRCUVZjc1IwRkRaaXhEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmRCUVZjc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRWRCUVVrc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eFhRVUZYTzBGQlF6ZEVMRmxCUVVFc1NVRkJUU3huUWtGQlowSXNSMEZCUnl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8ydENRVU5vUXl4WFFVRlhMRWRCUVVjN2EwSkJRMlFzUTBGQlF6dFpRVU5NTEVsQlFVMHNaVUZCWlN4SFFVRkhMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4TlFVRkpMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNSMEZCUVN4blFrRkJaMEk3UVVGRGRFVXNXVUZCUVN4SlFVRk5MR0ZCUVdFc1IwRkJSeXhUUVVGVExFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUVVVc1pVRkJaU3hEUVVGRE8wRkJSV3BGTEZsQlFVRXNTVUZCU1N4dFFrRkJiVUk3V1VGRGRrSXNVVUZCVVN4SlFVRkpPMEZCUTFZc1owSkJRVUVzUzBGQlN5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFqdEJRVU5xUXl4dlFrRkJRU3h0UWtGQmJVSXNSMEZCUnl4clFrRkJhMElzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzI5Q1FVTnlSVHRCUVVOR0xHZENRVUZCTEV0QlFVc3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGak8wRkJRelZDTEc5Q1FVRkJMRzFDUVVGdFFpeEhRVUZITEcxQ1FVRnRRaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03YjBKQlEzUkZPMEZCUTBZc1owSkJRVUVzUzBGQlN5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMSEZDUVVGeFFqdEJRVU51UXl4dlFrRkJRU3h0UWtGQmJVSXNSMEZCUnl4eFFrRkJjVUlzUTBGRGVrTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRMllzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZEV0R0dlFrRkRSRHRCUVVOR0xHZENRVUZCTzI5Q1FVTkZMRzFDUVVGdFFpeEhRVUZITEcxQ1FVRnRRaXhEUVVGRExHRkJRV0VzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMjlDUVVOd1JUczdRVUZIU2l4WlFVRkJMRWxCUTBVc1EwRkJReXhGUVVORExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2QwSkJRWGRDTEcxRFFVTnVReXhSUVVGUkxFTkJRVU1zV1VGQldTeERRVUZETEhkQ1FVRjNRaXhEUVVNdlF6dEJRVU5ETEdkQ1FVRkJMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5d3lRa0ZCTWtJN1FVRkRka01zWjBKQlFVRXNiVUpCUVcxQ08wRkJRM0pDTEdkQ1FVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYTBKQlFXdENMRVZCUXpkQ08yZENRVU5CT3p0QlFVZEdMRmxCUVVFc1NVRkJUU3hYUVVGWExFZEJRVWM3WjBKQlEyeENMRzFEUVVGdFF6dG5Ra0ZEYmtNc05rTkJRVFpETzJGQlF6bERPMEZCUlVRc1dVRkJRU3hKUVVGTkxFOUJRVThzUjBGQlJ6dG5Ra0ZEWkN3NFFrRkJPRUk3WjBKQlF6bENMSGREUVVGM1F6dGhRVU42UXp0QlFVVkVMRmxCUVVFc1NVRkJTU3haUVVGWkxFZEJRMlFzUzBGQlNTeERRVUZETEdGQlFXRTdRVUZGY0VJc1dVRkJRU3hKUVVORkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNiVUpCUVcxQ08yZENRVU01UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExIRkNRVUZ4UWp0QlFVTm9ReXhuUWtGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR05CUVdNc1JVRkRla0k3UVVGRFFTeG5Ra0ZCUVN4WlFVRlpMRWRCUVVjc1MwRkJTU3hEUVVGRExGbEJRVms3TzFsQlIyeERMRWxCUVVrc2JVSkJRVzFDTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXd5UWtGQk1rSXNSVUZCUlR0QlFVTnFSU3huUWtGQlFTeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMR3RFUVVGclJDeERRVUZETzJkQ1FVTm9SU3haUVVGWkxFZEJRVWNzVTBGQlV6czdRVUZITVVJc1dVRkJRU3hKUVVGTkxGTkJRVk1zUjBGRFlpeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFqdG5Ra0ZET1VJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHhRa0ZCY1VJN1FVRkRhRU1zWjBKQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGak8xbEJSWEpDTEVsQlFVRXNSVUZCUVN4SFFVZEdMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJSbG9zUlVGQmVVVXNSMEZCUVN4RlFVRkJMRU5CUVVFc2QwSkJRVUVzUlVGQmVrVXNkMEpCUVhkQ0xFZEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExIZENRVUYzUWl4SFFVRkJMRVZCUVVFc1JVRkRla1VzUlVGQmRVVXNSMEZCUVN4RlFVRkJMRU5CUVVFc2RVSkJRVUVzUlVGQmRrVXNkVUpCUVhWQ0xFZEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExIVkNRVUYxUWl4SFFVRkJMRVZCUXpORU8wRkJSVklzV1VGQlFTeEpRVUZCTEVWQlQwWXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVU1YUxFVkJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVRXNjMEpCUlc5Q0xFVkJSbkJDTEhOQ1FVRnpRaXhIUVVGSExFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUMEZCVHl4M1FrRkJkMElzUzBGQlN6dEJRVU16UkN4clFrRkJSVHRyUWtGRFFTeG5Ra0ZCWjBJc1IwRkJRU3hGUVVGQkxFVkJRM0JDTEVWQlFVRXNSMEZCUVN4RlFVRkJMRU5CUVVFc2NVSkJSVzFDTEVWQlJtNUNMSEZDUVVGeFFpeEhRVUZITEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1QwRkJUeXgxUWtGQmRVSXNTMEZCU3p0QlFVTjZSQ3hyUWtGQlJUdHJRa0ZEUVN4bFFVRmxMRWRCUVVFc1JVRkRVRHRCUVVWa0xGbEJRVUVzVVVGRFJTeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkJMRkZCUVVFc1JVRkJRU3hGUVVORkxFbEJRVWtzUlVGQlF5eFJRVUZSTEVWQlEySXNVMEZCVXl4RlFVRkZMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlF6VkNMRTlCUVU4c1JVRkJSU3haUVVGWkxFVkJRM0pDTEZOQlFWTXNSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUlVGQlFTeFpRVUZCTEVWQlEzcENMRk5CUVZNc1IwRkJSeXh4UWtGQmNVSXNSMEZCUnl4elFrRkJjMElzUlVGQlFUdG5Ra0ZGZEVVc1MwRkJUU3hEUVVGQkxHRkJRVUVzUTBGQlFTeE5RVUZCTEVWQlFVRXNSVUZCUVN4VFFVRlRMRVZCUVVVc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZEYmtNc1JVRkJRU3hUUVVGVExFZEJRVWNzZFVKQlFYVkNMRWRCUVVjc2QwSkJRWGRDTEVOQlF6RkVMRU5CUTBFN1FVRkZZaXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNXVUZCV1N4SFFVRkhMRmxCUVVFN1FVRkRZaXhaUVVGQkxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlExZ3NWVUZCUXl4RlFVRlJMRVZCUVVFN08wRkJRVTRzWjBKQlFVRXNTVUZCUVN4SlFVRkpMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUU3UVVGQlR5eG5Ra0ZCUVN4UlFVRkRPMjlDUVVOaUxFbEJRVWtzUlVGQlJTeFJRVUZSTEVOQlExb3NTVUZCU1N4RlFVTktMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRFZDd3lRa0ZCUnl4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdOQlFXTXNUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlEzaENMRkZCUVZFc1EwRkJReXhaUVVGWkxFTkJRVU1zWTBGQll6c3dRa0ZEZEVNc1EwRkJReXhEUVVOT08wRkJRMFlzYVVKQlFVRTdRVUZCUXl4aFFVRkJMRVZCUTBZc1dVRkJUU3hGUVVGQkxFOUJRVUVzUzBGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVhSRExFVkJRWE5ETEVOQlF6ZERPMEZCUTBnc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdkQ1FVRm5RaXhIUVVGSExGbEJRVUU3TzBGQlEycENMRmxCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEd0Q1FVRnJRaXhGUVVGRk8yZENRVU5xUXpzN1FVRkhSaXhaUVVGQkxFbEJRVWtzYlVKQlFUUkNPMWxCUTJoRExGRkJRVkVzU1VGQlNUdEJRVU5XTEdkQ1FVRkJMRXRCUVVzc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHRRa0ZCYlVJN1FVRkRha01zYjBKQlFVRXNiVUpCUVcxQ0xFZEJRVWNzYVVKQlFXbENMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenR2UWtGRGNFVTdRVUZEUml4blFrRkJRU3hMUVVGTExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXp0QlFVTTFRaXh2UWtGQlFTeHRRa0ZCYlVJc1IwRkJSeXhyUWtGQmEwSXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMjlDUVVOeVJUdEJRVU5HTEdkQ1FVRkJMRXRCUVVzc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHhRa0ZCY1VJN1FVRkRia01zYjBKQlFVRXNiVUpCUVcxQ0xFZEJRVWNzYjBKQlFXOUNMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenR2UWtGRGRrVTdRVUZEUml4blFrRkJRVHRCUVVORkxHOUNRVUZCTEcxQ1FVRnRRaXhIUVVGSExHdENRVUZyUWl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN2IwSkJRM0pGT3p0QlFVZEtMRmxCUVVFc1NVRkRSU3hEUVVGRExFVkJRME1zUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXgzUWtGQmQwSXNiVU5CUTI1RExGRkJRVkVzUTBGQlF5eFpRVUZaTEVOQlFVTXNkMEpCUVhkQ0xFTkJReTlETzBGQlEwTXNaMEpCUVVFc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETERKQ1FVRXlRanRCUVVOMlF5eG5Ra0ZCUVN4dFFrRkJiVUk3UVVGRGNrSXNaMEpCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHJRa0ZCYTBJc1JVRkROMEk3WjBKQlEwRTdPMEZCUjBZc1dVRkJRU3hKUVVGTkxFOUJRVThzUjBGQllUdG5Ra0ZEZUVJc09FSkJRVGhDTzJkQ1FVTTVRaXh2UTBGQmIwTTdZVUZEY2tNN1FVRkRSQ3haUVVGQkxFbEJRVTBzVjBGQlZ5eEhRVUZITzJkQ1FVTnNRaXh0UTBGQmJVTTdaMEpCUTI1RExIbERRVUY1UXp0aFFVTXhRenRCUVVORUxGbEJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR05CUVdNc1JVRkJSVHRCUVVNM1FpeG5Ra0ZCUVN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExDdERRVUVyUXl4RFFVRkRPenRCUVVVdlJDeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhYUVVGWExFVkJRVVU3UVVGRE1VSXNaMEpCUVVFc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eDFSRUZCZFVRc1EwRkJRenM3UVVGSGRrVXNXVUZCUVN4SlFVRkpMRmxCUVZrc1IwRkRaQ3hMUVVGSkxFTkJRVU1zWVVGQllUdEJRVVZ3UWl4WlFVRkJMRWxCUTBVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHRRa0ZCYlVJN1owSkJRemxDTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2NVSkJRWEZDTzBGQlEyaERMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVTjZRanRCUVVOQkxHZENRVUZCTEZsQlFWa3NSMEZCUnl4TFFVRkpMRU5CUVVNc1dVRkJXVHM3V1VGSGJFTXNTVUZCU1N4dFFrRkJiVUlzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMREpDUVVFeVFpeEZRVUZGTzBGQlEycEZMR2RDUVVGQkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNPRU5CUVRoRExFTkJRVU03WjBKQlF6VkVMRmxCUVZrc1IwRkJSeXhUUVVGVE96dEJRVWN4UWl4WlFVRkJMRWxCUVUwc1UwRkJVeXhIUVVOaUxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNiVUpCUVcxQ08yZENRVU01UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExIRkNRVUZ4UWp0QlFVTm9ReXhuUWtGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR05CUVdNN1dVRkZja0lzU1VGQlFTeEZRVUZCTEVkQlIwWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkdXaXhGUVVGcFJTeEhRVUZCTEVWQlFVRXNRMEZCUVN4dlFrRkJRU3hGUVVGcVJTeHZRa0ZCYjBJc1IwRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZITEZGQlFWRXNRMEZCUXl4WlFVRlpMRU5CUVVNc2IwSkJRVzlDTEVkQlFVRXNSVUZCUVN4RlFVTnFSU3hGUVVFclJDeEhRVUZCTEVWQlFVRXNRMEZCUVN4dFFrRkJRU3hGUVVFdlJDeHRRa0ZCYlVJc1IwRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZITEZGQlFWRXNRMEZCUXl4WlFVRlpMRU5CUVVNc2JVSkJRVzFDTEVkQlFVRXNSVUZEYmtRN1FVRkRVaXhaUVVGQkxFbEJRVUVzUlVGUFJpeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCVGxvc1JVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlFTeHJRa0ZGWjBJc1JVRkdhRUlzYTBKQlFXdENMRWRCUVVjc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeFBRVUZQTEc5Q1FVRnZRaXhMUVVGTE8wRkJRMjVFTEd0Q1FVRkZPMnRDUVVOQkxGbEJRVmtzUjBGQlFTeEZRVUZCTEVWQlEyaENMRVZCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzYVVKQlJXVXNSVUZHWml4cFFrRkJhVUlzUjBGQlJ5eEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTlCUVU4c2JVSkJRVzFDTEV0QlFVczdRVUZEYWtRc2EwSkJRVVU3YTBKQlEwRXNWMEZCVnl4SFFVRkJMRVZCUTBnN1FVRkZaQ3haUVVGQkxGRkJRMFVzUzBGQlFTeERRVUZCTEdGQlFVRXNRMEZCUVN4UlFVRkJMRVZCUVVFc1JVRkRSU3hKUVVGSkxFVkJRVU1zVVVGQlVTeEZRVU5pTEZOQlFWTXNSVUZCUlN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVU0xUWl4UFFVRlBMRVZCUVVVc1dVRkJXU3hGUVVOeVFpeFRRVUZUTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRVUVzV1VGQlFTeEZRVU42UWl4VFFVRlRMRWRCUVVjc2FVSkJRV2xDTEVkQlFVY3NhMEpCUVd0Q0xFVkJRVUU3WjBKQlJUbEVMRXRCUVUwc1EwRkJRU3hoUVVGQkxFTkJRVUVzVFVGQlFTeEZRVUZCTEVWQlFVRXNVMEZCVXl4RlFVRkZMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlEyNURMRVZCUVVFc1UwRkJVeXhIUVVGSExHMUNRVUZ0UWl4SFFVRkhMRzlDUVVGdlFpeERRVU5zUkN4RFFVTkJPMEZCUldJc1UwRkJRenRSUVVWRUxFdEJRV3RDTEVOQlFVRXNhMEpCUVVFc1IwRkJSeXhWUVVGRExFbEJRVFJDTEVWQlFVRTdRVUZCTlVJc1dVRkJRU3hKUVVGQkxFbEJRVUVzUzBGQlFTeE5RVUZCTEVWQlFVRXNSVUZCUVN4SlFVRmhMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVRTdRVUZEYUVRc1dVRkJRU3hKUVVGTkxFOUJRVThzUjBGQlJ5eERRVUZETEdsRFFVRnBReXhEUVVGRE8wRkJSVzVFTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHZENRVUZuUWl4RlFVRkZPMEZCUXk5Q0xHZENRVUZCTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc2EwUkJRV3RFTEVOQlFVTTdPMEZCUld4RkxGbEJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR2xDUVVGcFFpeEZRVUZGTzBGQlEyaERMR2RDUVVGQkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNiVVJCUVcxRUxFTkJRVU03TzBGQlJXNUZMRmxCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEhGQ1FVRnhRaXhGUVVGRk8wRkJRM0JETEdkQ1FVRkJMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zZFVSQlFYVkVMRU5CUVVNN08wRkJSWFpGTEZsQlFVRXNVVUZEUlN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFbEJRVUVzUlVGQlFTeEZRVUZKTEZOQlFWTXNSVUZCUlN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVU0zUWl4RlFVRkJMRlZCUVZVc1EwRkJReXhKUVVGSkxFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZEZUVRN1FVRkZWQ3hUUVVGRE8xRkJSVVFzUzBGQmEwSXNRMEZCUVN4clFrRkJRU3hIUVVGSExGVkJRMjVDTEZsQlFUWkNMRVZCUVVFN1FVRkJOMElzV1VGQlFTeEpRVUZCTEZsQlFVRXNTMEZCUVN4TlFVRkJMRVZCUVVFc1JVRkJRU3haUVVFMlFpeEhRVUZCTEV0QlFVRXNRMEZCUVR0WlFVVTNRaXhKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4blFrRkJaMElzU1VGQlNTeFpRVUZaTEVWQlFVVTdaMEpCUTJoRU96dEJRVVZHTEZsQlFVRXNVVUZEUlN4TFFVRkRMRU5CUVVFc1lVRkJRU3hEUVVGQkxGbEJRVmtzUlVGRFVFRXNUMEZCUVN4RFFVRkJMRVZCUVVFc1JVRkJRU3hSUVVGUkxFTkJRVU1zV1VGQldTeEZRVU55UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVOa0xFVkJRVUVzU1VGQlNTeEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVOeVFpeFJRVUZSTEVWQlFVVXNTMEZCU1N4RFFVRkRMRlZCUVZVc1JVRkRla0lzU1VGQlNTeEZRVUZGTEU5QlFVOHNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZCTEVOQlFVRXNRMEZET1VJN1FVRkZUaXhUUVVGRE8xRkJSVVFzUzBGQmJVSXNRMEZCUVN4dFFrRkJRU3hIUVVGSExGVkJRM0JDTEZsQlFUWkNMRVZCUVVFN1FVRkJOMElzV1VGQlFTeEpRVUZCTEZsQlFVRXNTMEZCUVN4TlFVRkJMRVZCUVVFc1JVRkJRU3haUVVFMlFpeEhRVUZCTEV0QlFVRXNRMEZCUVR0WlFVVTNRaXhKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4cFFrRkJhVUlzU1VGQlNTeFpRVUZaTEVWQlFVVTdaMEpCUTJwRU96dEJRVVZHTEZsQlFVRXNVVUZEUlN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGRExHRkJRV0VzUlVGQlFVRXNUMEZCUVN4RFFVRkJMRVZCUVVFc1JVRkRVaXhSUVVGUkxFTkJRVU1zV1VGQldTeEZRVU55UWl4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGQkxFVkJRMlFzUzBGQlN5eEZRVUZGTEZGQlFWRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVU5vUXl4UlFVRlJMRVZCUVVVc1MwRkJTU3hEUVVGRExGZEJRVmNzUlVGQlFTeERRVUZCTEVOQlF6RkNPMEZCUlU0c1UwRkJRenRSUVVWRUxFdEJRWFZDTEVOQlFVRXNkVUpCUVVFc1IwRkJSeXhWUVVONFFpeFpRVUUyUWl4RlFVRkJPMEZCUVRkQ0xGbEJRVUVzU1VGQlFTeFpRVUZCTEV0QlFVRXNUVUZCUVN4RlFVRkJMRVZCUVVFc1dVRkJOa0lzUjBGQlFTeExRVUZCTEVOQlFVRTdXVUZGTjBJc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNjVUpCUVhGQ0xFbEJRVWtzV1VGQldTeEZRVUZGTzJkQ1FVTnlSRHM3V1VGRlJpeFJRVU5GTEV0QlFVTXNRMEZCUVN4aFFVRkJMRU5CUVVFc2FVSkJRV2xDTEVWQlExcEJMRTlCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVUVzVVVGQlVTeERRVUZETEZsQlFWa3NSVUZEY2tJc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGRFpDeEZRVUZCTEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGRGNrSXNVVUZCVVN4RlFVRkZMRXRCUVVrc1EwRkJReXhsUVVGbExFVkJRemxDTEVOQlFVRXNRMEZCUVR0QlFVVk9MRk5CUVVNN1VVRkZSQ3hMUVVGelFpeERRVUZCTEhOQ1FVRkJMRWRCUVVjc1ZVRkJReXhMUVVGMVF5eEZRVUZCTzFsQlF5OUVMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEdWQlFXVXNSVUZCUlN4RlFVRkZMRXRCUVVzc1EwRkJRenRCUVVNM1F5eFpRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4RFFVRkRMR1ZCUVdVc1JVRkJSU3hEUVVGRE8wRkJRemRGTEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hwUWtGQmFVSXNSMEZCUnl4WlFVRkJPMEZCUTJ4Q0xGbEJRVUVzU1VGQlNTeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWeXhKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVU3WjBKQlF6VkVPenRCUVVWR0xGbEJRVUVzVVVGRFJTeExRVU5GTEVOQlFVRXNZVUZCUVN4RFFVRkJMRXRCUVVFc1JVRkJRU3hGUVVGQkxGTkJRVk1zUlVGQlF5eG5RMEZCWjBNc1JVRkRNVU1zVDBGQlR5eEZRVUZGTEV0QlFVa3NRMEZCUXl4elFrRkJjMElzUlVGQlFTeEZRVVZ1UXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGZEJRVmNzUTBGRGJrSTdRVUZGVml4VFFVRkRPMUZCUlVRc1MwRkJiVUlzUTBGQlFTeHRRa0ZCUVN4SFFVRkhMRlZCUVVNc1JVRkJaMFFzUlVGQlFUdG5Ra0ZCT1VNc1UwRkJVeXhIUVVGQkxFVkJRVUVzUTBGQlFTeFRRVUZCTEVWQlFVVXNRMEZCUXl4SFFVRkJMRVZCUVVFc1EwRkJRU3hEUVVGQk8xbEJRWFZETEZGQlF6RkZMRFpDUVVORkxGTkJRVk1zUlVGQlJTeHRRMEZEVkN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRMVFzYzBKQlFVVTdjMEpCUTBFc1JVRkJSU3hEUVVOT0xFVkJRVUU3UVVGRlJDeG5Ra0ZCUVN4TFFVRkpMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNVMEZCVXl4RFFVRkRPMEZCUTI1RExHZENRVUZCTEV0QlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRMFVzVTBGQlV5eEZRVUZGTEhsRlFVRXdSU3hEUVVGQkxFMUJRVUVzUTBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1EwRkJSU3hGUVVNNVJ5eFBRVUZQTEVWQlFVVXNTMEZCU1N4RFFVRkRMRzFDUVVGdFFpeEZRVUZCTzBGQlJXaERMRzlDUVVGQkxFdEJRVWtzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzBGQlEycERMRzlDUVVGQkxFdEJRVWtzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzBGQlEzSkRMRzlDUVVGQkxFdEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlF6ZENPMEZCUTA0c1owSkJRVUVzUzBGQlFTeERRVUZCTEdGQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVVFc1JVRkJTeXhUUVVGVExFVkJRVU1zTmtKQlFUWkNMRVZCUVVFc1JVRkRla01zUzBGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkRia0lzUTBGRFJqdEJRWEJDYjBVc1UwRnhRak5GTzFGQlJVUXNTMEZCYTBJc1EwRkJRU3hyUWtGQlFTeEhRVUZITEZWQlFVTXNWVUZCTUVNc1JVRkJRVHM3V1VGRGRFUXNTVUZCUVN4VFFVRlRMRWRCUVZFc1ZVRkJWU3hEUVVGQkxGTkJRV3hDTEVWQlFVVXNRMEZCUXl4SFFVRkxMRlZCUVZVc1EwRkJRU3hEUVVGbU8wRkJSWEJDTEZsQlFVRXNTVUZEUlN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGak8wRkJRM2hFTEdkQ1FVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYTBKQlFXdENMRVZCUXpkQ08wRkJRMEVzWjBKQlFVRXNUMEZCVHl4SlFVRkpPenRCUVVkaUxGbEJRVUVzU1VGQlRTeDFRa0ZCZFVJc1IwRkJSeXh0UWtGQmJVSXNRMEZEYWtRc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlEyWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkRXRHRCUVVWRUxGbEJRVUVzU1VGQlRTeDFRa0ZCZFVJc1IwRkJSeXhyUWtGQmEwSXNRMEZEYUVRc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlEyWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkRXRHRCUVVWRUxGbEJRVUVzU1VGQlRTeHpRa0ZCYzBJc1IwRkJSeXhyUWtGQmEwSXNRMEZETDBNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlEyWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkRXRHRCUVVWRUxGbEJRVUVzU1VGQlRTeHpRa0ZCYzBJc1IwRkJSeXhwUWtGQmFVSXNRMEZET1VNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVWQlEyWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkRXRHRCUVVWRUxGbEJRVUVzU1VGQlRTeFpRVUZaTEVkQlEyaENMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHRRa0ZCYlVJN1FVRkRMMElzWjBKQlFVRXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExIRkNRVUZ4UWp0QlFVTnFReXhuUWtGQlFTeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZenRaUVVVMVFpeFJRVU5GTERaQ1FVTkZMRk5CUVZNc1JVRkJReXd5UkVGQk1rUXNSVUZEY2tVc1QwRkJUeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4SlFVVnNReXhEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRExHdENRVUZyUWl4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRTdaMFJCUTNwQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVRXNSVUZCUVN4RlFVTmlMR2xDUVVGcFFpeEZRVUZGTEVOQlFVTXNSVUZEY0VJc1UwRkJVeXhGUVVGQkxGTkJRVUVzUlVGRFZDeFhRVUZYTEVWQlFVVXNTMEZCU1N4RFFVRkRMRmRCUVZjc1JVRkROMElzVlVGQlZTeEZRVUZGTEV0QlFVa3NRMEZCUXl4VlFVRlZMRVZCUXpOQ0xHRkJRV0VzUlVGQlJTeExRVUZKTEVOQlFVTXNZVUZCWVN4RlFVTnFReXhoUVVGaExFVkJRVVVzUzBGQlNTeERRVUZETEdGQlFXRXNSVUZEYWtNc1dVRkJXU3hGUVVGRkxFdEJRVWtzUTBGQlF5eFpRVUZaTEVWQlF5OUNMRmxCUVZrc1JVRkJSU3hMUVVGSkxFTkJRVU1zV1VGQldTeEZRVU12UWl4MVFrRkJkVUlzUlVGQlFTeDFRa0ZCUVN4RlFVTjJRaXgxUWtGQmRVSXNSVUZCUVN4MVFrRkJRU3hGUVVOMlFpeHpRa0ZCYzBJc1JVRkJRU3h6UWtGQlFTeEZRVU4wUWl4elFrRkJjMElzUlVGQlFTeHpRa0ZCUVN4RlFVTjBRaXhEUVVGQkxFTkJRVUU3UVVGRFJDeG5Ra0ZCUVN4WlFVRlpMRXRCUTFnc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeExRVUZCTEVWQlFVRXNSVUZCU3l4VFFVRlRMRVZCUVVNc05rSkJRVFpDTEVWQlEzcERMRVZCUVVFc1MwRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZEYmtJc1EwRkRVQ3hEUVVOSE8wRkJSVllzVTBGQlF6dFJRVVZFTEV0QlFXZENMRU5CUVVFc1owSkJRVUVzUjBGQlJ5eFZRVUZETEVWQlNXNUNMRVZCUVVFN1FVRklReXhaUVVGQkxFbEJRVUVzVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJPMEZCU1Vnc1dVRkJRU3hKUVVGQkxFdEJSMFlzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZHV2l4alFVRmpMRzlDUVVGQkxFVkJRMlFzUlVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4alFVRnhSQ3hGUVVGeVJDeGpRVUZqTEcxQ1FVRkhMRkZCUVZFc1EwRkJReXhaUVVGWkxFTkJRVU1zWTBGQll5eExRVU42UXp0QlFVTlNMRmxCUVVFc1NVRkJRU3hGUVVFMlFpeEhRVUZCTEdOQlFXTXNRMEZETDBNc1UwRkJVeXhGUVVOVUxHTkJRV01zUTBGRFppeEZRVWhQTEZkQlFWY3NSMEZCUVN4RlFVRkJMRU5CUVVFc1YwRkJRU3hGUVVGRkxGTkJRVk1zWlVGSE4wSTdXVUZEUkN4UlFVTkZMRXRCUVVzc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlFVRXNVMEZCVXl4RlFVRkRMSFZFUVVGMVJDeEpRVU51UlN4alFVRmpMRWRCUVVjc1JVRkJSeXhEUVVGQkxFMUJRVUVzUTBGQlFTeFhRVUZYTEdkQ1FVRk5MRk5CUVZNc1EwRkJSU3hIUVVGSExFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZEYkVVN1FVRkZWaXhUUVVGRE8xRkJSVVFzUzBGQldTeERRVUZCTEZsQlFVRXNSMEZCUnl4VlFVRkRMRVZCVFdZc1JVRkJRVHRCUVV4RExGbEJRVUVzU1VGQlFTeFRRVUZUTEdWQlFVRXNSVUZEVkN4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVXNzUlVGQlRDeERRVUZETEVkQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJSeXhEUVVGRExFZEJRVUVzUlVGQlFUdFpRVXRNTEVsQlFVMHNWVUZCVlN4SFFVRkhMRVZCUVVVc1UwRkJVeXhYUVVGQkxFVkJRVVVzUTBGQlF5eEZRVUZCTEVOQlFVRXNSVUZCUlR0WlFVTnVReXhSUVVGUkxFbEJRVWs3UVVGRFZpeG5Ra0ZCUVN4TFFVRkxMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYTBKQlFXdENMRXRCUVVzc1UwRkJVenRCUVVNNVF5eHZRa0ZCUVN4UFFVRlBMRXRCUVVrc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4VlFVRlZMRU5CUVVNN1FVRkROVU1zWjBKQlFVRXNTMEZCU3l4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHMUNRVUZ0UWp0dlFrRkRha01zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4eFFrRkJjVUk3YjBKQlEyaERMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll6dEJRVU42UWl4dlFrRkJRU3hQUVVGUExFdEJRVWtzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhWUVVGVkxFTkJRVU03UVVGRE1VTXNaMEpCUVVFN1FVRkRSU3h2UWtGQlFTeFBRVUZQTEV0QlFVa3NRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eFZRVUZWTEVOQlFVTTdPMEZCUldwRUxGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4WlFVRlpMRWRCUVVjc1dVRkJRVHM3UVVGRFlpeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhyUWtGQmEwSXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdG5Ra0ZET1VRN08xbEJSMFlzU1VGQlRTeFRRVUZUTEVkQlFYbENMRVZCUVVVN1FVRkRNVU1zV1VGQlFTeEpRVUZOTEZkQlFWY3NSMEZEWml4RFFVRkJMRVZCUVVFc1IwRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWY3NUVUZCUVN4SlFVRkJMRWxCUVVFc1JVRkJRU3hMUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVkQlFVa3NVVUZCVVN4RFFVRkRMRmxCUVZrc1EwRkJReXhYUVVGWE8wRkJRemRFTEZsQlFVRXNTVUZCVFN4blFrRkJaMElzUjBGQlJ5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMnRDUVVOb1F5eFhRVUZYTEVkQlFVYzdhMEpCUTJRc1EwRkJRenRCUVVOTUxGbEJRVUVzU1VGQlRTeGhRVUZoTEVkQlEycENMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYlVKQlFXMUNMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dHJRa0ZEZWtNc1VVRkJVU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMR2RDUVVGblFqdHJRa0ZETVVNc1UwRkJVeXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMR2RDUVVGblFpeERRVUZETzFsQlEyeEVMRWxCUVUwc1pVRkJaU3hIUVVGSExFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hOUVVGSkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1IwRkJRU3huUWtGQlowSTdRVUZEZEVVc1dVRkJRU3hMUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1YwRkJWeXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTzBGQlEzQkRMR2RDUVVGQkxFbEJRVTBzVjBGQlZ5eEhRVUZITEVOQlFVTXNSMEZCUnl4bFFVRmxMRWRCUVVjc1owSkJRV2RDTzBGQlF6RkVMR2RDUVVGQkxFbEJRVTBzVTBGQlV5eEhRVU5pTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2JVSkJRVzFDTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVNelF5eHpRa0ZCUlN4UlFVRlJMRU5CUVVNc1lVRkJZU3hGUVVGRkxGZEJRVmM3UVVGRGNrTXNjMEpCUVVVc1UwRkJVeXhEUVVGRExHRkJRV0VzUlVGQlJTeFhRVUZYTEVOQlFVTTdRVUZETTBNc1owSkJRVUVzU1VGQlRTeFJRVUZSTEVkQlFVY3NVVUZCVXl4RFFVRkJMRTFCUVVFc1EwRkJRU3hEUVVGRExFTkJRVVU3UVVGRE4wSXNaMEpCUVVFc1NVRkJUU3d3UWtGQk1FSXNSMEZCUnl4RFFVRkRMRWRCUVVjc1YwRkJWeXhIUVVGSExFTkJRVU03UVVGRGRFUXNaMEpCUVVFc1NVRkJUU3cwUWtGQk5FSXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJRenRuUWtGRE1VTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkRXaXhMUVVORkxFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4RlFVRkJMRWRCUVVjc1JVRkJSU3hSUVVGUkxFVkJRMklzUjBGQlJ5eEZRVUZGTEZWQlFVTXNSMEZCUnl4RlFVRkJPM2RDUVVOUUxFdEJRVWtzUTBGQlF5eGpRVUZqTEVkQlFVY3NSMEZCUnl4TFFVRkJMRWxCUVVFc1NVRkJTQ3hIUVVGSExFdEJRVWdzVFVGQlFTeEhRVUZCTEVkQlFVY3NSMEZCU1N4VFFVRlRPM0ZDUVVOMlF5eEZRVU5FTEZOQlFWTXNSVUZCUXl4dFEwRkJiVU1zUlVGQlFUdHZRa0ZGTlVNc1MwRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eEZRVUZGTEZOQlFWTXNWMEZCUVN4RlFVRkZMRU5CUVVNc1JVRkJRU3hEUVVGQkxFVkJRVVVzUTBGQlF6dEJRVU53UXl4dlFrRkJRU3hMUVVGQkxFTkJRVUVzWVVGQlFTeERRVUZETEV0QlFVc3NSVUZEUVVFc1QwRkJRU3hEUVVGQkxFVkJRVUVzUlVGQlFTeFJRVUZSTEVOQlFVTXNXVUZCV1N4RlFVTnlRaXhMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVU5rTEVWQlFVRXNXVUZCV1N4RlFVRkZMRXRCUVVrc1EwRkJReXhaUVVGWkxFVkJReTlDTEdWQlFXVXNSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHOUNRVUZ2UWl4RlFVTm9SQ3hIUVVGSExFVkJRVVVzVTBGQlV5eEZRVU5rTEZWQlFWVXNSVUZCUlN4TFFVRkpMRU5CUVVNc1kwRkJZeXhGUVVNdlFpeGxRVUZsTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhyUWtGQmEwSXNSVUZET1VNc2IwSkJRVzlDTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRMmhFTEdWQlFXVXNSVUZCUlN4TFFVRkpMRU5CUVVNc2JVSkJRVzFDTEVWQlEzcERMRmxCUVZrc1JVRkJSU3hMUVVGSkxFTkJRVU1zY1VKQlFYRkNMRVZCUTNoRExHTkJRV01zUlVGQlJTeERRVUZETEVWQlEycENMR0ZCUVdFc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdGQlFXRXNSVUZEZGtNc01FSkJRVEJDTEVWQlFVVXNNRUpCUVRCQ0xFVkJRM1JFTERSQ1FVRTBRaXhGUVVGRkxEUkNRVUUwUWl4RlFVTXhSQ3hEUVVGQkxFTkJRVUVzUTBGRFJTeERRVU5RT3p0QlFVVklMRmxCUVVFc1QwRkJUeXhUUVVGVE8wRkJRMnhDTEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hYUVVGWExFZEJRVWNzV1VGQlFUdEJRVU5hTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHdENRVUZyUWl4RlFVRkZPMmRDUVVOcVF6czdRVUZGUml4WlFVRkJMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGpRVUZqTEVWQlFVVTdRVUZETjBJc1owSkJRVUVzVVVGRFJTeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkJMRXRCUVVFc1JVRkJRU3hGUVVGTExGTkJRVk1zUlVGQlF5eHRRMEZCYlVNc1JVRkJRVHRCUVVNdlF5eHZRa0ZCUVN4TFFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03YjBKQlEyeEVMRXRCUVVNc1EwRkJRU3hoUVVGQkxFTkJRVUVzU1VGQlNTeEZRVU5EUVN4UFFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGQkxGRkJRVkVzUTBGQlF5eFpRVUZaTEVWQlEzSkNMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRVUVzUlVGRFpDeGhRVUZoTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFVkJRM1pETEVsQlFVa3NSVUZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGRGNrSXNWVUZCVlN4RlFVRkZMRXRCUVVrc1EwRkJReXhqUVVGakxFVkJReTlDTEd0Q1FVRnJRaXhGUVVGRkxFdEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1JVRkRNME1zWjBKQlFXZENMRVZCUVVVc1MwRkJTU3hEUVVGRExHOUNRVUZ2UWl4RlFVTXpReXhuUWtGQlowSXNSVUZCUlN4TFFVRkpMRU5CUVVNc2IwSkJRVzlDTEVWQlFVRXNRMEZCUVN4RFFVTXpReXhEUVVORk96dFpRVWRXTzBGQlEwWXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxHbENRVUZwUWl4SFFVRkhMRmxCUVVFN1FVRkRiRUlzV1VGQlFTeEpRVU5GTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZenRCUVVONlFpeHBRa0ZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHTkJRV01zU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR3RDUVVGclFpeERRVUZETEVWQlF6VkVPMmRDUVVOQkxGRkJRMFVzYjBKQlFVTXNTVUZCU1N4RlFVRkJRU3hQUVVGQkxFTkJRVUVzUlVGQlFTeEZRVU5ETEZGQlFWRXNRMEZCUXl4WlFVRlpMRVZCUTNKQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlEyUXNSVUZCUVN4UlFVRlJMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVWQlEycERMRTFCUVUwc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVXNSVUZETjBJc1UwRkJVeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RlFVTnVReXhSUVVGUkxFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUTI1RExFTkJRVUVzUTBGQlFUczdXVUZIVGp0QlFVTkdMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeHpRa0ZCYzBJc1IwRkJSeXhaUVVGQk8wRkJRM1pDTEZsQlFVRXNTVUZCVFN4SlFVRkpMRWRCUVVjc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dHJRa0ZEY0VJc1NVRkJTU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJPMnRDUVVNMVFpeFRRVUZUTzBGQlEySXNXVUZCUVN4SlFVRk5MRk5CUVZNc1IwRkJSeXhKUVVGSkxFbEJRVWtzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRTlCUVU4c1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXp0WlFVTjJSU3hKUVVGTkxGVkJRVlVzUjBGQlJ6dEJRVU5xUWl4clFrRkJSU3hGUVVGSExFTkJRVUVzVFVGQlFTeERRVUZCTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU1zUlVGQlFTeEhRVUZCTEVOQlFVRXNRMEZCUVN4TlFVRkJMRU5CUVVrc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVWQlFVVXNRMEZCUXp0clFrRkRla1FzUlVGQlJUdEJRVU5PTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUlVGQlJUdEJRVU0xUWl4blFrRkJRU3hSUVVORkxFdEJRVUVzUTBGQlFTeGhRVUZCTEVOQlFVTXNVMEZCVXl4RlFVRkJRU3hQUVVGQkxFTkJRVUVzUlVGQlFTeEZRVU5LTEZGQlFWRXNRMEZCUXl4WlFVRlpMRVZCUTNKQ0xFdEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVRXNSVUZEWkN4SlFVRkpMRVZCUVVVc1NVRkJTU3hGUVVOV0xGVkJRVlVzUlVGQlJTeFZRVUZWTEVWQlEzUkNMRkZCUVZFc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NSVUZCUVN4RFFVRkJMRU5CUTJwRE96dFpRVWRPTzBGQlEwWXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxHOUNRVUZ2UWl4SFFVRkhMRmxCUVVFN08wRkJRMllzV1VGQlFTeEpRVUZCTEVWQlFUWkNMRWRCUVVFc1kwRkJZeXhEUVVNdlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1JVRkRaaXhEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR05CUVdNc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4RlFVRkJMRWRCUVVrc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVOQlEyeEZMRVZCU0U4c1YwRkJWeXhIUVVGQkxFVkJRVUVzUTBGQlFTeFhRVUZCTEVWQlFVVXNVMEZCVXl4SFFVRkJMRVZCUVVFc1EwRkJRU3hUUVVjM1FqdEJRVU5FTEZsQlFVRXNTVUZCU1N4bFFVRmxPMEZCUlc1Q0xGbEJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR05CUVdNc1JVRkJSVHRCUVVNM1FpeG5Ra0ZCUVN4bFFVRmxMRWRCUVVjc1JVRkJSeXhEUVVGQkxFMUJRVUVzUTBGQlFTeFhRVUZYTEVWQlFVMHNTMEZCUVN4RFFVRkJMRU5CUVVFc1RVRkJRU3hEUVVGQkxGTkJRVk1zUTBGQlJUczdRVUZETlVNc2FVSkJRVUVzU1VGRFRDeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFqdEJRVU01UWl4blFrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEhGQ1FVRnhRaXhGUVVOb1F6dG5Ra0ZEUVN4bFFVRmxMRWRCUVVjc1QwRkJUeXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRPenRwUWtGRGNrTTdRVUZEVEN4blFrRkJRU3hsUVVGbExFZEJRVWNzUlVGQlFTeERRVUZCTEUxQlFVRXNRMEZCUnl4blFrRkJaMElzUTBGRGJrTXNVVUZCVVN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlEzcENMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVU5zUWl4RlFVRkJMRWRCUVVFc1EwRkJRU3hEUVVGQkxFMUJRVUVzUTBGQlNTeFBRVUZQTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlJUczdXVUZIYWtNc1VVRkRSU3c0UWtGRFJTeEpRVUZKTEVWQlFVTXNUMEZCVHl4RlFVTkdMRmRCUVVFc1JVRkJRU3hSUVVGUkxFVkJRMnhDTEZOQlFWTXNSVUZCUXl3MlFrRkJOa0lzUlVGRmRFTXNSVUZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExIVkNRVUYxUWl4SlFVRkpMR1ZCUVdVc1EwRkRha1E3UVVGRldDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGSExGbEJRVUU3UVVGRFppeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRVVU3UVVGRGRrSXNaMEpCUVVFc1VVRkRSU3hMUVVGQkxFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4RlFVRkxMRk5CUVZNc1JVRkJReXh6UTBGQmMwTXNSVUZCUVN4RlFVTnNSQ3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZEYUVJN08xbEJSMVk3UVVGRFJpeFRRVUZETzBGQmJqTkNReXhSUVVGQkxFdEJRVWtzUTBGQlF5eFpRVUZaTEVkQlFVY3NVMEZCVXl4RlFVRnJRanRSUVVVdlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhPMEZCUTFnc1dVRkJRU3hKUVVGSkxFVkJRVVVzUzBGQlNTeERRVUZETEdGQlFXRXNSVUZCUlR0QlFVTXhRaXhaUVVGQkxHRkJRV0VzUlVGQlJTeFRRVUZUTzBGQlEzaENMRmxCUVVFc1kwRkJZeXhGUVVGRkxGTkJRVk03UVVGRGVrSXNXVUZCUVN4MVFrRkJkVUlzUlVGQlJTeExRVUZMTzFOQlF5OUNPenM3UVVGMlFrZ3NTVUZCUVN4TlFVRkJMRU5CUVVFc1kwRkJRU3hEUVVGWExGRkJRVmtzUlVGQlFTeGpRVUZCTEVWQlFVRTdRVUZCZGtJc1VVRkJRU3hIUVVGQkxFVkJRVUVzV1VGQlFUdFpRVU5GTEU5QlFVODdRVUZEVEN4blFrRkJRU3hYUVVGWExFVkJRVVVzUTBGQlF6dEJRVU5rTEdkQ1FVRkJMSGRDUVVGM1FpeEZRVUZGTEV0QlFVczdRVUZETDBJc1owSkJRVUVzVjBGQlZ5eEZRVUZGTEUxQlFVMDdRVUZEYmtJc1owSkJRVUVzZFVKQlFYVkNMRVZCUVVVc1pVRkJaVHRCUVVONFF5eG5Ra0ZCUVN4dFFrRkJiVUlzUlVGQlJTeFhRVUZYTzBGQlEyaERMR2RDUVVGQkxIZENRVUYzUWl4RlFVRkZMR2RDUVVGblFqdEJRVU14UXl4blFrRkJRU3h2UWtGQmIwSXNSVUZCUlN4WlFVRlpPMEZCUTJ4RExHZENRVUZCTEdOQlFXTXNSVUZCUlN4M1FrRkJkMEk3WVVGRGVrTTdVMEZEUmpzN08wRkJRVUVzUzBGQlFTeERRVUZCTzBGQlpVUXNTVUZCUVN4UlFVRkJMRU5CUVVFc1UwRkJRU3hEUVVGQkxHbENRVUZwUWl4SFFVRnFRaXhaUVVGQk8xRkJRVUVzU1VGVlF5eExRVUZCTEVkQlFVRXNTVUZCUVRzN096czdRVUZNUXl4UlFVRkJMRWxCUVVrc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGpRVUZqTEVWQlFVVTdXVUZETjBJc1NVRkJTU3hEUVVGRExHOUNRVUZ2UWl4SFFVRkhMRU5CUVVNc1dVRkJRVHRuUWtGRE0wSXNTMEZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhGUVVGRkxHTkJRV01zUlVGQlJTeExRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZMRU5CUVVNN1lVRkRka1FzUjBGQlJ6czdTMEZGVUR0SlFVVkVMRkZCUVd0Q0xFTkJRVUVzVTBGQlFTeERRVUZCTEd0Q1FVRkJMRWRCUVd4Q0xGVkJRVzFDTEZOQlFYZENMRVZCUVVFN1VVRkJNME1zU1VGM1FrTXNTMEZCUVN4SFFVRkJMRWxCUVVFN1FVRjJRa01zVVVGQlFTeEpRVU5GTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXVHRCUVVOMlFpeGhRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeEZRVUZGTEZOQlFWTXNRMEZCUXl4WlFVRlpMRU5CUVVNN1owSkJRekZFTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hMUVVGTExGTkJRVk1zUTBGQlF5eGxRVUZsTEVOQlFVTXNSVUZETTBRN1FVRkRRU3haUVVGQkxFbEJRVTBzYVVKQlFXVXNSMEZCUnl4RFFVRkRMRmRCUVZjc1EwRkRiRU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUTJZc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlEzaENPMWxCUTBRc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGRFdEdEJRVU5GTEdkQ1FVRkJMRWxCUVVrc1JVRkJSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWazdRVUZET1VJc1lVRkJRU3hGUVVORUxHTkJRVTBzVDBGQlFTeHBRa0ZCWlN4SlFVRkpMRXRCUVVrc1EwRkJReXgxUWtGQmRVSXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZvUlN4RlFVRm5SU3hEUVVOMlJUczdRVUZEU1N4aFFVRkJMRWxCUTB3c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTzBGQlEzSkNMRmxCUVVFc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZMRVZCUVVVc1UwRkJVeXhEUVVGRExGVkJRVlVzUTBGQlF5eEZRVU4yUkR0WlFVTkJMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRFdpeG5Ra0ZCUVN4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTzBGQlF6VkNMR0ZCUVVFc1EwRkJRenM3UzBGRlREdEJRWFV3UWtRc1NVRkJRU3hSUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEUxQlFVMHNSMEZCVGl4WlFVRkJPMUZCUTBVc1NVRkJUU3hUUVVGVExFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRWxCUVVrc2FVSkJRV2xDTzFGQlF6TkVMRkZCUTBVc1MwRkJReXhEUVVGQkxHRkJRVUVzUTBGQlFTeHRRa0ZCYlVJc1JVRkRiRUlzUlVGQlFTeGpRVUZqTEVWQlFVVXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeEZRVU4yUXl4TFFVRkxMRVZCUVVVc1JVRkJSU3hQUVVGUExFVkJRVVVzVlVGQlZTeEZRVUZGTEVWQlF6bENMRmRCUVZjc1JVRkJSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEhWQ1FVRjFRaXhGUVVGQk8wRkJSUzlETEZsQlFVRXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hMUVVGQkxFVkJRVUVzUlVGQlN5eExRVUZMTEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc1ZVRkJWU3hGUVVGRkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEVsQlFVa3NRMEZCUXl4WlFVRlpMRVZCUVVFN1FVRkRla1FzWjBKQlFVRXNTMEZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJReXhUUVVGVExFVkJRVUVzUlVGRFVpeFRRVUZUTEVWQlFVVXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhGUVVGRk8wRkJRM2hFTEhkQ1FVRkJMRFpDUVVFMlFpeEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2EwSkJRV3RDTzNGQ1FVTTNSQ3hEUVVGRExFVkJRMFlzVVVGQlVTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhKUVVGSkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RlFVTXZSQ3hyUWtGQmEwSXNSVUZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHdENRVUZyUWl4RlFVRkJPMjlDUVVWb1JDeEpRVUZKTEVOQlFVTXNiMEpCUVc5Q0xFVkJRVVU3YjBKQlF6TkNMRWxCUVVrc1EwRkJReXh2UWtGQmIwSXNSVUZCUlR0dlFrRkRNMElzU1VGQlNTeERRVUZETEdkQ1FVRm5RaXhGUVVGRk8yOUNRVU4yUWl4SlFVRkpMRU5CUVVNc1dVRkJXU3hGUVVGRk8yOUNRVU51UWl4SlFVRkpMRU5CUVVNc1YwRkJWeXhGUVVGRk8yOUNRVU5zUWl4SlFVRkpMRU5CUVVNc2FVSkJRV2xDTEVWQlFVVTdiMEpCUTNoQ0xFbEJRVWtzUTBGQlF5eHBRa0ZCYVVJc1JVRkJSVHR2UWtGRGVFSXNTVUZCU1N4RFFVRkRMSE5DUVVGelFpeEZRVUZGTzBGQlF6ZENMRzlDUVVGQkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZEV2l4RFFVTlNMRU5CUTJNN1MwRkZla0k3U1VGRFNDeFBRVUZETEZGQlFVRTdRVUZCUkN4RFFYQTJRa0VzUTBGQmMwTXNVMEZCVXl4RFFXODJRamxETEVOQlFVRTdPMEZEZEc1RFJEczdPenM3T3pzN096czdPenM3T3pzN08wRkJhMEpITzBGQlEwZ3NTVUZCVFN4WlFVRlpMRWRCUVdkRExGVkJRVU1zUlVGSkwwSXNSVUZCUVR0UlFVaHNRaXhKUVVGSkxFZEJRVUVzUlVGQlFTeERRVUZCTEVsQlFVRXNSVUZEU2l4RlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxGTkJRV01zUlVGQlpDeFRRVUZUTEcxQ1FVRkhMRVZCUVVVc1IwRkJRU3hGUVVGQkxFVkJRMlFzVDBGQlR5eEhRVUZCTEVWQlFVRXNRMEZCUVN4UFFVRkJPMGxCUlZBc1NVRkJUU3haUVVGWkxFZEJRVWNzYVVOQlFXbERPMEZCUlhSRUxFbEJRVUVzU1VGQlNTeFBRVUZQTEVsQlFVa3NTMEZCU3l4UlFVRlJMRVZCUVVVN1FVRkROVUlzVVVGQlFTeFJRVU5GTEV0QlEwVXNRMEZCUVN4aFFVRkJMRU5CUVVFc1IwRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZGTEVWQlFVY3NRMEZCUVN4TlFVRkJMRU5CUVVFc1dVRkJXU3hqUVVGSkxFbEJRVWtzUlVGQlFTeEhRVUZCTEVOQlFVRXNRMEZCUVN4TlFVRkJMRU5CUVVrc1UwRkJVeXhEUVVGRkxFVkJRVUVzWVVGQlFTeEZRVU55UXl4TlFVRk5MRVZCUTJ4Q0xFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlFVRXNRMEZEYUVJN08wRkJTVTRzU1VGQlFTeEpRVUZKTEV0QlFVc3NRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVU3TzFGQlJUbENMRWxCUVUwc1lVRkJWeXhIUVVGSExFbEJSMnhDTzBGQlJVWXNVVUZCUVN4UFFVRlBMRXRCUVVzc1EwRkJReXhaUVVGWkxFTkJRVU1zWVVGQlZ5eEZRVUZGTzBGQlEzSkRMRmxCUVVFc1UwRkJVeXhGUVVGRkxFVkJRVUVzUTBGQlFTeE5RVUZCTEVOQlFVY3NZVUZCVnl4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVExFbEJRVWtzUlVGQlJTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RFFVRkJMRTFCUVVFc1EwRkJTU3haUVVGWkxFVkJRVUVzUjBGQlFTeERRVUZCTEVOQlFVRXNUVUZCUVN4RFFVRkpMRk5CUVZNc1EwRkJSVHRaUVVNNVJTeFBRVUZQTEVWQlFVVXNWVUZCUXl4TFFVRjFRaXhGUVVGQk8yZENRVU12UWl4SlFVRkpMRTlCUVU4c1lVRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEV0QlFVc3NWVUZCVlN4RlFVRkZPMEZCUTI1RUxHOUNRVUZCTEdGQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF6czdRVUZIYkVNc1owSkJRVUVzU1VGQlNTeFBRVUZQTEU5QlFVOHNTMEZCU3l4VlFVRlZMRVZCUVVVN2IwSkJRMnBETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNN08yRkJSV3BDTzBGQlEwWXNVMEZCUVN4RFFVRkRPenM3U1VGSlNpeFJRVU5GTERaQ1FVTkZMRk5CUVZNc1JVRkJSU3hWUVVGSExGbEJRVmtzUlVGQlFTeEhRVUZCTEVOQlFVRXNRMEZCUVN4TlFVRkJMRU5CUVVrc1UwRkJVeXhEUVVGRkxFVkJRM3BETEV0QlFVc3NSVUZCUXl3MFFrRkJORUlzUlVGRGJFTXNUMEZCVHl4RlFVRkRMR0ZCUVdFc1JVRkRja0lzVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUVR0QlFVVm9RaXhSUVVGQkxFdEJRVUVzUTBGQlFTeGhRVUZCTEVOQlFVRXNUVUZCUVN4RlFVRkJMRVZCUVUwc1EwRkJReXhGUVVGRExEWk9RVUUyVGl4RlFVRkhMRU5CUVVFc1EwRkRjRTg3UVVGRlZpeERRVUZET3p0QlEycEZSRHM3T3pzN096czdPMEZCVTBjN1FVRkRTQ3hKUVVGQkxFMUJRVUVzYTBKQlFVRXNWVUZCUVN4TlFVRkJMRVZCUVVFN1NVRkJjVUlzVTBGQmMwSXNRMEZCUVN4TlFVRkJMRVZCUVVFc1RVRkJRU3hEUVVGQk8wRkJRM3BETEVsQlFVRXNVMEZCUVN4TlFVRkJMRU5CUVZrc1MwRkJhMElzUlVGQlFUdEJRVU0xUWl4UlFVRkJMRWxCUVVFc1MwRkJRU3hIUVVGQkxFMUJRVXNzUTBGQlFTeEpRVUZCTEVOQlFVRXNTVUZCUVN4RlFVRkRMRXRCUVVzc1EwRkJReXhKUVVGRExFbEJRVUU3VVVGMVFsQXNTMEZCVlN4RFFVRkJMRlZCUVVFc1IwRkJkVUlzU1VGQlNUdFJRWFJDTTBNc1MwRkJTU3hEUVVGRExFVkJRVVVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJRenM3TzBGQlIzcERMRWxCUVVFc1RVRkJRU3hEUVVGQkxGTkJRVUVzUTBGQlFTeHBRa0ZCYVVJc1IwRkJha0lzV1VGQlFUdFJRVU5GTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVXNTVUZCU1N4UlFVRlJMRVZCUVVVc1kwRkJZeXhEUVVOc1JTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkRjRUk3UVVGRFJDeFJRVUZCTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hGUVVGRk8xbEJRM0JDTEVsQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZETDBNc1dVRkJRU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZsQlFWa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZEZGtRc1dVRkJRU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4SlFVRkpMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNN08xRkJSWFpGTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTTdTMEZEY2tNN1FVRkZSQ3hKUVVGQkxFMUJRVUVzUTBGQlFTeFRRVUZCTEVOQlFVRXNiMEpCUVc5Q0xFZEJRWEJDTEZsQlFVRTdRVUZEUlN4UlFVRkJMRWxCUVVrc1NVRkJTU3hEUVVGRExGVkJRVlVzUlVGQlJUdFpRVU51UWl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRPenRMUVVWMlF6dEJRVXRFTEVsQlFVRXNUVUZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3hOUVVGTkxFZEJRVTRzV1VGQlFUdEJRVU5GTEZGQlFVRXNUMEZCVHl4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU03UzBGRE0wUTdTVUZEU0N4UFFVRkRMRTFCUVVFN1FVRkJSQ3hEUVRsQ1FTeERRVUZ4UWl4VFFVRlRMRU5CT0VJM1FpeERRVUZCT3p0QlF6RkRSQ3hKUVVGTkxIbENRVUY1UWl4SFFVTTNRaXhuUkVGQlowUTdRVUZEYkVRc1NVRkJUU3hsUVVGbExFZEJRVWNzVlVGRGRFSXNTVUZMY1VJc1JVRkJRVHRCUVVWeVFpeEpRVUZCTEVsQlFVa3NTVUZCU1N4WlFVRlpMR2xDUVVGcFFpeEZRVUZGTzBGQlEzSkRMRkZCUVVFc1QwRkJUeXhKUVVGSkxFTkJRVU1zVVVGQlVTeExRVUZMTEVWQlFVVTdPMGxCUnpkQ0xFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRWxCUVVrc1EwRkJReXhSUVVGUkxFdEJRVXNzUlVGQlJUdEJRVU12UXl4RFFVRkRPMEZCUlVRN096czdPenM3T3pzN096czdPenM3T3p0QlFXdENSenRCUVVOSUxFbEJRVUVzVDBGQlFTeHJRa0ZCUVN4VlFVRkJMRTFCUVVFc1JVRkJRVHRKUVVGeFF5eFRRVUYxUWl4RFFVRkJMRTlCUVVFc1JVRkJRU3hOUVVGQkxFTkJRVUU3UVVGTE1VUXNTVUZCUVN4VFFVRkJMRTlCUVVFc1EwRkJXU3hMUVVGdFFpeEZRVUZCTzBGQlF6ZENMRkZCUVVFc1NVRkJRU3hMUVVGQkxFZEJRVUVzVFVGQlN5eERRVUZCTEVsQlFVRXNRMEZCUVN4SlFVRkJMRVZCUVVNc1MwRkJTeXhEUVVGRExFbEJRVU1zU1VGQlFUdEJRVTltT3pzN096czdPMEZCVDBjN1FVRkRTQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeGpRVUZqTEVkQlFVY3NXVUZCUVRzN1FVRkRaaXhaUVVGQkxFOUJRVUVzUzBGQlN5eERRVUZETEZOQlFWTXNRMEZCUXp0QlFVTmlMR2xDUVVGQkxFbEJRVWtzUTBGRFNDeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFOUJRVThzVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZGTEdkQ1FVRm5RaXhEUVVGRExIbENRVUY1UWl4RFFVRkRMRVZCUTNCRkxFTkJRVU1zUlVGRFJDeEZRVUZGTzJsQ1FVVklMRTFCUVUwc1EwRkJReXhsUVVGbExFTkJRVU03VTBGQlFUdEJRVVUxUWl4UlFVRkJMRXRCUVVFc1EwRkJRU3huUWtGQlowSXNSMEZCUnl4WlFVRkJPMEZCUTJwQ0xGbEJRVUVzU1VGQlRTeFhRVUZYTEVkQlFVY3NTMEZCU1N4RFFVRkRMR05CUVdNc1JVRkJSVHRaUVVONlF5eFhRVUZYTzJkQ1FVTlVMRmRCUVZjc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF6dG5Ra0ZEZEVJc1YwRkJWeXhEUVVGRExGZEJRVmNzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRk8wRkJReTlETEZOQlFVTTdRVUZGUkN4UlFVRkJMRXRCUVVFc1EwRkJRU3hqUVVGakxFZEJRVWNzV1VGQlFUdEJRVU5tTEZsQlFVRXNTVUZCVFN4WFFVRlhMRWRCUVVjc1MwRkJTU3hEUVVGRExHTkJRV01zUlVGQlJUdEJRVU42UXl4WlFVRkJMRmRCUVZjc1NVRkJTU3hYUVVGWExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNTVUZCU1N4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eEZRVUZGTzBGQlEycEZMRk5CUVVNN1FVRm9RME1zVVVGQlFTeExRVUZKTEVOQlFVTXNWVUZCVlN4SFFVRkhMRk5CUVZNc1JVRkJSVHM3TzBGQmEwTXZRaXhKUVVGQkxFOUJRVUVzUTBGQlFTeFRRVUZCTEVOQlFVRXNUVUZCVFN4SFFVRk9MRmxCUVVFN08wRkJRMFVzVVVGQlFTeEpRVUZKTEVWQlFVVXNRMEZCUVN4RlFVRkJMRWRCUVVFc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGhRVUZoTEUxQlFVa3NTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeEhRVUZCTEU5QlFVOHNRMEZCUXl4WlFVRlpMRU5CUVVNc1lVRkJZU3hEUVVGRExFVkJRVVU3UVVGRGNrVXNXVUZCUVN4UFFVRlBMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVUczdVVUZGTlVJc1VVRkRSU3hMUVVGTExFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4RlFVRkJMRk5CUVZNc1JVRkJReXcwUWtGQk5FSXNSVUZCUXl4SFFVRkhMRVZCUVVVc1NVRkJTU3hEUVVGRExGVkJRVlVzUlVGQlFUdEJRVU01UkN4WlFVRkJMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVUVzUzBGQlFTeEZRVUZCTEVWQlEwVXNVMEZCVXl4RlFVRkRMRzFEUVVGdFF5eEZRVU0zUXl4UlFVRlJMRVZCUVVVc1EwRkJReXhGUVVOWUxFOUJRVThzUlVGQlJTeEpRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFVkJRemxDTEVOQlFVRTdXVUZEUkN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkU3UVVGRGNFSXNXVUZCUVN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFdEJRVUVzUlVGQlFTeEZRVU5GTEZOQlFWTXNSVUZCUXl4cFEwRkJhVU1zUlVGRE0wTXNVVUZCVVN4RlFVRkZMRU5CUVVNc1JVRkRXQ3hQUVVGUExFVkJRVVVzU1VGQlNTeERRVUZETEdOQlFXTXNSVUZETlVJc1EwRkJRU3hEUVVORk8wdEJSVlE3UVVFMVJFMHNTVUZCUVN4UFFVRkJMRU5CUVVFc1dVRkJXU3hIUVVGSE8wRkJRM0JDTEZGQlFVRXNZVUZCWVN4RlFVRkZMRWxCUVVrN1FVRkRjRUlzUzBGR2EwSTdTVUUyUkhKQ0xFOUJRVU1zVDBGQlFUdERRVUZCTEVOQk9VUnZReXhUUVVGVExFTkJPRVEzUXl4RFFVRkJPenRCUTJoR1JEczdPenM3T3pzN096czdPenM3TzBGQlpVYzdRVUZEY1VJc1UwRkJRU3haUVVGWkxFTkJRMnhETEZOQlFXbERMRVZCUVVFN1NVRkhha01zU1VGQlRTeFpRVUZaTEVkQlFXZENMRlZCUVVNc1MwRkJTeXhGUVVGQk96dEJRVU4wUXl4UlFVRkJMRWxCUVUwc1ZVRkJWU3hIUVVOa0xFOUJRVThzUzBGQlN5eERRVUZETEZWQlFWVXNTMEZCU3l4VFFVRlRMRWRCUVVjc1MwRkJTeXhEUVVGRExGVkJRVlVzUjBGQlJ5eEpRVUZKTzBGQlEycEZMRkZCUVVFc1NVRkJUU3hSUVVGUkxFZEJRWGRETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNN1FVRkRiRVVzVVVGQlFTeEpRVUZOTEdGQlFXRXNSMEZCUnl4WFFVRlhMRmRCUXk5Q0xFbEJRVWtzUlVGQlJTeERRVUZETEZWQlFWVXNSVUZEYWtJc2IwSkJRVzlDTEVWQlFVVXNWVUZCVlN4RlFVTm9ReXhUUVVGVExFVkJRVVVzUzBGQlN5eERRVUZETEdWQlFXVXNSVUZEYUVNc1ZVRkJWU3hGUVVGQkxHRkJRVUVzUTBGQlFUdEJRVU5TTEdkQ1FVRkJMRWxCUVVrc1EwRkJReXhGUVVGRkxFOUJRVThzUlVGQlJTeEZRVUZGTEVWQlFVVXNRMEZCUXp0blFrRkRja0lzVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXp0QlFVTldMR2RDUVVGQkxFdEJRVXNzUTBGQlF5eEZRVUZGTEU5QlFVOHNSVUZCUlN4UlFVRlJMRVZCUVVVN1FVRkRlRUlzWVVGQlFTeEhRVUZETEVOQlFVRXNSVUZCUVN4SFFVRkJMRXRCUVVzc1EwRkJReXhsUVVGbExFMUJRVWtzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGQkxFVkJRVVVzUjBGQlF5eEpRVUZCTEVOQlFVRXNSVUZCUVN4RlFVVXZRaXhMUVVGTExFTkJRVU1zVjBGQlZ5eERRVUZCTEVOQlEzQkNPMEZCUlVZc1VVRkJRU3hKUVVGTkxHTkJRV01zUjBGQlIwRXNUMEZEYkVJc1EwRkJRVUVzVDBGQlFTeERRVUZCTEVWQlFVRXNSVUZCUVN4TFFVRkxMRXRCUTFJc1ZVRkJWU3hGUVVGQkxGVkJRVUVzUlVGRFZpeFhRVUZYTEhOQ1FVRlBMR0ZCUVdFc1EwRkJRU3hGUVVGQkxFVkJRVVVzVVVGQlVTeEZRVUZCTEZGQlFVRXNUVUZETVVJN1FVRkZha0lzVVVGQlFTeFBRVUZQTEV0QlFVTXNRMEZCUVN4aFFVRkJMRU5CUVVFc1UwRkJVeXhGUVVGTFFTeFBRVUZCTEVOQlFVRXNSVUZCUVN4RlFVRkJMR05CUVdNc1JVRkJTVHRCUVVNeFF5eExRVUZETzBGQlJVUXNTVUZCUVN4UFFVRlBMRmxCUVZrN1FVRkRja0k3TzBGRE5VTkJPMEZCUTBFc1NVRkJRU3hsUVVGQkxHdENRVUZCTEZWQlFVRXNUVUZCUVN4RlFVRkJPMGxCUVhGRExGTkJRU3RDTEVOQlFVRXNaVUZCUVN4RlFVRkJMRTFCUVVFc1EwRkJRVHRCUVVGd1JTeEpRVUZCTEZOQlFVRXNaVUZCUVN4SFFVRkJPenM3UVVGRFJTeEpRVUZCTEUxQlFVRXNRMEZCUVN4alFVRkJMRU5CUVZjc1pVRkJXU3hGUVVGQkxHTkJRVUVzUlVGQlFUdEJRVUYyUWl4UlFVRkJMRWRCUVVFc1JVRkJRU3haUVVGQk8xbEJRMFVzVDBGQlR6dEJRVU5NTEdkQ1FVRkJMRlZCUVZVc1JVRkJSU3hKUVVGSk8yRkJRMnBDTzFOQlEwWTdPenRCUVVGQkxFdEJRVUVzUTBGQlFUdEJRVVZFTEVsQlFVRXNaVUZCUVN4RFFVRkJMRk5CUVVFc1EwRkJRU3hOUVVGTkxFZEJRVTRzV1VGQlFUdFJRVU5STEVsQlFVRXNSVUZCUVN4SFFWbEdMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJXRm9zVTBGQlV5eEhRVUZCTEVWQlFVRXNRMEZCUVN4VFFVRkJMRVZCUTFRc1owSkJRV2RDTEVkQlFVRXNSVUZCUVN4RFFVRkJMR2RDUVVGQkxFVkJRMmhDTEVWQlFXOUVMRWRCUVVFc1JVRkJRU3hEUVVGQkxGVkJRVUVzUlVGQmNFUXNWVUZCVlN4SFFVRkhMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzWlVGQlpTeERRVUZETEZsQlFWa3NRMEZCUXl4VlFVRlZMRWRCUVVFc1JVRkJRU3hGUVVOd1JDeGxRVUZsTEVkQlFVRXNSVUZCUVN4RFFVRkJMR1ZCUVVFc1JVRkRaaXhsUVVGbExFZEJRVUVzUlVGQlFTeERRVUZCTEdWQlFVRXNSVUZEWml4aFFVRmhMRWRCUVVFc1JVRkJRU3hEUVVGQkxHRkJRVUVzUlVGRFlpeGxRVUZsTEVkQlFVRXNSVUZCUVN4RFFVRkJMR1ZCUVVFc1JVRkRaaXhSUVVGUkxFZEJRVUVzUlVGQlFTeERRVUZCTEZGQlFVRXNSVUZEVWl4VlFVRlZMRWRCUVVFc1JVRkJRU3hEUVVGQkxGVkJRVUVzUlVGRFZpeFhRVUZYTEVkQlFVRXNSVUZCUVN4RFFVRkJMRmRCUVVFc1JVRkRXQ3hUUVVGVExFZEJRVUVzUlVGQlFTeERRVUZCTEZOQlEwYzdVVUZGWkN4SlFVRkpMRTFCUVUwc1IwRkJiVU1zVTBGQlV6dFJRVVYwUkN4SlFVRkpMRU5CUVVNc1ZVRkJWU3hGUVVGRk8xbEJRMllzU1VGQlRTeFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMSGxDUVVGNVFpeEZRVUZGTEZOQlFWTXNRMEZCUXp0QlFVTXhSQ3haUVVGQkxFMUJRVTBzU1VGRFNpeExRVUZCTEVOQlFVRXNZVUZCUVN4RFFVRkRMRTlCUVU4c1JVRkJReXhGUVVGQkxHRkJRV0VzUlVGQlJTeGhRVUZoTEVWQlFVRTdaMEpCUTI1RExFdEJRMFVzUTBGQlFTeGhRVUZCTEVOQlFVRXNTMEZCUVN4RlFVRkJMRVZCUVVFc1IwRkJSeXhGUVVGRkxGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RlFVTnFReXhMUVVGTExFVkJRVVVzVjBGQlZ5eERRVUZETEdOQlFXTXNSVUZEYWtNc1UwRkJVeXhGUVVGRkxFOUJRVThzUlVGRFJpeG5Ra0ZCUVN4RlFVRkJMRmRCUVZjc1EwRkJReXhUUVVGVExFVkJRM0pETEZOQlFWTXNSVUZCUlN4bFFVRmxMRVZCUVVFN2IwSkJSWHBDTEdWQlFXVTdiMEpCUTJZc1UwRkJVeXhMUVVOU0xFdEJRVU1zUTBGQlFTeGhRVUZCTEVOQlFVRXNZVUZCWVN4SlFVTmFMRWRCUVVjc1JVRkJSU3hYUVVGWExFTkJRVU1zVVVGQlVTeEZRVU42UWl4UFFVRlBMRVZCUVVVc1YwRkJWeXhEUVVGRExFOUJRVThzUlVGRE5VSXNTVUZCU1N4RlFVRkRMR05CUVdNc1JVRkRia0lzVjBGQlZ5eEZRVUZGTEVOQlFVTXNSVUZEWkN4TlFVRk5MRVZCUVVVc1EwRkJReXhGUVVOVUxFdEJRVXNzUlVGQlJTeEZRVUZGTEVWQlExUXNTMEZCU3l4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxHdENRVUZyUWl4RlFVRkZMRVZCUTNoRExGTkJRVk1zUlVGQlF5dzBRa0ZCTkVJc1IwRkRkRU1zUTBGRFNDeERRVU5ITEVOQlEwVXNRMEZEV0RzN1FVRkhTQ3hSUVVGQkxFbEJRVWtzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRVZCUVVVN1FVRkRPVUlzV1VGQlFTeE5RVUZOTEVkQlFVY3NZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWlVGQlpTeEZRVUZGTEVWQlFVVXNSVUZCUlN4TlFVRk5MRU5CUVVNN08wRkJSMmhGTEZGQlFVRXNTVUZCU1N4UlFVRlJMRWxCUVVrc1EwRkJReXhWUVVGVkxFVkJRVVU3UVVGRE0wSXNXVUZCUVN4TlFVRk5MRWxCUTBvc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlF5eE5RVUZOTEVWQlFVRXNSVUZCUXl4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGVkJRVlVzUlVGQlJTeFZRVUZWTEVWQlFVRXNSVUZETDBNc1RVRkJUU3hEUVVOQkxFTkJRMVk3TzFGQlIwZ3NTVUZCVFN4alFVRmpMRWRCUVVjc1NVRkJTU3hEUVVGRExEQkNRVUV3UWl4RlFVRkZMR2RDUVVGblFpeERRVUZETzBGQlJYcEZMRkZCUVVFc1VVRkRSU3hMUVVGQkxFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNRMEZCUVN4UlFVRkJMRVZCUVVFc1NVRkJRVHRCUVVORkxGbEJRVUVzUzBGQlFTeERRVUZCTEdGQlFVRXNRMEZCUVN4TFFVRkJMRVZCUVVFc1JVRkJTeXhIUVVGSExFVkJRVVVzVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4WlFVRlpMRVZCUVVVc1UwRkJVeXhGUVVGRkxHTkJRV01zUlVGQlFTeEZRVU12UkN4bFFVRmxMRU5CUTFvN1dVRkRUQ3hOUVVGTkxFTkJRMDQ3UzBGRlRqdEpRVU5JTEU5QlFVTXNaVUZCUVR0QlFVRkVMRU5CTlVWQkxFTkJRWEZETEZOQlFWTXNRMEUwUlRkRExFTkJRVUU3UVVGRlJDeDNRa0ZCWlN4WlFVRlpMRU5CUVhWQ0xHVkJRV1VzUTBGQlF6czdRVU01UTJ4RkxFbEJRVTBzZFVKQlFYVkNMRWRCUVVjc2QwTkJRWGRETzBGQlNYaEZPMEZCUTBFc1UwRkJVeXh6UWtGQmMwSXNRMEZETjBJc1MwRkJiVUlzUlVGRGJrSXNTMEZCYlVJc1JVRkJRVHRCUVVWdVFpeEpRVUZCTEVsQlFVa3NTMEZCU3l4SlFVRkpMRXRCUVVzc1JVRkJSVHRSUVVOc1FpeFJRVU5GTEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTTdPMGxCU1RWRkxFOUJRVThzUzBGQlN5eExRVUZMTEV0QlFVczdRVUZEZUVJN1FVRkZRVHM3UVVGRlJ6dEJRVU5JTEVsQlFVMHNWMEZCVnl4SFFVRkhMSFZDUVVGMVFqdEJRVEJMTTBNc1NVRkJRU3hWUVVGQkxHdENRVUZCTEZWQlFVRXNUVUZCUVN4RlFVRkJPMGxCUVhkRExGTkJSM1pETEVOQlFVRXNWVUZCUVN4RlFVRkJMRTFCUVVFc1EwRkJRVHRCUVd0RVF5eEpRVUZCTEZOQlFVRXNWVUZCUVN4RFFVRlpMRXRCUVhOQ0xFVkJRVUU3UVVGRGFFTXNVVUZCUVN4SlFVRkJMRXRCUVVFc1IwRkJRU3hOUVVGTExFTkJRVUVzU1VGQlFTeERRVUZCTEVsQlFVRXNSVUZCUXl4TFFVRkxMRU5CUVVNc1NVRkJReXhKUVVGQk8xRkJhVVZtTEV0QlFWRXNRMEZCUVN4UlFVRkJMRWRCUVc5Q0xFbEJRVWs3VVVGRmFFTXNTMEZCU3l4RFFVRkJMRXRCUVVFc1IwRkJkVUlzU1VGQlNUdEJRVVZvUXl4UlFVRkJMRXRCUVVFc1EwRkJRU3hsUVVGbExFZEJRVWNzV1VGQlFUdEJRVU5vUWl4WlFVRkJMRTlCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dEJRVU5VTEd0Q1FVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03YTBKQlExZ3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTndReXh6UWtGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPM05DUVVOWUxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRGRFTXNNRUpCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6c3dRa0ZEV0N4UFFVRlBMRVZCUVVVN1FVRk9ha0lzVTBGTmFVSTdPMEZCUjI1Q0xGRkJRVUVzUzBGQlFTeERRVUZCTEdOQlFXTXNSMEZCUnl4WlFVRkJPenRCUVVObUxGbEJRVUVzVDBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzVFVGQlJTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEUxQlFVMHNRMEZCWjBJc1ZVRkJReXhYUVVGWExFVkJRVVVzVDBGQlR5eEZRVUZCTzJkQ1FVTTVSQ3hKUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRE8wRkJRMjVETEdkQ1FVRkJMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdRVUZEYkVJc2IwSkJRVUVzVDBGQlR5eFhRVUZYT3p0QlFVZHdRaXhuUWtGQlFTeFBRVUZCTEdGQlFVRXNRMEZCUVN4aFFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGWExGZEJRVmNzUlVGQlR5eEpRVUZCTEVOQlFVRXNSVUZCUVN4RFFVRkJRU3hQUVVGQkxFTkJRVUZCTEU5QlFVRXNRMEZCUVN4RlFVRkJMRVZCUVVFc1QwRkJUeXhEUVVGRkxFVkJRVUVzUlVGQlFTeEpRVUZKTEUxQlFVRXNSVUZCU1N4RFFVRkJMRU5CUVVFc1JVRkJRU3hMUVVGQkxFTkJRVUU3WVVGREwwTXNSVUZCUlN4RlFVRkZMRU5CUVVNN1UwRkJRVHRCUVVWU0xGRkJRVUVzUzBGQlFTeERRVUZCTEdkQ1FVRm5RaXhIUVVGSExGbEJRVUU3TzBGQlEycENMRmxCUVVFc1NVRkJUU3h0UWtGQmJVSXNSMEZCUnl4TFFVRkpMRU5CUVVNc1pVRkJaU3hGUVVGRk8xbEJRMnhFTEVsQlFVMHNUMEZCVHl4SFFVRkhMRzFDUVVGdFFpeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1dVRkRMME1zU1VGQlRTeFBRVUZQTEVkQlFVY3NiVUpCUVcxQ0xFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTXZReXhaUVVGQkxFbEJRVTBzYlVKQlFXMUNMRWRCUTNaQ0xFOUJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNiVUpCUVcxQ0xFVkJRVVVzWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXp0QlFVTTNSQ3hyUWtGQlJUdHJRa0ZEUVN4UFFVRlBMRWxCUVVrc1QwRkJUeXhEUVVGRExHMUNRVUZ0UWl4RlFVRkZMRmRCUVZjc1EwRkJReXhQUVVGUExFTkJRVU03UVVGRE5VUXNjMEpCUVVVN2MwSkJRMEVzYlVKQlFXMUNPMWxCUXpOQ0xFOUJRVTg3UVVGRFRDeG5Ra0ZCUVN4SlFVRkpMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVsQlFVa3NTMEZCU3p0QlFVTnVReXhuUWtGQlFTeFpRVUZaTEVWQlFVVXNTMEZCU3p0QlFVTnVRaXhuUWtGQlFTeFZRVUZWTEVWQlFVVXNTVUZCU1R0QlFVTm9RaXhuUWtGQlFTeFpRVUZaTEVWQlExWXNRMEZCUVN4RlFVRkJMRWxCUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dEJRVU5XTEhOQ1FVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03YzBKQlExZ3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zYlVOQlFVa3NiVUpCUVcxQ096czdaMEpCUjJwRUxHTkJRV01zUlVGQlJTeHRRa0ZCYlVJc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdOQlFXTXNRMEZCUXp0QlFVTTVSQ3huUWtGQlFTeFBRVUZQTEVWQlFVVXNTMEZCU3pzN08wRkJSMlFzWjBKQlFVRXNiMEpCUVc5Q0xFVkJRVVVzUzBGQlN6dEJRVU16UWl4blFrRkJRU3gxUWtGQmRVSXNSVUZCUlN4TFFVRkxPMEZCUXpsQ0xHZENRVUZCTEZOQlFWTXNSVUZCUlN4TFFVRkxPMkZCUTJwQ08wRkJRMGdzVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR2xDUVVGcFFpeEhRVUZITEZsQlFVRTdXVUZEYkVJc1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlFVRXNUMEZCUVN4RFFVRkJRU3hQUVVGQkxFTkJRVUVzUlVGQlFTeEZRVU5TTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVFc1JVRkJRU3hGUVVOaUxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVRXNRMEZCUVN4RFFVTm9RanRCUVVOS0xGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4bFFVRmxMRWRCUVVjc1dVRkJRVHRaUVVOb1FpeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkJRU3hQUVVGQkxFTkJRVUZCTEU5QlFVRXNRMEZCUVN4RlFVRkJMRVZCUTFJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlFTeEZRVUZCTEVWQlEySXNVMEZCVXl4RlFVRkZMRWxCUVVrc1JVRkJRU3hEUVVGQkxFTkJRMlk3UVVGRFNpeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1owTkJRV2RETEVkQlFVY3NXVUZCUVR0QlFVTnFReXhaUVVGQkxFbEJRVWtzVVVGQlVTeERRVUZETEdWQlFXVXNTMEZCU3l4UlFVRlJMRVZCUVVVN1owSkJRM3BET3p0WlFVZEdMRXRCUVVrc1EwRkJReXhsUVVGbExFVkJRVVU3UVVGRGVFSXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxIZENRVUYzUWl4SFFVRkhMRmxCUVVFN1FVRkRla0lzV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4dFFrRkJiVUlzUlVGQlJUdEJRVU0xUWl4blFrRkJRU3haUVVGWkxFTkJRVU1zUzBGQlNTeERRVUZETEcxQ1FVRnRRaXhEUVVGRE96dEJRVVV4UXl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzVVVGQlVTeEhRVUZITEZsQlFVRTdPMEZCUTFRc1dVRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhOUVVGRkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzUzBGQlN5eE5RVUZITEVsQlFVRXNTVUZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlFTeEZRVUZCTEVOQlFVRXNTVUZCUVN4RFFVRkJMRVZCUVVFc1JVRkJRU3hGUVVGRkxHRkJRV0VzUlVGQlJTeEpRVUZKTEVWQlFVVXNRMEZCUXp0QlFVTTVReXhUUVVGRE8wRkJSVVFzVVVGQlFTeExRVUZCTEVOQlFVRXNUMEZCVHl4SFFVRkhMRmxCUVVFN08wRkJRMUlzV1VGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TlFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFMUJRVVVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlFTeEpRVUZKTEd0RVFVRkpPMWxCUTNCQ0xFdEJRVWtzUTBGQlF5eG5Ra0ZCWjBJc1JVRkJSVHRCUVVONlFpeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1UwRkJVeXhIUVVGSExGbEJRVUU3UVVGRFZpeFpRVUZCTEhGQ1FVRnhRaXhEUVVGRExGbEJRVUU3WjBKQlEzQkNMRXRCUVVrc1EwRkJReXhQUVVGUExFVkJRVVU3UVVGRGFFSXNZVUZCUXl4RFFVRkRPMEZCUTBvc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEU5QlFVOHNSMEZCUnl4VlFVRkRMRWxCUVdFc1JVRkJSU3hYUVVFMFFpeEZRVUZCTzBGQlFUVkNMRmxCUVVFc1NVRkJRU3hYUVVGQkxFdEJRVUVzVFVGQlFTeEZRVUZCTEVWQlFVRXNWMEZCTkVJc1IwRkJRU3hMUVVGQkxFTkJRVUU3V1VGRGNFUXNTMEZCU1N4RFFVRkRMRkZCUVZFc1EwRkRXRHRCUVVORkxHZENRVUZCTEVsQlFVa3NSVUZCUlN4SlFVRkpPMEZCUTFZc1owSkJRVUVzV1VGQldTeEZRVU5XTEVsQlFVa3NTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRE8wRkJRMnBDTEhOQ1FVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRFlpeHpRa0ZCUlN4TFFVRkpMRU5CUVVNc1owSkJRV2RDTEVWQlFVVXNRMEZCUXl4WlFVRlpPMEZCUXpGRExHZENRVUZCTEcxQ1FVRnRRaXhGUVVGRkxEWkNRVUUyUWp0aFFVTnVSQ3hGUVVORUxGbEJRVUU3WjBKQlEwVXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSVHRCUVVOVUxHOUNRVUZCTEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUTFnc1ZVRkJReXhKUVVGeFFpeEZRVUZCTEVWQlFVc3NVVUZCUXp0M1FrRkRNVUlzVDBGQlR5eEZRVUZGTEZkQlFWY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFdEJRVXM3Y1VKQlF6VkRMRVZCUVVNc1JVRkJRU3hGUVVOR0xGbEJRVUU3UVVGRFJTeDNRa0ZCUVN4RFFVRkRMRmRCUVZjc1NVRkJTU3hMUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTzNkQ1FVVm9ReXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNWVUZCVlN4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRE8wRkJRM0pETEhGQ1FVRkRMRU5CUTBZN08wRkJSVXdzWVVGQlF5eERRVU5HTzBGQlEwZ3NVMEZCUXp0QlFVTkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxFOUJRVThzUjBGQlJ5eFpRVUZCTEVWQlFXVXNUMEZCUVN4TlFVRk5MRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUVN4RlFVRkJPMEZCUlhoRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdOQlFXTXNSMEZCUnl4WlFVRkJPMEZCUTJZc1dVRkJRU3hQUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4TFFVRkxPMEZCUTJ4Q0xHdENRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRWxCUVVrc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzBGQlEzcEVMR3RDUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1R0QlFVWnVRaXhUUVVWdFFqdFJRVVZ5UWl4TFFVRlhMRU5CUVVFc1YwRkJRU3hIUVVGSExGVkJRVU1zUzBGQmIwTXNSVUZCUVRzN1FVRkRha1FzV1VGQlFTeEpRVUZOTEdGQlFXRXNSMEZCUnl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGTkJRVk03UVVGRE1VTXNXVUZCUVN4SlFVRk5MR0ZCUVdFc1IwRkJSeXhoUVVGaExFZEJRVWNzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTVHRaUVVVMVJDeEpRVUZKTEdGQlFXRXNSVUZCUlR0blFrRkRha0lzUzBGQlNTeERRVUZETEdsQ1FVRnBRaXhGUVVGRk96dEJRVWN4UWl4WlFVRkJMRWxCUVVrc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWa3NSVUZCUlR0blFrRkROVUlzUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQlF5eFBRVUZQTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGSExFdEJRVXNzUTBGQlF6dEJRVU16UWl4blFrRkJRU3hKUVVORkxHRkJRV0U3UVVGRFlpeHZRa0ZCUVN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYTBKQlFXdENPMEZCUXpsQ0xHOUNRVUZCTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRM0JDTzBGQlEwRXNiMEpCUVVFc1MwRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTTdPenRaUVVkMFFpeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVc1QwRkJUeXhGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZETzBGQlEyeERMRk5CUVVNN1FVRkZSQ3hSUVVGQkxFdEJRVUVzUTBGQlFTeHZRa0ZCYjBJc1IwRkJSeXhaUVVGQk96dEJRVVZ5UWl4WlFVRkJMRWxCUVVrc1MwRkJTU3hEUVVGRExHMUNRVUZ0UWl4RlFVRkZPMmRDUVVNMVFpeExRVUZKTEVOQlFVTXNkMEpCUVhkQ0xFVkJRVVU3T3pzN08xbEJUV3BETEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSU3haUVVGWkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNXVUZCUVR0QlFVTndReXhuUWtGQlFTeExRVUZKTEVOQlFVTXNiVUpCUVcxQ0xFZEJRVWNzVlVGQlZTeERRVUZETEZsQlFVRTdiMEpCUTNCRExFdEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTJZc1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eEZRVUZGTEZsQlFWa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1EwRkJRenRCUVVONFF5eHBRa0ZCUXl4RFFVRkRPMEZCUTBvc1lVRkJReXhEUVVGRE8wRkJRMG9zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR2RDUVVGblFpeEhRVUZITEZsQlFVRTdRVUZEYWtJc1dVRkJRU3haUVVGWkxFTkJRVU1zUzBGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRE8wRkJRM0JETEZsQlFVRXNTMEZCU1N4RFFVRkRMR2xDUVVGcFFpeEhRVUZITEZOQlFWTTdRVUZEY0VNc1UwRkJRenRCUVVWRUxGRkJRVUVzUzBGQlFTeERRVUZCTEdWQlFXVXNSMEZCUnl4WlFVRkJPMWxCUTJoQ0xFdEJRVWtzUTBGQlF5eG5Ra0ZCWjBJc1JVRkJSVHRCUVVOMlFpeFpRVUZCTEV0QlFVa3NRMEZCUXl4cFFrRkJhVUlzUjBGQlJ5eFZRVUZWTEVOQlFVTXNZMEZCVFN4UFFVRkJMRXRCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlppeEZRVUZsTEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUXk5RUxGTkJRVU03UVVGRlJDeFJRVUZCTEV0QlFVRXNRMEZCUVN4dFFrRkJiVUlzUjBGQlJ5eFpRVUZCTzFsQlEzQkNMRXRCUVVrc1EwRkJReXhuUWtGQlowSXNSVUZCUlR0QlFVTjZRaXhUUVVGRE8xRkJSVVFzUzBGQlZTeERRVUZCTEZWQlFVRXNSMEZCUnl4VlFVRkRMRXRCUVc5RExFVkJRVUU3TzBGQlEyaEVMRmxCUVVFc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVlVGQlZTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1lVRkJZU3hGUVVGRk8yZENRVU42UlN4RFFVRkJMRVZCUVVFc1IwRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkRMRTFCUVUwc1RVRkJRU3hKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUVzUTBGQlFTeEZRVUZCTEVWQlFVY3NTMEZCU3l4RFFVRkRPenRCUVVjMVFpeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRXRCUVVzc1MwRkJTeXhGUVVGRk8wRkJRMmhFTEdkQ1FVRkJMRXRCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZET3p0WlFVZHlRaXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNUMEZCVHl4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRE8wRkJRMjVETEZOQlFVTTdVVUZGUkN4TFFVRXdRaXhEUVVGQkxEQkNRVUZCTEVkQlFVY3NWVUZCUXl4TFFVRnBRaXhGUVVGQk96dEJRVU0zUXl4WlFVRkJMRWxCUVVrc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlR0QlFVTjBRaXhuUWtGQlFTeExRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRenM3V1VGRmNrSXNRMEZCUVN4RlFVRkJMRWRCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZCUXl4alFVRmpMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQkxFTkJRVUVzUlVGQlFTeEZRVUZITEV0QlFVc3NRMEZCUXp0QlFVTnNReXhaUVVGQkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZMRVZCUVVVN1owSkJRM3BDTEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUVVVN08wRkJSVEZDTEZOQlFVTTdPMEZCUjBRc1VVRkJRU3hMUVVGQkxFTkJRVUVzV1VGQldTeEhRVUZITEZsQlFVRTdPMWxCUTJJc1NVRkJaMFVzVDBGQlFTeEhRVUZCTEVWQlFVRTdhVUpCUVdoRkxFbEJRV2RGTEVWQlFVRXNSMEZCUVN4RFFVRkJMRVZCUVdoRkxFVkJRV2RGTEVkQlFVRXNVMEZCUVN4RFFVRkJMRTFCUVVFc1JVRkJhRVVzUlVGQlowVXNSVUZCUVN4RlFVRkJPMmRDUVVGb1JTeFBRVUZuUlN4RFFVRkJMRVZCUVVFc1EwRkJRU3hIUVVGQkxGTkJRVUVzUTBGQlFTeEZRVUZCTEVOQlFVRTdPMEZCUldoRkxGbEJRVUVzU1VGQlRTeExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVONFFpeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhYUVVGWExFVkJRVVU3WjBKQlF6RkNMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkpMRVZCUVVVc1QwRkJUeXhEUVVGRE8wRkJRek5ETEdkQ1FVRkJMRWxCUTBVc1EwRkJReXhMUVVGTE8wRkJRMDRzYjBKQlFVRXNUMEZCVHl4TFFVRkxMRU5CUVVNc2EwSkJRV3RDTEV0QlFVc3NWVUZCVlR0QlFVTTVReXh2UWtGQlFTeExRVUZMTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVVzUlVGRE1VSTdiMEpCUTBFN096dFpRVWxLTEV0QlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNN1owSkJRMW9zVlVGQlZTeEZRVU5TTEVOQlFVRXNTMEZCU3l4TFFVRkJMRWxCUVVFc1NVRkJUQ3hMUVVGTExFdEJRVXdzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4TFFVRkxMRU5CUVVVc1RVRkJUU3hoUVVGWkxHZENRVUZuUWl4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eEhRVUZITEVsQlFVazdRVUZEZGtVc1owSkJRVUVzYlVKQlFXMUNMRVZCUVVVc01FSkJRVEJDTzBGQlEyaEVMR0ZCUVVFc1EwRkJRenRCUVVWSkxGbEJRVUVzU1VGQlFTeEZRVUYxUXl4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRUzlETEZsQlFWa3NSMEZCUVN4RlFVRkJMRU5CUVVFc1dVRkJRU3hGUVVGRkxGTkJRVk1zUjBGQlFTeEZRVUZCTEVOQlFVRXNVMEZCUVN4RlFVRkZMRTlCUVU4c1lVRkJaVHRCUVVWMlJDeFpRVUZCTEVsQlFVMHNWVUZCVlN4SFFVTmtMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNSMEZCU1N4VlFVRlZMRU5CUVVNc1dVRkJXU3hEUVVGRExGVkJRVlU3UVVGRE4wUXNXVUZCUVN4SlFVRk5MR0ZCUVdFc1IwRkRha0lzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxGVkJRVlVzUTBGQlF5eFpRVUZaTEVOQlFVTXNZVUZCWVR0WlFVVnVSU3hKUVVGTkxFdEJRVXNzUjBGRFZDeERRVUZCTEV0QlFVc3NTMEZCUVN4SlFVRkJMRWxCUVV3c1MwRkJTeXhMUVVGTUxFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNTMEZCU3l4RFFVRkZMRTFCUVUwc1lVRkJXU3huUWtGQlowSXNSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTzFsQlJYSkZMRWxCUVVrc1dVRkJXU3hGUVVGRk8wRkJRMVlzWjBKQlFVRXNTVUZCUVN4TFFVRjVRanRCUVVNMVFpeHhRa0ZCUVN4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGRExGRkJRVkVzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4dlFrRkJiMElzUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTTVSQ3h4UWtGQlFTeEhRVUZITEVOQlFVTXNWVUZCUXl4SFFVRkhMRWxCUVVzc1QwRkJRU3hIUVVGSExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFWWXNSVUZCVlN4RFFVRkRMRVZCUm5CQ0xGVkJRVlVzVVVGQlFTeEZRVUZGTEZGQlFWRXNVVUZGUVR0blFrRkRNMElzU1VGQlRTeFpRVUZaTEVkQlFVY3NVMEZCVXl4RFFVTTFRaXhWUVVGVkxFdEJRVllzU1VGQlFTeEpRVUZCTEZWQlFWVXNTMEZCVml4TlFVRkJMRWRCUVVFc1ZVRkJWU3hIUVVGSkxFVkJRVVVzUlVGRGFFSXNWVUZCVlN4RlFVTldMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEZRVU5xUWl4aFFVRmhMRU5CUTJRN1owSkJRMFFzU1VGQlRTeFZRVUZWTEVkQlFVY3NVMEZCVXl4RFFVTXhRaXhSUVVGUkxFdEJRVklzU1VGQlFTeEpRVUZCTEZGQlFWRXNTMEZCVWl4TlFVRkJMRWRCUVVFc1VVRkJVU3hIUVVGSkxFVkJRVVVzUlVGRFpDeFZRVUZWTEVWQlExWXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRMnBDTEdGQlFXRXNRMEZEWkR0blFrRkRSQ3hKUVVGTkxGbEJRVmtzUjBGQlJ5eERRVUZCTEZOQlFWTXNZVUZCVkN4VFFVRlRMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlZDeFRRVUZUTEVOQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVVzc1dVRkJXU3hoUVVGYUxGbEJRVmtzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRmFMRmxCUVZrc1EwRkJSU3hQUVVGUExFVkJRVVVzUTBGQlFUdG5Ra0ZEY2tVc1NVRkJUU3hWUVVGVkxFZEJRVWNzUTBGQlFTeFBRVUZQTEdGQlFWQXNUMEZCVHl4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVkFzVDBGQlR5eERRVUZGTEU5QlFVOHNSVUZCUlN4UFFVRkxMRlZCUVZVc1lVRkJWaXhWUVVGVkxFdEJRVUVzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCVml4VlFVRlZMRU5CUVVVc1QwRkJUeXhGUVVGRkxFTkJRVUU3UVVGRkwwUXNaMEpCUVVFc1NVRkJTU3hEUVVGRExGbEJRVmtzU1VGQlNTeERRVUZETEZWQlFWVXNSVUZCUlR0dlFrRkRhRU03TzJkQ1FVZEdMRWxCUVVrc1dVRkJXU3hKUVVGSkxHRkJRV0VzUTBGQlF5eFpRVUZaTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRk8yOUNRVU16UkRzN1owSkJSVVlzU1VGQlNTeFZRVUZWTEVsQlFVa3NZVUZCWVN4RFFVRkRMRlZCUVZVc1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVTdiMEpCUTNaRU96dEJRVWRHTEdkQ1FVRkJMRU5CUVVFc1JVRkJRU3hIUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1VVRkJVU3hOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlFTeERRVUZCTEVWQlFVRXNSVUZCUnl4RFFVRkRMRmxCUVZrc1JVRkJSU3hWUVVGVkxFTkJRVU1zUlVGQlJTeExRVUZMTEVOQlFVTTdPMmxDUVVOdVJEczdaMEpCUlV3c1NVRkJUU3hKUVVGSkxFZEJRVWNzVTBGQlV5eERRVU53UWl4TFFVRkxMRVZCUTB3c1ZVRkJWU3hGUVVOV0xFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RlFVTnFRaXhoUVVGaExFVkJRMklzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGSkxGTkJRVk1zUTBGRGFrTTdPMEZCUjBRc1owSkJRVUVzU1VGQlNTeEpRVUZKTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVN2IwSkJRMnhDTEV0QlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUlVGQlJTeEpRVUZKTEVOQlFVTTdPenRCUVVkNlF5eFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1dVRkJXU3hIUVVGSExGVkJRMklzU1VGQlZTeEZRVU5XTEV0QlFYZEZMRVZCUTNoRkxHVkJRWGRDTEVWQlFVRTdRVUZGZUVJc1dVRkJRU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVR0blFrRkJSVHRCUVVONlFpeFpRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXh0UWtGQmJVSXNTVUZCU1N4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGT3pzN1owSkJSMmhGTEV0QlFVa3NRMEZCUXl4dlFrRkJiMElzUlVGQlJUczdRVUZGTjBJc1dVRkJRU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWMEZCVnl4RlFVRkZPMEZCUXpGQ0xHZENRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF6czdXVUZGTDBJc1MwRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVXNTMEZCU3l4RlFVRkZMRXRCUVVzc1JVRkJSU3hsUVVGbExFTkJRVU03UVVGRGNrUXNXVUZCUVN4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTzJkQ1FVTTNRaXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNkVUpCUVhWQ0xFVkJRVVVzU1VGQlNTeEZRVUZGTEVOQlFVTTdPMEZCUld4RUxGbEJRVUVzU1VGQlNTeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2JVSkJRVzFDTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGakxFVkJRVVU3UVVGRGFFVXNaMEpCUVVFc1MwRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTTdPMEZCUTNKQ0xHbENRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUlVGQlJUdEJRVU0zUWl4blFrRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRVZCUVVVN1FVRkROVUlzYjBKQlFVRXNTMEZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU03TzJkQ1FVZG1MRWxCUVVFc1JVRkJRU3hIUVVGNVFpeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRnFReXhUUVVGVExFZEJRVUVzUlVGQlFTeERRVUZCTEZOQlFVRXNSVUZCUlN4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRV1U3UVVGRmVrTXNaMEpCUVVFc1NVRkRSU3hUUVVGVE8wRkJRMVFzYjBKQlFVRXNRMEZCUXl4UFFVRlBPMEZCUTFJc2NVSkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRMRVZCUTNoRU8wRkJRMEVzYjBKQlFVRXNTMEZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU03T3p0QlFVZDZRaXhUUVVGRE96dFJRVWRFTEV0QlFWY3NRMEZCUVN4WFFVRkJMRWRCUVVjc1ZVRkRXaXhKUVVGcFFpeEZRVU5xUWl4TFFVRjNSU3hGUVVONFJTeFRRVUZ0UWl4RlFVTnVRaXhsUVVGM1FpeEZRVUZCT3p0WlFVVjRRaXhKUVVGSkxGZEJRVmNzUjBGQlJ5eEpRVUZKT3p0QlFVZDBRaXhaUVVGQkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUVVVN1owSkJRemRDTEVsQlEwVXNWMEZCVnl4TFFVRkxMRWxCUVVrN2IwSkJRM0JDTEdOQlFXTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RlFVTm9SRHR2UWtGRFFUczdPMEZCUlVjc2FVSkJRVUVzU1VGQlNTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFpeEZRVUZGTzBGQlEzcERMR2RDUVVGQkxFbEJRVWtzVjBGQlZ5eExRVUZMTEVsQlFVa3NTVUZCU1N4bFFVRmxMRU5CUVVNc1YwRkJWeXhGUVVGRkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlR0dlFrRkRjRVU3T3p0cFFrRkZSenRCUVVOTUxHZENRVUZCTEVsQlFVa3NWMEZCVnl4TFFVRkxMRWxCUVVrc1NVRkJTU3hoUVVGaExFTkJRVU1zVjBGQlZ5eEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSVHR2UWtGRGJFVTdPenRCUVVsRkxGbEJRVUVzU1VGQlFTeEZRVk5HTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRlNXaXhSUVVGUkxFZEJRVUVzUlVGQlFTeERRVUZCTEZGQlFVRXNSVUZEVWl4WlFVRlpMRWRCUVVFc1JVRkJRU3hEUVVGQkxGbEJRVUVzUlVGRFdpeFRRVUZUTEVkQlFVRXNSVUZCUVN4RFFVRkJMRk5CUVVFc1JVRkRWQ3hQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4bFFVRmxMRWRCUVVFc1JVRkJRU3hEUVVGQkxHVkJRVUVzUlVGRFppeGhRVUZoTEVkQlFVRXNSVUZCUVN4RFFVRkJMR0ZCUVVFc1JVRkRZaXhQUVVGUExFZEJRVUVzUlVGQlFTeERRVUZCTEU5QlFVRXNSVUZEVUN4VFFVRlRMRWRCUVVFc1JVRkJRU3hEUVVGQkxGTkJRMGM3V1VGRlpDeEpRVU5GTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeEZRVUZGTEZkQlFWY3NRMEZCUXp0blFrRkRNVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMmRDUVVOMlFpeFpRVUZaTzBGQlExb3NaMEpCUVVFc1pVRkJaU3hGUVVObU8wRkJRMEVzWjBKQlFVRXNTVUZCU1N4WFFVRlhMRXRCUVVzc1NVRkJTU3hGUVVGRk96dEJRVVY0UWl4dlFrRkJRU3hKUVVORkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVR0QlFVTnVRaXg1UWtGQlF5eERRVUZETEZOQlFWTTdRVUZEVkN3MlFrRkJReXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXp0QlFVTjZRaXhuUTBGQlFTeERRVUZETEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2EwSkJRV3RDTzJkRFFVTTVRaXhEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1JVRkRMMEk3UVVGRFFTeDNRa0ZCUVN4WFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExGZEJRVmNzUlVGQlJUczBRa0ZEYWtNc1NVRkJTU3hGUVVGRkxGRkJRVkVzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenMwUWtGRGJrTXNUVUZCVFN4RlFVRkZMRlZCUVZVc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXpzMFFrRkRka01zVFVGQlRTeEZRVUZGTEZWQlFWVXNRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF6dEJRVU40UXl4NVFrRkJRU3hEUVVGRE96czdRVUZKU2l4dlFrRkJRU3hKUVVORkxFTkJRVU1zVTBGQlV6dEJRVU5XTEhsQ1FVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNSVUZETlVRN2QwSkJRMEVzU1VGQlNTeFBRVUZQTEVWQlFVVTdRVUZEV0N3MFFrRkJRU3hYUVVGWExFZEJRVWNzVDBGQlR5eERRVUZETEZkQlFWY3NSVUZCUlR0QlFVTnFReXhuUTBGQlFTeEpRVUZKTEVWQlFVVXNUMEZCVHl4RFFVRkRMRkZCUVZFc1JVRkJSVHRCUVVONFFpeG5RMEZCUVN4TlFVRk5MRVZCUVVVc1QwRkJUeXhEUVVGRExGVkJRVlVzUlVGQlJUdEJRVU0xUWl4blEwRkJRU3hOUVVGTkxFVkJRVVVzVDBGQlR5eERRVUZETEZWQlFWVXNSVUZCUlR0QlFVTTNRaXcyUWtGQlFTeERRVUZET3pzN1FVRkpUaXh2UWtGQlFTeEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVU3ZDBKQlEzUkNMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRFdpdzBRa0ZCUVN4WlFVRlpMRVZCUVVVc1YwRkJWenRCUVVNeFFpeDVRa0ZCUVN4RFFVRkRPenRCUVVWS0xHOUNRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHdENRVUZyUWl4RlFVRkZPM2RDUVVOc1F5eExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVc1pVRkJaU3hGUVVGRkxHVkJRV1VzUlVGQlJTeERRVUZET3pzN1owSkJTWFpFTEVsQlFVa3NXVUZCV1N4RlFVRkZPMEZCUTJoQ0xHOUNRVUZCTEVsQlFVMHNVVUZCVVN4SFFVRkhMRU5CUVVNc1UwRkJVeXhKUVVGSkxFTkJRVU1zVDBGQlR6dEJRVU4yUXl4dlFrRkJRU3hKUVVGTkxHRkJRV0VzUjBGQlJ5eFRRVUZUTEVsQlFVa3NRMEZCUXl4UFFVRlBPMEZCUXpORExHOUNRVUZCTEVsQlFVMHNZVUZCWVN4SFFVRkhMRk5CUVZNc1NVRkJTU3hQUVVGUE8yOUNRVU14UXl4SlFVRkpMRkZCUVZFc1JVRkJSVHRCUVVOYUxIZENRVUZCTEZGQlFWRXNTMEZCVWl4SlFVRkJMRWxCUVVFc1VVRkJVU3hMUVVGU0xFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNVVUZCVVN4RFFVRkhMRU5CUVVNc1YwRkJWeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEV0QlFVc3NRMEZCUXpzN2VVSkJRMnBETEVsQlFVa3NZVUZCWVN4RlFVRkZPMEZCUTNoQ0xIZENRVUZCTEVsQlFVa3NWMEZCVnl4TFFVRkxMRWxCUVVrc1JVRkJSVHRCUVVONFFpdzBRa0ZCUVN4UlFVRlJMRXRCUVZJc1NVRkJRU3hKUVVGQkxGRkJRVkVzUzBGQlVpeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRkZCUVZFc1EwRkJSeXhEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNSVUZCUlN4TFFVRkxMRU5CUVVNN08wRkJRekZDTERaQ1FVRkJMRWxCUVVrc1dVRkJXU3hEUVVGRExGZEJRVmNzUlVGQlJTeFRRVUZUTEVOQlFVTXNSVUZCUlRzMFFrRkRMME1zU1VGQlNTeFRRVUZUTEVWQlFVVTdRVUZEWWl4blEwRkJRU3hSUVVGUkxFdEJRVklzU1VGQlFTeEpRVUZCTEZGQlFWRXNTMEZCVWl4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxGRkJRVkVzUTBGQlJ5eERRVUZETEZkQlFWY3NSVUZCUlN4VFFVRlRMRU5CUVVNc1JVRkJSU3hMUVVGTExFTkJRVU03TzJsRFFVTjBRenRCUVVOTUxHZERRVUZCTEZGQlFWRXNTMEZCVWl4SlFVRkJMRWxCUVVFc1VVRkJVU3hMUVVGU0xFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNVVUZCVVN4RFFVRkhMRU5CUVVNc1YwRkJWeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEV0QlFVc3NRMEZCUXpzN096WkNRVVZ1UXp0QlFVTk1MRFJDUVVGQkxGRkJRVkVzUzBGQlVpeEpRVUZCTEVsQlFVRXNVVUZCVVN4TFFVRlNMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzVVVGQlVTeERRVUZITEVOQlFVTXNVMEZCVXl4RlFVRkZMRmRCUVZjc1EwRkJReXhGUVVGRkxFdEJRVXNzUTBGQlF6czdPMjlDUVVjdlF5eEpRVUZKTEdGQlFXRXNSVUZCUlR0QlFVTnFRaXgzUWtGQlFTeFJRVUZSTEV0QlFWSXNTVUZCUVN4SlFVRkJMRkZCUVZFc1MwRkJVaXhOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEZGQlFWRXNRMEZCUnl4RFFVRkRMRmRCUVZjc1JVRkJSU3hKUVVGSkxFTkJRVU1zUlVGQlJTeExRVUZMTEVOQlFVTTdPenR4UWtGRmJrTXNTVUZCU1N4bFFVRmxMRVZCUVVVN1FVRkRNVUlzYjBKQlFVRXNTVUZCU1N4WFFVRlhMRXRCUVVzc1NVRkJTU3hGUVVGRk8zZENRVU40UWl4SlFVRkpMRVZCUVVNc1lVRkJZU3hMUVVGaUxFbEJRVUVzU1VGQlFTeGhRVUZoTEV0QlFXSXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hoUVVGaExFTkJRVVVzVFVGQlRTeERRVUZCTEVWQlFVVTdORUpCUXpGQ0xGRkJRVkVzUzBGQlFTeEpRVUZCTEVsQlFWSXNVVUZCVVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVklzVVVGQlVTeERRVUZITEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUVVVc1MwRkJTeXhEUVVGRE96czJRa0ZETTBJN1FVRkRUQ3cwUWtGQlFTeEpRVUZOTERSQ1FVRTBRaXhIUVVGSExHRkJRV0VzUTBGQlF5eEpRVUZKTEVOQlEzSkVMRlZCUVVNc1dVRkJXU3hGUVVGQkxFVkJRVXNzVDBGQlFTeFRRVUZUTEVOQlFVTXNXVUZCV1N4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGd1F5eEZRVUZ2UXl4RFFVTjJSRHMwUWtGRlJDeEpRVUZKTERSQ1FVRTBRaXhGUVVGRk8yZERRVU5vUXl4SlFVRk5MRk5CUVZNc1IwRkJSeXhoUVVGaExFTkJRVU1zVFVGQlRTeERRVU53UXl4VlFVRkRMRmxCUVZrc1JVRkJTeXhGUVVGQkxFOUJRVUVzUTBGQlF5eFRRVUZUTEVOQlFVTXNXVUZCV1N4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGeVF5eEZRVUZ4UXl4RFFVTjRSRHRuUTBGRlJDeFJRVUZSTEV0QlFVRXNTVUZCUVN4SlFVRlNMRkZCUVZFc1MwRkJVaXhOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEZGQlFWRXNRMEZCUnl4VFFVRlRMRVZCUVVVc1MwRkJTeXhEUVVGRE96dHBRMEZEZGtJN1owTkJRMHdzVVVGQlVTeExRVUZCTEVsQlFVRXNTVUZCVWl4UlFVRlJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFMUJRVUVzUjBGQlVpeFJRVUZSTEVOQlFVRXNZVUZCUVN4RFFVRkJMR0ZCUVVFc1EwRkJRU3hGUVVGQkxFVkJRVThzWVVGQllTeEZRVUZCTEVsQlFVRXNRMEZCUVN4RlFVRkJMRU5CUVVVc1YwRkJWeXhEUVVGQkxFVkJRVUVzUzBGQlFTeERRVUZCTEVWQlFVY3NTMEZCU3l4RFFVRkRPenM3T3p0eFFrRkpia1E3YjBKQlEwd3NVVUZCVVN4TFFVRkJMRWxCUVVFc1NVRkJVaXhSUVVGUkxFdEJRVklzVFVGQlFTeEhRVUZCTEUxQlFVRXNSMEZCUVN4UlFVRlJMRU5CUVVjc1YwRkJWeXhGUVVGRkxFdEJRVXNzUTBGQlF6czdPMWxCU1d4RExFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdaMEpCUTJRc1EwRkJRU3hGUVVGQkxFZEJRVUVzUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJReXhSUVVGUkxFMUJRVUVzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlFTeEpRVUZCTEVOQlFVRXNSVUZCUVN4RlFVRkhMRmRCUVZjc1JVRkJSU3hMUVVGTExFTkJRVU03WjBKQlEzcERMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeFZRVUZWTEVWQlFVVXNTVUZCU1N4RlFVRkZMRU5CUVVNN08wRkJSWFpETEZOQlFVTTdPMUZCUjBRc1MwRkJaU3hEUVVGQkxHVkJRVUVzUjBGQlJ5eFZRVUZETEVsQlFXdENMRVZCUVVFN1FVRkRia01zV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVVHRuUWtGQlJUdFpRVU42UWl4SlFVRk5MRlZCUVZVc1IwRkJSeXhOUVVGTkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNN1dVRkROME1zU1VGQlRTeFZRVUZWTEVkQlFVY3NUVUZCVFN4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETzFsQlF6ZERMRWxCUVVrc2IwSkJRVzlDTEVkQlFVY3NTVUZCU1R0WlFVTXZRaXhKUVVGSkxFbEJRVWtzUlVGQlJUdEJRVU5TTEdkQ1FVRkJMRWxCUVUwc1kwRkJZeXhIUVVGSExHRkJRV0VzUTBGQlF5eEpRVUZKTEVOQlFVTTdRVUZETVVNc1owSkJRVUVzU1VGQlNTeFZRVUZWTEVsQlFVa3NWVUZCVlN4RlFVRkZPenRCUVVVMVFpeHZRa0ZCUVN4dlFrRkJiMElzUjBGQlJ5eFpRVUZaTEVOQlEycERMRWxCUVVrc1JVRkRTaXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNSVUZEYkVJc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlEyNUNPenR4UWtGRFNTeEpRVUZKTEZWQlFWVXNSVUZCUlR0dlFrRkRja0lzU1VGQlRTeHBRa0ZCYVVJc1IwRkJSeXhoUVVGaExFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNN2IwSkJRek5FTEc5Q1FVRnZRanRCUVVOc1FpeDNRa0ZCUVN4UFFVRlBMRU5CUVVNc1NVRkJTU3hGUVVGRkxHbENRVUZwUWl4RFFVRkRPMEZCUTJoRExEUkNRVUZCTEU5QlFVOHNRMEZCUXl4alFVRmpMRVZCUVVVc2FVSkJRV2xDTEVOQlFVTTdPM0ZDUVVOMlF5eEpRVUZKTEZWQlFWVXNSVUZCUlR0dlFrRkRja0lzU1VGQlRTeGxRVUZsTEVkQlFVY3NWMEZCVnl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETzI5Q1FVTjJSQ3h2UWtGQmIwSTdRVUZEYkVJc2QwSkJRVUVzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4bFFVRmxMRU5CUVVNN1FVRkRMMElzTkVKQlFVRXNUMEZCVHl4RFFVRkRMR05CUVdNc1JVRkJSU3hsUVVGbExFTkJRVU03T3p0WlFVYzVReXhKUVVGSkxHOUNRVUZ2UWl4RlFVRkZPMmRDUVVONFFpeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMEZCUTFvc2IwSkJRVUVzV1VGQldTeEZRVUZGTEVsQlFVazdRVUZEYmtJc2FVSkJRVUVzUTBGQlF6czdRVUZGVGl4VFFVRkRPMEZCUlVRc1VVRkJRU3hMUVVGQkxFTkJRVUVzWTBGQll5eEhRVUZITEZsQlFVRTdXVUZEWml4TFFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNN1FVRkRhRU1zVTBGQlF6dFJRVVZFTEV0QlFXZENMRU5CUVVFc1owSkJRVUVzUjBGQlJ5eFZRVUZETEVsQlFWVXNSVUZCUVRzN1FVRkROVUlzV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4RlFVRkZPMmRDUVVONlJEczdRVUZIUml4WlFVRkJMRWxCUVUwc1VVRkJVU3hIUVVGSExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZETVVJc2EwSkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTmlMR3RDUVVGRkxFdEJRVWtzUTBGQlF5eGxRVUZsTEVWQlFVVTdRVUZETVVJc1dVRkJRU3hKUVVGTkxGZEJRVmNzUjBGQlJ5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMEZCUXpkQ0xHdENRVUZGTzBGQlEwWXNhMEpCUVVVc1QwRkJUeXhEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5vUWl4dlFrRkJRU3hKUVVGSkxFVkJRVVVzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTndRaXh2UWtGQlFTeE5RVUZOTEVWQlFVVXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJRenRCUVVONlFpeHBRa0ZCUVN4RFFVRkRPMWxCUlU0c1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF6dEJRVU5hTEdkQ1FVRkJMRmxCUVZrc1JVRkJSU3hYUVVGWE8wRkJRekZDTEdGQlFVRXNRMEZCUXp0WlFVVkdMRU5CUVVFc1JVRkJRU3hIUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1VVRkJVU3hOUVVGQkxFbEJRVUVzU1VGQlFTeEZRVUZCTEV0QlFVRXNUVUZCUVN4SFFVRkJMRTFCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzU1VGQlFTeERRVUZCTEVWQlFVRXNSVUZCUnl4WFFVRlhMRU5CUVVNN1FVRkRiRU1zV1VGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2JVSkJRVzFDTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUlVGQlJUdG5Ra0ZETDBRc1MwRkJTU3hEUVVGRExHOUNRVUZ2UWl4RlFVRkZPMEZCUXpOQ0xHZENRVUZCTEV0QlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRE96dEJRVVZ5UWl4WlFVRkJMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGhRVUZoTEVWQlFVVTdRVUZETlVJc1owSkJRVUVzUzBGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNN08wRkJSWEJDTEZsQlFVRXNTVUZCU1N4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHdENRVUZyUWl4SlFVRkpMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTzJkQ1FVTTVSQ3hMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNkVUpCUVhWQ0xFVkJRVVVzU1VGQlNTeEZRVUZGTEVOQlFVTTdPMWxCUld4RUxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZCUlN4VlFVRlZMRVZCUVVVc1NVRkJTU3hGUVVGRkxFTkJRVU03UVVGRGNrTXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxGbEJRVmtzUjBGQlJ5eFpRVUZCT3p0QlFVTmlMRmxCUVVFc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4SlFVRkpMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVWQlFVVTdRVUZEYUVRc1owSkJRVUVzUzBGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNN08wRkJSM0JDTEZsQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1RVRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZETEZsQlFWa3NhMFJCUVVrN1FVRkROMElzVTBGQlF6dFJRVVZFTEV0QlFXTXNRMEZCUVN4alFVRkJMRWRCUVVjc1ZVRkJReXhMUVVGMVF5eEZRVUZCT3p0WlFVTjJSQ3hEUVVGQkxFVkJRVUVzUjBGQlFTeERRVUZCTEVWQlFVRXNSMEZCUVN4TFFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRExGTkJRVk1zVFVGQlFTeEpRVUZCTEVsQlFVRXNSVUZCUVN4TFFVRkJMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzUlVGQlFTeERRVUZCTEVsQlFVRXNRMEZCUVN4RlFVRkJMRVZCUVVjc1MwRkJTeXhEUVVGRE8wRkJRemRDTEZsQlFVRXNTVUZCVFN4UlFVRlJMRWRCUVVjc1MwRkJTeXhEUVVGRExFZEJRVWM3UVVGRk1VSXNXVUZCUVN4SlFVTkZMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTzBGQlEyaENMR2RDUVVGQkxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5PMEZCUTJ4Q0xHZENRVUZCTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhyUWtGQmEwSXNSVUZET1VJN1FVRkRRU3huUWtGQlFTeEpRVU5GTEZGQlFWRXNTMEZCU3l4UFFVRlBMRU5CUVVNc1UwRkJVenR2UWtGRE9VSXNVVUZCVVN4TFFVRkxMRTlCUVU4c1EwRkJReXhQUVVGUE8wRkJRelZDTEc5Q1FVRkJMRkZCUVZFc1MwRkJTeXhQUVVGUExFTkJRVU1zUzBGQlN5eEZRVU14UWp0QlFVTkJMRzlDUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4WlFVRlpMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJRU3hKUVVGQkxFTkJRVUVzUzBGQlFTeERRVUZKT3p0blFrRkZka0k3T3p0QlFVbEdMRmxCUVVFc1NVRkJTU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NSVUZCUlR0QlFVTnVRaXhuUWtGQlFTeEpRVUZKTEZGQlFWRXNTMEZCU3l4UFFVRlBMRU5CUVVNc1UwRkJVeXhKUVVGSkxGRkJRVkVzUzBGQlN5eFBRVUZQTEVOQlFVTXNUMEZCVHl4RlFVRkZPMjlDUVVOc1JTeExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUTNSQ0xHOUNRVUZCTEVsQlFVMHNZMEZCWXl4SFFVRkhMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UVVGRGFFTXNNRUpCUVVVN01FSkJRMEVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dEJRVU40UXl3NFFrRkJSVHRCUVVOR0xEaENRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2RVSkJRWFZDTzJkRFFVTm9ReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzBGQlEySXNhME5CUVVVN2EwTkJRMEVzYzBOQlFYTkRPMEZCUXpsRExHOUNRVUZCTEVsQlFVMHNXVUZCV1N4SFFVTm9RaXhEUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEV0QlFVa3NRMEZCUXl4UlFVRlJMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNUVUZCUVN4SFFVRkJMRVZCUVVFc1EwRkJSU3haUVVGWkxFTkJRVU1zVDBGQlR5eGhRVUZaTEU5QlFVODdkMEpCUTNSRUxFdEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhoUVVGaExFTkJRVU1zWTBGQll5eERRVUZETzBGQlEyeEZMRzlDUVVGQkxGbEJRVmtzV1VGQldTeFhRVUZYTzNkQ1FVTnFReXhaUVVGWkxFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVXNZVUZCWVN4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRE8yOUNRVVUzUXpzN1owSkJSMFlzU1VGQlRTeEpRVUZKTEVkQlFVY3NUMEZCVHl4RFFVRkRMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETzBGQlF6ZERMR2RDUVVGQkxFbEJRVWtzVVVGQlVTeExRVUZMTEU5QlFVOHNRMEZCUXl4TFFVRkxMRVZCUVVVN2IwSkJRemxDTEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUVVVN1FVRkRja0lzYjBKQlFVRXNTMEZCU3l4RFFVRkRMRTFCUVRKQ0xFTkJRVU1zU1VGQlNTeEZRVUZGTzI5Q1FVTjZReXhKUVVORkxFdEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZEWkN4M1FrRkJRU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEcxQ1FVRnRRaXhMUVVGTExEWkNRVUUyUWl4RlFVTm9SVHRCUVVOQkxIZENRVUZCTEV0QlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF6dEJRVU01UWl4M1FrRkJRU3hEUVVGRExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNiVUpCUVcxQ0xFbEJRVWtzUzBGQlNTeERRVUZETEdWQlFXVXNRMEZCUXl4SlFVRkpMRU5CUVVNN08zbENRVU40UkR0QlFVTk1MSGRDUVVGQkxFdEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRPenM3UVVGRmFFSXNjVUpCUVVFc1NVRkJTU3hSUVVGUkxFdEJRVXNzVDBGQlR5eERRVUZETEUxQlFVMHNSVUZCUlR0dlFrRkRkRU1zUzBGQlN5eERRVUZETEdOQlFXTXNSVUZCUlR0QlFVTnlRaXh2UWtGQlFTeExRVUZMTEVOQlFVTXNUVUZCTWtJc1EwRkJReXhKUVVGSkxFVkJRVVU3YjBKQlEzcERMRXRCUVVrc1EwRkJReXh2UWtGQmIwSXNSVUZCUlR0QlFVTXpRaXh2UWtGQlFTeExRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJRenM3UVVGRFpDeHhRa0ZCUVN4SlFVRkpMRkZCUVZFc1MwRkJTeXhQUVVGUExFTkJRVU1zUjBGQlJ5eEZRVUZGTzBGQlEyNURMRzlDUVVGQkxFdEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRPenRCUVVkeVFpeG5Ra0ZCUVN4SlFVRkpMRU5CUVVNc1MwRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeEZRVUZGTzBGQlEyNUNMRzlDUVVGQkxFTkJRVUVzUlVGQlFTeEhRVUZCTEUxQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1JVRkJReXhaUVVGWkxFMUJRVWNzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1RVRkJRU3hIUVVGQkxFVkJRVUVzUTBGQlFTeEpRVUZCTEVOQlFVRXNSVUZCUVN4RlFVRkJMRVZCUVVVc1NVRkJTU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVWQlFVVXNWMEZCVnl4RlFVRkZMRU5CUVVNN096dEJRVWM1UkN4VFFVRkRPMUZCUlVRc1MwRkJaU3hEUVVGQkxHVkJRVUVzUjBGQlJ5eFZRVUZETEV0QlFUQkRMRVZCUVVFN1FVRkRNMFFzV1VGQlFTeEpRVUZOTEZGQlFWRXNSMEZCUnl4TFFVRkxMRU5CUVVNc1IwRkJSenRCUVVNeFFpeFpRVUZCTEVsQlFVa3NVVUZCVVN4TFFVRkxMRTlCUVU4c1EwRkJReXhOUVVGTkxFVkJRVVU3WjBKQlF5OUNMRXRCUVVzc1EwRkJReXhqUVVGakxFVkJRVVU3WjBKQlEzUkNMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRMWc3UVVGRFJTeHZRa0ZCUVN4WlFVRlpMRVZCUVVVc1NVRkJTVHRwUWtGRGJrSXNSVUZEUkN4WlFVRkJPMEZCUTBVc2IwSkJRVUVzUzBGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRia0lzYjBKQlFVRXNWVUZCVlN4RFFVRkRMRmxCUVVFN2QwSkJRMVFzUzBGQlNTeERRVUZETEZGQlFWRXNSVUZCUlR0M1FrRkRaaXhMUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNXVUZCV1N4RlFVRkZMRXRCUVVzc1JVRkJSU3hEUVVGRE8wRkJRM2hETEhGQ1FVRkRMRU5CUVVNN1FVRkRTaXhwUWtGQlF5eERRVU5HT3p0QlFVVk1MRk5CUVVNN08xRkJSMFFzUzBGQldTeERRVUZCTEZsQlFVRXNSMEZCUnl4VlFVRkRMRXRCUVRCRExFVkJRVUU3TzBGQlEyeEVMRmxCUVVFc1NVRkJRU3hGUVZWR0xFZEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NSVUZVV2l4UFFVRlBMRWRCUVVFc1JVRkJRU3hEUVVGQkxFOUJRVUVzUlVGRFVDeFBRVUZQTEVkQlFVRXNSVUZCUVN4RFFVRkJMRTlCUVVFc1JVRkRVQ3d3UWtGQk1FSXNaME5CUVVFc1JVRkRNVUlzWTBGQll5eEhRVUZCTEVWQlFVRXNRMEZCUVN4alFVRkJMRVZCUTJRc2JVSkJRVzFDTEVkQlFVRXNSVUZCUVN4RFFVRkJMRzFDUVVGQkxFVkJRMjVDTEUxQlFVMHNXVUZCUVN4RlFVTk9MR2RDUVVGblFpeEhRVUZCTEVWQlFVRXNRMEZCUVN4blFrRkJRU3hGUVVOb1FpeHJRa0ZCYTBJc1IwRkJRU3hGUVVGQkxFTkJRVUVzYTBKQlFVRXNSVUZEYkVJc1RVRkJUU3haUVVOTk8xbEJRMlFzUTBGQlFTeEZRVUZCTEVkQlFVRXNRMEZCUVN4RlFVRkJMRWRCUVVFc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQlF5eFRRVUZUTEUxQlFVRXNTVUZCUVN4SlFVRkJMRVZCUVVFc1MwRkJRU3hOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkJMRU5CUVVFc1JVRkJRU3hGUVVGSExFdEJRVXNzUTBGQlF6dEJRVU0zUWl4WlFVRkJMRWxCUVVrc01FSkJRVEJDTzJkQ1FVRkZPMEZCUTJoRExGbEJRVUVzU1VGQlRTeFJRVUZSTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWRCUVdNN1FVRkRja01zV1VGQlFTeEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExFdEJRVXNzUTBGQlF5eFJRVUZSTzFsQlJYWkRMRWxCUVUwc1NVRkJTU3hIUVVGSExFOUJRVThzUTBGQlF5eExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRmxCUVZrc1EwRkJRenRCUVVVM1F5eFpRVUZCTEVsQlFVMHNaMEpCUVdkQ0xFZEJRVWNzVlVGQlF5eFJRVUZwUWl4RlFVRkZMRWxCUVZVc1JVRkJRVHRuUWtGRGNrUXNTVUZCU1N4cFFrRkJhVUlzUjBGQlJ5eEpRVUZKTzJkQ1FVTTFRaXhSUVVGUkxGRkJRVkU3YjBKQlEyUXNTMEZCU3l4UFFVRlBMRU5CUVVNc1ZVRkJWVHRCUVVOeVFpeDNRa0ZCUVN4cFFrRkJhVUlzUjBGQlJ6dEJRVU5zUWl3NFFrRkJSU3hSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdRVUZEYkVJc09FSkJRVVVzVDBGQlR5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNN2QwSkJRM0JDTzI5Q1FVTkdMRXRCUVVzc1QwRkJUeXhEUVVGRExGTkJRVk03UVVGRGNFSXNkMEpCUVVFc2FVSkJRV2xDTEVkQlFVYzdRVUZEYkVJc09FSkJRVVVzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEaENRVUZGTEU5QlFVOHNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRE8zZENRVU53UWp0dlFrRkRSaXhMUVVGTExFOUJRVThzUTBGQlF5eFBRVUZQTzBGQlEyeENMSGRDUVVGQkxHbENRVUZwUWl4SFFVRkhMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF5eERRVUZETzNkQ1FVTnlRenR2UWtGRFJpeExRVUZMTEU5QlFVOHNRMEZCUXl4VFFVRlRPMEZCUTNCQ0xIZENRVUZCTEdsQ1FVRnBRaXhIUVVGSExGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPM2RDUVVOeVF6dHZRa0ZEUml4TFFVRkxMRTlCUVU4c1EwRkJReXhOUVVGTk8wRkJRMnBDTEhkQ1FVRkJMR2xDUVVGcFFpeEhRVUZITzBGQlEyeENMRGhDUVVGRkxGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0QlFVTnNRaXc0UWtGQlJTeFRRVUZUTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenQzUWtGRGRFSTdiMEpCUTBZc1MwRkJTeXhQUVVGUExFTkJRVU1zVVVGQlVUdEJRVU51UWl4M1FrRkJRU3hwUWtGQmFVSXNSMEZCUnp0QlFVTnNRaXc0UWtGQlJTeFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1FVRkRiRUlzT0VKQlFVVXNVMEZCVXl4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRExFTkJRVU03ZDBKQlEzUkNPMjlDUVVOR0xFdEJRVXNzVDBGQlR5eERRVUZETEVsQlFVazdkMEpCUTJZc2FVSkJRV2xDTEVkQlFVY3NZMEZCWXl4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFVkJRVVVzWjBKQlFXZENMRU5CUVVNN2QwSkJRMnhGTzI5Q1FVTkdMRXRCUVVzc1QwRkJUeXhEUVVGRExFZEJRVWM3UVVGRFpDeDNRa0ZCUVN4cFFrRkJhVUlzUjBGQlJ5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RFFVRkRPM2RDUVVOMFF6czdRVUZGU2l4blFrRkJRU3hQUVVGUExHbENRVUZwUWp0QlFVTXhRaXhoUVVGRE8wRkJSVVFzV1VGQlFTeEpRVUZOTEZWQlFWVXNSMEZCUnl4VlFVRkRMRkZCUVdsQ0xFVkJRVVVzU1VGQlZTeEZRVUZCTzJkQ1FVTXZReXhKUVVGTkxHTkJRV01zUjBGQlJ5eEZRVUZGTzJkQ1FVTjZRaXhKUVVGSkxGbEJRVmtzUjBGQlJ5eFJRVUZSTzJkQ1FVTXpRaXhKUVVGSkxHTkJRV01zUjBGQlJ5eExRVUZMTzJkQ1FVTXhRaXhKUVVGSkxGVkJRVlVzUjBGQlJ5eERRVUZETzJkQ1FVTnNRaXhKUVVGSkxGbEJRVmtzUjBGQlJ5eG5Ra0ZCWjBJc1EwRkJReXhSUVVGUkxFVkJRVVVzU1VGQlNTeERRVUZETzJkQ1FVVnVSQ3hQUVVGUExFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlEzUkNMRzlDUVVGQkxFbEJRVWtzVlVGQlZTeEpRVUZKTEdOQlFXTXNSVUZCUlR0M1FrRkRhRU1zV1VGQldTeEhRVUZITEVsQlFVazdkMEpCUTI1Q096czdRVUZIUml4dlFrRkJRU3hKUVVGSkxFOUJRVThzU1VGQlNTeFpRVUZaTEVkQlFVY3NUMEZCVHl4RlFVRkZPMEZCUTNKRExIZENRVUZCTEZsQlFWa3NSMEZCUnl4UFFVRlBMRU5CUVVNc1ZVRkJWVHQzUWtGRGFrTXNXVUZCV1N4SFFVRkhMR0ZCUVdFc1EwRkJReXhQUVVGUExFVkJRVVVzUzBGQlNTeERRVUZETEV0QlFVczdRVUZET1VNc09FSkJRVVVzWjBKQlFXZENMRU5CUVVNc1dVRkJXU3hGUVVGRkxGbEJRVms3T0VKQlF6TkRMRTlCUVU4N096dEJRVWxpTEc5Q1FVRkJMRWxCUVVrc1QwRkJUeXhKUVVGSkxGbEJRVmtzUjBGQlJ5eFBRVUZQTEVWQlFVVTdRVUZEY2tNc2QwSkJRVUVzV1VGQldTeEhRVUZITEU5QlFVOHNRMEZCUXl4VFFVRlRPM2RDUVVOb1F5eFpRVUZaTEVkQlFVY3NZVUZCWVN4RFFVRkRMRTlCUVU4c1JVRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN6dEJRVU01UXl3NFFrRkJSU3huUWtGQlowSXNRMEZCUXl4WlFVRlpMRVZCUVVVc1dVRkJXVHM0UWtGRE0wTXNUMEZCVHpzN2IwSkJSMklzU1VGQlNTeGhRVUZoTEVOQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUczdRVUZGTTBNc2QwSkJRVUVzU1VGRFJTeFpRVUZaTEV0QlFVc3NUMEZCVHl4RFFVRkRMRTFCUVUwN1FVRkRMMElzTkVKQlFVRXNXVUZCV1N4TFFVRkxMRTlCUVU4c1EwRkJReXhKUVVGSkxFVkJRemRDTzBGQlEwRXNORUpCUVVFc1dVRkJXU3hIUVVGSExFOUJRVThzUTBGQlF5eFZRVUZWT3pzN1FVRkpia01zZDBKQlFVRXNTVUZEUlN4WlFVRlpMRXRCUVVzc1QwRkJUeXhEUVVGRExGRkJRVkU3UVVGRGFrTXNORUpCUVVFc1dVRkJXU3hMUVVGTExFOUJRVThzUTBGQlF5eEhRVUZITEVWQlF6VkNPMEZCUTBFc05FSkJRVUVzV1VGQldTeEhRVUZITEU5QlFVOHNRMEZCUXl4VFFVRlRPenRCUVVWc1F5eDNRa0ZCUVN4WlFVRlpMRWRCUVVjc1owSkJRV2RDTEVOQlFVTXNXVUZCV1N4RlFVRkZMRmxCUVZrc1EwRkJRenM3ZVVKQlEzUkVPM2RDUVVOTUxHTkJRV01zUjBGQlJ5eEpRVUZKT3p0QlFVVjJRaXh2UWtGQlFTeFZRVUZWTEVWQlFVVTdPMEZCUjJRc1owSkJRVUVzVDBGQlR5eFpRVUZaTzBGQlEzSkNMR0ZCUVVNN1FVRkZSQ3haUVVGQkxFbEJRVWtzVVVGQlVTeExRVUZMTEU5QlFVOHNRMEZCUXl4TFFVRkxMRVZCUVVVN1owSkJRemxDTEV0QlFVc3NRMEZCUXl4alFVRmpMRVZCUVVVN1FVRkRkRUlzWjBKQlFVRXNTMEZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhKUVVGSkxFVkJRVVVzUzBGQlN5eERRVUZETzJkQ1FVTTVRaXhEUVVGRExHMUNRVUZ0UWl4SlFVRkpMRXRCUVVrc1EwRkJReXhsUVVGbExFTkJRVU1zU1VGQlNTeERRVUZETzJkQ1FVTnNSRHM3UVVGRFN5eHBRa0ZCUVN4SlFVRkpMRkZCUVZFc1MwRkJTeXhQUVVGUExFTkJRVU1zVFVGQlRTeEZRVUZGTzJkQ1FVTjBReXhMUVVGTExFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlJYUkNMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRPMEZCUTI1Q0xHZENRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRVVU3UVVGRGJrSXNiMEpCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzVFVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkRMRmxCUVZrc1RVRkJSeXhKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUVzUTBGQlFTeEZRVUZCTEVWQlFVRXNSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeFhRVUZYTEVWQlFVVXNRMEZCUXpzN1owSkJSVEZFT3p0WlFVZEdMRWxCUVVrc1dVRkJXU3hIUVVGSExFbEJRVWs3V1VGRGRrSXNVVUZCVVN4UlFVRlJPMmRDUVVOa0xFdEJRVXNzVDBGQlR5eERRVUZETEZOQlFWTTdaMEpCUTNSQ0xFdEJRVXNzVDBGQlR5eERRVUZETEZWQlFWVTdaMEpCUTNaQ0xFdEJRVXNzVDBGQlR5eERRVUZETEU5QlFVODdaMEpCUTNCQ0xFdEJRVXNzVDBGQlR5eERRVUZETEZOQlFWTTdaMEpCUTNSQ0xFdEJRVXNzVDBGQlR5eERRVUZETEUxQlFVMDdaMEpCUTI1Q0xFdEJRVXNzVDBGQlR5eERRVUZETEZGQlFWRTdaMEpCUTNKQ0xFdEJRVXNzVDBGQlR5eERRVUZETEVsQlFVazdaMEpCUTJwQ0xFdEJRVXNzVDBGQlR5eERRVUZETEVkQlFVYzdRVUZEWkN4dlFrRkJRU3haUVVGWkxFZEJRVWNzVlVGQlZTeERRVUZETEZGQlFWRXNSVUZCUlN4SlFVRkpMRU5CUVVNN2IwSkJRM3BET3p0WlFVVktMRWxCUVVrc1EwRkJReXhaUVVGWkxFVkJRVVU3UVVGRGFrSXNaMEpCUVVFc1EwRkJRU3hGUVVGQkxFZEJRVUVzVFVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkRMRmxCUVZrc1RVRkJSeXhKUVVGQkxFbEJRVUVzUlVGQlFTeExRVUZCTEUxQlFVRXNSMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hEUVVGQkxFbEJRVUVzUTBGQlFTeEZRVUZCTEVWQlFVRXNSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeFhRVUZYTEVWQlFVVXNRMEZCUXp0blFrRkRlRVE3TzFsQlJVWXNTMEZCU3l4RFFVRkRMR05CUVdNc1JVRkJSVHRaUVVOMFFpeExRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVc2JVSkJRVzFDTEVWQlFVVXNOa0pCUVRaQ0xFVkJRVVVzUTBGQlF6dFpRVU55UlN4SlFVRkpMR3RDUVVGclFpeEZRVUZGTzBGQlEzUkNMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRPenRCUVVWb1F5eFpRVUZCTEV0QlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1dVRkJXU3hEUVVGRE96dFpRVVZzUXl4SlFVRkpMRTFCUVUwc1JVRkJSVHRCUVVOV0xHZENRVUZCTEVsQlFVMHNVMEZCVXl4SFFVRkhMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU03UVVGRGFFTXNaMEpCUVVFc1NVRkJUU3hSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETEZsQlFWa3NRMEZCUXp0QlFVTjJReXhuUWtGQlFTeEpRVUZOTEZGQlFWRXNSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRE8wRkJRemxDTEdkQ1FVRkJMRWxCUVUwc1QwRkJUeXhIUVVGSExFOUJRVThzUTBGQlF5eFpRVUZaTEVOQlFVTTdaMEpCUlhKRExFbEJRVWtzVTBGQlV5eExRVUZMTEZGQlFWRXNTVUZCU1N4UlFVRlJMRXRCUVVzc1QwRkJUeXhGUVVGRk96dHZRa0ZGYkVRc1MwRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eEZRVUZGTEc5Q1FVRnZRaXhGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZET3p0eFFrRkRlRU03TzI5Q1FVVk1MRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeHZRa0ZCYjBJc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF6czdPMEZCUjNCRUxGTkJRVU03T3p0UlFVbEVMRXRCUVdVc1EwRkJRU3hsUVVGQkxFZEJRVWNzVlVGQlF5eExRVUV3UXl4RlFVRkJPMEZCUXpORUxGbEJRVUVzU1VGQlRTeFJRVUZSTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWRCUVVjN1FVRkRNVUlzV1VGQlFTeEpRVUZKTEZGQlFWRXNTMEZCU3l4UFFVRlBMRU5CUVVNc1RVRkJUU3hGUVVGRk8yZENRVU12UWl4TFFVRkxMRU5CUVVNc1kwRkJZeXhGUVVGRk8yZENRVU4wUWl4TFFVRkpMRU5CUVVNc2IwSkJRVzlDTEVWQlFVVTdRVUZETTBJc1owSkJRVUVzUzBGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNN08wRkJSWFpDTEZOQlFVTTdVVUZGUkN4TFFVRlpMRU5CUVVFc1dVRkJRU3hIUVVGSExGVkJRVU1zUzBGQk1rTXNSVUZCUVR0WlFVTjZSQ3hKUVVGSkxFdEJRVXNzUlVGQlJUdEJRVU5VTEdkQ1FVRkJMRWxCUVVrc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUdHZRa0ZEZUVJc1MwRkJTeXhEUVVGRExHTkJRV01zUlVGQlJUczdPMWxCU1RGQ0xFdEJRVWtzUTBGQlF5eHZRa0ZCYjBJc1JVRkJSVHRaUVVWeVFpeEpRVUZCTEVWQlFVRXNSMEZCTmtJc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGQmNrTXNXVUZCV1N4SFFVRkJMRVZCUVVFc1EwRkJRU3haUVVGQkxFVkJRVVVzVVVGQlVTeEhRVUZCTEVWQlFVRXNRMEZCUVN4UlFVRmxPMWxCUXpkRExFbEJRVWtzV1VGQldTeEZRVUZGTzBGQlEyaENMR2RDUVVGQkxGRkJRVkVzUzBGQlVpeEpRVUZCTEVsQlFVRXNVVUZCVVN4TFFVRlNMRTFCUVVFc1IwRkJRU3hOUVVGQkxFZEJRVUVzVVVGQlVTeERRVUZITEVOQlFVTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFdEJRVXNzUTBGQlF6czdhVUpCUXpGQ08yZENRVU5NTEZGQlFWRXNTMEZCUVN4SlFVRkJMRWxCUVZJc1VVRkJVU3hMUVVGU0xFMUJRVUVzUjBGQlFTeE5RVUZCTEVkQlFVRXNVVUZCVVN4RFFVRkhMRWxCUVVrc1JVRkJSU3hMUVVGTExFTkJRVU03TzFsQlIzcENMRXRCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeFZRVUZWTEVWQlFVVXNTVUZCU1N4RlFVRkZMRU5CUVVNN1FVRkRja01zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMRXRCUVVzc1IwRkJSeXhaUVVGQk8xbEJRMDRzUzBGQlNTeERRVUZETEZsQlFWa3NSVUZCUlR0QlFVTnlRaXhUUVVGRE8xRkJSVVFzUzBGQlVTeERRVUZCTEZGQlFVRXNSMEZCUnl4VlFVRkRMRXRCUVZrc1JVRkJRVHRCUVVOMFFpeFpRVUZCTEVsQlEwVXNUMEZCVHl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUzBGQlN5eFRRVUZUTzBGQlF6ZERMR2RDUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZVUZCWVN4RlFVTjRRanRCUVVOQkxHZENRVUZCTEVsQlEwVXNTMEZCU3l4RFFVRkRMRTFCUVUwc1MwRkJTeXhSUVVGUk8wRkJRM3BDTEc5Q1FVRkJMRXRCUVVzc1EwRkJReXhOUVVGTkxFdEJRVXNzVVVGQlVTeERRVUZETEdWQlFXVTdRVUZEZWtNc2IwSkJRVUVzUzBGQlN5eERRVUZETEUxQlFVMHNTMEZCU3l4UlFVRlJMRU5CUVVNc1NVRkJTU3hGUVVNNVFqdEJRVU5CTEc5Q1FVRkJMRXRCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZET3pzN2FVSkJSV2hDTEVsQlFVa3NUMEZCVHl4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHRkJRV0VzUzBGQlN5eFZRVUZWTEVWQlFVVTdaMEpCUTNwRUxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4aFFVRmhMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVU3UVVGRGJrTXNiMEpCUVVFc1MwRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTTdPenRCUVVkNlFpeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1kwRkJZeXhIUVVGSExGbEJRVUU3TzBGQlEyWXNXVUZCUVN4SlFVRkpMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVsQlFVa3NRMEZCUXl4TFFVRkpMRU5CUVVNc1kwRkJZeXhGUVVGRkxFVkJRVVU3UVVGRGFFUXNaMEpCUVVFc1QwRkJUeXhKUVVGSk96dFpRVVZpTEZGQlEwVXNTMEZCUXl4RFFVRkJMR0ZCUVVFc1EwRkJRU3hSUVVGUkxFVkJRMUJCTEU5QlFVRXNRMEZCUVN4RlFVRkJMSEZDUVVGeFFpeEZRVUZGTEZOQlFWTXNSVUZEYUVNc1IwRkJSeXhGUVVGRkxGVkJRVU1zU1VGQlNTeEZRVUZCTzBGQlExSXNiMEpCUVVFc1MwRkJTU3hEUVVGRExGRkJRVkVzUjBGQlJ5eEpRVUZKTzBGQlEzUkNMR2xDUVVGRExFVkJRMGNzUlVGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVTldMRXRCUVVrc1EwRkJReXhMUVVGTExFVkJRMlFzUlVGQlFTeFBRVUZQTEVWQlFVVXNTMEZCU1N4RFFVRkRMRTlCUVU4c1JVRkRja0lzVlVGQlZTeEZRVU5TTEVOQlFVRXNSVUZCUVN4SFFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zYTBKQlFXdENMRTFCUVVFc1NVRkJRU3hKUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVRXNSVUZCUVN4SFFVTTNRaXhWUVVGVkxFTkJRVU1zV1VGQldTeERRVUZETEd0Q1FVRnJRaXhGUVVVMVF5eFJRVUZSTEVWQlFVVXNTMEZCU1N4RFFVRkRMRmxCUVZrc1JVRkRNMElzWTBGQll5eEZRVUZGTEV0QlFVa3NRMEZCUXl3d1FrRkJNRUlzUlVGREwwTXNVVUZCVVN4RlFVRkZMR05CUVdNc1EwRkJReXhMUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTEVOQlFVTXNSVUZETDBNc2RVSkJRWFZDTEVWQlFVVXNkVUpCUVhWQ0xFVkJRMmhFTEdWQlFXVXNSVUZCUlN4TFFVRkpMRU5CUVVNc2JVSkJRVzFDTEVWQlEzcERMRmxCUVZrc1JVRkJSU3hMUVVGSkxFTkJRVU1zWjBKQlFXZENMRVZCUTI1RExGTkJRVk1zUlVGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR2xDUVVGcFFpeEZRVU4yUXl4VFFVRlRMRVZCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHBRa0ZCYVVJc1JVRkRka01zWlVGQlpTeEZRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhGUVVOeVF5eHJRa0ZCYTBJc1JVRkJSU3hMUVVGSkxFTkJRVU1zV1VGQldTeEZRVU55UXl4bFFVRmxMRVZCUVVVc1MwRkJTU3hEUVVGRExHVkJRV1VzUlVGRGNrTXNXVUZCV1N4RlFVTldMRU5CUVVFc1JVRkJRU3hIUVVGQkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4TlFVRkJMRWxCUVVFc1NVRkJRU3hGUVVGQkxFdEJRVUVzVFVGQlFTeEhRVUZCTEVWQlFVRXNSMEZCU1N4VlFVRlZMRU5CUVVNc1dVRkJXU3hEUVVGRExGbEJRVmtzUlVGQlFTeERRVUZCTEVWQlIyaEZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVU5ZTzBGQlJXWXNVMEZCUXp0QlFVVkVMRkZCUVVFc1MwRkJRU3hEUVVGQkxHOUNRVUZ2UWl4SFFVRkhMRmxCUVVFN1FVRkRaaXhaUVVGQkxFbEJRVUVzUzBGRFNpeExRVUZKTEVOQlFVTXNTMEZCU3l4RlFVUktMRVZCUVVFc1IwRkJRU3hGUVVGQkxFTkJRVUVzVlVGQkswTXNSVUZCTDBNc1ZVRkJWU3hIUVVGQkxFVkJRVUVzUzBGQlFTeE5RVUZCTEVkQlFVY3NWVUZCVlN4RFFVRkRMRmxCUVZrc1EwRkJReXhWUVVGVkxFdEJRVUVzUlVGQlJTeE5RVUZOTEZsQlEyNUVPMEZCUTFvc1dVRkJRU3hKUVVGTkxHTkJRV01zUjBGRGJFSXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpPMWxCUTNaRUxFbEJRVTBzWTBGQll5eEhRVUZITEdOQlFXTXNSMEZCUnl4UFFVRlBMRWRCUVVjc1RVRkJUVHRCUVVONFJDeFpRVUZCTEVsQlFVa3NaVUZCWlR0QlFVVnVRaXhaUVVGQkxFbEJRVWtzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpMRVZCUVVVN1owSkJRek5DTEdWQlFXVXNSMEZCUnl3clFrRkJkMElzWTBGQll5eERRVU4wUkN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGTkJRVk1zUlVGRGNFSTdRVUZEUlN4dlFrRkJRU3hWUVVGVkxFVkJRVVVzWTBGQll6dEJRVU14UWl4dlFrRkJRU3hOUVVGTkxFVkJRVUVzVFVGQlFUdEJRVU5RTEdsQ1FVRkJMRU5CUTBZc1JVRkRReXhKUVVGQkxFTkJRVUVzUTBGQlFTeE5RVUZCTEVOQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVOVUxITkNRVUZGTEZsQlFWazdRVUZEV2l4M1FrRkJRU3hqUVVGakxFTkJRVU1zUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRVZCUVVVN1FVRkRha01zTkVKQlFVRXNWVUZCVlN4RlFVRkZMR05CUVdNN1FVRkRNVUlzTkVKQlFVRXNUVUZCVFN4RlFVRkJMRTFCUVVFN2VVSkJRMUE3YzBKQlEwUXNSVUZCUlN4RFFVTk9PenRwUWtGRFJ6dEJRVU5NTEdkQ1FVRkJMRWxCUVVrc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSVHRCUVVOcVF5eHZRa0ZCUVN4bFFVRmxMRWRCUVVjc2FVSkJRV3RDTEVOQlFVRXNUVUZCUVN4RFFVRkJMR05CUVdNc1EwRkRhRVFzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRVZCUTI1Q0xFVkJRVVVzVlVGQlZTeFpRVUZCTEVWQlFVVXNUVUZCVFN4UlFVRkJMRVZCUVVVc1EwRkRka0lzUTBGQlJUczdRVUZEUlN4eFFrRkJRU3hKUVVGSkxFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNZMEZCWXl4RlFVRkZPMjlDUVVOd1F5eGxRVUZsTEVkQlFVY3NlVUpCUVd0Q0xHTkJRV01zUTBGRGFFUXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRMjVDTEVWQlFVVXNWVUZCVlN4RlFVRkZMRTFCUVUwc1JVRkJSU3hOUVVGTkxGRkJRVUVzUlVGQlJTeERRVU12UWl4RFFVRkZPenRCUVVORkxIRkNRVUZCTEVsQlFVa3NTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXh0UWtGQmJVSXNSVUZCUlR0dlFrRkRla01zWlVGQlpTeEhRVUZITERCQ1FVRnRRaXhqUVVGakxFTkJRMnBFTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hGUVVOdVFpeEZRVUZGTEZWQlFWVXNSVUZCUlN4WFFVRlhMRVZCUVVVc1RVRkJUU3hSUVVGQkxFVkJRVVVzUTBGRGNFTXNRMEZCUlRzN1FVRkRSU3h4UWtGQlFTeEpRVUZKTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2NVSkJRWEZDTEVWQlFVVTdiMEpCUXpORExHVkJRV1VzUjBGQlJ5dzBRa0ZCY1VJc1kwRkJZeXhEUVVOdVJDeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1JVRkRia0k3UVVGRFJTeDNRa0ZCUVN4VlFVRlZMRVZCUVVVc1YwRkJWenRCUVVOMlFpeDNRa0ZCUVN4TlFVRk5MRVZCUVVFc1RVRkJRVHRCUVVOUUxIRkNRVUZCTEVOQlEwWXNRMEZCUlRzN2NVSkJRMFU3YjBKQlEwd3NaVUZCWlN4SFFVRkhMSGxDUVVGclFpeGpRVUZqTEVOQlEyaEVMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeEZRVU51UWp0QlFVTkZMSGRDUVVGQkxGVkJRVlVzUlVGQlJTeGpRVUZqTzBGQlF6RkNMSGRDUVVGQkxFMUJRVTBzUlVGQlFTeE5RVUZCTzBGQlExQXNjVUpCUVVFc1EwRkRSaXhEUVVGRk96czdRVUZKVUN4WlFVRkJMRkZCUTBVc1MwRkJRU3hEUVVGQkxHRkJRVUVzUTBGQlFTeE5RVUZCTEVWQlFVRXNSVUZEUlN4SlFVRkpMRVZCUVVNc1QwRkJUeXhGUVVOR0xGZEJRVUVzUlVGQlFTeFJRVUZSTEVWQlEyeENMRk5CUVZNc1JVRkJReXcyUWtGQk5rSXNSVUZCUVN4RlFVVjBReXhsUVVGbExFTkJRMWc3UVVGRldDeFRRVUZETzBGQlJVUXNVVUZCUVN4TFFVRkJMRU5CUVVFc1pVRkJaU3hIUVVGSExGbEJRVUU3T3p0WlFVTm9RaXhKUVVGTkxGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVUVzUlVGQlFTeEhRVUZCTEVWQlFVRTdRVUZEZWtNc1owSkJRVUVzUlVGQlFTeERRVUZETEhWQ1FVRjFRaXhEUVVGSExFZEJRVUVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpPMjlDUVVNeFF6dEJRVVZHTEZsQlFVRXNTVUZCVFN4WFFVRlhMRWRCUVVjc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFhRVUZYTEVsQlFVa3NTMEZCVHl4RFFVRkJMR0ZCUVVFc1EwRkJRU3hQUVVGQkxFVkJRVUVzUlVGQlFTeEpRVUZKTEVWQlFVTXNUVUZCVFN4SFFVRkhPMWxCUTI1RkxFbEJRVTBzWTBGQll5eEhRVUZITEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1kwRkJZeXhKUVVGSkxFdEJRVXM3UVVGRGJrUXNXVUZCUVN4SlFVRkJMRXRCUTBvc1MwRkJTU3hEUVVGRExFdEJRVXNzUlVGRVNpeEZRVUZCTEVkQlFVRXNSVUZCUVN4RFFVRkJMRlZCUVN0RExFVkJRUzlETEZWQlFWVXNSMEZCUVN4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGSExGVkJRVlVzUTBGQlF5eFpRVUZaTEVOQlFVTXNWVUZCVlN4TFFVRkJMRVZCUVVVc1RVRkJUU3haUVVOdVJEdFpRVU5hTEVsQlFVMHNWVUZCVlN4SFFVTmtMRTlCUVU4c1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEV0QlFVczdRVUZETVVJc2EwSkJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXp0clFrRkRXQ3hQUVVGUExFdEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4TFFVRkxPMEZCUTJwRExITkNRVUZGTEV0QlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNN1FVRkRZaXh6UWtGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRPMEZCUTFnc01FSkJRVVVzYlVKQlFXMUNMRU5CUVVNc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVWQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFVkJRVVU3UVVGRE5VUXNORUpCUVVFc1ZVRkJWU3hGUVVGQkxGVkJRVUU3UVVGRFZpdzBRa0ZCUVN4TlFVRk5MRVZCUVVFc1RVRkJRVHQ1UWtGRFVEdEJRVU5JTERCQ1FVRkZMRXRCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03T0VKQlExUXNkVUpCUVhWQ0xFTkJRVU1zUTBGQlFTeEZRVUZCTEVkQlFVRXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVGaExFMUJRVWtzU1VGQlFTeEpRVUZCTEVWQlFVRXNTMEZCUVN4TlFVRkJMRWRCUVVFc1JVRkJRU3hIUVVGQkxFVkJRVVVzUlVGQlJUdEJRVU4wUkN4blEwRkJRU3hWUVVGVkxFVkJRVUVzVlVGQlFUdEJRVU5XTEdkRFFVRkJMRTFCUVUwc1JVRkJRU3hOUVVGQk96WkNRVU5RT3poQ1FVTkVMR05CUVdNc1EwRkJReXhMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNSVUZCUlR0QlFVTnNReXhuUTBGQlFTeFZRVUZWTEVWQlFVRXNWVUZCUVR0QlFVTldMR2REUVVGQkxFMUJRVTBzUlVGQlFTeE5RVUZCTzBGQlExQXNOa0pCUVVFc1EwRkJRenRaUVVWa0xFOUJRVThzV1VGQldTeERRVUZETEZkQlFWY3NSMEZCUVN4RlFVRkJMRWRCUVVFc1JVRkJRVHRuUWtGRE4wSXNSVUZCUXl4RFFVRkJMR05CUVdNc1EwRkJSeXhIUVVGQkxGVkJRVU1zUzBGQmVVSXNSVUZCUVR0QlFVTXhReXh2UWtGQlFTeExRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzN2FVSkJRMjVDTzBGQlEwUXNaMEpCUVVFc1JVRkJRU3hEUVVGQkxFdEJRVXNzUjBGQlJTeFZRVUZWTzJkQ1FVTnFRaXhGUVVGTkxFTkJRVUVzVFVGQlFTeEhRVUZGTEV0QlFVa3NRMEZCUXl4VlFVRlZPMmRDUVVOMlFpeEZRVUZSTEVOQlFVRXNVVUZCUVN4SFFVRkZMRXRCUVVrc1EwRkJReXhaUVVGWk8yZENRVU16UWl4RlFVRlBMRU5CUVVFc1QwRkJRU3hIUVVGRkxFdEJRVWtzUTBGQlF5eFpRVUZaTzJkQ1FVTXhRaXhGUVVGUExFTkJRVUVzVDBGQlFTeEhRVUZGTEV0QlFVa3NRMEZCUXl4WFFVRlhPMmRDUVVONlFpeEZRVUZUTEVOQlFVRXNVMEZCUVN4SFFVRkZMRXRCUVVrc1EwRkJReXhqUVVGak8wRkJRemxDTEdkQ1FVRkJMRVZCUVVFc1EwRkJRU3hGUVVGRkxFZEJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RlFVRkZPMEZCUTJwQ0xHZENRVUZCTEVWQlFVRXNRMEZCUVN4SlFVRkpMRWRCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTzBGQlEzSkNMR2RDUVVGQkxFVkJRVUVzUTBGQlFTeEpRVUZKTEVkQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSk8wRkJRM0pDTEdkQ1FVRkJMRVZCUVVFc1EwRkJRU3hUUVVGVExFZEJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRPMEZCUXk5Q0xHZENRVUZCTEVWQlFVRXNRMEZCUVN4WFFVRlhMRWRCUVVVc1MwRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTzBGQlEzWkRMR2RDUVVGQkxFVkJRVUVzUTBGQlFTeFJRVUZSTEVkQlFVVXNTMEZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUk8wRkJRemRDTEdkQ1FVRkJMRVZCUVVFc1EwRkJRU3haUVVGWkxFZEJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMmRDUVVOeVF5eEZRVUZUTEVOQlFVRXNVMEZCUVN4SFFVRkZMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEZOQlFWTXNSVUZCUlN4VFFVRlRMRU5CUVVNN1FVRkRka1FzWjBKQlFVRXNSVUZCUVN4RFFVRkJMRXRCUVVzc1IwRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVczdRVUZEZGtJc1owSkJRVUVzUlVGQlFTeERRVUZCTEZGQlFWRXNSMEZCUlN4TFFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkU3UVVGRE4wSXNaMEpCUVVFc1JVRkJRU3hEUVVGQkxGRkJRVkVzUjBGQlJTeExRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFN1FVRkROMElzWjBKQlFVRXNSVUZCUVN4RFFVRkJMRkZCUVZFc1IwRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRTdRVUZETjBJc1owSkJRVUVzUlVGQlFTeERRVUZCTEd0Q1FVRkJMRU5CUVd0Q0xFZEJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxPMEZCUXpsRExHZENRVUZCTEVWQlFVRXNRMEZCUVN4alFVRkJMRU5CUVdNc1IwRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWYzdRVUZEZEVNc1owSkJRVUVzUlVGQlFTeERRVUZCTEdsQ1FVRkJMRU5CUVdsQ0xFZEJRVVVzUzBGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpPMEZCUXpWRExHZENRVUZCTEVWQlFVRXNRMEZCUVN4bFFVRkJMRU5CUVdVc1IwRkJSU3hMUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZsQlFWazdiMEpCUTNoRE8wRkJRMG9zVTBGQlF6dEJRVVZFTEZGQlFVRXNTMEZCUVN4RFFVRkJMR2xDUVVGcFFpeEhRVUZITEZsQlFVRTdRVUZEV2l4WlFVRkJMRWxCUVVFc1MwRlhSaXhMUVVGSkxFTkJRVU1zUzBGQlN5eEZRVlphTEZkQlFWY3NhVUpCUVVFc1JVRkRXQ3hSUVVGUkxHTkJRVUVzUlVGRFVpeFJRVUZSTEdOQlFVRXNSVUZEVWl4VFFVRlRMR1ZCUVVFc1JVRkRWQ3hQUVVGUExHRkJRVUVzUlVGRFVDeG5Ra0ZCWjBJc1IwRkJRU3hGUVVGQkxFTkJRVUVzWjBKQlFVRXNSVUZEYUVJc05FSkJRWGxDTEVWQlFYcENMRzlDUVVGdlFpeHRRa0ZCUnl4RlFVRkZMRWRCUVVFc1JVRkJRU3hGUVVONlFpeEZRVUYzUWl4SFFVRkJMRVZCUVVFc1EwRkJRU3hqUVVGQkxFVkJRWGhDTEdOQlFXTXNSMEZCUnl4RlFVRkJMRXRCUVVFc1RVRkJRU3hIUVVGQkxFOUJRVThzUzBGQlFTeEZRVU40UWl4aFFVRmhMRzFDUVVGQkxFVkJRMklzVVVGQlVTeGpRVU5KTzBGQlEyUXNXVUZCUVN4SlFVTkZMRmRCUVZjN1FVRkRXQ3huUWtGQlFTeERRVUZETEZGQlFWRTdhVUpCUTFJc1VVRkJVU3hKUVVGSkxFbEJRVWs3UVVGRFppeHZRa0ZCUVN4VFFVRlRMRWxCUVVrc1NVRkJTVHRCUVVOcVFpeHZRa0ZCUVN4UFFVRlBMRWxCUVVrc1NVRkJTVHR4UWtGRFppeGhRVUZoTEV0QlFVRXNTVUZCUVN4SlFVRmlMR0ZCUVdFc1MwRkJZaXhOUVVGQkxFZEJRVUVzVFVGQlFTeEhRVUZCTEdGQlFXRXNRMEZCUlN4TlFVRk5MRU5CUVVFc1EwRkJReXhGUVVONFFqdEJRVU5CTEdkQ1FVRkJMRkZCUTBVc1MwRkRSU3hEUVVGQkxHRkJRVUVzUTBGQlFTeFJRVUZCTEVWQlFVRXNSVUZCUVN4SlFVRkpMRVZCUVVNc1VVRkJVU3hGUVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTEVOQlEySXNPRUpCUVRoQ0xFVkJRemxDTEc5Q1FVRnZRaXhGUVVOd1FpeEZRVUZGTEhkRFFVRjNReXhGUVVGRkxGRkJRVkVzUlVGQlJTeERRVU4yUkN4RlFVTkVMRkZCUVZFc1JVRkJSU3hSUVVGUkxHZENRVU5PTEdOQlFXTXNSVUZETVVJc1QwRkJUeXhGUVVGRkxFdEJRVWtzUTBGQlF5eFpRVUZaTEVWQlF6RkNMRXRCUVVzc1JVRkJSU3huUWtGQlowSXNSVUZEZGtJc1VVRkJVU3hGUVVGRkxFVkJRVVVzUlVGQlFTeERRVU5hT3p0cFFrRkZRenRCUVVOTUxHZENRVUZCTEU5QlFVOHNTVUZCU1RzN1FVRkZaaXhUUVVGRE8wRkJlbXhEUXl4UlFVRkJMRXRCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlNTeERRVUZETEdkQ1FVRm5RaXhGUVVGRk8wRkJRM0JETEZGQlFVRXNTMEZCU1N4RFFVRkRMRzFDUVVGdFFpeEhRVUZITEZOQlFWTTdPenRCUVhCRWRFTXNTVUZCUVN4TlFVRkJMRU5CUVVFc1kwRkJRU3hEUVVGWExGVkJRVmtzUlVGQlFTeGpRVUZCTEVWQlFVRTdRVUZCZGtJc1VVRkJRU3hIUVVGQkxFVkJRVUVzV1VGQlFUdFpRVU5GTEU5QlFVODdRVUZEVEN4blFrRkJRU3haUVVGWkxFVkJRVVVzUzBGQlN6dEJRVU51UWl4blFrRkJRU3hWUVVGVkxFVkJRVVVzV1VGQldUdEJRVU40UWl4blFrRkJRU3hyUWtGQmEwSXNSVUZCUlN4WFFVRlhPMEZCUXk5Q0xHZENRVUZCTEZGQlFWRXNSVUZCUlN4TFFVRkxPMEZCUTJZc1owSkJRVUVzTUVKQlFUQkNMRVZCUVVVc1MwRkJTenRCUVVOcVF5eG5Ra0ZCUVN4WlFVRlpMRVZCUVVVc1VVRkJhVUk3UVVGREwwSXNaMEpCUVVFc2EwSkJRV3RDTEVWQlFVVXNTMEZCU3p0QlFVTjZRaXhuUWtGQlFTeFhRVUZYTEVWQlFVVXNRMEZCUXp0QlFVTmtMR2RDUVVGQkxGRkJRVkVzUlVGQlJTeExRVUZMTzBGQlEyWXNaMEpCUVVFc1ZVRkJWU3hGUVVGRkxFdEJRVXM3UVVGRGFrSXNaMEpCUVVFc01FSkJRVEJDTEVWQlFVVXNTMEZCU3p0QlFVTnFReXhuUWtGQlFTeHRRa0ZCYlVJc1JVRkJSU3hKUVVGSk8wRkJRM3BDTEdkQ1FVRkJMR05CUVdNc1JVRkJSU3hMUVVGTE8wRkJRM0pDTEdkQ1FVRkJMR0ZCUVdFc1JVRkJSU3hMUVVGTE8wRkJRM0JDTEdkQ1FVRkJMR3RDUVVGclFpeEZRVUZGTEV0QlFVczdRVUZEZWtJc1owSkJRVUVzYlVKQlFXMUNMRVZCUVVVc1MwRkJTenRCUVVNeFFpeG5Ra0ZCUVN4MVFrRkJkVUlzUlVGQlJTeExRVUZMTzBGQlF6bENMR2RDUVVGQkxEUkNRVUUwUWl4RlFVRkZMRXRCUVVzN1FVRkRia01zWjBKQlFVRXNOa0pCUVRaQ0xFVkJRVVVzUzBGQlN6dEJRVU53UXl4blFrRkJRU3hqUVVGakxFVkJRVVVzUzBGQlN6dEJRVU55UWl4blFrRkJRU3h4UWtGQmNVSXNSVUZCUlN4TFFVRkxPMEZCUXpWQ0xHZENRVUZCTEdOQlFXTXNSVUZCUlN4TFFVRkxPMEZCUTNKQ0xHZENRVUZCTEdGQlFXRXNSVUZCUlN4TFFVRkxPMEZCUTNCQ0xHZENRVUZCTEZOQlFWTXNSVUZCUlN4TFFVRkxPMEZCUTJoQ0xHZENRVUZCTEdGQlFXRXNSVUZCUlN4RlFVRkZPMEZCUTJwQ0xHZENRVUZCTEZkQlFWY3NSVUZCUlN4TlFVRk5PMEZCUTI1Q0xHZENRVUZCTEhOQ1FVRnpRaXhGUVVGRkxHZENRVUZuUWp0QlFVTjRReXhuUWtGQlFTeDNRa0ZCZDBJc1JVRkJSU3huUWtGQlowSTdRVUZETVVNc1owSkJRVUVzYTBKQlFXdENMRVZCUVVVc1dVRkJXVHRCUVVOb1F5eG5Ra0ZCUVN4dlFrRkJiMElzUlVGQlJTeFpRVUZaTzBGQlEyeERMR2RDUVVGQkxIRkNRVUZ4UWl4RlFVRkZMR1ZCUVdVN1FVRkRkRU1zWjBKQlFVRXNkVUpCUVhWQ0xFVkJRVVVzWlVGQlpUdEJRVU40UXl4blFrRkJRU3hwUWtGQmFVSXNSVUZCUlN4WFFVRlhPMEZCUXpsQ0xHZENRVUZCTEcxQ1FVRnRRaXhGUVVGRkxGZEJRVmM3UVVGRGFFTXNaMEpCUVVFc1kwRkJZeXhGUVVGRkxFMUJRVTA3UVVGRGRFSXNaMEpCUVVFc1lVRkJZU3hGUVVGRkxFbEJRVWs3UVVGRGJrSXNaMEpCUVVFc1kwRkJZeXhGUVVGRkxIZENRVUYzUWp0QlFVTjRReXhuUWtGQlFTeHJRa0ZCYTBJc1JVRkJSU3hMUVVGTE8wRkJRM3BDTEdkQ1FVRkJMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wRkJRM0pDTEdkQ1FVRkJMR2RDUVVGblFpeEZRVUZGTEVsQlFVazdRVUZEZEVJc1owSkJRVUVzWlVGQlpTeEZRVUZGTEVsQlFVazdRVUZEY2tJc1owSkJRVUVzWjBKQlFXZENMRVZCUVVVc1UwRkJVenRCUVVNelFpeG5Ra0ZCUVN4NVFrRkJlVUlzUlVGQlJTeExRVUZMTzBGQlEyaERMR2RDUVVGQkxHVkJRV1VzUlVGQlJTeExRVUZMTzJGQlEzWkNPMU5CUTBZN096dEJRVUZCTEV0QlFVRXNRMEZCUVR0QlFWRkVMRWxCUVVFc1ZVRkJRU3hEUVVGQkxGTkJRVUVzUTBGQlFTeHBRa0ZCYVVJc1IwRkJha0lzV1VGQlFUdFJRVU5GTEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eFJRVUZSTEVWQlFVVXNTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hKUVVGSkxFTkJRVU03VVVGRGRFUXNVVUZCVVN4RFFVRkRMR2RDUVVGblFpeERRVU4yUWl4clFrRkJhMElzUlVGRGJFSXNTVUZCU1N4RFFVRkRMR2REUVVGblF5eERRVU4wUXp0TFFVTkdPMEZCUlVRc1NVRkJRU3hWUVVGQkxFTkJRVUVzVTBGQlFTeERRVUZCTEd0Q1FVRnJRaXhIUVVGc1FpeFZRVU5GTEZOQlFUQkNMRVZCUXpGQ0xGTkJRVEJDTEVWQlFVRTdPMUZCUlRGQ0xFbEJRMFVzVTBGQlV5eERRVUZETEUxQlFVMDdRVUZEYUVJc1dVRkJRU3h6UWtGQmMwSXNRMEZCUXl4VFFVRlRMRU5CUVVNc1VVRkJVU3hGUVVGRkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUXk5RU8xbEJRMEVzU1VGQlNTeERRVUZETEdWQlFXVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF6czdRVUZGTTBNc1VVRkJRU3hKUVVORkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4TFFVRkxMRk5CUVZNN1dVRkRlRU1zVTBGQlV5eERRVUZETEZkQlFWY3NTMEZCU3l4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGZEJRVmNzUlVGRGFFUTdXVUZEUVN4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFVkJRVVVzWlVGQlpTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRPenRSUVVWMlF5eEpRVUZKTEZOQlFWTXNRMEZCUXl4alFVRmpMRXRCUVVzc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGpRVUZqTEVWQlFVVTdXVUZETVVRc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF6dG5Ra0ZEV2l4alFVRmpMRVZCUVVVc2JVSkJRVzFDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhqUVVGakxFTkJRVU03UVVGREwwUXNZVUZCUVN4RFFVRkRPenRSUVVWS0xFbEJRMFVzUTBGQlF5eFRRVUZUTEVOQlFVTXNUMEZCVHp0QlFVTnNRaXhaUVVGQkxFTkJRVU1zVDBGQlR5eERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZEYWtRN1dVRkRRU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNWVUZCVlN4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRE96dFJRVWR5UXl4SlFVRkpMRk5CUVZNc1EwRkJReXhKUVVGSkxFdEJRVXNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRVZCUVVVN1FVRkRkRU1zV1VGQlFTeEpRVUZKTEZOQlFWTXNRMEZCUXl4SlFVRkpMRXRCUVVzc1MwRkJTeXhKUVVGSkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4TFFVRkxMRWxCUVVrc1JVRkJSVHRCUVVONFJDeG5Ra0ZCUVN4RFFVRkJMRVZCUVVFc1IwRkJRU3hOUVVGQkxFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVTXNZMEZCWXl4clJFRkJTVHM3UVVGSEwwSXNXVUZCUVN4SlFVRkpMRk5CUVZNc1EwRkJReXhKUVVGSkxFdEJRVXNzU1VGQlNTeEpRVUZKTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hMUVVGTExFdEJRVXNzUlVGQlJUdEJRVU40UkN4blFrRkJRU3hEUVVGQkxFVkJRVUVzUjBGQlFTeE5RVUZCTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1pVRkJaU3hyUkVGQlNUczdPMHRCUjI1RE8wRkJSVVFzU1VGQlFTeFZRVUZCTEVOQlFVRXNVMEZCUVN4RFFVRkJMRzlDUVVGdlFpeEhRVUZ3UWl4WlFVRkJPMUZCUTBVc1NVRkJTU3hEUVVGRExIZENRVUYzUWl4RlFVRkZPMUZCUXk5Q0xFMUJRVTBzUTBGQlF5eHRRa0ZCYlVJc1EwRkJReXhSUVVGUkxFVkJRVVVzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4SlFVRkpMRU5CUVVNN1VVRkRla1FzVVVGQlVTeERRVUZETEcxQ1FVRnRRaXhEUVVNeFFpeHJRa0ZCYTBJc1JVRkRiRUlzU1VGQlNTeERRVUZETEdkRFFVRm5ReXhEUVVOMFF6dExRVU5HTzBGQmFXbERSQ3hKUVVGQkxGVkJRVUVzUTBGQlFTeFRRVUZCTEVOQlFVRXNiMEpCUVc5Q0xFZEJRWEJDTEZsQlFVRTdRVUZEVVN4UlFVRkJMRWxCUVVFc1MwRk5SaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVXhhTEZGQlFWRXNZMEZCUVN4RlFVTlNMRWxCUVVrc1ZVRkJRU3hGUVVOS0xIRkNRVUZ4UWl3eVFrRkJRU3hGUVVOeVFpeHhRa0ZCY1VJc01rSkJRVUVzUlVGRGNrSXNlVUpCUVhsQ0xDdENRVU5pTzBGQlEwNHNVVUZCUVN4SlFVRkJMRWxCUVVrc1IwRkJTeXhKUVVGSkxFTkJRVU1zUzBGQlN5eExRVUZtTzFGQlJWb3NTVUZCU1N4eFFrRkJjVUlzUlVGQlJUdEJRVU42UWl4WlFVRkJMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRMVlzYjBaQlFXOUdMRU5CUTNKR096dEJRVWRJTEZGQlFVRXNVVUZEUlN4TFFVRkJMRU5CUVVFc1lVRkJRU3hEUVVGQkxFdEJRVUVzUlVGQlFTeEZRVU5GTEZOQlFWTXNSVUZCUlN3eVEwRkRWQ3hSUVVGUkxFZEJRVWNzZFVOQlFYVkRMRWRCUVVjc1JVRkJSU3hEUVVOMlJDeEZRVUZCTzFsQlJVUXNVVUZCVVN4TFFVTlFMRXRCUVVFc1EwRkJRU3hoUVVGQkxFTkJRVU1zV1VGQldTeEZRVUZCUVN4UFFVRkJMRU5CUVVFc1JVRkRXQ3hKUVVGSkxFVkJRVVVzU1VGQlNTeEZRVU5XTEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUTJJc2NVSkJRWEZDTEVWQlEzSkNMRU5CUVVNc2NVSkJRWEZDTEVsQlFVa3NjVUpCUVhGQ0xFVkJReTlETEVsQlFVa3NTVUZCU1N4M1EwRkJkME1zUTBGRGFrUXNSVUZEUnl4SFFVRkRPMEZCUTBnc2EwSkJRVVU3YjBKQlEwVXNUMEZCVHl4RlFVRkZMRWxCUVVrc1EwRkJReXhqUVVGak8wRkJRemRDTzBGQlEwZ3NhMEpCUVVVc1NVRkJTU3hGUVVGRExFTkJRMVFzUTBGRFNEdFpRVU5CTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc2RVSkJRWFZDTEVsQlFVa3NTVUZCU1N4RFFVRkRMRzlDUVVGdlFpeEZRVUZGTzFsQlEycEZMRWxCUVVrc1EwRkJReXhsUVVGbExFVkJRVVU3UVVGRGRFSXNXVUZCUVN4SlFVRkpMRU5CUVVNc2FVSkJRV2xDTEVWQlFVVXNRMEZEY2tJN1MwRkZWRHRCUVVWRUxFbEJRVUVzVlVGQlFTeERRVUZCTEZOQlFVRXNRMEZCUVN4TlFVRk5MRWRCUVU0c1dVRkJRVHRCUVVORkxGRkJRVUVzU1VGQlRTeFJRVUZSTEVkQlFVY3NTVUZCU1N4RFFVRkRMR05CUVdNc1JVRkJSVHRCUVVWMFF5eFJRVUZCTEVsQlFVa3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTk8wRkJRVVVzV1VGQlFTeFBRVUZQTEZGQlFWRTdRVUZGZEVNc1VVRkJRU3hKUVVGSkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4RlFVRkZPMWxCUTNwQ0xFbEJRVWtzWlVGQlpTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hKUVVOdVF5eExRVUZETEVOQlFVRXNZVUZCUVN4RFFVRkJMRTlCUVU4c1NVRkJReXhoUVVGaExFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4aFFVRmhMRVZCUVVFN1owSkJRemxETEV0QlEwVXNRMEZCUVN4aFFVRkJMRU5CUVVFc1MwRkJRU3hGUVVGQkxFVkJRVUVzVTBGQlV5eEZRVUZETERCQ1FVRXdRaXhGUVVOd1F5eFJRVUZSTEVWQlFVVXNSVUZCUlN4RlFVTmFMRk5CUVZNc1JVRkJSU3hKUVVGSkxFTkJRVU1zWlVGQlpTeEZRVVU1UWl4RlFVRkJMRkZCUVZFc1EwRkRUQ3hEUVVORkxFbEJRMUlzU1VGQlNUdEJRVVZTTEZsQlFVRXNTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzU1VGQlNTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1JVRkJSVHRuUWtGRE1VTXNaVUZCWlN4SlFVTmlMRXRCUVVNc1EwRkJRU3hoUVVGQkxFTkJRVUVzVFVGQlRTeFpRVUZETEZGQlFWRXNSVUZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUlVGQlFTeEZRVUZOTEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUTJ4RUxHVkJRV1VzUTBGRFZDeERRVU5XT3p0QlFVZElMRmxCUVVFc1VVRkRSU3hMUVVGQkxFTkJRVUVzWVVGQlFTeERRVUZCTEV0QlFVRXNSVUZCUVN4SlFVRkJPMmRDUVVOSExFbEJRVWtzUTBGQlF5eHZRa0ZCYjBJc1JVRkJSVHRuUWtGRE0wSXNaVUZCWlN4RFFVTmFPenRSUVVsV0xGRkJRMFVzYjBKQlFVTTRRaXhwUWtGQlpTeEZRVUZCT1VJc1QwRkJRU3hEUVVGQkxFVkJRVUVzUlVGRFZpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RlFVTmtMRVZCUVVFc1UwRkJVeXhGUVVGRkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4RlFVTnlReXhWUVVGVkxFVkJRVVVzUTBGQlF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZMRVZCUTJ4RExHVkJRV1VzUlVGQlJTeEpRVUZKTEVOQlFVTXNiMEpCUVc5Q0xFVkJRVVVzUlVGRE5VTXNaVUZCWlN4RlFVRkZMRkZCUVZFc1JVRkRla0lzWlVGQlpTeEZRVUZGTEVsQlFVa3NRMEZCUXl4bFFVRmxMRVZCUTNKRExGTkJRVk1zUlVGQlJTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR1ZCUVdVc1JVRkRja01zUTBGQlFTeERRVUZCTzB0QlJVdzdTVUZEU0N4UFFVRkRMRlZCUVVFN1FVRkJSQ3hEUVRWMVEwRXNRMEZCZDBNc1UwRkJVeXhEUVRSMVEyaEVPMEZCUlVRc1NVRkJUU3d3UWtGQk1FSXNSMEZCUnl4UFFVRlBPMEZCUXpGRExFbEJRVTBzTmtKQlFUWkNMRWRCUVVjc1ZVRkJWVHM3T3pzaUxDSjRYMmR2YjJkc1pWOXBaMjV2Y21WTWFYTjBJanBiTUYxOVxuIl0sIm5hbWVzIjpbImNsc3giLCJSZWFjdCIsInVzZVJlZiIsInVzZUNhbGxiYWNrIiwidXNlRWZmZWN0IiwiY2xvbmVFbGVtZW50IiwiQ29tcG9uZW50IiwiY3JlYXRlUmVmIiwiY3JlYXRlRWxlbWVudCIsImlzU2FtZURheSIsImlzU2FtZURheSQxIiwiaXNXaXRoaW5JbnRlcnZhbCIsInN0YXJ0T2ZXZWVrIiwiZm9ybWF0Iiwic3RhcnRPZkRheSIsImVuZE9mRGF5IiwiaXNFcXVhbCIsImlzRXF1YWwkMSIsInBhcnNlSVNPIiwidG9EYXRlIiwiZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzIiwiaXNWYWxpZCIsImlzVmFsaWQkMSIsImlzQmVmb3JlIiwiZ2V0SVNPV2VlayIsImlzU2FtZU1vbnRoIiwiaXNTYW1lTW9udGgkMSIsImlzU2FtZVF1YXJ0ZXIiLCJpc1NhbWVRdWFydGVyJDEiLCJnZXRZZWFyIiwiZ2V0TW9udGgiLCJnZXRRdWFydGVyIiwic3RhcnRPZk1vbnRoIiwic3RhcnRPZlF1YXJ0ZXIiLCJlbmRPZk1vbnRoIiwic2V0TW9udGgiLCJzZXRRdWFydGVyIiwiaXNTYW1lWWVhciIsImlzU2FtZVllYXIkMSIsInNldEhvdXJzIiwiZ2V0SG91cnMiLCJzZXRNaW51dGVzIiwiZ2V0TWludXRlcyIsInNldFNlY29uZHMiLCJnZXRTZWNvbmRzIiwiYWRkSG91cnMiLCJhZGRNaW51dGVzIiwiYWRkU2Vjb25kcyIsImlzQWZ0ZXIiLCJzdGFydE9mWWVhciIsImVuZE9mWWVhciIsIm1pbiIsIm1heCIsInN1Yk1vbnRocyIsImRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzIiwic3ViUXVhcnRlcnMiLCJkaWZmZXJlbmNlSW5DYWxlbmRhclF1YXJ0ZXJzIiwic3ViWWVhcnMiLCJkaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzIiwiYWRkTW9udGhzIiwiYWRkUXVhcnRlcnMiLCJhZGRZZWFycyIsImlzRGF0ZSIsInBhcnNlIiwiZW5kT2ZXZWVrIiwiZ2V0RGF5IiwiZ2V0RGF0ZSIsImFkZERheXMiLCJhZGRXZWVrcyIsImdldFRpbWUiLCJzZXRZZWFyIiwiZGlmZmVyZW5jZUluRGF5cyIsInN1YldlZWtzIiwic3ViRGF5cyIsInVzZUZsb2F0aW5nIiwiYXV0b1VwZGF0ZSIsImZsaXAiLCJvZmZzZXQiLCJhcnJvdyIsIkZsb2F0aW5nQXJyb3ciLCJSZWFjdERPTSIsIl9leHRlbmRTdGF0aWNzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2V4dGVuZHMiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiX2Fzc2lnbiIsIl9fYXNzaWduIiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFwcGx5IiwiX19zcHJlYWRBcnJheSIsInRvIiwiZnJvbSIsInBhY2siLCJsIiwiYXIiLCJzbGljZSIsImNvbmNhdCIsIlN1cHByZXNzZWRFcnJvciIsImVycm9yIiwic3VwcHJlc3NlZCIsIm1lc3NhZ2UiLCJlIiwiRXJyb3IiLCJuYW1lIiwiQ2FsZW5kYXJDb250YWluZXIiLCJfYSIsIl9iIiwic2hvd1RpbWVTZWxlY3RPbmx5IiwiX2MiLCJzaG93VGltZSIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiYXJpYUxhYmVsIiwicm9sZSIsInVzZURldGVjdENsaWNrT3V0c2lkZSIsIm9uQ2xpY2tPdXRzaWRlIiwiaWdub3JlQ2xhc3MiLCJyZWYiLCJvbkNsaWNrT3V0c2lkZVJlZiIsImN1cnJlbnQiLCJoYW5kbGVDbGlja091dHNpZGUiLCJldmVudCIsInRhcmdldCIsImNvbXBvc2VkIiwiY29tcG9zZWRQYXRoIiwiZmluZCIsImV2ZW50VGFyZ2V0IiwiTm9kZSIsImNvbnRhaW5zIiwiSFRNTEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiQ2xpY2tPdXRzaWRlV3JhcHBlciIsImNvbnRhaW5lclJlZiIsInN0eWxlIiwiZGV0ZWN0UmVmIiwibm9kZSIsIktleVR5cGUiLCJnZXRMb2NhbGVTY29wZSIsInNjb3BlIiwid2luZG93IiwiZ2xvYmFsVGhpcyIsIkRFRkFVTFRfWUVBUl9JVEVNX05VTUJFUiIsIm5ld0RhdGUiLCJ2YWx1ZSIsIkRhdGUiLCJwYXJzZURhdGUiLCJkYXRlRm9ybWF0IiwibG9jYWxlIiwic3RyaWN0UGFyc2luZyIsInJlZkRhdGUiLCJsb2NhbGVPYmplY3QiLCJnZXRMb2NhbGVPYmplY3QiLCJnZXREZWZhdWx0TG9jYWxlIiwiZm9ybWF0cyIsImlzQXJyYXkiLCJfaSIsImZvcm1hdHNfMSIsImZvcm1hdF8xIiwicGFyc2VkRGF0ZSIsInVzZUFkZGl0aW9uYWxXZWVrWWVhclRva2VucyIsInVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnMiLCJmb3JtYXREYXRlIiwiZGF0ZSIsIm1pbkRhdGUiLCJmb3JtYXRTdHIiLCJsb2NhbGVPYmoiLCJ1bmRlZmluZWQiLCJjb25zb2xlIiwid2FybiIsInNhZmVEYXRlRm9ybWF0IiwiREFURV9SQU5HRV9TRVBBUkFUT1IiLCJzYWZlRGF0ZVJhbmdlRm9ybWF0Iiwic3RhcnREYXRlIiwiZW5kRGF0ZSIsInByb3BzIiwiZm9ybWF0dGVkU3RhcnREYXRlIiwiZm9ybWF0dGVkRW5kRGF0ZSIsInNhZmVNdWx0aXBsZURhdGVzRm9ybWF0IiwiZGF0ZXMiLCJmb3JtYXR0ZWRGaXJzdERhdGUiLCJmb3JtYXR0ZWRTZWNvbmREYXRlIiwiZXh0cmFEYXRlc0NvdW50Iiwic2V0VGltZSIsImhvdXIiLCJtaW51dGUiLCJfZCIsInNlY29uZCIsImdldFdlZWsiLCJnZXREYXlPZldlZWtDb2RlIiwiZGF5IiwiZ2V0U3RhcnRPZkRheSIsImdldFN0YXJ0T2ZXZWVrIiwiY2FsZW5kYXJTdGFydERheSIsIndlZWtTdGFydHNPbiIsImdldFN0YXJ0T2ZNb250aCIsImdldFN0YXJ0T2ZZZWFyIiwiZ2V0U3RhcnRPZlF1YXJ0ZXIiLCJnZXRTdGFydE9mVG9kYXkiLCJnZXRFbmRPZkRheSIsImdldEVuZE9mV2VlayIsImdldEVuZE9mTW9udGgiLCJkYXRlMSIsImRhdGUyIiwiaXNEYXlJblJhbmdlIiwidmFsaWQiLCJzdGFydCIsImVuZCIsImVyciIsInJlZ2lzdGVyTG9jYWxlIiwibG9jYWxlTmFtZSIsImxvY2FsZURhdGEiLCJfX2xvY2FsZURhdGFfXyIsInNldERlZmF1bHRMb2NhbGUiLCJfX2xvY2FsZUlkX18iLCJsb2NhbGVTcGVjIiwiZ2V0Rm9ybWF0dGVkV2Vla2RheUluTG9jYWxlIiwiZm9ybWF0RnVuYyIsImdldFdlZWtkYXlNaW5JbkxvY2FsZSIsImdldFdlZWtkYXlTaG9ydEluTG9jYWxlIiwiZ2V0TW9udGhJbkxvY2FsZSIsIm1vbnRoIiwiZ2V0TW9udGhTaG9ydEluTG9jYWxlIiwiZ2V0UXVhcnRlclNob3J0SW5Mb2NhbGUiLCJxdWFydGVyIiwiaXNEYXlEaXNhYmxlZCIsIm1heERhdGUiLCJleGNsdWRlRGF0ZXMiLCJleGNsdWRlRGF0ZUludGVydmFscyIsImluY2x1ZGVEYXRlcyIsImluY2x1ZGVEYXRlSW50ZXJ2YWxzIiwiZmlsdGVyRGF0ZSIsImlzT3V0T2ZCb3VuZHMiLCJzb21lIiwiZXhjbHVkZURhdGUiLCJpbmNsdWRlRGF0ZSIsImlzRGF5RXhjbHVkZWQiLCJpc01vbnRoRGlzYWJsZWQiLCJpc01vbnRoSW5SYW5nZSIsIm0iLCJzdGFydERhdGVZZWFyIiwic3RhcnREYXRlTW9udGgiLCJlbmREYXRlWWVhciIsImVuZERhdGVNb250aCIsImRheVllYXIiLCJpc01vbnRoWWVhckRpc2FibGVkIiwiZXhjbHVkZWREYXRlIiwiaW5jbHVkZWREYXRlIiwiaXNRdWFydGVyRGlzYWJsZWQiLCJpc1llYXJJblJhbmdlIiwieWVhciIsInN0YXJ0WWVhciIsImVuZFllYXIiLCJpc1llYXJEaXNhYmxlZCIsImlzUXVhcnRlckluUmFuZ2UiLCJxIiwic3RhcnREYXRlUXVhcnRlciIsImVuZERhdGVRdWFydGVyIiwiaXNUaW1lSW5MaXN0IiwidGltZSIsInRpbWVzIiwibGlzdFRpbWUiLCJpc1RpbWVEaXNhYmxlZCIsImV4Y2x1ZGVUaW1lcyIsImluY2x1ZGVUaW1lcyIsImZpbHRlclRpbWUiLCJpc1RpbWVJbkRpc2FibGVkUmFuZ2UiLCJtaW5UaW1lIiwibWF4VGltZSIsImJhc2VUaW1lIiwibW9udGhEaXNhYmxlZEJlZm9yZSIsInByZXZpb3VzTW9udGgiLCJldmVyeSIsIm1vbnRoRGlzYWJsZWRBZnRlciIsIm5leHRNb250aCIsInF1YXJ0ZXJEaXNhYmxlZEJlZm9yZSIsImZpcnN0RGF0ZU9mWWVhciIsInByZXZpb3VzUXVhcnRlciIsInF1YXJ0ZXJEaXNhYmxlZEFmdGVyIiwibGFzdERhdGVPZlllYXIiLCJuZXh0UXVhcnRlciIsInllYXJEaXNhYmxlZEJlZm9yZSIsInByZXZpb3VzWWVhciIsInllYXJzRGlzYWJsZWRCZWZvcmUiLCJ5ZWFySXRlbU51bWJlciIsImVuZFBlcmlvZCIsImdldFllYXJzUGVyaW9kIiwibWluRGF0ZVllYXIiLCJ5ZWFyRGlzYWJsZWRBZnRlciIsIm5leHRZZWFyIiwieWVhcnNEaXNhYmxlZEFmdGVyIiwic3RhcnRQZXJpb2QiLCJtYXhEYXRlWWVhciIsImdldEVmZmVjdGl2ZU1pbkRhdGUiLCJtaW5EYXRlcyIsImZpbHRlciIsImdldEVmZmVjdGl2ZU1heERhdGUiLCJtYXhEYXRlcyIsImdldEhpZ2hMaWdodERheXNNYXAiLCJoaWdobGlnaHREYXRlcyIsImRlZmF1bHRDbGFzc05hbWUiLCJkYXRlQ2xhc3NlcyIsIk1hcCIsImxlbiIsIm9iaiIsImtleSIsImNsYXNzTmFtZXNBcnIiLCJnZXQiLCJpbmNsdWRlcyIsInB1c2giLCJzZXQiLCJrZXlzIiwiYXJyT2ZEYXRlcyIsImsiLCJsZW5fMSIsImRhdGVLIiwiYXJyYXlzQXJlRXF1YWwiLCJhcnJheTEiLCJhcnJheTIiLCJpbmRleCIsImdldEhvbGlkYXlzTWFwIiwiaG9saWRheURhdGVzIiwiZm9yRWFjaCIsImhvbGlkYXkiLCJkYXRlT2JqIiwiaG9saWRheU5hbWUiLCJjbGFzc05hbWVzT2JqIiwiaG9saWRheU5hbWVzIiwiaG9saWRheU5hbWVBcnIiLCJ0aW1lc1RvSW5qZWN0QWZ0ZXIiLCJjdXJyZW50VGltZSIsImN1cnJlbnRNdWx0aXBsaWVyIiwiaW50ZXJ2YWxzIiwiaW5qZWN0ZWRUaW1lcyIsImluamVjdGVkVGltZSIsImluamVjdGVkVGltZVZhbHVlIiwibmV4dFRpbWUiLCJhZGRaZXJvIiwiTWF0aCIsImNlaWwiLCJnZXRIb3Vyc0luRGF5IiwiZ2V0RnVsbFllYXIiLCJzdGFydE9mVGhlTmV4dERheSIsInJvdW5kIiwic3RhcnRPZk1pbnV0ZSIsInNlY29uZHMiLCJtaWxsaXNlY29uZHMiLCJnZXRNaWxsaXNlY29uZHMiLCJpc1NhbWVNaW51dGUiLCJkMSIsImQyIiwiZ2V0TWlkbmlnaHREYXRlIiwiZGF0ZVdpdGhvdXRUaW1lIiwiaXNEYXRlQmVmb3JlIiwiZGF0ZVRvQ29tcGFyZSIsIm1pZG5pZ2h0RGF0ZSIsIm1pZG5pZ2h0RGF0ZVRvQ29tcGFyZSIsImlzU3BhY2VLZXlEb3duIiwiU3BhY2UiLCJJbnB1dFRpbWUiLCJfc3VwZXIiLCJfdGhpcyIsImlucHV0UmVmIiwib25UaW1lQ2hhbmdlIiwic2V0U3RhdGUiLCJwcm9wRGF0ZSIsImlzUHJvcERhdGVWYWxpZCIsImlzTmFOIiwic3BsaXQiLCJob3VycyIsIm1pbnV0ZXMiLCJOdW1iZXIiLCJvbkNoYW5nZSIsInJlbmRlclRpbWVJbnB1dCIsInN0YXRlIiwidGltZVN0cmluZyIsImN1c3RvbVRpbWVJbnB1dCIsInR5cGUiLCJwbGFjZWhvbGRlciIsIm9uQ2xpY2siLCJmb2N1cyIsInJlcXVpcmVkIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwicmVuZGVyIiwidGltZUlucHV0TGFiZWwiLCJEYXkiLCJkYXlFbCIsImhhbmRsZUNsaWNrIiwiaXNEaXNhYmxlZCIsImhhbmRsZU1vdXNlRW50ZXIiLCJvbk1vdXNlRW50ZXIiLCJoYW5kbGVPbktleURvd24iLCJldmVudEtleSIsInByZXZlbnREZWZhdWx0IiwiRW50ZXIiLCJvdGhlciIsImlzS2V5Ym9hcmRTZWxlY3RlZCIsImRpc2FibGVkS2V5Ym9hcmROYXZpZ2F0aW9uIiwiaXNTZWxlY3RlZERhdGUiLCJzZWxlY3RzTXVsdGlwbGUiLCJzZWxlY3RlZERhdGVzIiwiaXNTYW1lRGF5T3JXZWVrIiwic2VsZWN0ZWQiLCJwcmVTZWxlY3Rpb24iLCJpc0V4Y2x1ZGVkIiwiaXNTdGFydE9mV2VlayIsImlzU2FtZVdlZWsiLCJzaG93V2Vla1BpY2tlciIsImdldEhpZ2hMaWdodGVkQ2xhc3MiLCJkYXlTdHIiLCJnZXRIb2xpZGF5c0NsYXNzIiwiaG9saWRheXMiLCJoYXMiLCJpc0luUmFuZ2UiLCJpc0luU2VsZWN0aW5nUmFuZ2UiLCJzZWxlY3RzU3RhcnQiLCJzZWxlY3RzRW5kIiwic2VsZWN0c1JhbmdlIiwic2VsZWN0c0Rpc2FibGVkRGF5c0luUmFuZ2UiLCJzZWxlY3RpbmdEYXRlIiwiaXNTZWxlY3RpbmdSYW5nZVN0YXJ0IiwiaXNTZWxlY3RpbmdSYW5nZUVuZCIsImlzUmFuZ2VTdGFydCIsImlzUmFuZ2VFbmQiLCJpc1dlZWtlbmQiLCJ3ZWVrZGF5IiwiaXNBZnRlck1vbnRoIiwiaXNCZWZvcmVNb250aCIsImlzQ3VycmVudERheSIsImlzU2VsZWN0ZWQiLCJnZXRDbGFzc05hbWVzIiwiZGF5Q2xhc3NOYW1lIiwiZ2V0QXJpYUxhYmVsIiwiYXJpYUxhYmVsUHJlZml4V2hlbkVuYWJsZWQiLCJhcmlhTGFiZWxQcmVmaXhXaGVuRGlzYWJsZWQiLCJwcmVmaXgiLCJnZXRUaXRsZSIsImNvbXBhcmVEdCIsInRpdGxlcyIsIm1hcCIsImpvaW4iLCJnZXRUYWJJbmRleCIsInNlbGVjdGVkRGF5IiwicHJlU2VsZWN0aW9uRGF5IiwidGFiSW5kZXgiLCJzaG93V2Vla051bWJlciIsImhhbmRsZUZvY3VzRGF5Iiwic2hvdWxkRm9jdXNEYXkiLCJwcmV2ZW50U2Nyb2xsIiwicmVuZGVyRGF5Q29udGVudHMiLCJtb250aFNob3dzRHVwbGljYXRlRGF5c0VuZCIsIm1vbnRoU2hvd3NEdXBsaWNhdGVEYXlzU3RhcnQiLCJvbktleURvd24iLCJ1c2VQb2ludGVyRXZlbnQiLCJvblBvaW50ZXJFbnRlciIsInRpdGxlIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsImlubGluZSIsInNob3VsZEZvY3VzRGF5SW5saW5lIiwiaXNEYXlBY3RpdmVFbGVtZW50IiwiaXNEdXBsaWNhdGVEYXkiLCJXZWVrTnVtYmVyIiwid2Vla051bWJlckVsIiwiaGFuZGxlRm9jdXNXZWVrTnVtYmVyIiwicHJldlByb3BzIiwic2hvdWxkRm9jdXNXZWVrTnVtYmVyIiwiaXNJbnB1dEZvY3VzZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImFyaWFMYWJlbFByZWZpeCIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3ZWVrTnVtYmVyIiwiaXNXZWVrRGlzYWJsZWQiLCJkZWZhdWx0UHJvcHMiLCJ3ZWVrTnVtYmVyQ2xhc3NlcyIsIldlZWsiLCJoYW5kbGVEYXlDbGljayIsIm9uRGF5Q2xpY2siLCJoYW5kbGVEYXlNb3VzZUVudGVyIiwib25EYXlNb3VzZUVudGVyIiwiaGFuZGxlV2Vla0NsaWNrIiwiZW5hYmxlZFdlZWtEYXkiLCJwcm9jZXNzaW5nRGF5Iiwic2V0RGF0ZSIsImlzRW5hYmxlZCIsIm9uV2Vla1NlbGVjdCIsInNob3VsZENsb3NlT25TZWxlY3QiLCJzZXRPcGVuIiwiZm9ybWF0V2Vla051bWJlciIsInByb2Nlc3NpbmdEYXRlIiwicmVuZGVyRGF5cyIsImRheXMiLCJvbkNsaWNrQWN0aW9uIiwiYmluZCIsImNob29zZURheUFyaWFMYWJlbFByZWZpeCIsImRpc2FibGVkRGF5QXJpYUxhYmVsUHJlZml4IiwidmFsdWVPZiIsIkZJWEVEX0hFSUdIVF9TVEFOREFSRF9XRUVLX0NPVU5UIiwiTU9OVEhfQ09MVU1OU19MQVlPVVQiLCJUV09fQ09MVU1OUyIsIlRIUkVFX0NPTFVNTlMiLCJGT1VSX0NPTFVNTlMiLCJNT05USF9DT0xVTU5TIiwiZ3JpZCIsInZlcnRpY2FsTmF2aWdhdGlvbk9mZnNldCIsIk1PTlRIX05BVklHQVRJT05fSE9SSVpPTlRBTF9PRkZTRVQiLCJnZXRNb250aENvbHVtbnNMYXlvdXQiLCJzaG93Rm91ckNvbHVtbk1vbnRoWWVhclBpY2tlciIsInNob3dUd29Db2x1bW5Nb250aFllYXJQaWNrZXIiLCJNb250aCIsIk1PTlRIX1JFRlMiLCJRVUFSVEVSX1JFRlMiLCJvcmRlckluRGlzcGxheSIsImhhbmRsZU1vdXNlTGVhdmUiLCJvbk1vdXNlTGVhdmUiLCJpc1JhbmdlU3RhcnRNb250aCIsImlzUmFuZ2VTdGFydFF1YXJ0ZXIiLCJpc1JhbmdlRW5kTW9udGgiLCJpc1JhbmdlRW5kUXVhcnRlciIsImlzSW5TZWxlY3RpbmdSYW5nZU1vbnRoIiwiaXNTZWxlY3RpbmdNb250aFJhbmdlU3RhcnQiLCJfbW9udGgiLCJpc1NlbGVjdGluZ01vbnRoUmFuZ2VFbmQiLCJpc0luU2VsZWN0aW5nUmFuZ2VRdWFydGVyIiwiaXNXZWVrSW5Nb250aCIsImlzQ3VycmVudE1vbnRoIiwiaXNDdXJyZW50UXVhcnRlciIsImlzU2VsZWN0ZWRNb250aCIsImlzU2VsZWN0TW9udGhJbkxpc3QiLCJzZWxlY3RlZERhdGUiLCJpc1NlbGVjdGVkUXVhcnRlciIsImlzTW9udGhTZWxlY3RlZCIsIm1vbnRoSWR4IiwicmVuZGVyV2Vla3MiLCJ3ZWVrcyIsImlzRml4ZWRIZWlnaHQiLCJmaXhlZEhlaWdodCIsImJyZWFrQWZ0ZXJOZXh0UHVzaCIsImN1cnJlbnRXZWVrU3RhcnQiLCJpc1ByZVNlbGVjdGVkIiwid2Vla0FyaWFMYWJlbFByZWZpeCIsInNob3dXZWVrTnVtYmVycyIsImlzRml4ZWRBbmRGaW5hbFdlZWsiLCJpc05vbkZpeGVkQW5kT3V0T2ZNb250aCIsInBlZWtOZXh0TW9udGgiLCJvbk1vbnRoQ2xpY2siLCJpc01vbnRoRGlzYWJsZWRGb3JMYWJlbERhdGUiLCJsYWJlbERhdGUiLCJvbk1vbnRoTW91c2VFbnRlciIsImhhbmRsZU1vbnRoTmF2aWdhdGlvbiIsIm5ld01vbnRoIiwic2V0UHJlU2VsZWN0aW9uIiwiaGFuZGxlS2V5Ym9hcmROYXZpZ2F0aW9uIiwibW9udGhDb2x1bW5zTGF5b3V0IiwidmVydGljYWxPZmZzZXQiLCJnZXRWZXJ0aWNhbE9mZnNldCIsIm1vbnRoc0dyaWQiLCJjYWxjdWxhdGVOZXdEYXRlQW5kTW9udGgiLCJuZXdDYWxjdWxhdGVkRGF0ZSIsIm5ld0NhbGN1bGF0ZWRNb250aCIsIkFycm93UmlnaHQiLCJBcnJvd0xlZnQiLCJBcnJvd1VwIiwiQXJyb3dEb3duIiwiZ2V0TmV3RGF0ZUFuZE1vbnRoIiwiTUFYX0lURVJBVElPTlMiLCJldmVudEtleUNvcHkiLCJ2YWxpZERhdGVGb3VuZCIsIml0ZXJhdGlvbnMiLCJvbk1vbnRoS2V5RG93biIsImhhbmRsZU9uTW9udGhLZXlEb3duIiwiVGFiIiwib25RdWFydGVyQ2xpY2siLCJvblF1YXJ0ZXJNb3VzZUVudGVyIiwiaGFuZGxlUXVhcnRlck5hdmlnYXRpb24iLCJuZXdRdWFydGVyIiwib25RdWFydGVyS2V5RG93biIsImdldE1vbnRoQ2xhc3NOYW1lcyIsIm1vbnRoQ2xhc3NOYW1lIiwiX21vbnRoQ2xhc3NOYW1lIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwicHJlU2VsZWN0ZWRNb250aCIsImlzUHJlU2VsZWN0ZWRNb250aERpc2FibGVkIiwiZ2V0UXVhcnRlclRhYkluZGV4IiwicHJlU2VsZWN0ZWRRdWFydGVyIiwiaXNDdXJyZW50UXVhcnRlckRpc2FibGVkIiwiZ2V0UXVhcnRlckNsYXNzTmFtZXMiLCJnZXRNb250aENvbnRlbnQiLCJzaG93RnVsbE1vbnRoWWVhclBpY2tlciIsInJlbmRlck1vbnRoQ29udGVudCIsInNob3J0TW9udGhUZXh0IiwiZnVsbE1vbnRoVGV4dCIsImdldFF1YXJ0ZXJDb250ZW50IiwicmVuZGVyUXVhcnRlckNvbnRlbnQiLCJzaG9ydFF1YXJ0ZXIiLCJyZW5kZXJNb250aHMiLCJtb250aENvbHVtbnMiLCJqIiwicmVuZGVyUXVhcnRlcnMiLCJxdWFydGVycyIsInNob3dNb250aFllYXJQaWNrZXIiLCJzaG93UXVhcnRlclllYXJQaWNrZXIiLCJmb3JtYXR0ZWRBcmlhTGFiZWxQcmVmaXgiLCJ0cmltIiwib25Qb2ludGVyTGVhdmUiLCJNb250aERyb3Bkb3duT3B0aW9ucyIsInJlbmRlck9wdGlvbnMiLCJtb250aE5hbWVzIiwib25DYW5jZWwiLCJNb250aERyb3Bkb3duIiwiZHJvcGRvd25WaXNpYmxlIiwicmVuZGVyU2VsZWN0T3B0aW9ucyIsInJlbmRlclNlbGVjdE1vZGUiLCJwYXJzZUludCIsInJlbmRlclJlYWRWaWV3IiwidmlzaWJsZSIsInZpc2liaWxpdHkiLCJ0b2dnbGVEcm9wZG93biIsInJlbmRlckRyb3Bkb3duIiwicmVuZGVyU2Nyb2xsTW9kZSIsInJlc3VsdCIsInVuc2hpZnQiLCJ1c2VTaG9ydE1vbnRoSW5Ecm9wZG93biIsInJlbmRlcmVkRHJvcGRvd24iLCJkcm9wZG93bk1vZGUiLCJnZW5lcmF0ZU1vbnRoWWVhcnMiLCJsaXN0IiwiY3VyckRhdGUiLCJsYXN0RGF0ZSIsIk1vbnRoWWVhckRyb3Bkb3duT3B0aW9ucyIsIm1vbnRoWWVhcnNMaXN0IiwibW9udGhZZWFyIiwibW9udGhZZWFyUG9pbnQiLCJpc1NhbWVNb250aFllYXIiLCJkcm9wZG93bkNsYXNzIiwic2Nyb2xsYWJsZU1vbnRoWWVhckRyb3Bkb3duIiwiTW9udGhZZWFyRHJvcGRvd24iLCJvcHRpb25zIiwidGltZVBvaW50Iiwib25TZWxlY3RDaGFuZ2UiLCJ5ZWFyTW9udGgiLCJjaGFuZ2VkRGF0ZSIsIlRpbWUiLCJoZWlnaHQiLCJzY3JvbGxUb1RoZVNlbGVjdGVkVGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNjcm9sbFRvcCIsImNlbnRlckxpIiwiY2FsY0NlbnRlclBvc2l0aW9uIiwibW9udGhSZWYiLCJjbGllbnRIZWlnaHQiLCJoZWFkZXIiLCJpc1NlbGVjdGVkVGltZSIsImlzRGlzYWJsZWRUaW1lIiwibGlDbGFzc2VzIiwiY2xhc3NlcyIsInRpbWVDbGFzc05hbWUiLCJpbmplY3RUaW1lcyIsInByZXZpb3VzU2libGluZyIsIm5leHRTaWJsaW5nIiwicmVuZGVyVGltZXMiLCJhY3RpdmVEYXRlIiwib3BlblRvRGF0ZSIsImJhc2UiLCJzb3J0ZWRJbmplY3RUaW1lcyIsInNvcnQiLCJhIiwibWludXRlc0luRGF5IiwibXVsdGlwbGllciIsInRpbWVzVG9JbmplY3QiLCJ0aW1lVG9Gb2N1cyIsInJlZHVjZSIsInByZXYiLCJsaSIsInJlbmRlclRpbWVDYXB0aW9uIiwic2hvd1RpbWVDYXB0aW9uIiwiRnJhZ21lbnQiLCJ0aW1lQ2FwdGlvbiIsInRvZGF5QnV0dG9uIiwib2JzZXJ2ZURhdGVQaWNrZXJIZWlnaHRDaGFuZ2VzIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJyZXNpemVPYnNlcnZlciIsImRpc2Nvbm5lY3QiLCJ1cGRhdGVDb250YWluZXJIZWlnaHQiLCJSZXNpemVPYnNlcnZlciIsIm9ic2VydmUiLCJsaXN0SGVpZ2h0IiwiY2VudGVyTGlSZWYiLCJvZmZzZXRUb3AiLCJWRVJUSUNBTF9OQVZJR0FUSU9OX09GRlNFVCIsIlllYXIiLCJZRUFSX1JFRlMiLCJ1cGRhdGVGb2N1c09uUGFnaW5hdGUiLCJyZWZJbmRleCIsIndhaXRGb3JSZVJlbmRlciIsImhhbmRsZVllYXJDbGljayIsImhhbmRsZVllYXJOYXZpZ2F0aW9uIiwibmV3WWVhciIsIl9lIiwiYWJzIiwieSIsImlzQ3VycmVudFllYXIiLCJfeWVhciIsImlzU2VsZWN0ZWRZZWFyIiwib25ZZWFyQ2xpY2siLCJvblllYXJLZXlEb3duIiwibGVmdE92ZXJPZmZzZXQiLCJnZXRZZWFyQ2xhc3NOYW1lcyIsInllYXJDbGFzc05hbWUiLCJnZXRZZWFyVGFiSW5kZXgiLCJwcmVTZWxlY3RlZCIsImlzUHJlU2VsZWN0ZWRZZWFyRGlzYWJsZWQiLCJnZXRZZWFyQ29udGVudCIsInJlbmRlclllYXJDb250ZW50IiwieWVhcnNMaXN0Iiwib25ZZWFyTW91c2VFbnRlciIsIm9uWWVhck1vdXNlTGVhdmUiLCJfbG9vcF8xIiwidGhpc18xIiwiY2xlYXJTZWxlY3RpbmdEYXRlIiwiZ2VuZXJhdGVZZWFycyIsIm5vT2ZZZWFyIiwiWWVhckRyb3Bkb3duT3B0aW9ucyIsInNlbGVjdGVkWWVhciIsIm1pblllYXIiLCJtYXhZZWFyIiwiaW5jcmVtZW50WWVhcnMiLCJkZWNyZW1lbnRZZWFycyIsInNoaWZ0WWVhcnMiLCJhbW91bnQiLCJ5ZWFycyIsInllYXJEcm9wZG93bkl0ZW1OdW1iZXIiLCJzY3JvbGxhYmxlWWVhckRyb3Bkb3duIiwiZHJvcGRvd25SZWYiLCJkcm9wZG93bkN1cnJlbnQiLCJkcm9wZG93bkN1cnJlbnRDaGlsZHJlbiIsInNlbGVjdGVkWWVhck9wdGlvbkVsIiwiY2hpbGRFbCIsImFyaWFTZWxlY3RlZCIsInNjcm9sbEhlaWdodCIsIlllYXJEcm9wZG93biIsImFkanVzdERhdGVPbkNoYW5nZSIsImhhbmRsZVllYXJDaGFuZ2UiLCJvblNlbGVjdCIsIkRST1BET1dOX0ZPQ1VTX0NMQVNTTkFNRVMiLCJpc0Ryb3Bkb3duU2VsZWN0IiwiZWxlbWVudCIsImNsYXNzTmFtZXMiLCJ0ZXN0Q2xhc3NuYW1lIiwiaW5kZXhPZiIsIkNhbGVuZGFyIiwibW9udGhDb250YWluZXIiLCJzZXRDbGlja091dHNpZGVSZWYiLCJoYW5kbGVEcm9wZG93bkZvY3VzIiwib25Ecm9wZG93bkZvY3VzIiwiZ2V0RGF0ZUluVmlldyIsImluaXRpYWxEYXRlIiwiaW5jcmVhc2VNb250aCIsImhhbmRsZU1vbnRoQ2hhbmdlIiwiZGVjcmVhc2VNb250aCIsIm1vbnRoU2VsZWN0ZWRJbiIsImhhbmRsZU1vbnRoTW91c2VMZWF2ZSIsIm9uTW9udGhNb3VzZUxlYXZlIiwiaGFuZGxlWWVhck1vdXNlRW50ZXIiLCJoYW5kbGVZZWFyTW91c2VMZWF2ZSIsIm9uWWVhckNoYW5nZSIsImlzUmVuZGVyQXJpYUxpdmVNZXNzYWdlIiwiZ2V0RW5hYmxlZFByZVNlbGVjdGlvbkRhdGVGb3JNb250aCIsInRvdGFsRGF5cyIsInByZVNlbGVjdGVkRGF0ZSIsImRheUlkeCIsImVuYWJsZWRQcmVTZWxlY3Rpb25EYXRlIiwiaGFuZGxlQ3VzdG9tTW9udGhDaGFuZ2UiLCJvbk1vbnRoQ2hhbmdlIiwiaGFuZGxlTW9udGhZZWFyQ2hhbmdlIiwiY2hhbmdlWWVhciIsImNoYW5nZU1vbnRoIiwiY2hhbmdlTW9udGhZZWFyIiwiZGF5TmFtZXMiLCJ3ZWVrTGFiZWwiLCJ3ZWVrRGF5TmFtZSIsImZvcm1hdFdlZWtkYXkiLCJ3ZWVrRGF5Q2xhc3NOYW1lIiwiZm9ybWF0V2Vla0RheSIsInVzZVdlZWtkYXlzU2hvcnQiLCJkZWNyZWFzZVllYXIiLCJzaG93WWVhclBpY2tlciIsInJlbmRlclByZXZpb3VzQnV0dG9uIiwicmVuZGVyQ3VzdG9tSGVhZGVyIiwibW9udGhzU2hvd24iLCJtb250aHNUb1N1YnRyYWN0Iiwic2hvd1ByZXZpb3VzTW9udGhzIiwiZnJvbU1vbnRoRGF0ZSIsImFsbFByZXZEYXlzRGlzYWJsZWQiLCJmb3JjZVNob3dNb250aE5hdmlnYXRpb24iLCJzaG93RGlzYWJsZWRNb250aE5hdmlnYXRpb24iLCJpY29uQ2xhc3NlcyIsImNsaWNrSGFuZGxlciIsImlzRm9yWWVhciIsInByZXZpb3VzTW9udGhCdXR0b25MYWJlbCIsIl9mIiwicHJldmlvdXNZZWFyQnV0dG9uTGFiZWwiLCJfZyIsIl9oIiwicHJldmlvdXNNb250aEFyaWFMYWJlbCIsIl9qIiwicHJldmlvdXNZZWFyQXJpYUxhYmVsIiwiaW5jcmVhc2VZZWFyIiwicmVuZGVyTmV4dEJ1dHRvbiIsImFsbE5leHREYXlzRGlzYWJsZWQiLCJzaG93VGltZVNlbGVjdCIsIm5leHRNb250aEJ1dHRvbkxhYmVsIiwibmV4dFllYXJCdXR0b25MYWJlbCIsIm5leHRNb250aEFyaWFMYWJlbCIsIm5leHRZZWFyQXJpYUxhYmVsIiwicmVuZGVyQ3VycmVudE1vbnRoIiwic2hvd1llYXJEcm9wZG93biIsInNob3dNb250aERyb3Bkb3duIiwic2hvd01vbnRoWWVhckRyb3Bkb3duIiwicmVuZGVyWWVhckRyb3Bkb3duIiwib3ZlcnJpZGVIaWRlIiwicmVuZGVyTW9udGhEcm9wZG93biIsInJlbmRlck1vbnRoWWVhckRyb3Bkb3duIiwiaGFuZGxlVG9kYXlCdXR0b25DbGljayIsInJlbmRlclRvZGF5QnV0dG9uIiwicmVuZGVyRGVmYXVsdEhlYWRlciIsIm1vbnRoRGF0ZSIsIm9uRm9jdXMiLCJoZWFkZXJBcmdzIiwicHJldk1vbnRoQnV0dG9uRGlzYWJsZWQiLCJuZXh0TW9udGhCdXR0b25EaXNhYmxlZCIsInByZXZZZWFyQnV0dG9uRGlzYWJsZWQiLCJuZXh0WWVhckJ1dHRvbkRpc2FibGVkIiwic2hvd0RheU5hbWVzIiwiY3VzdG9tSGVhZGVyQ291bnQiLCJyZW5kZXJZZWFySGVhZGVyIiwicmVuZGVySGVhZGVyIiwibW9udGhMaXN0IiwibW9udGhzVG9BZGQiLCJtb250aEtleSIsImRpdiIsIm1vbnRoQXJpYUxhYmVsUHJlZml4IiwiaGFuZGxlT25EYXlLZXlEb3duIiwicmVuZGVyWWVhcnMiLCJyZW5kZXJUaW1lU2VjdGlvbiIsInRpbWVGb3JtYXQiLCJ0aW1lSW50ZXJ2YWxzIiwicmVuZGVySW5wdXRUaW1lU2VjdGlvbiIsInRpbWVWYWxpZCIsIkJvb2xlYW4iLCJzaG93VGltZUlucHV0IiwicmVuZGVyQXJpYUxpdmVSZWdpb24iLCJhcmlhTGl2ZU1lc3NhZ2UiLCJyZW5kZXJDaGlsZHJlbiIsImFzc2lnbk1vbnRoQ29udGFpbmVyIiwiaGFzTW9udGhDaGFuZ2VkXzEiLCJDb250YWluZXIiLCJjb250YWluZXIiLCJkaXNwbGF5Iiwib3V0c2lkZUNsaWNrSWdub3JlQ2xhc3MiLCJDYWxlbmRhckljb24iLCJpY29uIiwiZGVmYXVsdENsYXNzIiwiaXNWYWxpZEVsZW1lbnQiLCJpY29uRWxlbWVudF8xIiwieG1sbnMiLCJ2aWV3Qm94IiwiUG9ydGFsIiwicG9ydGFsUm9vdCIsImVsIiwicG9ydGFsSG9zdCIsImdldEVsZW1lbnRCeUlkIiwicG9ydGFsSWQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsInJlbW92ZUNoaWxkIiwiY3JlYXRlUG9ydGFsIiwiZm9jdXNhYmxlRWxlbWVudHNTZWxlY3RvciIsImZvY3VzYWJsZUZpbHRlciIsIkhUTUxBbmNob3JFbGVtZW50IiwiZGlzYWJsZWQiLCJUYWJMb29wIiwiZ2V0VGFiQ2hpbGRyZW4iLCJ0YWJMb29wUmVmIiwicXVlcnlTZWxlY3RvckFsbCIsImhhbmRsZUZvY3VzU3RhcnQiLCJ0YWJDaGlsZHJlbiIsImhhbmRsZUZvY3VzRW5kIiwiZW5hYmxlVGFiTG9vcCIsIndpdGhGbG9hdGluZyIsIldpdGhGbG9hdGluZyIsImhpZGVQb3BwZXIiLCJhcnJvd1JlZiIsImZsb2F0aW5nUHJvcHMiLCJvcGVuIiwid2hpbGVFbGVtZW50c01vdW50ZWQiLCJwbGFjZW1lbnQiLCJwb3BwZXJQbGFjZW1lbnQiLCJtaWRkbGV3YXJlIiwicGFkZGluZyIsInBvcHBlck1vZGlmaWVycyIsInBvcHBlclByb3BzIiwiY29tcG9uZW50UHJvcHMiLCJQb3BwZXJDb21wb25lbnQiLCJ3cmFwcGVyQ2xhc3NOYW1lIiwicG9wcGVyQ29tcG9uZW50IiwidGFyZ2V0Q29tcG9uZW50IiwicG9wcGVyT25LZXlEb3duIiwic2hvd0Fycm93IiwicG9wcGVyIiwicmVmcyIsInNldEZsb2F0aW5nIiwiZmxvYXRpbmdTdHlsZXMiLCJjb250ZXh0IiwiZmlsbCIsInN0cm9rZVdpZHRoIiwid2lkdGgiLCJ0cmFuc2Zvcm0iLCJwb3BwZXJDb250YWluZXIiLCJ3cmFwcGVyQ2xhc3NlcyIsInNldFJlZmVyZW5jZSIsIlBvcHBlckNvbXBvbmVudCQxIiwiaGFzUHJlU2VsZWN0aW9uQ2hhbmdlZCIsIklOUFVUX0VSUl8xIiwiRGF0ZVBpY2tlciIsImNhbGVuZGFyIiwiaW5wdXQiLCJnZXRQcmVTZWxlY3Rpb24iLCJtb2RpZnlIb2xpZGF5cyIsImFjY3VtdWxhdG9yIiwiY2FsY0luaXRpYWxTdGF0ZSIsImRlZmF1bHRQcmVTZWxlY3Rpb24iLCJib3VuZGVkUHJlU2VsZWN0aW9uIiwic3RhcnRPcGVuIiwicHJldmVudEZvY3VzIiwiaW5wdXRWYWx1ZSIsImZvY3VzZWQiLCJ3YXNIaWRkZW4iLCJyZXNldEhpZGRlblN0YXR1cyIsInNldEhpZGRlblN0YXR1cyIsInNldEhpZGRlblN0YXRlT25WaXNpYmlsaXR5SGlkZGVuIiwidmlzaWJpbGl0eVN0YXRlIiwiY2xlYXJQcmV2ZW50Rm9jdXNUaW1lb3V0IiwicHJldmVudEZvY3VzVGltZW91dCIsImNsZWFyVGltZW91dCIsInNldEZvY3VzIiwic2V0Qmx1ciIsImJsdXIiLCJjYW5jZWxGb2N1c0lucHV0IiwiZGVmZXJCbHVyIiwic2tpcFNldEJsdXIiLCJsYXN0UHJlU2VsZWN0Q2hhbmdlIiwiUFJFU0VMRUNUX0NIQU5HRV9WSUFfTkFWSUdBVEUiLCJpbnB1dE9rIiwiaXNDYWxlbmRhck9wZW4iLCJyZWFkT25seSIsImhhbmRsZUZvY3VzIiwiaXNBdXRvUmVGb2N1cyIsImlzT3BlbkFsbG93ZWQiLCJwcmV2ZW50T3Blbk9uRm9jdXMiLCJzZW5kRm9jdXNCYWNrVG9JbnB1dCIsInNldFRpbWVvdXQiLCJpbnB1dEZvY3VzVGltZW91dCIsImRlZmVyRm9jdXNJbnB1dCIsImhhbmRsZUJsdXIiLCJ3aXRoUG9ydGFsIiwib25CbHVyIiwiaGFuZGxlQ2FsZW5kYXJDbGlja091dHNpZGUiLCJoYW5kbGVDaGFuZ2UiLCJhbGxBcmdzIiwib25DaGFuZ2VSYXciLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJIVE1MSW5wdXRFbGVtZW50IiwiUFJFU0VMRUNUX0NIQU5HRV9WSUFfSU5QVVQiLCJ2YWwiLCJ2YWx1ZVN0YXJ0IiwidmFsdWVFbmQiLCJzdGFydERhdGVOZXciLCJlbmREYXRlTmV3Iiwic3RhcnRDaGFuZ2VkIiwiZW5kQ2hhbmdlZCIsInNldFNlbGVjdGVkIiwiaGFuZGxlU2VsZWN0Iiwic2hvd0RhdGVTZWxlY3QiLCJzd2FwUmFuZ2UiLCJrZWVwSW5wdXQiLCJhbGxvd1NhbWVEYXkiLCJmb2N1c1NlbGVjdGVkTW9udGgiLCJub1JhbmdlcyIsImhhc1N0YXJ0UmFuZ2UiLCJpc1JhbmdlRmlsbGVkIiwiaXNDaGFuZ2VkRGF0ZUFscmVhZHlTZWxlY3RlZCIsIm5leHREYXRlcyIsImhhc01pbkRhdGUiLCJoYXNNYXhEYXRlIiwiaXNWYWxpZERhdGVTZWxlY3Rpb24iLCJkYXRlU3RhcnRPZkRheSIsIm1pbkRhdGVTdGFydE9mRGF5IiwibWF4RGF0ZUVuZE9mRGF5IiwidG9nZ2xlQ2FsZW5kYXIiLCJoYW5kbGVUaW1lQ2hhbmdlIiwib25JbnB1dENsaWNrIiwib25JbnB1dEtleURvd24iLCJzZWxlY3RvclN0cmluZyIsInNlbGVjdGVkSXRlbSIsIkVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29weSIsIkVzY2FwZSIsIm9uSW5wdXRFcnJvciIsImNvZGUiLCJtc2ciLCJvblBvcnRhbEtleURvd24iLCJvbkRheUtleURvd24iLCJpc1NoaWZ0S2V5QWN0aXZlIiwic2hpZnRLZXkiLCJjYWxjdWxhdGVOZXdEYXRlIiwiUGFnZVVwIiwiUGFnZURvd24iLCJIb21lIiwiRW5kIiwiZ2V0TmV3RGF0ZSIsIm5ld1NlbGVjdGlvbiIsInByZXZNb250aCIsInByZXZZZWFyIiwib25Qb3BwZXJLZXlEb3duIiwib25DbGVhckNsaWNrIiwiY2xlYXIiLCJvblNjcm9sbCIsImNsb3NlT25TY3JvbGwiLCJkb2N1bWVudEVsZW1lbnQiLCJyZW5kZXJDYWxlbmRhciIsImVsZW0iLCJkYXRlRm9ybWF0Q2FsZW5kYXIiLCJjYWxlbmRhckNsYXNzTmFtZSIsImNhbGVuZGFyQ29udGFpbmVyIiwiaXNDb250YWluc1RpbWUiLCJsb25nRGF0ZUZvcm1hdCIsInJlbmRlckRhdGVJbnB1dCIsImN1c3RvbUlucHV0IiwiY3VzdG9tSW5wdXRSZWYiLCJpZCIsImZvcm0iLCJhdXRvRm9jdXMiLCJwbGFjZWhvbGRlclRleHQiLCJhdXRvQ29tcGxldGUiLCJhcmlhRGVzY3JpYmVkQnkiLCJhcmlhSW52YWxpZCIsImFyaWFMYWJlbGxlZEJ5IiwiYXJpYVJlcXVpcmVkIiwicmVuZGVyQ2xlYXJCdXR0b24iLCJpc0NsZWFyYWJsZSIsImNsZWFyQnV0dG9uVGl0bGUiLCJjbGVhckJ1dHRvbkNsYXNzTmFtZSIsImFyaWFMYWJlbENsb3NlIiwic2hvd1BvcHBlckFycm93IiwiZXhjbHVkZVNjcm9sbGJhciIsInRvZ2dsZUNhbGVuZGFyT25JY29uQ2xpY2siLCJwcmV2U3RhdGUiLCJvbkNhbGVuZGFyT3BlbiIsIm9uQ2FsZW5kYXJDbG9zZSIsInJlbmRlcklucHV0Q29udGFpbmVyIiwic2hvd0ljb24iLCJjYWxlbmRhckljb25DbGFzc25hbWUiLCJjYWxlbmRhckljb25DbGFzc05hbWUiLCJwb3J0YWxDb250YWluZXIiLCJwb3BwZXJDbGFzc05hbWUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-datepicker/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-datepicker/dist/react-datepicker.css":
/*!*****************************************************************!*\
  !*** ./node_modules/react-datepicker/dist/react-datepicker.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"ca1b8028e84f\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZGF0ZXBpY2tlci9kaXN0L3JlYWN0LWRhdGVwaWNrZXIuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXJvc2gvLi9ub2RlX21vZHVsZXMvcmVhY3QtZGF0ZXBpY2tlci9kaXN0L3JlYWN0LWRhdGVwaWNrZXIuY3NzP2IwZmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJjYTFiODAyOGU4NGZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-datepicker/dist/react-datepicker.css\n");

/***/ })

};
;